{"sick": {"A tan dog is playing in the water on the bank of a pond": "\u2200x\u2200y\u2200z (TanDog(x) \u2227 Water(y) \u2227 Pond(z) \u2192 PlaysIn(x, y, z))", "Some water is being drunk by a cat": "\u2203x\u2203y (Water(x) \u2227 Cat(y) \u2227 Drinking(y, x))", "A person is playing a keyboard": "\u2200x (Person(x) \u2227 PlayingKeyboard(x))", "The man is sitting outdoors under a purple umbrella": "\u2203x (Man(x) \u2227 Sitting(x) \u2227 Outdoors(x) \u2227 Under(x, purple_umbrella))", "A man with no shirt is holding a football": "\u2200x (Man(x) \u2227 \u00acHasShirt(x) \u2192 HoldingFootball(x))", "There is no person in bike gear standing steadily in front of the mountains": "\u00ac\u2203x (Person(x) \u2227 InBikeGear(x) \u2227 StandingSteadilyInFrontOf(x, mountains))", "A woman is slicing a tomato": "\u2203x (Woman(x) \u2227 Slicing(x, tomato))", "A few people are singing": "\u2203x\u2203y\u2203z (Person(x) \u2227 Person(y) \u2227 Person(z) \u2227 Singing(x) \u2227 Singing(y) \u2227 Singing(z))", "The surfer is riding a big wave": "\u2203x \u2203y (Surfer(x) \u2227 Wave(y) \u2227 Riding(x, y))", "Two dogs and two people are walking in a wood": "\u2203x \u2203y \u2203z \u2203w (Dog(x) \u2227 Dog(y) \u2227 Person(z) \u2227 Person(w) \u2227 WalkingInWood(x, y, z, w))", "A man is singing into a microphone": "\u2203x \u2203y (Man(x) \u2227 Microphone(y) \u2227 SingingInto(x, y))", "Two people are kickboxing and spectators are not watching": "\u2200x\u2200y (Person(x) \u2227 Person(y) \u2227 Kickboxing(x) \u2192 \u00acSpectator(y))", "A woman is cutting an onion": "\u2203x (Woman(x) \u2227 CuttingOnion(x))", "The play is about a happy boy playing the piano": "\u2200x (Play(x) \u2192 (HappyBoy(x) \u2227 PlaysPiano(x)))", "A person is cutting an onion": "\u2203x (Person(x) \u2227 CuttingOnion(x))"}, "fracas": {"Bug # 32-985 was blamed for the system failure.": "\u2203x (Bug(x) \u2227 SystemFailure(y) \u2227 BlamedFor(x, y))", "The PC-6082 is as fast as the ITEL-XZ. The PC-6082 is slow.": "\u2200x \u2200y (PC6082(x) \u2227 ITELXZ(y) \u2192 (Fast(x) \u2227 Fast(y) \u2227 Slow(x)))", "An Irishman won a Nobel prize.": "\u2203x (Irishman(x) \u2227 WonNobelPrize(x))", "Last week I already knew that when, in a month's time, Smith would discover that she had been duped she would be furious.": "\u2200x (LastWeek(x) \u2227 MonthsTime(x) \u2227 Smith(x) \u2227 DiscoveredDuped(x) \u2192 Furious(x))", "Bill suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife.": "\u2200x\u2200y\u2200z (Bill(x) \u2227 Frank(y) \u2227 Alan(z) \u2192 (SuggestedTo(x, y, z) \u2227 \u00acSuggestedTo(x, z, y)))", "The ITEL-XZ is fast.": "Fast(ITELXZ)", "Mary used her workstation.": "UsedWorkstation(mary)", "Bill owns a slow red car.": "\u2203x (Car(x) \u2227 Owns(bill, x) \u2227 Slow(x) \u2227 Red(x))", "Bill went to Berlin by car.": "WentTo(Bill, Berlin, Car)", "Everyone at the meeting voted for a new chairman.": "\u2200x (PersonAtMeeting(x) \u2192 VotedForNewChairman(x))", "Every representative was at the meeting.": "\u2200x (Representative(x) \u2192 \u2203y (Meeting(y) \u2227 Attended(x, y)))", "Most Europeans are resident in Europe.": "\u2200x (European(x) \u2192 ResidentIn(x, Europe))", "ITEL has sent most of the reports Smith needs. They are on her desk.": "\u2200x\u2200y (ITEL(x) \u2227 Smith(y) \u2227 NeedsReports(y) \u2192 SentReports(x, y))", "John owns a red car. Bill owns a fast one.": "\u2200x \u2200y (John(x) \u2227 Owns(x, RedCar) \u2227 Bill(y) \u2227 Owns(y, FastCar))", "Bill bought a car.": "\u2203x \u2203y (Bill(x) \u2227 Car(y) \u2227 Bought(x, y))"}, "hans": {"The author admired the doctors .": "\u2200x\u2200y (Author(x) \u2227 Doctor(y) \u2192 Admired(x, y))", "The lawyer presented in the library shouted .": "\u2203x (Lawyer(x) \u2227 PresentedInLibrary(x) \u2227 Shouted(x))", "The student that the doctors recognized recommended the tourists .": "\u2200x\u2200y\u2200z (Student(x) \u2227 Doctor(y) \u2227 Tourist(z) \u2227 Recognized(y, x) \u2192 Recommended(y, z))", "The senator resigned .": "Resigned(Senator)", "If the presidents recognized the professor , the secretaries saw the judges .": "\u2200x\u2200y\u2200z (President(x) \u2227 Professor(y) \u2227 Judge(z) \u2227 Recognized(x, y) \u2192 Saw(x, z))", "The lawyer recommended the judges who encouraged the scientists .": "\u2200x\u2200y\u2200z (Lawyer(x) \u2227 Judge(y) \u2227 Scientist(z) \u2227 Encourages(y, z) \u2192 Recommends(x, y))", "The banker encouraged the judge .": "\u2200x\u2200y (Banker(x) \u2227 Judge(y) \u2192 Encouraged(x, y))", "The student by the professor resigned .": "\u2203x \u2203y (Student(x) \u2227 Professor(y) \u2227 Resigned(x, y))", "The athletes who thanked the author encouraged the bankers .": "\u2200x\u2200y\u2200z (Athlete(x) \u2227 Author(y) \u2227 Banker(z) \u2227 Thanked(x, y) \u2192 Encourages(x, z))", "The doctor who the judge admired introduced the bankers .": "\u2200x\u2200y\u2200z (Doctor(x) \u2227 Judge(y) \u2227 Banker(z) \u2227 Admired(y, x) \u2192 Introduced(x, z))", "The scientists introduced the judges .": "\u2200x\u2200y (Scientist(x) \u2227 Judge(y) \u2192 Introduced(x, y))", "The athletes admired the scientist .": "\u2200x\u2200y (Athlete(x) \u2227 Scientist(y) \u2192 Admires(x, y))", "Hopefully the athlete supported the students .": "\u2200x\u2200y (Athlete(x) \u2227 Student(y) \u2192 Supported(x, y))", "Though the athletes avoided the senator , the judges slept .": "\u2200x\u2200y\u2200z (Athlete(x) \u2227 Senator(y) \u2227 Judge(z) \u2192 (Avoids(x, y) \u2227 Sleeps(z)))", "The judges believed the athletes recognized the tourists .": "\u2200x\u2200y\u2200z (Judge(x) \u2227 Athlete(y) \u2227 Tourist(z) \u2192 BelievedRecognized(x, y, z))"}, "syllogisms": {"No engineers are logicians": "\u00ac\u2203x (Engineer(x) \u2227 Logician(x))", "No logicians are engineers": "\u00ac\u2203x (Logician(x) \u2227 Engineer(x))", "Some logicians are non engineers": "\u2203x (Logician(x) \u2227 \u00acEngineer(x))", "All engineers are logicians": "\u2200x (Engineer(x) \u2192 Logician(x))", "Some engineers are logicians": "\u2203x (Engineer(x) \u2227 Logician(x))", "Some logicians are engineers": "\u2203x (Logician(x) \u2227 Engineer(x))", "All logicians are engineers": "\u2200x (Logician(x) \u2192 Engineer(x))"}}