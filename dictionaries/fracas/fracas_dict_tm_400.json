{"Mickey is a small animal. Dumbo is a large animal.": "\u2200x \u2200y (Mickey(x) \u2227 Dumbo(y) \u2192 (SmallAnimal(x) \u2227 LargeAnimal(y)))", "Mickey is larger than Dumbo.": "Larger(Mickey, Dumbo)", "Mickey is small.": "\u2200x (Mouse(x) \u2192 Small(x))", "Mickey is smaller than Dumbo.": "Smaller(Mickey, Dumbo)", "Most Europeans are resident in Europe.": "\u2200x (European(x) \u2192 ResidentIn(x, Europe))", "Most Europeans are resident in Europe. All Europeans are people. All people who are resident in Europe can travel freely within Europe.": "\u2200x (European(x) \u2192 ResidentInEurope(x)) \u2227 \u2200y (Person(y) \u2227 ResidentInEurope(y) \u2192 CanTravelFreelyWithinEurope(y))", "Most Europeans can travel freely within Europe.": "\u2200x (European(x) \u2192 CanTravelFreelyWithinEurope(x))", "Most Europeans can travel freely within Europe. All Europeans are people. All people who are resident in Europe can travel freely within Europe.": "\u2200x (European(x) \u2192 CanTravelFreelyWithinEurope(x)) \u2227 \u2200y (Person(y) \u2227 ResidentInEurope(y) \u2192 CanTravelFreelyWithinEurope(y))", "Most Europeans who are resident in Europe can travel freely within Europe.": "\u2200x (European(x) \u2227 ResidentInEurope(x) \u2192 CanTravelFreelyWithinEurope(x))", "Most Europeans who are resident outside Europe can travel freely within Europe.": "\u2200x (European(x) \u2227 ResidentOutsideEurope(x) \u2192 CanTravelFreelyWithinEurope(x))", "Most clients at the demonstration were impressed by the system's performance.": "\u2200x (Client(x) \u2227 AtDemonstration(x) \u2192 ImpressedBySystemPerformance(x))", "Most companies that own a computer have a service contract for it.": "\u2200x (Company(x) \u2227 OwnsComputer(x) \u2192 HasServiceContract(x))", "Most great tenors are Italian.": "\u2200x (GreatTenor(x) \u2192 Italian(x))", "Neither commissioner spends a lot of time at home.": "\u00ac\u2203x (Commissioner(x) \u2227 SpendsA lotOfTimeAtHome(x))", "Neither commissioner spends time at home.": "\u2200x \u2200y (Commissioner(x) \u2227 Commissioner(y) \u2192 \u00acSpendsTimeAtHome(x) \u2227 \u00acSpendsTimeAtHome(y))", "Neither female commissioner spends a lot of time at home.": "\u00ac\u2203x (Commissioner(x) \u2227 Female(x) \u2227 SpendsA lotOfTimeAtHome(x))", "Neither leading tenor comes cheap. One of the leading tenors is Pavarotti.": "\u00ac(\u2203x (LeadingTenor(x) \u2227 Cheap(x))) \u2227 \u2203y (LeadingTenor(y) \u2227 Pavarotti(y))", "No Scandinavian delegate finished the report on time.": "\u00ac\u2203x (ScandinavianDelegate(x) \u2227 FinishedReportOnTime(x))", "No accountant attended the meeting.": "\u00ac\u2203x (Accountant(x) \u2227 AttendedMeeting(x))", "No accountants attended the meeting.": "\u00ac\u2203x (Accountant(x) \u2227 AttendedMeeting(x))", "No delegate finished the report on time.": "\u00ac\u2203x (Delegate(x) \u2227 FinishedReportOnTime(x))", "No delegate finished the report.": "\u00ac\u2203x (Delegate(x) \u2227 FinishedReport(x))", "No one gambling seriously stops until he is broke. No one can gamble when he is broke.": "\u2200x (Gambler(x) \u2227 SeriousGambler(x) \u2192 (\u00acBroke(x) \u2227 \u00acCanGamble(x)))", "No one who starts gambling seriously stops until he is broke.": "\u2200x (Gambler(x) \u2227 SeriousGambler(x) \u2192 \u00acStopsUntilBroke(x))", "No really great tenors are modest.": "\u2200x (Tenor(x) \u2227 ReallyGreat(x) \u2192 \u00acModest(x))", "No student used her workstation. Mary is a student.": "\u00ac\u2203x (Student(x) \u2227 Workstation(x)) \u2227 Student(Mary)", "Nobody who is asleep ever knows that he is asleep. But some people know that they have been asleep after they have been asleep.": "\u2200x (Asleep(x) \u2192 \u00acKnowsThatHeIsAsleep(x)) \u2227 \u2203y (Asleep(y) \u2227 KnowsThatHeWasAsleep(y))", "One of the commissioners spends a lot of time at home.": "\u2203x (Commissioner(x) \u2227 SpendsTimeAtHome(x))", "One of the female commissioners spends a lot of time at home.": "\u2203x (Commissioner(x) \u2227 Female(x) \u2227 SpendsTimeAtHome(x))", "Pavarotti is a leading tenor who comes cheap.": "LeadingTenor(pavarotti) \u2227 ComesCheap(pavarotti)", "Several Portuguese delegates got the results published in major national newspapers.": "\u2203x \u2203y \u2203z (PortugueseDelegate(x) \u2227 Newspaper(y) \u2227 National(z) \u2227 Results(x) \u2227 PublishedIn(x, y) \u2227 In(y, z))", "Several delegates got the results published in major national newspapers.": "\u2203x \u2203y \u2203z (Delegate(x) \u2227 Delegate(y) \u2227 Delegate(z) \u2227 NationalNewspaper(n) \u2227 Major(m) \u2227 PublishedIn(x, n, m) \u2227 PublishedIn(y, n, m) \u2227 PublishedIn(z, n, m))", "Several delegates got the results published.": "\u2203x \u2203y \u2203z (Delegate(x) \u2227 Delegate(y) \u2227 Delegate(z) \u2227 PublishedResults(x) \u2227 PublishedResults(y) \u2227 PublishedResults(z))", "Several great tenors are British.": "\u2203x (Tenor(x) \u2227 Great(x) \u2227 British(x))", "Since 1992 ITEL has been in Birmingham. It is now 1996.": "\u2200x (ITEL(x) \u2192 (InBirmingham(x) \u2227 Year(x, 1996)))", "Since 1992 ITEL has made a loss. It is now 1996.": "\u2200x (ITEL(x) \u2192 (MadeLoss(x, 1992) \u2227 NowYear(x, 1996)))", "Six accountants signed the contract.": "\u2203x \u2203y \u2203z \u2203w \u2203u \u2203v (Accountant(x) \u2227 Accountant(y) \u2227 Accountant(z) \u2227 Accountant(w) \u2227 Accountant(u) \u2227 Accountant(v) \u2227 SignedContract(x, y, z, w, u, v))", "Six lawyers signed the contract.": "\u2203x \u2203y \u2203z \u2203w \u2203v \u2203u (Lawyer(x) \u2227 Lawyer(y) \u2227 Lawyer(z) \u2227 Lawyer(w) \u2227 Lawyer(v) \u2227 Lawyer(u) \u2227 SignedContract(x, y, z, w, v, u))", "Smith and Jones left the meeting.": "\u2203x \u2203y (Smith(x) \u2227 Jones(y) \u2227 LeftMeeting(x) \u2227 LeftMeeting(y))", "Smith and Jones put two machines in the lobby.": "\u2200x\u2200y (Smith(x) \u2227 Jones(y) \u2192 (PutMachine(x, lobby) \u2227 PutMachine(y, lobby)))", "Smith and Jones signed two contracts.": "\u2203x \u2203y (Smith(x) \u2227 Jones(y) \u2227 Contract(z) \u2227 Signed(x, z) \u2227 Signed(y, z))", "Smith arrived in Paris on the 5th of May, 1995. Today is the 15th of May, 1995. She is still in Paris.": "ArrivedInParis(Smith, 5thMay1995) \u2227 Today(15thMay1995) \u2227 StillInParis(Smith)", "Smith attended a meeting. She chaired it.": "AttendedMeeting(smith) \u2227 ChairedMeeting(smith)", "Smith believed that ITEL had won the contract in 1992.": "Believed(Smith, ITEL, WonContract, 1992)", "Smith chaired a meeting.": "ChairedMeeting(smith)", "Smith claimed he had costed his proposal and so did Jones.": "\u2200x \u2200y (Smith(x) \u2227 Jones(y) \u2192 (CostedProposal(x) \u2227 CostedProposal(y)))", "Smith delivered a report to ITEL. She also delivered them an invoice. And she delivered them a project proposal.": "\u2200x\u2200y\u2200z (Smith(x) \u2227 ITEL(y) \u2227 (Invoice(z) \u2228 ProjectProposal(z)) \u2192 Delivered(x, y, z))", "Smith delivered a report, an invoice and a project proposal to ITEL.": "\u2200x\u2200y\u2200z (Smith(x) \u2227 Report(y) \u2227 Invoice(z) \u2227 ProjectProposal(y) \u2192 DeliveredTo(x, y, z, ITEL))", "Smith discovered a new species for an hour.": "DiscoveredNewSpecies(smith, hour)", "Smith discovered a new species in 1991.": "\u2203x (DiscoveredNewSpecies(x) \u2227 Year(x, 1991))", "Smith discovered a new species in 1992.": "\u2203x (DiscoveredSpecies(x) \u2227 Year(y) \u2227 Year(z) \u2227 Year(w) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(x) \u2227 Year(", "Smith discovered a new species in two hours.": "DiscoveredNewSpecies(smith, twoHours)", "Smith discovered a new species.": "\u2203x \u2203y (Smith(x) \u2227 NewSpecies(y) \u2227 Discovered(x, y))", "Smith discovered it in 1992.": "Discovered(Smith, 1992)", "Smith discovered many new species in two hours.": "\u2200x (DiscoveredNewSpecies(x, Smith) \u2192 Time(x, TwoHours))", "Smith discovered new species for two years.": "DiscoveredNewSpecies(smith, years)", "Smith discovered new species.": "\u2200x (DiscoveredNewSpecies(x) \u2192 Smith(x))", "Smith either saw Jones sign the contract or saw Jones cross out the crucial clause.": "(SawJonesSignContract(smith) \u2295 SawJonesCrossOutClause(smith))", "Smith had been travelling the day before she arrived in Katmandu.": "\u2200x (Smith(x) \u2227 Travelled(x, y) \u2227 DayBefore(y) \u2192 ArrivedIn(x, z) \u2227 Katmandu(z))", "Smith had finished writing the report by 11 am.": "FinishedWritingReport(Smith, 11am)", "Smith had left the house at a quarter past five. Then she took a taxi to the station.": "\u2200x (Smith(x) \u2192 (LeftHouseAtQuarterPastFive(x) \u2227 TookTaxiToStation(x)))", "Smith has been to Florence twice in the past. Smith will go to Florence twice in the coming year.": "\u2200x (Smith(x) \u2192 (HasBeenToFlorenceTwice(x) \u2227 WillGoToFlorenceTwice(x)))", "Smith is likely to make a poor stock market trader.": "\u2200x (Smith(x) \u2192 PoorStockMarketTrader(x))", "Smith knew that ITEL had won the contract in 1992.": "Knew(Smith, ITEL, WonContractIn(1992))", "Smith left after Anderson left.": "\u2200x \u2200y (Smith(x) \u2227 Anderson(y) \u2192 LeftAfter(x, y))", "Smith left after Jones left.": "\u2200x \u2200y (Smith(x) \u2227 Jones(y) \u2192 LeftAfter(x, y))", "Smith left after Jones left. Jones left after Anderson left.": "\u2200x \u2200y \u2200z (Smith(x) \u2227 Jones(y) \u2227 Anderson(z) \u2192 (LeftAfter(x, y) \u2227 LeftAfter(y, z)))", "Smith left before Anderson left.": "LeftBefore(Smith, Anderson)", "Smith left before Jones left. Jones left before Anderson left.": "\u2200x \u2200y \u2200z (Smith(x) \u2227 Jones(y) \u2227 Anderson(z) \u2192 (LeftBefore(x, y) \u2227 LeftBefore(y, z)))", "Smith left the house at a quarter past five. She took a taxi to the station and caught the first train to Luxembourg.": "LeftHouse(smith, quarterpastfive) \u2227 TookTaxi(smith, station) \u2227 CaughtFirstTrain(smith, luxembourg)", "Smith left the house before she took a taxi to the station.": "LeftHouse(smith) \u2227 TookTaxi(smith, station)", "Smith left the meeting before he lost his temper.": "LeftMeeting(smith) \u2227 \u00acLostTemper(smith)", "Smith left the meeting.": "LeftMeeting(smith)", "Smith left. Jones left. Jones left before Smith left.": "\u2200x \u2200y (Smith(x) \u2227 Jones(y) \u2192 (Left(x) \u2227 Left(y) \u2227 LeftBefore(y, x)))", "Smith left. Jones left. Smith left after Jones left.": "\u2200x \u2200y (Smith(x) \u2227 Jones(y) \u2192 (Left(x) \u2227 Left(y) \u2227 LeftAfter(x, y)))", "Smith left. Jones left. Smith left before Jones left.": "\u2200x \u2200y (Smith(x) \u2227 Jones(y) \u2192 (Left(x) \u2227 Left(y) \u2227 LeftBefore(x, y)))", "Smith lived in Birmingham for a year.": "LivedIn(smith, birmingham, year)", "Smith lived in Birmingham for exactly a year.": "LivedIn(smith, birmingham, year)", "Smith lived in Birmingham for two years.": "LivedIn(Smith, Birmingham, 2)", "Smith lived in Birmingham in 1991.": "LivedIn(Smith, Birmingham, 1991)", "Smith lived in Birmingham in 1992.": "LivedIn(Smith, Birmingham, 1992)", "Smith lived in Birmingham.": "LivedIn(Smith, Birmingham)", "Smith lost his temper.": "LostTemper(Smith)", "Smith lost some files. They were destroyed when her hard disk crashed.": "\u2200x \u2200y (Smith(x) \u2227 Files(y) \u2227 Lost(x, y) \u2192 (DestroyedByHardDiskCrash(y)))", "Smith owned a chain of business for more than two years.": "\u2200x (Smith(x) \u2192 OwnedChainOfBusiness(x, moreThanTwoYears))", "Smith owned a chain of business for two years.": "OwnedChainOfBusiness(Smith, TwoYears)", "Smith owned a chain of business.": "\u2203x \u2203y (Smith(x) \u2227 Business(y) \u2227 Owns(x, y))", "Smith ran his own business for a year.": "RanOwnBusiness(smith, year)", "Smith ran his own business for two years.": "RanOwnBusiness(smith, 2)", "Smith ran his own business.": "\u2203x (Person(x) \u2227 Business(y) \u2227 Owns(x, y))", "Smith represents Jones' company.": "Represents(Smith, Jones)", "Smith represents his company and so does Jones.": "\u2200x\u2200y (Smith(x) \u2227 Company(y) \u2192 Represents(x, y)) \u2227 (Jones(x) \u2227 Company(y) \u2192 Represents(x, y))", "Smith revised the contract after Jones did.": "Revised(Contract, Smith) \u2227 \u00acRevised(Contract, Jones)", "Smith revised the contract before Jones did.": "RevisedContract(smith) \u2227 RevisedContract(jones) \u2227 Before(smith, jones)", "Smith saw Jones sign the contract and his secretary make a copy.": "\u2200x \u2200y \u2200z (Smith(x) \u2227 Jones(y) \u2227 Contract(z) \u2192 (Saw(x, y, z) \u2227 Secretary(x, z)))", "Smith saw Jones sign the contract or cross out the crucial clause.": "\u2200x\u2200y\u2200z (Smith(x) \u2227 Jones(y) \u2227 Contract(z) \u2192 (SawSign(x, y, z) \u2228 CrossedOutCrucialClause(x, y, z)))", "Smith saw Jones sign the contract.": "Saw(Smith, Jones, Contract)", "Smith saw Jones sign the contract. If Jones signed the contract, his heart was beating.": "\u2200x \u2200y \u2200z (Smith(x) \u2227 Jones(y) \u2227 Contract(z) \u2227 Saw(x, y, z) \u2192 (Signed(y, z) \u2227 BeatingHeart(y)))", "Smith saw Jones sign the contract. Jones is the chairman of ITEL.": "Saw(Smith, Jones, Contract) \u2227 Chairman(Jones, ITEL)", "Smith saw Jones sign the contract. When Jones signed the contract, his heart was beating.": "\u2200x \u2200y \u2200z (Smith(x) \u2227 Jones(y) \u2227 Contract(z) \u2227 Saw(x, y, z) \u2192 (Signed(y, z) \u2227 HeartBeating(y)))"}