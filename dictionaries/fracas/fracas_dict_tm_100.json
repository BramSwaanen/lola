{"": "\u2200x (Person(x) \u2227 LivesIn(x, y) \u2192 LivesIn(x, z))", "A Scandinavian won a Nobel prize.": "\u2203x (Scandinavian(x) \u2227 WonNobelPrize(x))", "A Scandinavian won a Nobel prize. Every Swede is a Scandinavian.": "\u2200x (Scandinavian(x) \u2192 WonNobelPrize(x)) \u2227 \u2200y (Swede(y) \u2192 Scandinavian(y))", "A Swede won a Nobel prize.": "\u2203x (Swede(x) \u2227 WonNobelPrize(x))", "A Swede won a Nobel prize. Every Swede is a Scandinavian.": "\u2200x (Swede(x) \u2192 WonNobelPrize(x)) \u2227 \u2200y (Swede(y) \u2192 Scandinavian(y))", "A company director awarded himself a large payrise.": "\u2200x (CompanyDirector(x) \u2227 AwardedLargePayrise(x) \u2192 DirectorAwardsSelf(x))", "A company director has awarded and been awarded a payrise.": "\u2200x (CompanyDirector(x) \u2192 (AwardedPayrise(x) \u2227 \u00acAwardedPayrise(x)))", "A few committee members are from Scandinavia.": "\u2203x\u2203y\u2203z (CommitteeMember(x) \u2227 Scandinavia(y) \u2227 CommitteeMember(z) \u2227 From(x, y) \u2227 From(z, y))", "A few committee members are from Scandinavia. All committee members are people. All people who are from Sweden are from Scandinavia.": "\u2203x (CommitteeMember(x) \u2227 FromScandinavia(x)) \u2227 \u2200y (Person(y) \u2227 FromSweden(y) \u2192 FromScandinavia(y))", "A few committee members are from Sweden. All committee members are people. All people who are from Sweden are from Scandinavia.": "\u2200x (CommitteeMember(x) \u2227 FromSweden(x) \u2192 FromScandinavia(x))", "A few female committee members are from Scandinavia.": "\u2203x (FemaleCommitteeMember(x) \u2227 FromScandinavia(x))", "A few great tenors sing popular music. Some great tenors like popular music.": "\u2203x (GreatTenor(x) \u2227 SingsPopularMusic(x)) \u2227 \u2203y (GreatTenor(y) \u2227 LikesPopularMusic(y))", "A lawyer signed every report, and so did an auditor. That is, there was one lawyer who signed all the reports.": "\u2200x\u2200y\u2200z (Lawyer(x) \u2227 Report(y) \u2227 Auditor(z) \u2192 (Signed(x, y) \u2227 Signed(z, y)))", "APCOM has a more important customer than ITEL has.": "\u2200x\u2200y (APCOM(x) \u2227 ITEL(y) \u2192 MoreImportantCustomer(x, y))", "APCOM has a more important customer than ITEL is.": "\u2200x\u2200y (APCOM(x) \u2227 ITEL(y) \u2192 MoreImportantCustomer(x, y))", "APCOM has a more important customer than ITEL.": "\u2200x\u2200y (APCOM(x) \u2227 ITEL(y) \u2192 MoreImportantCustomer(x, y))", "APCOM has been paying mortgage interest for a total of 15 years or more.": "\u2200x (APCOM(x) \u2192 (PayingMortgageInterest(x) \u2227 Years(y) \u2227 TotalYears(y) \u2227 GreaterThan(y, 15) \u2227 PayingMortgageInterest(x, y)))", "APCOM lost some orders.": "\u2203x (APCOM(x) \u2227 LostOrders(x))", "APCOM signed the contract Friday, 13th.": "SignedContract(APCOM, Friday, 13th)", "APCOM won some orders.": "\u2203x (APCOM(x) \u2227 WonOrders(x))", "All APCOM managers have company cars. Jones is an APCOM manager.": "\u2200x (APCOMManager(x) \u2192 HasCompanyCar(x)) \u2227 \u2200y (APCOMManager(y) \u2227 Name(y) \u2227 Jones(y) \u2192 HasCompanyCar(y))", "All Canadian residents can travel freely within Europe.": "\u2200x (CanadianResident(x) \u2192 CanTravelFreelyWithinEurope(x))", "All Canadian residents can travel freely within Europe. Every Canadian resident is a resident of the North American continent.": "\u2200x (CanadianResident(x) \u2192 (TravelsFreelyWithinEurope(x) \u2227 ResidentOfNorthAmericanContinent(x)))", "All Europeans can travel freely within Europe.": "\u2200x (European(x) \u2192 CanTravelFreelyWithinEurope(x))", "All Europeans can travel freely within Europe. Every European is a person. Every person who has the right to live in Europe can travel freely within Europe.": "\u2200x (European(x) \u2192 CanTravelFreelyWithinEurope(x)) \u2227 \u2200y (Person(y) \u2227 RightToLiveInEurope(y) \u2192 CanTravelFreelyWithinEurope(y))", "All Europeans have the right to live in Europe.": "\u2200x (European(x) \u2192 RightToLiveInEurope(x))", "All Europeans have the right to live in Europe. Every European is a person. Every person who has the right to live in Europe can travel freely within Europe.": "\u2200x (European(x) \u2192 RightToLiveInEurope(x)) \u2227 \u2200y (Person(y) \u2227 RightToLiveInEurope(y) \u2192 CanTravelFreelyInEurope(y))", "All Italian men want to be a great tenor. Some Italian men are great tenors.": "\u2200x (ItalianMan(x) \u2192 WantsToBeGreatTenor(x)) \u2227 \u2203y (ItalianMan(y) \u2227 GreatTenor(y))", "All competent legal authorities are competent law lecturers.": "\u2200x (CompetentLegalAuthority(x) \u2192 LawLecturer(x))", "All elephants are large animals. Dumbo is a small elephant.": "\u2200x (Elephant(x) \u2192 LargeAnimal(x)) \u2227 \u2203y (Elephant(y) \u2227 SmallAnimal(y))", "All fat legal authorities are fat law lecturers.": "\u2200x (FatLegalAuthority(x) \u2192 FatLawLecturer(x))", "All legal authorities are law lecturers. All law lecturers are legal authorities.": "\u2200x (LegalAuthority(x) \u2192 LawLecturer(x)) \u2227 \u2200y (LawLecturer(y) \u2192 LegalAuthority(y))", "All mice are small animals. All elephants are large animals. Mickey is a large mouse. Dumbo is a small elephant.": "\u2200x (Mouse(x) \u2192 SmallAnimal(x)) \u2227 \u2200y (Elephant(y) \u2192 LargeAnimal(y)) \u2227 \u2200z (Mouse(z) \u2192 Large(z)) \u2227 \u2200w (Elephant(w) \u2192 Small(w))", "All mice are small animals. Mickey is a large mouse.": "\u2200x (Mouse(x) \u2192 SmallAnimal(x)) \u2227 \u2203y (Mouse(y) \u2227 LargeAnimal(y))", "All residents of the North American continent can travel freely within Europe.": "\u2200x (ResidentOfNorthAmericanContinent(x) \u2192 CanTravelFreelyWithinEurope(x))", "All residents of the North American continent can travel freely within Europe. Every Canadian resident is a resident of the North American continent.": "\u2200x (ResidentOfNorthAmericanContinent(x) \u2192 CanTravelFreelyInEurope(x)) \u2227 \u2200y (CanadianResident(y) \u2192 ResidentOfNorthAmericanContinent(y))", "All the people who were at the meeting voted for a new chairman.": "\u2200x (Person(x) \u2227 AtMeeting(x) \u2192 VotedForNewChairman(x))", "An Irishman won a Nobel prize.": "\u2203x (Irishman(x) \u2227 WonNobelPrize(x))", "An Irishman won the Nobel prize for literature.": "\u2203x (Irishman(x) \u2227 WonNobelPrize(x, Literature))", "An Italian became the world's greatest tenor.": "\u2203x (Italian(x) \u2227 WorldsGreatestTenor(x))", "At least a few committee members are from Scandinavia.": "\u2203x (CommitteeMember(x) \u2227 FromScandinavia(x))", "At least a few committee members are from Sweden.": "\u2203x (CommitteeMember(x) \u2227 FromSweden(x))", "At least a few female committee members are from Scandinavia.": "\u2203x (FemaleCommitteeMember(x) \u2227 FromScandinavia(x))", "At least three commissioners spend a lot of time at home.": "\u2203x\u2203y\u2203z (Commissioner(x) \u2227 Commissioner(y) \u2227 Commissioner(z) \u2227 (SpendsTimeAtHome(x) \u2227 SpendsTimeAtHome(y) \u2227 SpendsTimeAtHome(z)))", "At least three commissioners spend time at home.": "\u2203x\u2203y\u2203z (Commissioner(x) \u2227 Commissioner(y) \u2227 Commissioner(z) \u2227 SpendsTimeAtHome(x) \u2227 SpendsTimeAtHome(y) \u2227 SpendsTimeAtHome(z))", "At least three female commissioners spend time at home.": "\u2203x\u2203y\u2203z (FemaleCommissioner(x) \u2227 FemaleCommissioner(y) \u2227 FemaleCommissioner(z) \u2227 SpendsTimeAtHome(x) \u2227 SpendsTimeAtHome(y) \u2227 SpendsTimeAtHome(z))", "At least three male commissioners spend time at home.": "\u2203x (Commissioner(x) \u2227 Male(x) \u2227 SpendsTimeAtHome(x))", "At least three tenors will take part in the concert.": "\u2203x (Tenor(x) \u2227 TakesPartInConcert(x))", "At most ten commissioners spend a lot of time at home.": "\u2203x (Commissioner(x) \u2227 SpendsA lotOfTimeAtHome(x)) \u2227 \u2203y (Commissioner(y) \u2227 \u00acSpendsA lotOfTimeAtHome(y)) \u2227 \u2203z (Commissioner(z) \u2227 \u00acSpendsA lotOfTimeAtHome(z)) \u2227 \u2200w (Commissioner(w) \u2227 \u00acSpendsA lotOfTimeAtHome(w)) \u2227 \u2200v (Commission", "At most ten commissioners spend time at home.": "\u2203x (Commissioner(x) \u2227 SpendsTimeAtHome(x, 10))", "At most ten female commissioners spend time at home.": "\u2203x (Commissioner(x) \u2227 Female(x) \u2227 SpendsTimeAtHome(x, 10))", "At most two tenors will contribute their fees to charity.": "\u2203x\u2203y (Tenor(x) \u2227 Tenor(y) \u2227 ContributesFeesToCharity(x) \u2227 ContributesFeesToCharity(y))", "Before APCOM bought its present office building, it had been paying mortgage interest on the previous one for 8 years. Since APCOM bought its present office building it has been paying mortgage interest on it for more than 10 years.": "\u2200x\u2200y\u2200z (APCOM(x) \u2227 OfficeBuilding(y) \u2227 MortgageInterest(z) \u2192 ((BoughtPresentBuilding(x, y) \u2227 PaidMortgageInterest(x, z) \u2227 Years(8)) \u2227 (BoughtPresentBuilding(x, y) \u2227 PaidMortgageInterest(x, z) \u2227 Years(>10))))", "Bill bought a car.": "\u2203x \u2203y (Bill(x) \u2227 Car(y) \u2227 Bought(x, y))", "Bill has spoken to Mary.": "\u2203x \u2203y (Bill(x) \u2227 Mary(y) \u2227 SpokenTo(x, y))", "Bill knows why John had his paper accepted.": "KnowsWhy(Bill, John, PaperAccepted)", "Bill owns a blue car.": "Owns(Bill, BlueCar)", "Bill owns a car.": "OwnsCar(bill)", "Bill owns a fast car.": "\u2203x (Car(x) \u2227 Fast(x) \u2227 Owns(bill, x))", "Bill owns a fast red car.": "\u2203x (Car(x) \u2227 Owns(bill, x) \u2227 Fast(x) \u2227 Red(x))", "Bill owns a red car.": "Owns(Bill, RedCar)", "Bill owns a slow red car.": "\u2203x (Car(x) \u2227 Owns(bill, x) \u2227 Slow(x) \u2227 Red(x))", "Bill said Mary wrote a report.": "Said(Bill, Mary, WroteReport)", "Bill said Peter wrote a report.": "Said(bill, peter, wroteReport)", "Bill spoke to Mary at five o'clock.": "\u2203x \u2203y \u2203z (Bill(x) \u2227 Mary(y) \u2227 FiveOclock(z) \u2227 SpokeAt(x, y, z))", "Bill spoke to Mary at four o'clock.": "\u2203x \u2203y \u2203z (Bill(x) \u2227 Mary(y) \u2227 FourOclock(z) \u2227 SpokenAt(x, y, z))", "Bill spoke to Mary on Monday.": "SpokeTo(bill, mary, monday)", "Bill spoke to Mary.": "\u2203x \u2203y (Bill(x) \u2227 Mary(y) \u2227 SpokeTo(x, y))", "Bill spoke to everyone that John did. Bill spoke to Mary.": "\u2200x \u2200y \u2200z (Bill(x) \u2227 John(y) \u2227 Mary(z) \u2192 (SpokeTo(x, y) \u2227 SpokeTo(x, z)))", "Bill spoke to everyone that John did. John spoke to Mary.": "\u2200x \u2200y \u2200z (Bill(x) \u2227 John(y) \u2227 Mary(z) \u2192 (SpokeTo(x, y) \u2227 SpokeTo(y, z)))", "Bill suggested to Frank's boss that they should go to the meeting together, and Carl to Alan's wife.": "\u2200x\u2200y\u2200z (Bill(x) \u2227 Frank(y) \u2227 Alan(z) \u2192 (SuggestedTo(x, y, z) \u2227 \u00acSuggestedTo(x, z, y)))", "Bill went to Berlin by car.": "WentTo(Bill, Berlin, Car)", "Bill went to Berlin by train.": "WentTo(Bill, Berlin, Train)", "Bill went to Paris by train.": "WentToParisByTrain(Bill)", "Bill will speak to Mary.": "SpeakTo(bill, mary)", "Bill wrote a report.": "\u2203x (Report(x) \u2227 Wrote(bill, x))", "Both commissioners used to be businessmen.": "\u2200x\u2200y (Commissioner(x) \u2227 Commissioner(y) \u2192 (UsedToBeBusinessman(x) \u2227 UsedToBeBusinessman(y)))", "Both commissioners used to be in business.": "\u2200x\u2200y (Commissioner(x) \u2227 Commissioner(y) \u2192 UsedToBeInBusiness(x) \u2227 UsedToBeInBusiness(y))", "Both commissioners used to be leading businessmen.": "\u2200x\u2200y (Commissioner(x) \u2227 Commissioner(y) \u2192 (UsedToBeLeadingBusinessman(x) \u2227 UsedToBeLeadingBusinessman(y)))", "Both female commissioners used to be in business.": "\u2200x (Commissioner(x) \u2227 Female(x) \u2192 UsedToBeInBusiness(x))", "Both leading tenors are excellent. Leading tenors who are excellent are indispensable.": "\u2200x (LeadingTenor(x) \u2227 Excellent(x) \u2192 Indispensable(x))", "Both leading tenors are indispensable.": "\u2200x\u2200y (Tenor(x) \u2227 Tenor(y) \u2192 (Indispensable(x) \u2227 Indispensable(y)))", "Bug # 32-985 was blamed for the system failure.": "\u2203x (Bug(x) \u2227 SystemFailure(y) \u2227 BlamedFor(x, y))", "Clients at the demonstration were all impressed by the system's performance. Smith was a client at the demonstration.": "\u2200x (Client(x) \u2227 AtDemonstration(x) \u2192 ImpressedBySystem(x)) \u2227 \u2200y (Client(y) \u2227 AtDemonstration(y) \u2192 ImpressedBySystem(y))", "Clients at the demonstration were impressed by the system's performance.": "\u2200x (Client(x) \u2227 AtDemonstration(x) \u2192 ImpressedBySystemPerformance(x))", "Dumbo is a four-legged animal.": "FourLeggedAnimal(dumbo)", "Dumbo is a large animal.": "LargeAnimal(dumbo)", "Dumbo is a small animal.": "SmallAnimal(dumbo)", "Dumbo is four-legged.": "FourLegged(dumbo)", "Dumbo is larger than Mickey.": "Larger(Dumbo, Mickey)", "Each Canadian resident can travel freely within Europe.": "\u2200x (CanadianResident(x) \u2192 CanTravelFreelyWithinEurope(x))", "Each Canadian resident can travel freely within Europe. Every Canadian resident is a resident of the North American continent.": "\u2200x (CanadianResident(x) \u2192 (TravelsFreelyWithinEurope(x) \u2227 ResidentOfNorthAmericanContinent(x)))", "Each European can travel freely within Europe.": "\u2200x (European(x) \u2192 CanTravelFreelyWithinEurope(x))", "Each European can travel freely within Europe. Every European is a person. Every person who has the right to live in Europe can travel freely within Europe.": "\u2200x (European(x) \u2192 TravelsFreelyWithinEurope(x)) \u2227 \u2200y (Person(y) \u2227 RightToLiveInEurope(y) \u2192 TravelsFreelyWithinEurope(y))", "Each European has the right to live in Europe.": "\u2200x (European(x) \u2192 RightToLiveInEurope(x))", "Each European has the right to live in Europe. Every European is a person. Every person who has the right to live in Europe can travel freely within Europe.": "\u2200x (European(x) \u2192 RightToLiveInEurope(x)) \u2227 \u2200y (Person(y) \u2227 RightToLiveInEurope(y) \u2192 CanTravelFreelyInEurope(y))", "Each Italian tenor wants to be great. Some Italian tenors are great.": "\u2200x (ItalianTenor(x) \u2192 WantsToBeGreat(x)) \u2227 \u2203y (ItalianTenor(y) \u2227 Great(y))", "Each department has a dedicated line. The sales department rents it from BT.": "\u2200x\u2200y (Department(x) \u2227 SalesDepartment(y) \u2192 (HasDedicatedLine(x) \u2227 RentsFrom(y, x)))", "Each department has a dedicated line. They rent them from BT.": "\u2200x \u2200y (Department(x) \u2227 Line(y) \u2192 RentFrom(x, y, BT))", "Each resident of the North American continent can travel freely within Europe.": "\u2200x (ResidentOfNorthAmericanContinent(x) \u2192 CanTravelFreelyWithinEurope(x))"}