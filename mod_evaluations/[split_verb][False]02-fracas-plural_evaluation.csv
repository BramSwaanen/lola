	nl_ps	fol_ps	nl_h	fol_h	label	e_pred	c_pred
0	Every representative and client was at the meeting.	all x.all y. (Representative(x) & Client(y) -> AtMeeting(x, y))	Every representative was at the meeting.	all x. (Representative(x) -> exists y. (Meeting(y) & Attended(x, y)))	e	False	False
1	Every representative and client was at the meeting.	all x.all y. (Representative(x) & Client(y) -> AtMeeting(x, y))	Every representative was at the meeting.	all x. (Representative(x) -> exists y. (Meeting(y) & Attended(x, y)))	n	False	False
2	Every representative or client was at the meeting.	exists z500. all x. (Representative(x) | Client(x) -> (At(x, z500) & Meeting(z500)))	Every representative and every client was at the meeting.	all x. all y. (Representative(x) & Client(y) -> AtMeeting(x, y))	e	False	False
3	The chairman read out the items on the agenda.	all x.all y. (Chairman(x) & Agenda(y) -> ReadsOutItems(x, y))	The chairman read out every item on the agenda.	all x.all y. (Chairman(x) & Agenda(y) -> ReadOutEveryItem(x, y))	e	False	False
4	The people who were at the meeting voted for a new chairman.	exists z500. all x. (Person(x) & (At(x, z500) & Meeting(z500)) -> VotedForNewChairman(x))	Everyone at the meeting voted for a new chairman.	all x. (PersonAtMeeting(x) -> VotedForNewChairman(x))	n	False	False
5	All the people who were at the meeting voted for a new chairman.	exists z500. all x. (Person(x) & (At(x, z500) & Meeting(z500)) -> VotedForNewChairman(x))	Everyone at the meeting voted for a new chairman.	all x. (PersonAtMeeting(x) -> VotedForNewChairman(x))	e	False	False
6	The people who were at the meeting all voted for a new chairman.	exists z500. all x. (Person(x) & (At(x, z500) & Meeting(z500)) -> VotedForNewChairman(x))	Everyone at the meeting voted for a new chairman.	all x. (PersonAtMeeting(x) -> VotedForNewChairman(x))	e	False	False
7	The inhabitants of Cambridge voted for a Labour MP.	all x. (InhabitantOfCambridge(x) -> VotedForLabourMP(x))	Every inhabitant of Cambridge voted for a Labour MP.	all x. (InhabitantOfCambridge(x) -> VotedForLabourMP(x))	n	True	False
8	The Ancient Greeks were noted philosophers.	exists z500. all x. ((Ancient(x, z500) & Greek(z500)) -> Philosophers(x))	Every Ancient Greek was a noted philosopher.	exists z500. all x. ((Ancient(x, z500) & Greek(z500)) -> Philosopher(x))	n	False	False
9	The Ancient Greeks were all noted philosophers.	exists z500. all x. ((Ancient(x, z500) & Greek(z500)) -> Philosopher(x))	Every Ancient Greek was a noted philosopher.	exists z500. all x. ((Ancient(x, z500) & Greek(z500)) -> Philosopher(x))	e	True	False
10	Software faults were blamed for the system failure.	exists z500. all x. ((Software(x, z500) & Fault(z500)) -> BlamedForSystemFailure(x))	The system failure was blamed on one or more software faults.	exists z500. exists z500. all x. ((System(x, z500) & Failure(z500)) -> exists y. ((Software(y, z500) & Fault(z500)) & BlamedOn(x, y)))	e	False	False
11	Software faults were blamed for the system failure. ## Bug # 32-985 is a known software fault.	exists z500. all x. ((Software(x, z500) & Fault(z500)) -> BlamedForSystemFailure(x)) ## KnownSoftwareFault(bug32985)	Bug # 32-985 was blamed for the system failure.	exists z500. exists x. (Bug(x) & (System(y, z500) & Failure(z500)) & BlamedFor(x, y))	n	False	False
12	Clients at the demonstration were all impressed by the system's performance. ## Smith was a client at the demonstration.	exists z500. all x. (Client(x) & (At(x, z500) & Demonstration(z500)) -> ImpressedBySystem(x)) ## exists x. exists y. (Smith(x) & Demonstration(y) & ClientAt(x, y))	Smith was impressed by the system's performance.	ImpressedByPerformance(smith, system)	e	False	False
13	Clients at the demonstration were impressed by the system's performance.	exists z500. all x. (Client(x) & (At(x, z500) & Demonstration(z500)) -> ImpressedBySystemPerformance(x))	Most clients at the demonstration were impressed by the system's performance.	exists z500. all x. (Client(x) & (At(x, z500) & Demonstration(z500)) -> ImpressedBySystemPerformance(x))	e	True	False
14	University graduates make poor stock-market traders. ## Smith is a university graduate.	exists z500. all x. ((University(x, z500) & Graduate(z500)) -> PoorStockMarketTrader(x)) ## exists z500. (University(smith, z500) & Graduate(z500))	Smith is likely to make a poor stock market trader.	all x. (Smith(x) -> PoorStockMarketTrader(x))	e	False	False
15	University graduates make poor stock-market traders. ## Smith is a university graduate.	exists z500. all x. ((University(x, z500) & Graduate(z500)) -> PoorStockMarketTrader(x)) ## exists z500. (University(smith, z500) & Graduate(z500))	Smith will make a poor stock market trader.	all x. (Smith(x) -> PoorStockMarketTrader(x))	n	False	False
16	Just one accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	No accountants attended the meeting.	exists z500. not exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	c	False	False
17	Just one accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	No accountant attended the meeting.	exists z500. not exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	c	False	False
18	Just one accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	Some accountants attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	e	True	False
19	Just one accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	Some accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	e	True	False
20	Just one accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	Some accountants attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	c	True	False
21	Just one accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	Some accountant attended the meeting.	exists z500. exists x. (Accountant(x) & (Attended(x, z500) & Meeting(z500)))	e	True	False
22	Smith signed two contracts. ## Jones signed two contracts.	exists x. exists y. (Smith(x) & Contract(y) & Signed(x, y)) ## exists x. exists y. (Jones(x) & Contract(y) & Signed(x, y))	Smith and Jones signed two contracts.	exists x. exists y. (Smith(x) & Jones(y) & Contract(z) & Signed(x, z) & Signed(y, z))	e	False	False
