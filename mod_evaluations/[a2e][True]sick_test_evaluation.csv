	nl_ps	fol_ps	nl_h	fol_h	label	e_pred	c_pred
0	There is no boy playing outdoors and there is no man smiling	not exists x. (Boy(x) & PlayingOutdoors(x)) & not exists y. (Man(y) & Smiling(y))	A group of kids is playing in a yard and an old man is standing in the background	exists x. exists y. (Kid(x) & Yard(y) & PlayingIn(x, y) & OldMan(z) & StandingInBackground(z, y))	n	False	False
1	A group of boys in a yard is playing and a man is standing in the background	exists x.exists y. (GroupOfBoys(x) & Yard(y) -> Playing(x, y)) & exists z. (Man(z) -> exists w. (Yard(w) & StandingInBackground(z, w)))	The young boys are playing outdoors and the man is smiling nearby	exists x.exists y. (YoungBoy(x) & Outdoors(y) -> Plays(x, y)) & (Man(z) & Smiling(z))	n	False	False
2	A group of children is playing in the house and there is no man standing in the background	exists x. exists y. (GroupOfChildren(x) & House(y) -> exists z. (Child(z) & PlayingIn(z, y))) & not exists w. (Man(w) & StandingInBackground(w))	The young boys are playing outdoors and the man is smiling nearby	exists x.exists y. (YoungBoy(x) & Outdoors(y) -> Plays(x, y)) & (Man(z) & Smiling(z))	n	False	False
3	A brown dog is attacking another animal in front of the tall man in pants	exists x.exists y.exists z. (BrownDog(x) & Animal(y) & TallMan(z) & Attacking(x, y) & InFrontOf(x, z) -> TallManInPants(z))	A brown dog is attacking another animal in front of the man in pants	exists x.exists y.exists z. (BrownDog(x) & Animal(y) & ManInPants(z) -> AttacksInFrontOf(x, y, z))	e	False	False
4	A brown dog is attacking another animal in front of the man in pants	exists x.exists y.exists z. (BrownDog(x) & Animal(y) & ManInPants(z) -> AttacksInFrontOf(x, y, z))	A brown dog is helping another animal in front of the man in pants	exists x.exists y.exists z. (BrownDog(x) & Animal(y) & ManInPants(z) -> Helping(x, y, z))	n	False	False
5	A brown dog is attacking another animal in front of the man in pants	exists x.exists y.exists z. (BrownDog(x) & Animal(y) & ManInPants(z) -> AttacksInFrontOf(x, y, z))	There is no dog wrestling and hugging	not exists x. (Dog(x) & Wrestling(x) & Hugging(x))	n	False	False
6	Two dogs are wrestling and hugging	exists x. exists y. (Dog(x) & Dog(y) & Wrestling(x, y) & Hugging(x, y))	A brown dog is attacking another animal in front of the tall man in pants	exists x.exists y.exists z. (BrownDog(x) & Animal(y) & TallMan(z) & Attacking(x, y) & InFrontOf(x, z) -> TallManInPants(z))	n	False	False
7	Two dogs are wrestling and hugging	exists x. exists y. (Dog(x) & Dog(y) & Wrestling(x, y) & Hugging(x, y))	A brown dog is helping another animal in front of the man in pants	exists x.exists y.exists z. (BrownDog(x) & Animal(y) & ManInPants(z) -> Helping(x, y, z))	n	False	False
8	A person in a black jacket is doing tricks on a motorbike	exists x. (Person(x) & WearsBlackJacket(x) -> TricksOnMotorbike(x))	A man in a black jacket is doing tricks on a motorbike	exists x.exists y. (Man(x) & BlackJacket(x) & Motorbike(y) -> DoingTricks(x, y))	e	False	False
9	There is no man in a black jacket doing tricks on a motorbike	not exists x. (Man(x) & WearsBlackJacket(x) & PerformsTricksOnMotorbike(x))	A person in a black jacket is doing tricks on a motorbike	exists x. (Person(x) & WearsBlackJacket(x) -> TricksOnMotorbike(x))	c	False	False
10	A person in a black jacket is doing tricks on a motorbike	exists x. (Person(x) & WearsBlackJacket(x) -> TricksOnMotorbike(x))	A person on a black motorbike is doing tricks with a jacket	exists x.exists y.exists z. (Person(x) & BlackMotorbike(y) & Jacket(z) -> DoingTricksWith(x, y, z))	n	False	False
11	A skilled person is riding a bicycle on one wheel	exists x. exists y. (SkilledPerson(x) & Bicycle(y) & RidingOnOneWheel(x, y) -> SkilledBicycleRider(x))	A person is riding the bicycle on one wheel	exists x. (Person(x) & RidingBicycle(x, OneWheel))	e	False	False
12	Nobody is riding the bicycle on one wheel	not exists x. (Bicycle(x) & Riding(x))	A person is riding the bicycle on one wheel	exists x. (Person(x) & RidingBicycle(x, OneWheel))	c	False	False
13	A person is riding the bicycle on one wheel	exists x. (Person(x) & RidingBicycle(x, OneWheel))	There is no man in a black jacket doing tricks on a motorbike	not exists x. (Man(x) & WearsBlackJacket(x) & PerformsTricksOnMotorbike(x))	n	False	False
14	A person is riding the bicycle on one wheel	exists x. (Person(x) & RidingBicycle(x, OneWheel))	A person in a black jacket is doing tricks on a motorbike	exists x. (Person(x) & WearsBlackJacket(x) -> TricksOnMotorbike(x))	n	False	False
15	A man with a jersey is dunking the ball at a basketball game	exists x. (Man(x) & WearsJersey(x) -> DunkingBallAtBasketballGame(x))	There is no man dunking the ball at a basketball game	not exists x. (Man(x) & DunkingBasketball(x))	c	False	False
16	The game of basketball consists of a ball being dunked by a man with a jersey	exists x.exists y.exists z. (Basketball(x) & Ball(y) & Man(z) & Dunks(z, y) -> Game(x))	A man with a jersey is dunking the ball at a basketball game	exists x. (Man(x) & WearsJersey(x) -> DunkingBallAtBasketballGame(x))	e	False	False
17	A man who is playing dunks the basketball into the net and a crowd is in background	exists x.exists y. (Man(x) & Basketball(y) & PlaysDunks(x, y) -> CrowdInBackground(x))	The player is dunking the basketball into the net and a crowd is in background	exists x.exists y. (Player(x) & Basketball(y) & Dunking(x, y) -> CrowdInBackground(x))	e	False	False
18	The player is missing the basket and a crowd is in background	exists x. (Player(x) & MissingBasket(x)) & exists y. (Crowd(y) & InBackground(y))	The player is dunking the basketball into the net and a crowd is in background	exists x.exists y. (Player(x) & Basketball(y) & Dunking(x, y) -> CrowdInBackground(x))	c	False	False
19	A man with a jersey is dunking the ball at a basketball game	exists x. (Man(x) & WearsJersey(x) -> DunkingBallAtBasketballGame(x))	The player is missing the basket and a crowd is in background	exists x. (Player(x) & MissingBasket(x)) & exists y. (Crowd(y) & InBackground(y))	n	False	False
20	The player is dunking the basketball into the net and a crowd is in background	exists x.exists y. (Player(x) & Basketball(y) & Dunking(x, y) -> CrowdInBackground(x))	The ball is being dunked by a man with a jersey at a basketball game	exists x. exists y. exists z. (Ball(x) & Man(y) & Jersey(z) & Dunking(y, x) & AtBasketballGame(y))	n	False	False
21	There is no man dunking the ball at a basketball game	not exists x. (Man(x) & DunkingBasketball(x))	The player is dunking the basketball into the net and a crowd is in background	exists x.exists y. (Player(x) & Basketball(y) & Dunking(x, y) -> CrowdInBackground(x))	c	False	False
22	The game of basketball consists of a ball being dunked by a man with a jersey	exists x.exists y.exists z. (Basketball(x) & Ball(y) & Man(z) & Dunks(z, y) -> Game(x))	The player is dunking the basketball into the net and a crowd is in background	exists x.exists y. (Player(x) & Basketball(y) & Dunking(x, y) -> CrowdInBackground(x))	n	False	False
23	Two people are kickboxing and spectators are watching	exists x. exists y. (Person(x) & Person(y) & Kickboxing(x) & Kickboxing(y) & exists z. (Spectator(z) & Watching(z)))	Two people are fighting and spectators are watching	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fighting(x, y) & Fighting(y, z) & Spectator(x) & Spectator(y) & Spectator(z))	e	False	False
24	Two spectators are kickboxing and some people are watching	exists x. exists y. (Spectator(x) & Spectator(y) & Kickboxing(x) & Kickboxing(y))	Two people are kickboxing and spectators are watching	exists x. exists y. (Person(x) & Person(y) & Kickboxing(x) & Kickboxing(y) & exists z. (Spectator(z) & Watching(z)))	n	False	False
25	Two people are kickboxing and spectators are watching	exists x. exists y. (Person(x) & Person(y) & Kickboxing(x) & Kickboxing(y) & exists z. (Spectator(z) & Watching(z)))	Two young women are sparring in a kickboxing fight	exists x. exists y. (YoungWoman(x) & YoungWoman(y) & Sparring(x, y) & KickboxingFight(x, y))	n	False	False
26	Two women are sparring in a kickboxing match	exists x. exists y. (Woman(x) & Woman(y) & Sparring(x, y) & KickboxingMatch(x, y))	Two people are fighting and spectators are watching	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fighting(x, y) & Fighting(y, z) & Spectator(x) & Spectator(y) & Spectator(z))	n	False	False
27	Two spectators are kickboxing and some people are watching	exists x. exists y. (Spectator(x) & Spectator(y) & Kickboxing(x) & Kickboxing(y))	Two women are sparring in a kickboxing match	exists x. exists y. (Woman(x) & Woman(y) & Sparring(x, y) & KickboxingMatch(x, y))	n	False	False
28	Two people are kickboxing and spectators are watching	exists x. exists y. (Person(x) & Person(y) & Kickboxing(x) & Kickboxing(y) & exists z. (Spectator(z) & Watching(z)))	Two women are sparring in a kickboxing match	exists x. exists y. (Woman(x) & Woman(y) & Sparring(x, y) & KickboxingMatch(x, y))	n	False	False
29	Kids in red shirts are playing in the leaves	exists x. (Kid(x) & WearsRedShirt(x) -> PlaysInLeaves(x))	Children in red shirts are playing in the leaves	exists x. (Child(x) & WearsRedShirt(x) -> PlaysInLeaves(x))	e	True	False
30	Children in red shirts are playing in the leaves	exists x. (Child(x) & WearsRedShirt(x) -> PlaysInLeaves(x))	Children in red shirts are sleeping in the leaves	exists x. (Child(x) & WearsRedShirt(x) -> SleepingInLeaves(x))	n	False	False
31	Children in red shirts are playing in the leaves	exists x. (Child(x) & WearsRedShirt(x) -> PlaysInLeaves(x))	Children covered by leaves are playing with red shirts	exists x. (Child(x) & CoveredByLeaves(x) -> PlayingWithRedShirts(x))	n	False	False
32	Three boys are jumping in the leaves	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingInLeaves(x) & JumpingInLeaves(y) & JumpingInLeaves(z))	Children in red shirts are playing in the leaves	exists x. (Child(x) & WearsRedShirt(x) -> PlaysInLeaves(x))	n	False	False
33	Kids in red shirts are playing in the leaves	exists x. (Kid(x) & WearsRedShirt(x) -> PlaysInLeaves(x))	Three kids are jumping in the leaves	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & JumpingInLeaves(x) & JumpingInLeaves(y) & JumpingInLeaves(z))	n	False	False
34	Children in red shirts are sleeping in the leaves	exists x. (Child(x) & WearsRedShirt(x) -> SleepingInLeaves(x))	Three kids are jumping in the leaves	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & JumpingInLeaves(x) & JumpingInLeaves(y) & JumpingInLeaves(z))	n	False	False
35	Children covered by leaves are playing with red shirts	exists x. (Child(x) & CoveredByLeaves(x) -> PlayingWithRedShirts(x))	Three kids are jumping in the leaves	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & JumpingInLeaves(x) & JumpingInLeaves(y) & JumpingInLeaves(z))	n	False	False
36	Two children are lying in the snow and are drawing angels	exists x. exists y. (Child(x) & Child(y) & LyingInSnow(x) & LyingInSnow(y) & DrawingAngels(x) & DrawingAngels(y))	Two children are lying in the snow and are making snow angels	exists x. exists y. (Child(x) & Child(y) & LyingInSnow(x) & LyingInSnow(y) & MakingSnowAngels(x) & MakingSnowAngels(y))	e	False	False
37	Two children are lying in the snow and are making snow angels	exists x. exists y. (Child(x) & Child(y) & LyingInSnow(x) & LyingInSnow(y) & MakingSnowAngels(x) & MakingSnowAngels(y))	There is no child lying in the snow and making snow angels	not exists x. (Child(x) & LyingInSnow(x) & MakingSnowAngels(x))	c	False	True
38	Two people wearing snowsuits are on the ground making snow angels	exists x.exists y. (Person(x) & Person(y) & WearingSnowsuit(x) & WearingSnowsuit(y) -> OnGroundMakingSnowAngels(x, y))	Two people in snowsuits are lying in the snow and making snow angels	exists x.exists y.exists z. (Person(x) & Person(y) & Snowsuit(x) & Snowsuit(y) & Snow(z) -> (LyingIn(x, z) & LyingIn(y, z) & MakingSnowAngels(x, y)))	e	False	False
39	Two children are lying in the snow and are making snow angels	exists x. exists y. (Child(x) & Child(y) & LyingInSnow(x) & LyingInSnow(y) & MakingSnowAngels(x) & MakingSnowAngels(y))	Two people wearing snowsuits are on the ground making snow angels	exists x.exists y. (Person(x) & Person(y) & WearingSnowsuit(x) & WearingSnowsuit(y) -> OnGroundMakingSnowAngels(x, y))	n	False	False
40	Two children are lying in the snow and are making snow angels	exists x. exists y. (Child(x) & Child(y) & LyingInSnow(x) & LyingInSnow(y) & MakingSnowAngels(x) & MakingSnowAngels(y))	Nobody in snowsuits is lying in the snow and making snow angels	exists x. (Person(x) & WearsSnowsuit(x) -> not LyingInSnow(x) & not MakingSnowAngels(x))	c	False	False
41	A little girl is looking at a woman in costume	exists x. exists y. (LittleGirl(x) & Woman(y) & Costume(y) & LookingAt(x, y))	A young girl is looking at a woman in costume	exists x. exists y. (YoungGirl(x) & Woman(y) & Costume(y) & LookingAt(x, y))	e	False	False
42	A little girl is looking at a woman in costume	exists x. exists y. (LittleGirl(x) & Woman(y) & Costume(y) & LookingAt(x, y))	The little girl is looking at a man in costume	exists x.exists y. (LittleGirl(x) & ManInCostume(y) & LookingAt(x, y))	n	False	False
43	A little girl is looking at a woman in costume	exists x. exists y. (LittleGirl(x) & Woman(y) & Costume(y) & LookingAt(x, y))	A little girl in costume looks like a woman	exists x. (LittleGirlInCostume(x) -> LooksLikeWoman(x))	n	False	False
44	Masked people are looking in the same direction in a forest	exists x.exists y.exists z. (MaskedPerson(x) & Person(y) & Forest(z) -> LookingInSameDirection(x, y, z))	A little girl is looking at a woman in costume	exists x. exists y. (LittleGirl(x) & Woman(y) & Costume(y) & LookingAt(x, y))	n	False	False
45	A little girl is looking at a woman in costume	exists x. exists y. (LittleGirl(x) & Woman(y) & Costume(y) & LookingAt(x, y))	People wearing costumes are gathering in a forest and are looking in the same direction	exists x.exists y.exists z. (Person(x) & Costume(x) & Forest(y) & Direction(z) & Wearing(x, y) & LookingInDirection(x, z) -> Gathering(x, y))	n	False	False
46	A man is jumping into an empty swimming pool	exists x. exists y. (Man(x) & SwimmingPool(y) & JumpsInto(x, y) & Empty(y))	A man is jumping into an empty pool	exists x. exists y. (Man(x) & Pool(y) & JumpsInto(x, y) & Empty(y))	e	False	False
47	A lone biker is jumping in the air	exists x. (Biker(x) & JumpingInAir(x))	A man is jumping into an empty swimming pool	exists x. exists y. (Man(x) & SwimmingPool(y) & JumpsInto(x, y) & Empty(y))	n	False	False
48	A man is jumping into an empty pool	exists x. exists y. (Man(x) & Pool(y) & JumpsInto(x, y) & Empty(y))	A biker is jumping in the air, alone	exists x. (Biker(x) & JumpingInAir(x))	n	False	False
49	A man is jumping into an empty pool	exists x. exists y. (Man(x) & Pool(y) & JumpsInto(x, y) & Empty(y))	There is no biker jumping in the air	not exists x. (Biker(x) & JumpingInAir(x))	n	False	False
50	A player is throwing the ball	exists x. (Player(x) & ThrowingBall(x))	A player is running with the ball	exists x. (Player(x) & Running(x) -> WithBall(x))	n	False	False
51	Two groups of people are playing football	exists x. exists y. (Group(x) & Group(y) & PlayingFootball(x) & PlayingFootball(y))	Two teams are competing in a football match	exists x. exists y. (Team(x) & Team(y) & FootballMatch(x, y))	e	False	False
52	Two teams are competing in a football match	exists x. exists y. (Team(x) & Team(y) & FootballMatch(x, y))	Two teams are competing in a baseball game	exists x. exists y. (Team(x) & Team(y) & BaseballGame(x, y) & Competing(x, y))	n	False	False
53	Two teams are competing in a football match	exists x. exists y. (Team(x) & Team(y) & FootballMatch(x, y))	Football is being played by two competing teams	exists x.exists y.exists z. (Football(x) & Team(y) & Team(z) -> Playing(y, x) & Playing(z, x))	e	False	False
54	A player is running with the ball	exists x. (Player(x) & Running(x) -> WithBall(x))	Football is being played by two competing teams	exists x.exists y.exists z. (Football(x) & Team(y) & Team(z) -> Playing(y, x) & Playing(z, x))	n	False	False
55	Two teams are competing in a football match	exists x. exists y. (Team(x) & Team(y) & FootballMatch(x, y))	A man who is playing is running with the ball in his hands	exists x. (Man(x) & Playing(x) -> RunningWithBallInHands(x))	n	False	False
56	Five children are standing in front of a wooden hut	exists x. exists y. (Child(x) & Child(y) & WoodenHut(z) & StandingInFrontOf(x, z) & StandingInFrontOf(y, z))	Five children are standing in front of a hut made of wood	exists x. exists y. (Child(x) & Hut(y) & MadeOfWood(y) & StandingInFrontOf(x, y))	e	False	False
57	Five kids are standing close together and one kid has a gun	exists x.exists y.exists z.exists w.exists v. (Kid(x) & Kid(y) & Kid(z) & Kid(w) & Kid(v) & StandingCloseTogether(x, y, z) & HasGun(v))	Five kids are standing close together and one kid has a weapon	exists x.exists y.exists z.exists w.exists v. (Kid(x) & Kid(y) & Kid(z) & Kid(w) & Kid(v) & StandingCloseTogether(x, y, z) & HasWeapon(v))	e	False	False
58	Five children are standing in front of a wooden hut	exists x. exists y. (Child(x) & Child(y) & WoodenHut(z) & StandingInFrontOf(x, z) & StandingInFrontOf(y, z))	Five kids are standing close together and one kid has a weapon	exists x.exists y.exists z.exists w.exists v. (Kid(x) & Kid(y) & Kid(z) & Kid(w) & Kid(v) & StandingCloseTogether(x, y, z) & HasWeapon(v))	n	False	False
59	Five children are standing in front of a hut made of wood	exists x. exists y. (Child(x) & Hut(y) & MadeOfWood(y) & StandingInFrontOf(x, y))	Five kids are standing close together and one kid has a gun	exists x.exists y.exists z.exists w.exists v. (Kid(x) & Kid(y) & Kid(z) & Kid(w) & Kid(v) & StandingCloseTogether(x, y, z) & HasGun(v))	n	False	False
60	Five children are standing in front of a wooden hut	exists x. exists y. (Child(x) & Child(y) & WoodenHut(z) & StandingInFrontOf(x, z) & StandingInFrontOf(y, z))	Five kids are standing close together and one kid has a gun	exists x.exists y.exists z.exists w.exists v. (Kid(x) & Kid(y) & Kid(z) & Kid(w) & Kid(v) & StandingCloseTogether(x, y, z) & HasGun(v))	n	False	False
61	A person is wearing a hat and is sitting on the grass	exists x. (Person(x) & WearingHat(x) & SittingOnGrass(x))	There is no person wearing a hat and sitting on the grass	not exists x. (Person(x) & WearingHat(x) & SittingOnGrass(x))	c	False	True
62	A person is sitting in a field and is wearing a hat	exists x. (Person(x) & SittingInField(x) & WearingHat(x))	A man is sitting in a field	exists x. exists y. (Man(x) & Field(y) & SittingIn(x, y))	n	False	False
63	A man is sitting in a field	exists x. exists y. (Man(x) & Field(y) & SittingIn(x, y))	There is no person wearing a hat and sitting on the grass	not exists x. (Person(x) & WearingHat(x) & SittingOnGrass(x))	n	False	False
64	An old man is sitting in a field	exists x. (OldMan(x) & SittingInField(x))	A person is wearing a hat and is sitting on the grass	exists x. (Person(x) & WearingHat(x) & SittingOnGrass(x))	n	False	False
65	A person is wearing a hat and is sitting on the grass	exists x. (Person(x) & WearingHat(x) & SittingOnGrass(x))	A man is running in a field	exists x. exists y. (Man(x) & Field(y) & RunningIn(x, y))	n	False	False
66	This group of people is practicing water safety and wearing preservers	exists x. (Group(x) & PracticesWaterSafety(x) -> WearsPreservers(x))	Preservers are being worn by a group of people who are practicing water safety	exists x.exists y.exists z. (Preserver(x) & GroupOfPeople(y) & PracticingWaterSafety(z) -> Wearing(x, y, z))	e	False	False
67	Nobody is practicing water safety and wearing preservers	not exists x. (Person(x) & PracticingWaterSafety(x) & WearingPreservers(x))	This group of people is practicing water safety and wearing preservers	exists x. (Group(x) & PracticesWaterSafety(x) -> WearsPreservers(x))	c	False	False
68	A group of friends are riding the current in a raft	exists x.exists y.exists z. (FriendGroup(x) & Raft(y) & Current(z) -> Riding(x, y, z))	Preservers are being worn by a group of people who are practicing water safety	exists x.exists y.exists z. (Preserver(x) & GroupOfPeople(y) & PracticingWaterSafety(z) -> Wearing(x, y, z))	n	False	False
69	Nobody is practicing water safety and wearing preservers	not exists x. (Person(x) & PracticingWaterSafety(x) & WearingPreservers(x))	A group of friends are riding the current in a raft	exists x.exists y.exists z. (FriendGroup(x) & Raft(y) & Current(z) -> Riding(x, y, z))	n	False	False
70	A group is not riding the current in a raft	exists x. (Group(x) -> not RidingCurrentInRaft(x))	This group of people is practicing water safety and wearing preservers	exists x. (Group(x) & PracticesWaterSafety(x) -> WearsPreservers(x))	n	False	False
71	A deer is jumping over a fence	exists x. exists y. (Deer(x) & Fence(y) & JumpsOver(x, y))	A deer is jumping over the enclosure	exists x. exists y. (Deer(x) & Enclosure(y) & JumpsOver(x, y))	e	False	False
72	A wild deer is jumping a fence	exists x. (WildDeer(x) & JumpingFence(x))	A deer is jumping a fence	exists x. (Deer(x) & JumpingFence(x))	e	False	False
73	A deer is jumping a fence	exists x. (Deer(x) & JumpingFence(x))	There is no deer jumping fences	not exists x. (Deer(x) & JumpsFences(x))	c	False	False
74	A wild deer is jumping a fence	exists x. (WildDeer(x) & JumpingFence(x))	A deer is jumping over a fence	exists x. exists y. (Deer(x) & Fence(y) & JumpsOver(x, y))	e	False	False
75	There is no deer jumping fences	not exists x. (Deer(x) & JumpsFences(x))	A deer is jumping over a fence	exists x. exists y. (Deer(x) & Fence(y) & JumpsOver(x, y))	c	False	False
76	A deer is jumping over the enclosure	exists x. exists y. (Deer(x) & Enclosure(y) & JumpsOver(x, y))	A deer is jumping a fence	exists x. (Deer(x) & JumpingFence(x))	n	False	False
77	A deer is jumping a fence	exists x. (Deer(x) & JumpingFence(x))	A deer isn't jumping over the fence	exists x. (Deer(x) -> not JumpingOverFence(x))	c	False	False
78	A deer is jumping over a fence	exists x. exists y. (Deer(x) & Fence(y) & JumpsOver(x, y))	A deer is jumping a fence	exists x. (Deer(x) & JumpingFence(x))	e	False	False
79	People are walking outside a building that has many murals on it	exists x.exists y. (Person(x) & Building(y) & WalkingOutside(x, y) & HasManyMurals(y) -> WalkingOutsideMuralBuilding(x, y))	People are walking outside the building that has several murals on it	exists x.exists y. (Person(x) & Building(y) & Outside(x, y) & HasMurals(y) -> Walking(x, y))	e	False	False
80	Several people are in front of a building which is covered by colors	exists x.exists y.exists z. (Person(x) & Person(y) & Building(z) & InFrontOf(x, z) & InFrontOf(y, z) & CoveredByColors(z))	People are walking outside a building that has many murals on it	exists x.exists y. (Person(x) & Building(y) & WalkingOutside(x, y) & HasManyMurals(y) -> WalkingOutsideMuralBuilding(x, y))	e	False	False
81	Several people are in front of a colorful building	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Building(b) & Colorful(b) & InFrontOf(x, y, z, b))	People are walking inside a building that has many murals on it	exists x.exists y. (Person(x) & Building(y) & WalkingInside(x, y) -> HasManyMurals(y))	n	False	False
82	People are walking outside a building that has many murals on it	exists x.exists y. (Person(x) & Building(y) & WalkingOutside(x, y) & HasManyMurals(y) -> WalkingOutsideMuralBuilding(x, y))	Several people are in front of a colorful building	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Building(b) & Colorful(b) & InFrontOf(x, y, z, b))	n	False	False
83	A boy is hitting a baseball	exists x. exists y. (Boy(x) & Baseball(y) & Hitting(x, y))	A child is hitting a baseball	exists x. exists y. (Child(x) & Baseball(y) & Hitting(x, y))	e	False	False
84	A child is hitting a baseball	exists x. exists y. (Child(x) & Baseball(y) & Hitting(x, y))	A child is missing a baseball	exists x. (Child(x) & MissingBaseball(x))	c	False	False
85	A little boy is watching a family that is hitting a baseball	exists x. exists y. exists z. (LittleBoy(x) & Family(y) & Baseball(z) & Watching(x, y) & Hitting(y, z))	A family is watching a little boy who is hitting a baseball	exists x. exists y. exists z. (Family(x) & LittleBoy(y) & Baseball(z) & Watching(x, y) & Hitting(y, z))	n	False	False
86	A family is watching a boy who is hitting a baseball	exists x.exists y.exists z. (Family(x) & Boy(y) & Baseball(z) -> Watching(x, y, z))	A child is hitting a baseball	exists x. exists y. (Child(x) & Baseball(y) & Hitting(x, y))	e	False	False
87	A little boy is watching a family that is hitting a baseball	exists x. exists y. exists z. (LittleBoy(x) & Family(y) & Baseball(z) & Watching(x, y) & Hitting(y, z))	A child is hitting a baseball	exists x. exists y. (Child(x) & Baseball(y) & Hitting(x, y))	n	False	False
88	A family is watching a little boy who is hitting a baseball	exists x. exists y. exists z. (Family(x) & LittleBoy(y) & Baseball(z) & Watching(x, y) & Hitting(y, z))	A boy is hitting a baseball	exists x. exists y. (Boy(x) & Baseball(y) & Hitting(x, y))	e	False	False
89	A family is watching a little boy who is hitting a baseball	exists x. exists y. exists z. (Family(x) & LittleBoy(y) & Baseball(z) & Watching(x, y) & Hitting(y, z))	A child is hitting a baseball	exists x. exists y. (Child(x) & Baseball(y) & Hitting(x, y))	e	False	False
90	A large group of Asian people is eating at a restaurant	exists x. exists y. (AsianPerson(x) & Group(x) & Restaurant(y) & EatingAt(x, y))	A group of people from Asia is eating at a restaurant	exists x.exists y. (Group(x) & People(y) & FromAsia(y) & EatingAt(y, restaurant))	e	False	False
91	A large group of Asian people is eating at a restaurant	exists x. exists y. (AsianPerson(x) & Group(x) & Restaurant(y) & EatingAt(x, y))	A small group of people is waiting to eat in a restaurant	exists x.exists y. (SmallGroup(x) & Person(y) & WaitingToEat(y, x))	n	False	False
92	A large group of Asian people is eating at a restaurant	exists x. exists y. (AsianPerson(x) & Group(x) & Restaurant(y) & EatingAt(x, y))	A group of people in a large Asian restaurant is eating	exists x. (GroupOfPeople(x) & InLargeAsianRestaurant(x) -> Eating(x))	n	False	False
93	Various people are eating at red tables in a crowded restaurant with purple lights	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & RedTable(x) & RedTable(y) & RedTable(z) & CrowdedRestaurant(x) & CrowdedRestaurant(y) & CrowdedRestaurant(z) & PurpleLights(x) & PurpleLights(y) & PurpleLights(z))	Various customers are eating in a crowded restaurant with purple lights	exists x. exists y. (Customer(x) & Restaurant(y) & Crowded(y) & PurpleLights(y) & Eating(x, y))	e	False	False
94	Few people are eating at red tables in a restaurant without lights	exists x. (Person(x) & EatingAtRedTables(x) & not exists y. (Restaurant(y) & Lights(y) & LocatedIn(y, x)))	Various people are eating at red tables in a crowded restaurant with purple lights	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & RedTable(x) & RedTable(y) & RedTable(z) & CrowdedRestaurant(x) & CrowdedRestaurant(y) & CrowdedRestaurant(z) & PurpleLights(x) & PurpleLights(y) & PurpleLights(z))	n	False	False
95	A group of people from Asia is eating at a restaurant	exists x.exists y. (Group(x) & People(y) & FromAsia(y) & EatingAt(y, restaurant))	Various people are eating at red tables in a crowded restaurant with purple lights	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & RedTable(x) & RedTable(y) & RedTable(z) & CrowdedRestaurant(x) & CrowdedRestaurant(y) & CrowdedRestaurant(z) & PurpleLights(x) & PurpleLights(y) & PurpleLights(z))	n	False	False
96	A group of people in a large Asian restaurant is eating	exists x. (GroupOfPeople(x) & InLargeAsianRestaurant(x) -> Eating(x))	Various people are eating at red tables in a crowded restaurant with purple lights	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & RedTable(x) & RedTable(y) & RedTable(z) & CrowdedRestaurant(x) & CrowdedRestaurant(y) & CrowdedRestaurant(z) & PurpleLights(x) & PurpleLights(y) & PurpleLights(z))	n	False	False
97	A large group of Asian people is eating at a restaurant	exists x. exists y. (AsianPerson(x) & Group(x) & Restaurant(y) & EatingAt(x, y))	Various people are eating at red tables in a crowded restaurant with purple lights	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & RedTable(x) & RedTable(y) & RedTable(z) & CrowdedRestaurant(x) & CrowdedRestaurant(y) & CrowdedRestaurant(z) & PurpleLights(x) & PurpleLights(y) & PurpleLights(z))	n	False	False
98	A motorcycle rider is standing up on the seat of a white motorcycle	exists x.exists y. (MotorcycleRider(x) & Motorcycle(y) & White(y) -> StandingUpOnSeat(x, y))	A motorcycle is riding standing up on the seat of the vehicle	exists x. (Motorcycle(x) -> RidingStandingUpOnSeat(x))	e	False	False
99	A rider is on a black and white bike and is standing on the seat	exists x.exists y. (Rider(x) & Bike(y) & Black(y) & White(y) -> StandingOnSeat(x, y))	A motorcycle rider is standing up on the seat of a white motorcycle	exists x.exists y. (MotorcycleRider(x) & Motorcycle(y) & White(y) -> StandingUpOnSeat(x, y))	n	False	False
100	Nobody is on a motorcycle and is standing on the seat	not exists x. (Motorcycle(x) & On(x)) & exists y. (StandingOnSeat(y))	A motorcycle rider is standing up on the seat of a white motorcycle	exists x.exists y. (MotorcycleRider(x) & Motorcycle(y) & White(y) -> StandingUpOnSeat(x, y))	c	False	False
101	Someone is on a black and white motorcycle and is standing on the seat	exists x. (Motorcycle(x) & BlackAndWhite(x) & StandingOnSeat(x))	No motorcycle rider is standing up on the seat of a motorcycle	exists x.exists y. (MotorcycleRider(x) & Motorcycle(y) -> not StandingUpOnSeat(x, y))	c	False	False
102	Someone is on a black and white motorcycle and is standing on the seat	exists x. (Motorcycle(x) & BlackAndWhite(x) & StandingOnSeat(x))	A motorcycle rider is standing up on the seat of a white motorcycle	exists x.exists y. (MotorcycleRider(x) & Motorcycle(y) & White(y) -> StandingUpOnSeat(x, y))	n	False	False
103	A motorcyclist with a red helmet is riding a blue motorcycle down the road	exists x.exists y.exists z. (Motorcyclist(x) & RedHelmet(x) & Motorcycle(y) & Blue(y) & Road(z) -> Riding(x, y, z))	A motorcyclist without a helmet is waiting on a blue motorcycle near the road	exists x.exists y.exists z. (Motorcyclist(x) & Motorcycle(y) & Road(z) & not WearsHelmet(x) & Owns(x, y) & Near(x, z) -> Waiting(x, y))	n	False	False
104	A motorcyclist with a red helmet is riding a blue motorcycle down the road	exists x.exists y.exists z. (Motorcyclist(x) & RedHelmet(x) & Motorcycle(y) & Blue(y) & Road(z) -> Riding(x, y, z))	A motorcyclist is riding a motorbike dangerously along a roadway	exists x.exists y.exists z. (Motorcyclist(x) & Motorbike(y) & Roadway(z) -> RidesDangerously(x, y, z))	n	False	False
105	There is no motorcyclist riding a motorbike along a roadway	not exists x. (Motorcyclist(x) & RidingMotorbike(x) & AlongRoadway(x))	A motorcyclist with a red helmet is riding a blue motorcycle down the road	exists x.exists y.exists z. (Motorcyclist(x) & RedHelmet(x) & Motorcycle(y) & Blue(y) & Road(z) -> Riding(x, y, z))	c	False	False
106	A motorcyclist with a red helmet is riding a blue motorcycle down the road	exists x.exists y.exists z. (Motorcyclist(x) & RedHelmet(x) & Motorcycle(y) & Blue(y) & Road(z) -> Riding(x, y, z))	A motorcyclist is riding a motorbike along a roadway	exists x.exists y.exists z. (Motorcyclist(x) & Motorbike(y) & Roadway(z) -> Riding(x, y, z))	e	False	False
107	A dog is catching a stick in the air and another is watching	exists x. exists y. (Dog(x) & Dog(y) & CatchingStick(x) & Watching(y, x))	A dog is leaping high in the air and another is watching	exists x. exists y. (Dog(x) & Dog(y) & LeapingHigh(x) & Watching(y, x))	e	False	False
108	There is no dog leaping in the air	not exists x. (Dog(x) & LeapingInAir(x))	A dog is leaping high in the air and another is watching	exists x. exists y. (Dog(x) & Dog(y) & LeapingHigh(x) & Watching(y, x))	c	False	False
109	Two dogs are playing by a tree	exists x.exists y.exists z. (Dog(x) & Dog(y) & Tree(z) & PlayingBy(x, y, z))	Two dogs are sleeping by a tree	exists x.exists y.exists z. (Dog(x) & Dog(y) & Tree(z) & SleepingBy(x, y, z))	n	False	False
110	A dog is leaping high in the air and another is watching	exists x. exists y. (Dog(x) & Dog(y) & LeapingHigh(x) & Watching(y, x))	Two dogs are playing by a plant	exists x. exists y. exists z. (Dog(x) & Dog(y) & Plant(z) & PlayingBy(x, y, z))	n	False	False
111	A dog is leaping high in the air and another is watching	exists x. exists y. (Dog(x) & Dog(y) & LeapingHigh(x) & Watching(y, x))	Two dogs are sleeping by a tree	exists x.exists y.exists z. (Dog(x) & Dog(y) & Tree(z) & SleepingBy(x, y, z))	n	False	False
112	The dancer is dancing in front of the sound equipment	Dancer(dancer) & DancingInFrontOf(dancer, soundEquipment)	The blond girl is dancing in front of the sound equipment	DancingInFrontOfSoundEquipment(blondGirl)	n	False	False
113	The blond girl is dancing behind the sound equipment	exists x. (Girl(x) & Blond(x) & DancingBehind(x, SoundEquipment))	The blond girl is dancing in front of the sound equipment	DancingInFrontOfSoundEquipment(blondGirl)	n	False	False
114	The blond girl is dancing in front of the sound equipment	DancingInFrontOfSoundEquipment(blondGirl)	The equipment in front of the blond dancing girl is sound	exists x. (Equipment(x) & InFrontOfBlondDancingGirl(x) -> Sound(x))	e	False	False
115	Three Asian kids are dancing and a serious man is looking	exists x. exists y. exists z. (AsianKid(x) & AsianKid(y) & AsianKid(z) & Dancing(x) & Dancing(y) & Dancing(z) & SeriousMan(x) & Looking(x))	Three Asian kids are dancing and a man is looking	exists x. exists y. exists z. (AsianKid(x) & AsianKid(y) & AsianKid(z) & Dancing(x) & Dancing(y) & Dancing(z) & Man(x) & Looking(x))	e	False	False
116	The children of a family are playing and waiting	exists x.exists y. (Family(x) & Child(y, x) -> (Plays(y) & Waits(y)))	Three Asian kids are dancing and there is no man looking	exists x. exists y. exists z. (AsianKid(x) & AsianKid(y) & AsianKid(z) & Dancing(x) & Dancing(y) & Dancing(z) & not exists w. (Man(w) & Looking(w)))	n	False	False
117	Three Asian kids are dancing and a man is looking	exists x. exists y. exists z. (AsianKid(x) & AsianKid(y) & AsianKid(z) & Dancing(x) & Dancing(y) & Dancing(z) & Man(x) & Looking(x))	The children of a family are playing and waiting	exists x.exists y. (Family(x) & Child(y, x) -> (Plays(y) & Waits(y)))	n	False	False
118	The woman is wearing glasses and a black headdress	exists x. (Woman(x) & WearingGlasses(x) & WearingBlackHeaddress(x))	The woman with a black hat is wearing sunglasses	exists x. (Woman(x) & WearsBlackHat(x) -> WearsSunglasses(x))	n	False	False
119	The woman is not wearing glasses or a headdress	not (Woman(x) & (WearingGlasses(x) | WearingHeaddress(x)))	The woman is wearing glasses and a black headdress	exists x. (Woman(x) & WearingGlasses(x) & WearingBlackHeaddress(x))	c	False	True
120	The black woman is wearing glasses over the headdress	exists x. (BlackWoman(x) -> WearsGlassesOverHeaddress(x))	The woman is wearing glasses and a black headdress	exists x. (Woman(x) & WearingGlasses(x) & WearingBlackHeaddress(x))	n	False	False
121	A woman is wearing an Egyptian headdress	exists x. (Woman(x) & exists y. (EgyptianHeaddress(y) & Wearing(x, y)))	The woman with a black hat is wearing sunglasses	exists x. (Woman(x) & WearsBlackHat(x) -> WearsSunglasses(x))	n	False	False
122	The woman is not wearing glasses or a headdress	not (Woman(x) & (WearingGlasses(x) | WearingHeaddress(x)))	A woman is wearing an Egyptian headdress	exists x. (Woman(x) & exists y. (EgyptianHeaddress(y) & Wearing(x, y)))	c	False	False
123	A woman is wearing an Indian headdress	exists x. (Woman(x) & exists y. (IndianHeaddress(y) & Wearing(x, y)))	The woman is wearing glasses and a black headdress	exists x. (Woman(x) & WearingGlasses(x) & WearingBlackHeaddress(x))	n	False	False
124	The woman is wearing glasses and a black headdress	exists x. (Woman(x) & WearingGlasses(x) & WearingBlackHeaddress(x))	An Egyptian is wearing a woman's headdress	exists x. (Egyptian(x) & Woman(y) & Headdress(z) & Wearing(x, y, z))	n	False	False
125	The woman is wearing glasses and a black headdress	exists x. (Woman(x) & WearingGlasses(x) & WearingBlackHeaddress(x))	A woman is wearing an Egyptian headdress	exists x. (Woman(x) & exists y. (EgyptianHeaddress(y) & Wearing(x, y)))	n	False	False
126	A man is on a rock high above some trees and is standing in an uncomfortable position	exists x. (Man(x) & OnRock(x) & HighAboveTrees(x) & StandingInUncomfortablePosition(x))	A man is on a rock high above some trees and is standing in a strange position	exists x. (Man(x) & OnRock(x) & HighAboveTrees(x) & StandingInStrangePosition(x))	e	False	False
127	A man is on a rock high above some trees and is standing in a strange position	exists x. (Man(x) & OnRock(x) & HighAboveTrees(x) & StandingInStrangePosition(x))	A hiker is on top of the mountain and is dancing	exists x. (Hiker(x) & OnTopOfMountain(x) & Dancing(x))	n	False	False
128	A cowgirl is riding a brown horse and is cornering a barrel	exists x.exists y.exists z. (Cowgirl(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Cornering(x, z)))	A cowgirl is riding a horse and corners a barrel	exists x.exists y.exists z. (Cowgirl(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Corners(x, z)))	e	False	False
129	A cowboy is riding a horse and cornering a barrel	exists x.exists y.exists z. (Cowboy(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Cornering(x, z)))	A cowgirl is riding a horse and corners a barrel	exists x.exists y.exists z. (Cowgirl(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Corners(x, z)))	n	False	False
130	A cowgirl is riding a barrel near a horse in the corner	exists x.exists y.exists z. (Cowgirl(x) & Barrel(y) & Horse(z) -> RidingNear(x, y, z))	A cowgirl is riding a horse and corners a barrel	exists x.exists y.exists z. (Cowgirl(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Corners(x, z)))	n	False	False
131	The brown horse is very near a red barrel at the rodeo	exists x.exists y. (BrownHorse(x) & RedBarrel(y) -> VeryNear(x, y))	A cowgirl is riding a horse and corners a barrel	exists x.exists y.exists z. (Cowgirl(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Corners(x, z)))	n	False	False
132	The brown horse is far from a red barrel at the rodeo	exists x.exists y. (BrownHorse(x) & RedBarrel(y) -> FarFrom(x, y))	A cowgirl is riding a horse and corners a barrel	exists x.exists y.exists z. (Cowgirl(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Corners(x, z)))	n	False	False
133	A cowboy is riding a horse and cornering a barrel	exists x.exists y.exists z. (Cowboy(x) & Horse(y) & Barrel(z) -> (Riding(x, y) & Cornering(x, z)))	The brown horse is near a red barrel at the rodeo	exists x. exists y. (Horse(x) & RedBarrel(y) & Near(x, y))	n	False	False
134	The brown horse is near a red barrel at the rodeo	exists x. exists y. (Horse(x) & RedBarrel(y) & Near(x, y))	A cowgirl is riding a barrel near a horse in the corner	exists x.exists y.exists z. (Cowgirl(x) & Barrel(y) & Horse(z) -> RidingNear(x, y, z))	n	False	False
135	A boy is standing outside the water	exists x. (Boy(x) & StandingOutsideWater(x))	A boy is standing in the water	exists x. (Boy(x) & StandingInWater(x))	n	False	False
136	The kid is swimming through the blue ocean	exists x. (Kid(x) -> SwimmingThroughBlueOcean(x))	The boy is wading through the blue ocean	Boy(x) & Wading(x) & BlueOcean(y) & Through(x, y)	n	False	False
137	A boy is standing in the water	exists x. (Boy(x) & StandingInWater(x))	The boy is sitting near the blue ocean	exists x. exists y. (Boy(x) & BlueOcean(y) & SittingNear(x, y))	n	False	False
138	A boy is standing in the water	exists x. (Boy(x) & StandingInWater(x))	The boy is wading through the blue ocean	Boy(x) & Wading(x) & BlueOcean(y) & Through(x, y)	n	False	False
139	A skilled man is playing a guitar on stage	exists x.exists y.exists z. (Skilled(x) & Man(y) & Guitar(z) & Stage(s) -> Playing(y, z, s))	A man is playing a guitar on stage	exists x. exists y. exists z. (Man(x) & Guitar(y) & Stage(z) & PlayingOn(x, y, z))	e	False	False
140	A person has blonde and flyaway hair and is playing a guitar	exists x. (Person(x) & BlondeHair(x) & FlyawayHair(x) & PlayingGuitar(x))	A guitarist has blonde and flyaway hair	exists x. (Guitarist(x) -> (BlondeHair(x) & FlyawayHair(x)))	e	True	False
141	A skilled man is playing a guitar on stage	exists x.exists y.exists z. (Skilled(x) & Man(y) & Guitar(z) & Stage(s) -> Playing(y, z, s))	A person has blonde and flyaway hair and is playing a guitar	exists x. (Person(x) & BlondeHair(x) & FlyawayHair(x) & PlayingGuitar(x))	n	False	False
142	A man is playing a guitar on stage	exists x. exists y. exists z. (Man(x) & Guitar(y) & Stage(z) & PlayingOn(x, y, z))	A person has blonde and flyaway hair and is playing a guitar	exists x. (Person(x) & BlondeHair(x) & FlyawayHair(x) & PlayingGuitar(x))	n	False	False
143	Several children are sitting down and have their knees raised	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Sitting(x) & Sitting(y) & Sitting(z) & KneesRaised(x) & KneesRaised(y) & KneesRaised(z))	Several children are standing up	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & StandingUp(x) & StandingUp(y) & StandingUp(z))	n	False	False
144	Two girls are lying on the ground	exists x. exists y. (Girl(x) & Girl(y) & LyingOnGround(x) & LyingOnGround(y))	Two girls are sitting on the ground	exists x.exists y. (Girl(x) & Girl(y) & SittingOnGround(x) & SittingOnGround(y))	n	False	False
145	Two young girls are sitting on the ground	exists x. exists y. (YoungGirl(x) & YoungGirl(y) & SittingOnGround(x) & SittingOnGround(y))	Several children are sitting down and have their knees raised	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Sitting(x) & Sitting(y) & Sitting(z) & KneesRaised(x) & KneesRaised(y) & KneesRaised(z))	n	False	False
146	Several children are lying down and are raising their knees	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & LyingDown(x) & LyingDown(y) & LyingDown(z) & RaisingKnees(x) & RaisingKnees(y) & RaisingKnees(z))	Two girls are sitting on the ground	exists x.exists y. (Girl(x) & Girl(y) & SittingOnGround(x) & SittingOnGround(y))	n	False	False
147	Several children are standing up	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & StandingUp(x) & StandingUp(y) & StandingUp(z))	Two girls are sitting on the ground	exists x.exists y. (Girl(x) & Girl(y) & SittingOnGround(x) & SittingOnGround(y))	n	False	False
148	Several children are sitting down and have their knees raised	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Sitting(x) & Sitting(y) & Sitting(z) & KneesRaised(x) & KneesRaised(y) & KneesRaised(z))	Two girls are sitting on the ground	exists x.exists y. (Girl(x) & Girl(y) & SittingOnGround(x) & SittingOnGround(y))	n	False	False
149	A nude lady is walking in front of many people in body paint	exists x.exists y. (NudeLady(x) & People(y) -> WalkingInFrontOf(x, y))	A nude lady is walking in front of a crowd in body paint	exists x.exists y. (NudeLady(x) & Crowd(y) -> WalkingInFrontOf(x, y))	e	False	False
150	An old, topless woman is covered in paint	exists x. (Woman(x) & Old(x) & Topless(x) & CoveredInPaint(x))	A nude lady is walking in front of a crowd in body paint	exists x.exists y. (NudeLady(x) & Crowd(y) -> WalkingInFrontOf(x, y))	n	False	False
151	A young, topless woman is covered in paint	exists x. (Young(x) & Topless(x) -> CoveredInPaint(x))	A nude lady is walking in front of many people in body paint	exists x.exists y. (NudeLady(x) & People(y) -> WalkingInFrontOf(x, y))	n	False	False
152	There is no lady walking in body paint in front of a crowd 	not exists x. (Lady(x) & Walking(x) & BodyPaint(x) & InFrontOfCrowd(x))	A young, topless woman is covered in paint	exists x. (Young(x) & Topless(x) -> CoveredInPaint(x))	n	False	False
153	A group of children in uniforms is standing at a gate and there is no one kissing the mother	exists x.exists y.exists z. (GroupOfChildren(x) & Uniforms(y) & Gate(z) -> (StandingAt(x, z) & not KissingMother(x)))	A group of children in uniforms is standing at a gate and one is kissing the mother	exists x.exists y.exists z. (GroupOfChildren(x) & Uniforms(x) & Gate(y) & Mother(z) -> (StandingAt(x, y) & Kissing(x, z)))	c	False	False
154	A crowd of people is near the water	exists x. (Crowd(x) & Near(x, Water))	A group of children wearing the same clothes is waiting at a gate and one is kissing the mother	exists x.exists y.exists z. (Group(x) & Children(y) & Clothes(z) & WearSame(y, z) & WaitingAtGate(x, y) & KissingMother(x, z) -> GroupOfChildren(x))	n	False	False
155	A group of mothers in uniforms is standing near the children and one is kissing the gate	exists x.exists y.exists z. (Mother(x) & Group(y) & Uniform(x) & Child(z) -> (StandingNear(y, z) & KissingGate(x)))	A crowd of people is near the water	exists x. (Crowd(x) & Near(x, Water))	n	False	False
156	A group of people is near the ocean	exists x. (Group(x) & NearOcean(x))	A group of children in uniforms is standing at a gate and one is kissing the mother	exists x.exists y.exists z. (GroupOfChildren(x) & Uniforms(x) & Gate(y) & Mother(z) -> (StandingAt(x, y) & Kissing(x, z)))	n	False	False
157	A crowd of people is far from the water	exists x. (Crowd(x) -> not NearWater(x))	A group of children in uniforms is standing at a gate and one is kissing the mother	exists x.exists y.exists z. (GroupOfChildren(x) & Uniforms(x) & Gate(y) & Mother(z) -> (StandingAt(x, y) & Kissing(x, z)))	n	False	False
158	A crowd of people is near the water	exists x. (Crowd(x) & Near(x, Water))	A group of children in uniforms is standing at a gate and one is kissing the mother	exists x.exists y.exists z. (GroupOfChildren(x) & Uniforms(x) & Gate(y) & Mother(z) -> (StandingAt(x, y) & Kissing(x, z)))	n	False	False
159	A man is in a parking lot and is playing tennis against a large wall	exists x. exists y. exists z. (Man(x) & ParkingLot(y) & Tennis(z) & In(x, y) & PlayingAgainst(x, z) & LargeWall(z))	A lone man is in a parking lot and is playing tennis against a large wall	exists x. (Man(x) & InParkingLot(x) & PlayingTennisAgainstWall(x))	e	False	False
160	A man is pointing at a silver sedan	exists x. exists y. (Man(x) & SilverSedan(y) & PointingAt(x, y))	A man is pointing at a car	exists x. exists y. (Man(x) & Car(y) & PointingAt(x, y))	e	False	False
161	A man is pointing at a silver sedan	exists x. exists y. (Man(x) & SilverSedan(y) & PointingAt(x, y))	There is no man pointing at a car	not exists x. (Man(x) & PointingAt(x, car))	c	False	False
162	A man is pointing at a car	exists x. exists y. (Man(x) & Car(y) & PointingAt(x, y))	A man is in a parking lot and is playing tennis against a large wall	exists x. exists y. exists z. (Man(x) & ParkingLot(y) & Tennis(z) & In(x, y) & PlayingAgainst(x, z) & LargeWall(z))	n	False	False
163	A man is pointing at a silver sedan	exists x. exists y. (Man(x) & SilverSedan(y) & PointingAt(x, y))	A lone man is in a parking lot and is playing tennis against a large wall	exists x. (Man(x) & InParkingLot(x) & PlayingTennisAgainstWall(x))	n	False	False
164	A man is pointing at a silver sedan	exists x. exists y. (Man(x) & SilverSedan(y) & PointingAt(x, y))	A man is in a parking lot and is playing tennis against a large wall	exists x. exists y. exists z. (Man(x) & ParkingLot(y) & Tennis(z) & In(x, y) & PlayingAgainst(x, z) & LargeWall(z))	n	False	False
165	A man, a woman and two girls are walking on the beach	exists x. exists y. exists z. (Man(x) & Woman(y) & Girl(z) & WalkingOnBeach(x, y, z))	A man, a woman and two girls are sitting on the beach	exists x. exists y. exists z. (Man(x) & Woman(y) & Girl(z) & SittingOnBeach(x, y, z))	n	False	False
166	A man, a woman and two girls are sitting on the beach	exists x. exists y. exists z. (Man(x) & Woman(y) & Girl(z) & SittingOnBeach(x, y, z))	A group of people is on a beach	exists x. (Group(x) & People(x) & On(x, beach))	e	False	False
167	A man, a woman and two girls are walking on the beach	exists x. exists y. exists z. (Man(x) & Woman(y) & Girl(z) & WalkingOnBeach(x, y, z))	A group of people is near the sea	exists x. (Group(x) & Near(x, Sea))	e	False	False
168	An Asian woman in a crowd is carrying a black bag	exists x.exists y. (AsianWoman(x) & Crowd(y) -> CarriesBlackBag(x, y))	An Asian woman in in the midst of many people is carrying a black bag	exists x.exists y.exists z. (AsianWoman(x) & Person(y) & BlackBag(z) & InMidstOfMany(x, y) -> Carrying(x, z))	e	False	False
169	An Asian woman in in the midst of many people is carrying a black bag	exists x.exists y.exists z. (AsianWoman(x) & Person(y) & BlackBag(z) & InMidstOfMany(x, y) -> Carrying(x, z))	A girl with a black bag is on a crowded train	exists x. (Girl(x) & HasBlackBag(x) -> OnCrowdedTrain(x))	n	False	False
170	There is no girl with a black bag on a crowded train	not exists x. (Girl(x) & BlackBag(x) & CrowdedTrain(x))	An Asian woman in a crowd is carrying a black bag	exists x.exists y. (AsianWoman(x) & Crowd(y) -> CarriesBlackBag(x, y))	n	False	False
171	An Asian woman in a crowd is carrying a black bag	exists x.exists y. (AsianWoman(x) & Crowd(y) -> CarriesBlackBag(x, y))	A cramped black train is on the bag of a girl	exists x.exists y. (Train(x) & Girl(y) & Black(x) & Cramped(x) -> OnBag(x, y))	n	False	False
172	A girl with a black bag is on a crowded train	exists x. (Girl(x) & HasBlackBag(x) -> OnCrowdedTrain(x))	An Asian woman in a crowd is carrying a black bag	exists x.exists y. (AsianWoman(x) & Crowd(y) -> CarriesBlackBag(x, y))	n	False	False
173	There is no dog chasing another or holding a stick in its mouth	not exists x. (Dog(x) & (exists y. (Dog(y) & Chasing(x, y)) | exists z. (Dog(z) & HoldingStickInMouth(x, z))))	A dog is chasing another and is holding a stick in its mouth	exists x.exists y. (Dog(x) & Dog(y) & Chasing(x, y) & HoldingStick(x))	c	False	True
174	A dog is chasing another and is holding a stick in its mouth	exists x.exists y. (Dog(x) & Dog(y) & Chasing(x, y) & HoldingStick(x))	A dog is chasing a stick and holding another dog in its mouth	exists x.exists y.exists z. (Dog(x) & Dog(y) & Stick(z) & Chasing(x, z) & HoldingInMouth(x, y))	n	False	False
175	There is no dog running and carrying an object in its mouth	not exists x. (Dog(x) & Running(x) & CarryingObject(x))	Two dogs are running and carrying an object in their mouths	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & CarryingObject(x) & CarryingObject(y))	c	False	True
176	Two dogs are running and carrying a toy in their mouths	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & CarryingToy(x) & CarryingToy(y))	A dog is chasing another and is holding a stick in its mouth	exists x.exists y. (Dog(x) & Dog(y) & Chasing(x, y) & HoldingStick(x))	n	False	False
177	There is no dog running and carrying an object in its mouth	not exists x. (Dog(x) & Running(x) & CarryingObject(x))	A dog is chasing another and is holding a stick in its mouth	exists x.exists y. (Dog(x) & Dog(y) & Chasing(x, y) & HoldingStick(x))	c	False	False
178	There is no dog chasing another or holding a stick in its mouth	not exists x. (Dog(x) & (exists y. (Dog(y) & Chasing(x, y)) | exists z. (Dog(z) & HoldingStickInMouth(x, z))))	Two dogs are running and carrying an object in their mouths	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & CarryingObject(x) & CarryingObject(y))	n	False	False
179	A person who plays soccer is kicking a ball into the goal	exists x. (Person(x) & PlaysSoccer(x) -> KicksBallIntoGoal(x))	A soccer player is kicking a ball into the goal	exists x.exists y.exists z. (SoccerPlayer(x) & Ball(y) & Goal(z) -> KicksInto(x, y, z))	e	False	False
180	A soccer player is kicking a ball out of the goal	exists x.exists y.exists z. (SoccerPlayer(x) & Ball(y) & Goal(z) -> KickingOutOf(x, y, z))	A soccer player is kicking a ball into the goal	exists x.exists y.exists z. (SoccerPlayer(x) & Ball(y) & Goal(z) -> KicksInto(x, y, z))	n	False	False
181	A dirty soccer ball is rolling into a goal net	exists x.exists y.exists z. (DirtySoccerBall(x) & GoalNet(y) & Goal(z) -> RollingInto(x, y, z))	A soccer player is kicking a ball into the goal	exists x.exists y.exists z. (SoccerPlayer(x) & Ball(y) & Goal(z) -> KicksInto(x, y, z))	n	False	False
182	A soccer player is kicking a ball into the goal	exists x.exists y.exists z. (SoccerPlayer(x) & Ball(y) & Goal(z) -> KicksInto(x, y, z))	A soccer ball is not rolling into a goal net	exists x. (SoccerBall(x) -> not RollingIntoGoalNet(x))	n	False	False
183	A man is resting on a chair and rubbing his eyes	exists x. exists y. exists z. (Man(x) & Chair(y) & Eyes(z) & RestingOn(x, y) & Rubbing(x, z))	A man is sitting on a chair and rubbing his eyes	exists x. exists y. (Man(x) & Chair(y) & SittingOn(x, y) & RubbingEyes(x))	e	False	False
184	A man is sitting on a chair and rubbing his eyes	exists x. exists y. (Man(x) & Chair(y) & SittingOn(x, y) & RubbingEyes(x))	A tattooed man is on a sofa and is holding a pencil	exists x. (TattooedMan(x) -> (exists y. (Sofa(y) & On(x, y)) & exists z. (Pencil(z) & Holding(x, z))))	n	False	False
185	A brown and white dog is resting in the grass	exists x. (Dog(x) & Brown(x) & White(x) & RestingIn(x, Grass))	A brown and white dog is running through the tall grass	exists x. (Dog(x) & Brown(x) & White(x) & Running(x) & Through(x, tallGrass))	n	False	False
186	A black and tan dog is running through the low and green grass	exists x. (Dog(x) & Black(x) & Tan(x) -> exists y. (LowGrass(y) & GreenGrass(y) & RunningThrough(x, y)))	A white and tan dog is running through the tall and green grass	exists x. (Dog(x) & White(x) & Tan(x) -> exists y. (TallGrass(y) & Green(y) & RunningThrough(x, y)))	n	False	False
187	A white and tan dog is running through a field	exists x. (Dog(x) & White(x) & Tan(x) -> exists y. (Field(y) & RunningThrough(x, y)))	A brown and white dog is running through the tall grass	exists x. (Dog(x) & Brown(x) & White(x) & Running(x) & Through(x, tallGrass))	n	False	False
188	A brown and white dog is moving through the wild grass	exists x. (Dog(x) & Brown(x) & White(x) -> MovingThroughWildGrass(x))	A white and tan dog is running through the tall and green grass	exists x. (Dog(x) & White(x) & Tan(x) -> exists y. (TallGrass(y) & Green(y) & RunningThrough(x, y)))	n	False	False
189	A white and tan dog is running through the tall and green grass	exists x. (Dog(x) & White(x) & Tan(x) -> exists y. (TallGrass(y) & Green(y) & RunningThrough(x, y)))	A brown and white dog is resting in the grass	exists x. (Dog(x) & Brown(x) & White(x) & RestingIn(x, Grass))	n	False	False
190	There is no man wearing clothes that are covered with paint or is sitting outside in a busy area writing something	not exists x. (Man(x) & WearingClothesCoveredWithPaint(x) & SittingOutsideInBusyArea(x) & WritingSomething(x))	A man is sitting near a bike and is writing a note	exists x. exists y. exists z. (Man(x) & Bike(y) & Note(z) & SittingNear(x, y) & Writing(x, z))	n	False	False
191	A man is sitting near a bike and is writing a note	exists x. exists y. exists z. (Man(x) & Bike(y) & Note(z) & SittingNear(x, y) & Writing(x, z))	A sitting man is busy writing something in an area covered by paint	exists x.exists y.exists z. (SittingMan(x) & Area(y) & Paint(z) -> BusyWritingIn(x, y, z))	n	False	False
192	A man is sitting near a bike and is writing a note	exists x. exists y. exists z. (Man(x) & Bike(y) & Note(z) & SittingNear(x, y) & Writing(x, z))	A man is wearing clothes that are covered with paint and is sitting outside in a busy area writing something	exists x. (Man(x) & WearingClothes(x) & CoveredWithPaint(x) & SittingOutside(x) & InBusyArea(x) & WritingSomething(x))	n	False	False
193	Some people are walking	exists x. (Person(x) & Walking(x))	Some people are standing	exists x. (Person(x) & Standing(x))	n	False	False
194	A group of scouts are hiking through the grass	exists x.exists y. (ScoutGroup(x) & Grass(y) -> HikingThrough(x, y))	People are walking	exists x. (Person(x) -> Walking(x))	e	False	False
195	Some people are standing	exists x. (Person(x) & Standing(x))	A group of scouts are hiking through the grass	exists x.exists y. (ScoutGroup(x) & Grass(y) -> HikingThrough(x, y))	n	False	False
196	A group of explorers are walking through the grass	exists x. exists y. (Explorer(x) & Grass(y) & WalkingThrough(x, y))	Some people are walking	exists x. (Person(x) & Walking(x))	e	False	False
197	Two men are taking a break from a trip on a snowy road	exists x. exists y. (Man(x) & Man(y) & TakingBreak(x, y) & Trip(x, y) & SnowyRoad(x, y))	Two men are taking a break from a trip on a road covered by snow	exists x. exists y. (Man(x) & Man(y) & TakingBreak(x, y) & Trip(x, y) & Road(x, y) & SnowCovered(x, y))	e	False	False
198	Two men are taking a break from a trip on a snowy road	exists x. exists y. (Man(x) & Man(y) & TakingBreak(x, y) & Trip(x, y) & SnowyRoad(x, y))	Two men are walking on a snowy road	exists x. exists y. (Man(x) & Man(y) & WalkingOnSnowyRoad(x, y))	n	False	False
199	Two men are holding bikes and standing on the side of a road covered of snow	exists x. exists y. (Man(x) & Man(y) & HoldingBike(x) & HoldingBike(y) & StandingOnSideOfRoad(x) & StandingOnSideOfRoad(y) & SnowCovered(x) & SnowCovered(y))	Two men with bikes are on the side of a snowy road	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Bike(x) & Bike(y) & Bike(z) & SnowyRoad(x) & SnowyRoad(y) & SnowyRoad(z))	e	False	False
200	Two men are taking a break from a trip on a snowy road	exists x. exists y. (Man(x) & Man(y) & TakingBreak(x, y) & Trip(x, y) & SnowyRoad(x, y))	Two men are holding bikes and standing on the side of a road covered of snow	exists x. exists y. (Man(x) & Man(y) & HoldingBike(x) & HoldingBike(y) & StandingOnSideOfRoad(x) & StandingOnSideOfRoad(y) & SnowCovered(x) & SnowCovered(y))	n	False	False
201	Two men with bikes are on the side of a snowy road	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Bike(x) & Bike(y) & Bike(z) & SnowyRoad(x) & SnowyRoad(y) & SnowyRoad(z))	Two men are taking a break from a trip on a road covered by snow	exists x. exists y. (Man(x) & Man(y) & TakingBreak(x, y) & Trip(x, y) & Road(x, y) & SnowCovered(x, y))	n	False	False
202	Two men with bikes are on the side of a snowy road	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Bike(x) & Bike(y) & Bike(z) & SnowyRoad(x) & SnowyRoad(y) & SnowyRoad(z))	Two men are walking on a snowy road	exists x. exists y. (Man(x) & Man(y) & WalkingOnSnowyRoad(x, y))	n	False	False
203	Two men with bikes are on the side of a snowy road	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Bike(x) & Bike(y) & Bike(z) & SnowyRoad(x) & SnowyRoad(y) & SnowyRoad(z))	Two men are breaking into a car during a trip on a snowy road	exists x. exists y. exists z. (Man(x) & Man(y) & Car(z) & BreakingInto(x, z) & BreakingInto(y, z) & SnowyRoad(z))	n	False	False
204	Two men are standing near the water and are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & StandingNearWater(x) & StandingNearWater(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	Two men are standing near the water and are holding tools used for fishing	exists x. exists y. (Man(x) & Man(y) & StandingNearWater(x) & StandingNearWater(y) & HoldingFishingTools(x) & HoldingFishingTools(y))	e	False	False
205	There is no man standing near the water and holding fishing poles	not exists x. (Man(x) & StandingNearWater(x) & HoldingFishingPoles(x))	Two men are standing near the water and are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & StandingNearWater(x) & StandingNearWater(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	c	False	False
206	Two men are holding some water standing near fishing poles	exists x. exists y. (Man(x) & Man(y) & HoldingWater(x) & HoldingWater(y) & StandingNearFishingPoles(x) & StandingNearFishingPoles(y))	Two men are standing near the water and are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & StandingNearWater(x) & StandingNearWater(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	n	False	False
207	Two men are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	Two men are holding some water standing near fishing poles	exists x. exists y. (Man(x) & Man(y) & HoldingWater(x) & HoldingWater(y) & StandingNearFishingPoles(x) & StandingNearFishingPoles(y))	n	False	False
208	Two men are standing near the water and are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & StandingNearWater(x) & StandingNearWater(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	Two men are holding fishing poles and fishing tackle	exists x. exists y. (Man(x) & Man(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	n	True	False
209	Two men are not holding fishing poles	not (exists x. exists y. (Man(x) & Man(y) & HoldingFishingPole(x) & HoldingFishingPole(y)))	Two men are standing near the water and are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & StandingNearWater(x) & StandingNearWater(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	c	False	True
210	Two men are standing near the water and are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & StandingNearWater(x) & StandingNearWater(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	Two men are holding fishing poles	exists x. exists y. (Man(x) & Man(y) & HoldingFishingPole(x) & HoldingFishingPole(y))	e	True	False
211	The helmeted girl is perching on a bike	exists x.exists y. (HelmetedGirl(x) & Bike(y) -> PerchingOn(x, y))	The girl with a helmet is perching on a bike	exists x. (Girl(x) & WearsHelmet(x) -> PerchesOnBike(x))	e	False	False
212	A woman is jumping with a bicycle	exists x. exists y. (Woman(x) & Bicycle(y) & Jumping(x, y))	The helmeted girl is perching on a bike	exists x.exists y. (HelmetedGirl(x) & Bike(y) -> PerchingOn(x, y))	n	False	False
213	A blond girl is riding the waves	exists x. (Girl(x) & Blond(x) & RidingWaves(x))	A blond girl is looking at the waves	exists x. (Girl(x) & Blond(x) & LookingAtWaves(x))	n	False	False
214	A blond girl is riding the waves	exists x. (Girl(x) & Blond(x) & RidingWaves(x))	A blond girl waves while she is riding	exists x.exists y.exists z. (BlondGirl(x) & Wave(y) & Riding(z) -> WavesWhileRiding(x, y, z))	n	False	False
215	A lady is surfing and riding a wave	exists x. (Lady(x) -> (Surfing(x) & RidingWave(x)))	A woman is surfing	exists x. (Woman(x) & Surfing(x))	e	False	False
216	A boy is surfing and riding a wave	exists x. (Boy(x) & Surfing(x) & RidingWave(x))	A blond girl is riding the waves	exists x. (Girl(x) & Blond(x) & RidingWaves(x))	n	False	False
217	A lady is surfing and riding a wave	exists x. (Lady(x) -> (Surfing(x) & RidingWave(x)))	A blond girl is riding the waves	exists x. (Girl(x) & Blond(x) & RidingWaves(x))	n	False	False
218	Two children and an adult are standing next to a tree limb	exists x. exists y. exists z. (Child(x) & Child(y) & Adult(z) & StandingNextToTreeLimb(x, y, z))	Three people are standing next to a tree limb	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & TreeLimb(x) & StandingNextTo(x, y) & StandingNextTo(x, z) & StandingNextTo(y, z))	e	False	False
219	Two children are hanging on a large branch	exists x. exists y. (Child(x) & Child(y) & LargeBranch(z) & HangingOn(x, z) & HangingOn(y, z))	Two children are climbing a tree	exists x. exists y. (Child(x) & Child(y) & ClimbingTree(x, y))	e	False	False
220	There is no child hanging on a large branch	not exists x. (Child(x) & HangingOnLargeBranch(x))	Two children are hanging on a large branch	exists x. exists y. (Child(x) & Child(y) & LargeBranch(z) & HangingOn(x, z) & HangingOn(y, z))	c	False	False
221	Two children and an adult are standing next to a tree limb	exists x. exists y. exists z. (Child(x) & Child(y) & Adult(z) & StandingNextToTreeLimb(x, y, z))	There is no child hanging on a large branch	not exists x. (Child(x) & HangingOnLargeBranch(x))	n	False	False
222	Three people are standing next to a tree limb	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & TreeLimb(x) & StandingNextTo(x, y) & StandingNextTo(x, z) & StandingNextTo(y, z))	Two children are hanging on a large branch	exists x. exists y. (Child(x) & Child(y) & LargeBranch(z) & HangingOn(x, z) & HangingOn(y, z))	n	False	False
223	Two children are hanging on a large branch	exists x. exists y. (Child(x) & Child(y) & LargeBranch(z) & HangingOn(x, z) & HangingOn(y, z))	Two children and an adult are not standing next to a tree limb	not (exists x. exists y. exists z. (Child(x) & Child(y) & Adult(z) & StandingNextTo(x, y, z, TreeLimb)))	n	False	False
224	There is no man dressed in black and riding a green bike	not exists x. (Man(x) & DressedInBlack(x) & RidingGreenBike(x))	A man dressed in black is riding a bike	exists x. (Man(x) & DressedInBlack(x) -> RidingBike(x))	c	False	False
225	A black man in green is riding a bike	exists x.exists y.exists z. (BlackMan(x) & Green(y) & Bike(z) -> Riding(x, y, z))	A man dressed in black is riding a bike	exists x. (Man(x) & DressedInBlack(x) -> RidingBike(x))	n	False	False
226	A man is performing a trick on a green bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Green(y) & PerformingTrick(x, y))	There is no man performing a trick on a green bicycle	not exists x. (Man(x) & PerformsTrick(x) & On(x, GreenBicycle))	c	False	False
227	A man dressed in black is riding a bike	exists x. (Man(x) & DressedInBlack(x) -> RidingBike(x))	A man is performing stunts on a green bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Green(y) & PerformsStuntsOn(x, y))	n	False	False
228	There is no man performing a trick on a green bicycle	not exists x. (Man(x) & PerformsTrick(x) & On(x, GreenBicycle))	A man dressed in black is riding a bike	exists x. (Man(x) & DressedInBlack(x) -> RidingBike(x))	n	False	False
229	A man is performing a trick on a green bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Green(y) & PerformingTrick(x, y))	A man is performing a trick on a bike	exists x. exists y. (Man(x) & Bike(y) & PerformsTrickOn(x, y))	e	False	False
230	A man is performing a trick on a green bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Green(y) & PerformingTrick(x, y))	A black man in green is riding a bike	exists x.exists y.exists z. (BlackMan(x) & Green(y) & Bike(z) -> Riding(x, y, z))	n	False	False
231	A man is performing a trick on a green bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Green(y) & PerformingTrick(x, y))	A man dressed in black is riding a bike	exists x. (Man(x) & DressedInBlack(x) -> RidingBike(x))	n	False	False
232	There is no child holding a squirt gun	not exists x. (Child(x) & HoldsSquirtGun(x))	A child is holding a squirt gun	exists x. (Child(x) & exists y. (SquirtGun(y) & Holding(x, y)))	c	False	False
233	A child is holding a squirt gun	exists x. (Child(x) & exists y. (SquirtGun(y) & Holding(x, y)))	There is no child holding a water gun or getting sprayed with water	not exists x. (Child(x) & (HoldsWaterGun(x) | GetsSprayedWithWater(x)))	c	False	False
234	A boy is holding a squirt gun	exists x. (Boy(x) & exists y. (SquirtGun(y) & Holding(x, y)))	A laughing child is holding a water gun and getting sprayed with water	exists x. (LaughingChild(x) -> (HoldingWaterGun(x) & GettingSprayedWithWater(x)))	n	False	False
235	There is no child holding a squirt gun	not exists x. (Child(x) & HoldsSquirtGun(x))	A laughing child is holding a water gun and getting sprayed with water	exists x. (LaughingChild(x) -> (HoldingWaterGun(x) & GettingSprayedWithWater(x)))	c	False	False
236	A laughing child is holding a water gun and getting sprayed with water	exists x. (LaughingChild(x) -> (HoldingWaterGun(x) & GettingSprayedWithWater(x)))	A child is holding a squirt gun	exists x. (Child(x) & exists y. (SquirtGun(y) & Holding(x, y)))	e	False	False
237	Two brown dogs are fighting over a red ball and are playing in the grass	exists x. exists y. exists z. (Dog(x) & Dog(y) & RedBall(z) & FightingOver(x, y, z) & PlayingInGrass(x, y, z))	There is no dog playing with a red ball	not exists x. (Dog(x) & PlayingWithRedBall(x))	n	False	False
238	Two cats are playing with a red ball	exists x.exists y.exists z. (Cat(x) & Cat(y) & RedBall(z) & PlayingWith(x, y, z))	Two brown dogs are fighting over a red ball and are playing in the grass	exists x. exists y. exists z. (Dog(x) & Dog(y) & RedBall(z) & FightingOver(x, y, z) & PlayingInGrass(x, y, z))	n	False	False
239	Two daschunds are playing with a red ball	exists x. exists y. exists z. (Daschund(x) & Daschund(y) & RedBall(z) & PlayingWith(x, y, z))	Two brown dogs are fighting over a red toy and are playing in the grass	exists x. exists y. exists z. (Dog(x) & Dog(y) & RedToy(z) & FightingOver(x, y, z) & PlayingInGrass(x, y))	n	False	False
240	Two daschunds are playing with a red ball	exists x. exists y. exists z. (Daschund(x) & Daschund(y) & RedBall(z) & PlayingWith(x, y, z))	Two brown dogs are fighting over a red ball and are playing in the grass	exists x. exists y. exists z. (Dog(x) & Dog(y) & RedBall(z) & FightingOver(x, y, z) & PlayingInGrass(x, y, z))	n	False	False
241	The black and white dog is running and a person stands behind it	exists x.exists y. (Dog(x) & Person(y) & Black(x) & White(x) -> (Running(x) & StandingBehind(y, x)))	The black and white dog isn't running and there is no person standing behind	not (exists x. (BlackDog(x) & WhiteDog(x) & Running(x))) & not exists y. (Person(y) & Behind(y))	c	False	False
242	A black person is running along a white stand and a dog barks behind him	exists x.exists y.exists z. (BlackPerson(x) & WhiteStand(y) & Dog(z) -> (RunsAlong(x, y) & BarksBehind(z, x)))	The black and white dog is running and a person stands behind it	exists x.exists y. (Dog(x) & Person(y) & Black(x) & White(x) -> (Running(x) & StandingBehind(y, x)))	n	False	False
243	The dog, which is black and white, is running and a person stands behind it	exists x. (Dog(x) & Black(x) & White(x) -> (Running(x) & exists y. (Person(y) & StandingBehind(y, x))))	A little dog is sprinting and its owner is trying to catch it	exists x.exists y. (LittleDog(x) & Owner(y, x) -> (Sprinting(x) & TryingToCatch(y, x)))	n	False	False
244	The black and white dog is running and a person stands behind it	exists x.exists y. (Dog(x) & Person(y) & Black(x) & White(x) -> (Running(x) & StandingBehind(y, x)))	A little dog is sprinting and its owner is trying to catch it	exists x.exists y. (LittleDog(x) & Owner(y, x) -> (Sprinting(x) & TryingToCatch(y, x)))	n	False	False
245	A man is sitting comfortably at a table	exists x. exists y. (Man(x) & Table(y) & SittingComfortablyAt(x, y))	A person is sitting comfortably at the table	exists x. (Person(x) & SittingComfortablyAtTable(x))	e	False	False
246	A man isn't sitting comfortably at the table	not exists x. (Man(x) & SittingComfortablyAtTable(x))	A man is sitting comfortably at a table	exists x. exists y. (Man(x) & Table(y) & SittingComfortablyAt(x, y))	c	False	False
247	A man is sitting and tables a comfortable discussion	exists x. (Man(x) & Sitting(x) & TablesComfortableDiscussion(x))	A man is sitting comfortably at a table	exists x. exists y. (Man(x) & Table(y) & SittingComfortablyAt(x, y))	n	False	False
248	A man is sitting comfortably at a table	exists x. exists y. (Man(x) & Table(y) & SittingComfortablyAt(x, y))	There is no man wearing a shirt dyed black, sitting at the table and laughing	not exists x. (Man(x) & WearingShirt(x, Black) & SittingAtTable(x) & Laughing(x))	n	False	False
249	A man is sitting comfortably at a table	exists x. exists y. (Man(x) & Table(y) & SittingComfortablyAt(x, y))	A laughing man is dyeing a shirt black on the table which you cannot sit at 	exists x.exists y.exists z. (LaughingMan(x) & Shirt(y) & Table(z) & Dyeing(x, y, z) -> not CanSitAt(z))	n	False	False
250	A man wearing a dyed black shirt is sitting at the table and laughing	exists x. (Man(x) & WearsDyedBlackShirt(x) -> (SittingAtTable(x) & Laughing(x)))	A person is sitting comfortably at the table	exists x. (Person(x) & SittingComfortablyAtTable(x))	n	False	False
251	A man wearing a dyed black shirt is sitting at the table and laughing	exists x. (Man(x) & WearsDyedBlackShirt(x) -> (SittingAtTable(x) & Laughing(x)))	A man isn't sitting comfortably at the table	not exists x. (Man(x) & SittingComfortablyAtTable(x))	n	False	False
252	A woman who is wearing a pink boa is riding a bicycle down a bridge built for pedestrians	exists x. (Woman(x) & WearingPinkBoa(x) -> RidingBicycleOnPedestrianBridge(x))	A pedestrian woman is building pink bicycles for boa wearing riders	exists x.exists y.exists z. (Pedestrian(x) & Woman(x) & PinkBicycle(y) & BoaWearingRider(z) -> BuildsFor(x, y, z))	n	False	False
253	The woman wearing silver pants, pink bellbottoms and a pink scarf is happily riding a bike	exists x. (Woman(x) & WearsSilverPants(x) & WearsPinkBellbottoms(x) & WearsPinkScarf(x) -> HappilyRidingBike(x))	The woman wearing silver pants, pink bellbottoms and a pink scarf is riding a bike	exists x. (Woman(x) & WearingSilverPants(x) & WearingPinkBellbottoms(x) & WearingPinkScarf(x) -> RidingBike(x))	e	False	False
254	The woman wearing silver pants, pink bellbottoms and a pink scarf isn't riding a bike	not exists x. (Woman(x) & WearingSilverPants(x) & WearingPinkBellbottoms(x) & WearingPinkScarf(x) & RidingBike(x))	The woman wearing silver pants, pink bellbottoms and a pink scarf is riding a bike	exists x. (Woman(x) & WearingSilverPants(x) & WearingPinkBellbottoms(x) & WearingPinkScarf(x) -> RidingBike(x))	c	False	False
255	The woman wearing silver pants, pink bellbottoms and a pink scarf is happily riding a bike	exists x. (Woman(x) & WearsSilverPants(x) & WearsPinkBellbottoms(x) & WearsPinkScarf(x) -> HappilyRidingBike(x))	A woman who is wearing a pink boa is riding a bicycle down a bridge built for pedestrians	exists x. (Woman(x) & WearingPinkBoa(x) -> RidingBicycleOnPedestrianBridge(x))	n	False	False
256	A woman who is wearing a pink boa is riding a bicycle down a bridge built for pedestrians	exists x. (Woman(x) & WearingPinkBoa(x) -> RidingBicycleOnPedestrianBridge(x))	Pink bellbottoms and a pink scarf aren't to be worn by women with silver pants or bike riding people	exists x. exists y. (PinkBellbottoms(x) & PinkScarf(y) -> not (Woman(x) & SilverPants(x) & BikeRiding(x)))	n	False	False
257	The woman wearing silver pants, pink bellbottoms and a pink scarf is riding a bike	exists x. (Woman(x) & WearingSilverPants(x) & WearingPinkBellbottoms(x) & WearingPinkScarf(x) -> RidingBike(x))	A woman who is taking off a pink boa is stopping her bicycle on a bridge built for pedestrians	exists x.exists y.exists z. (Woman(x) & PinkBoa(y) & Bridge(z) & TakingOff(x, y) & On(x, z) -> StopsBicycle(x))	n	False	False
258	There is no man wearing a black helmet and pushing a bicycle	not exists x. (Man(x) & WearingBlackHelmet(x) & PushingBicycle(x))	One man is wearing a black helmet and pushing a bicycle	exists x. (Man(x) & WearingBlackHelmet(x) & PushingBicycle(x))	c	False	True
259	One man is wearing a black helmet and pushing a bicycle	exists x. (Man(x) & WearingBlackHelmet(x) & PushingBicycle(x))	A man is pushing a helmet towards another one on a black bicycle	exists x.exists y.exists z. (Man(x) & Helmet(y) & Bicycle(z) & Pushing(x, y, z) -> Black(z))	n	False	False
260	A black helmet is being worn by a man who is pushing a bicycle	exists x.exists y.exists z. (BlackHelmet(x) & Man(y) & Bicycle(z) -> Wearing(y, x) & Pushing(y, z))	A biker is wearing gear which is black	exists x. (Biker(x) -> WearingBlackGear(x))	n	False	False
261	A man is pushing a helmet towards another one on a black bicycle	exists x.exists y.exists z. (Man(x) & Helmet(y) & Bicycle(z) & Pushing(x, y, z) -> Black(z))	A biker is wearing gear which is black	exists x. (Biker(x) -> WearingBlackGear(x))	n	False	False
262	A person, who is riding a bike, is wearing gear which is black	exists x. (Person(x) & RidingBike(x) -> WearingBlackGear(x))	One man is wearing a black helmet and pushing a bicycle	exists x. (Man(x) & WearingBlackHelmet(x) & PushingBicycle(x))	n	False	False
263	One man is wearing a black helmet and pushing a bicycle	exists x. (Man(x) & WearingBlackHelmet(x) & PushingBicycle(x))	A biker wearing black is breaking the gears	exists x. (Biker(x) & WearingBlack(x) -> BreakingGears(x))	n	False	False
264	A biker is wearing gear which is black	exists x. (Biker(x) -> WearingBlackGear(x))	One man is wearing a black helmet and pushing a bicycle	exists x. (Man(x) & WearingBlackHelmet(x) & PushingBicycle(x))	n	False	False
265	The man in a grey t-shirt is sitting on a rock in front of the waterfall	exists x. (Man(x) & WearingGreyTShirt(x) & SittingOnRock(x) & InFrontOfWaterfall(x))	A rocker is sitting with a t-shirt that has a man over a grey waterfall on the front	exists x.exists y.exists z. (Rocker(x) & TShirt(y) & Man(z) & GreyWaterfall(w) -> SittingWith(x, y, z, w))	n	False	False
266	One woman is sitting and looks at the waterfall	exists x. (Woman(x) & Sitting(x) & LooksAtWaterfall(x))	A woman is sitting and looking at the waterfall	exists x. (Woman(x) & Sitting(x) & LookingAtWaterfall(x))	e	False	False
267	A woman is sitting and looking at the waterfall	exists x. (Woman(x) & Sitting(x) & LookingAtWaterfall(x))	Somebody is sitting at the waterfall and looking at a woman	exists x.exists y.exists z. (SittingAtWaterfall(x) & Woman(y) & Waterfall(z) & SittingAt(x, z) & LookingAt(x, y))	n	False	False
268	The man in a grey t-shirt is sitting on a rock in front of the waterfall	exists x. (Man(x) & WearingGreyTShirt(x) & SittingOnRock(x) & InFrontOfWaterfall(x))	One woman is sitting and looks at the waterfall	exists x. (Woman(x) & Sitting(x) & LooksAtWaterfall(x))	n	False	False
269	The man in a grey t-shirt is sitting on a rock in front of the waterfall	exists x. (Man(x) & WearingGreyTShirt(x) & SittingOnRock(x) & InFrontOfWaterfall(x))	Somebody is sitting at the waterfall and looking at a woman	exists x.exists y.exists z. (SittingAtWaterfall(x) & Woman(y) & Waterfall(z) & SittingAt(x, z) & LookingAt(x, y))	n	False	False
270	A woman is sitting and looking at the waterfall	exists x. (Woman(x) & Sitting(x) & LookingAtWaterfall(x))	The man in a grey t-shirt is sitting on a rock in front of the waterfall	exists x. (Man(x) & WearingGreyTShirt(x) & SittingOnRock(x) & InFrontOfWaterfall(x))	n	False	False
271	A dog, which is brown, and a black one are racing in the grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) -> RacesInGrass(x, y))	A dog, which is brown, and a black one are running in the grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) -> RunInGrass(x, y))	e	False	False
272	A dark black dog and a light brown dog are playing in the backyard	exists x. exists y. (Dog(x) & Dog(y) & DarkBlack(x) & LightBrown(y) & PlayingInBackyard(x, y))	A dark black dog and a light brown dog are fighting in the backyard	exists x. exists y. (Dog(x) & Dog(y) & DarkBlack(x) & LightBrown(y) & FightingInBackyard(x, y))	n	False	False
273	The backyard light is playing tricks in the dark on the brown and black dog	exists x.exists y.exists z. (BackyardLight(x) & Dog(y) & Dog(z) & Brown(y) & Black(z) -> PlaysTricksInDark(x, y, z))	A dark black dog and a light brown dog are playing in the backyard	exists x. exists y. (Dog(x) & Dog(y) & DarkBlack(x) & LightBrown(y) & PlayingInBackyard(x, y))	n	False	False
274	The backyard light is playing tricks in the dark on the brown and black dog	exists x.exists y.exists z. (BackyardLight(x) & Dog(y) & Dog(z) & Brown(y) & Black(z) -> PlaysTricksInDark(x, y, z))	A dog, which is brown, and a black one are running in the grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) -> RunInGrass(x, y))	n	False	False
275	A dog, which is brown, and a black one are racing in the grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) -> RacesInGrass(x, y))	A dark black dog and a light brown dog are playing in the backyard	exists x. exists y. (Dog(x) & Dog(y) & DarkBlack(x) & LightBrown(y) & PlayingInBackyard(x, y))	n	False	False
276	A dog, which is brown, and a black one are running in the grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) -> RunInGrass(x, y))	A dark black dog and a light brown dog are playing in the backyard	exists x. exists y. (Dog(x) & Dog(y) & DarkBlack(x) & LightBrown(y) & PlayingInBackyard(x, y))	n	False	False
277	A dog that has a brown and white coat is trotting through shallow water	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> TrottingThroughShallowWater(x))	A dog that has a white and brown colored coat is trotting through shallow water.	exists x. (Dog(x) & WhiteCoat(x) & BrownCoat(x) -> TrottingThroughShallowWater(x))	e	True	False
278	A dog that has a brown and white coat is trotting through shallow water	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> TrottingThroughShallowWater(x))	A brown and white coat is floating across shallow water near a trotting dog	exists x.exists y.exists z. (Coat(x) & BrownAndWhite(x) & ShallowWater(y) & TrottingDog(z) -> FloatsAcross(x, y, z))	n	False	False
279	A white and brown dog is walking through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) & WalkingThroughWater(x))	There is no white and brown dog pacing with through the water difficulty	exists x. (Dog(x) & White(x) & Brown(x) & Pacing(x) & ThroughWaterDifficulty(x))	c	False	False
280	A white man is walking a dog through brown water with difficulty	exists x. exists y. exists z. (WhiteMan(x) & Dog(y) & BrownWater(z) & Walking(x, y, z) & Difficulty(x, z))	A white and brown dog is walking through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) & WalkingThroughWater(x))	n	False	False
281	A white and brown dog is pacing through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) -> PacingThroughWaterWithDifficulty(x))	A dog that has a brown and white coat is trotting through shallow water	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> TrottingThroughShallowWater(x))	n	False	False
282	A dog that has a brown and white coat is trotting through shallow water	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> TrottingThroughShallowWater(x))	There is no white and brown dog pacing with through the water difficulty	exists x. (Dog(x) & White(x) & Brown(x) & Pacing(x) & ThroughWaterDifficulty(x))	n	False	False
283	A white man is walking a dog through brown water with difficulty	exists x. exists y. exists z. (WhiteMan(x) & Dog(y) & BrownWater(z) & Walking(x, y, z) & Difficulty(x, z))	A dog that has a brown and white coat is trotting through shallow water	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> TrottingThroughShallowWater(x))	n	False	False
284	A dog that has a white and brown colored coat is trotting through shallow water.	exists x. (Dog(x) & WhiteCoat(x) & BrownCoat(x) -> TrottingThroughShallowWater(x))	A white and brown dog is walking through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) & WalkingThroughWater(x))	n	False	False
285	A dog that has a brown and white coat is sitting in shallow water	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> SittingInShallowWater(x))	A white and brown dog is walking through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) & WalkingThroughWater(x))	n	False	False
286	A white and brown dog is walking through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) & WalkingThroughWater(x))	A brown and white coat is floating across shallow water near a trotting dog	exists x.exists y.exists z. (Coat(x) & BrownAndWhite(x) & ShallowWater(y) & TrottingDog(z) -> FloatsAcross(x, y, z))	n	False	False
287	A white and brown dog is walking through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) & WalkingThroughWater(x))	A dog that has a brown and white coat is trotting through shallow water	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> TrottingThroughShallowWater(x))	n	False	False
288	A group of boys are playing with a ball in front of a large door made of wood	exists x.exists y.exists z. (Group(x) & Boy(y) & Ball(z) & PlayingWith(y, z) & InFrontOf(y, z, x) & LargeDoor(x) & MadeOfWood(x))	A ball made of wood is being played through a door in front of a large group of boys 	exists x.exists y.exists z. (Ball(x) & Wood(x) & Door(y) & FrontOf(x, y) & LargeGroupOfBoys(z) -> PlayedThrough(x, z))	n	False	False
289	The children are playing in front of a door, which is very large	exists x.exists y. (Child(x) & Door(y) -> (PlayingInFrontOf(x, y) & VeryLarge(y)))	The children are playing in front of a large door	exists x.exists y. (Child(x) & Door(y) -> PlayingInFrontOf(x, y))	e	True	False
290	The children aren't playing in front of a large door	not exists x. (Child(x) & PlayingInFrontOf(x, LargeDoor))	The children are playing in front of a large door	exists x.exists y. (Child(x) & Door(y) -> PlayingInFrontOf(x, y))	c	False	False
291	A group of boys are playing with a ball in front of a large door made of wood	exists x.exists y.exists z. (Group(x) & Boy(y) & Ball(z) & PlayingWith(y, z) & InFrontOf(y, z, x) & LargeDoor(x) & MadeOfWood(x))	The children are playing in front of a door, which is very large	exists x.exists y. (Child(x) & Door(y) -> (PlayingInFrontOf(x, y) & VeryLarge(y)))	e	False	False
292	The children are playing in front of a large door	exists x.exists y. (Child(x) & Door(y) -> PlayingInFrontOf(x, y))	A ball made of wood is being played through a door in front of a large group of boys 	exists x.exists y.exists z. (Ball(x) & Wood(x) & Door(y) & FrontOf(x, y) & LargeGroupOfBoys(z) -> PlayedThrough(x, z))	n	False	False
293	A group of boys are playing with a ball in front of a large door made of wood	exists x.exists y.exists z. (Group(x) & Boy(y) & Ball(z) & PlayingWith(y, z) & InFrontOf(y, z, x) & LargeDoor(x) & MadeOfWood(x))	The children are playing in front of a large door	exists x.exists y. (Child(x) & Door(y) -> PlayingInFrontOf(x, y))	e	False	False
294	A woman is taking off a cloak, which is very large, and revealing an extravagant dress	exists x.exists y. (Woman(x) & Cloak(y) & VeryLarge(y) -> (TakesOff(x, y) & RevealsExtravagantDress(x)))	A woman is taking off a cloak, which is very large, and revealing extravagant apparel	exists x.exists y. (Woman(x) & Cloak(y) & VeryLarge(y) -> TakesOffAndRevealsExtravagantApparel(x, y))	e	False	False
295	A black, red, white and pink dress is being worn by a woman	exists x. (Dress(x) & Black(x) & Red(x) & White(x) & Pink(x) & WornBy(x, Woman))	A dress, which is black, red, white and pink is being worn by a woman	exists x. (Dress(x) & Black(x) & Red(x) & White(x) & Pink(x) -> WornBy(x, Woman))	e	True	False
296	There is no black, red, white and pink dress being worn by a woman	not exists x. (Dress(x) & Black(x) & Red(x) & White(x) & Pink(x) & Woman(x))	A woman is taking off a cloak, which is very large, and revealing an extravagant dress	exists x.exists y. (Woman(x) & Cloak(y) & VeryLarge(y) -> (TakesOff(x, y) & RevealsExtravagantDress(x)))	n	False	False
297	A teenage girl is wearing beads that are red	exists x. (TeenageGirl(x) & Wearing(x, redBeads))	The girl likes red and isn't wearing beads for teenagers	LikesRed(girl) & not WearingBeads(girl)	n	False	False
298	A teenage girl is wearing beads that are red	exists x. (TeenageGirl(x) & Wearing(x, redBeads))	There is no young lady with light brown hair wearing a red necklace, a sweatshirt and earrings and smiling	not exists x. (YoungLady(x) & LightBrownHair(x) & WearingRedNecklace(x) & WearingSweatshirt(x) & WearingEarrings(x) & Smiling(x))	n	False	False
299	A teenage girl is wearing beads that are red	exists x. (TeenageGirl(x) & Wearing(x, redBeads))	A red sweatshirt with a smiling lady upon it is suited to be worn with light brown hair, earrings and a necklace 	exists x.exists y.exists z.exists w. (RedSweatshirt(x) & Lady(y) & LightBrownHair(z) & Earrings(w) & Smiling(y) -> SuitedToWearWith(x, y, z, w))	n	False	False
300	A teenage girl is storing away beads that are red	exists x. (TeenageGirl(x) -> StoresAwayBeads(x, red))	A young lady with light brown hair is wearing a red necklace, a sweatshirt and earrings and is smiling	exists x. (YoungLady(x) & LightBrownHair(x) -> (WearingRedNecklace(x) & WearingSweatshirt(x) & WearingEarrings(x) & Smiling(x)))	n	False	False
301	A young lady with light brown hair is wearing a red necklace, a sweatshirt and earrings and is smiling	exists x. (YoungLady(x) & LightBrownHair(x) -> (WearingRedNecklace(x) & WearingSweatshirt(x) & WearingEarrings(x) & Smiling(x)))	A teenage girl is wearing beads that are red	exists x. (TeenageGirl(x) & Wearing(x, redBeads))	e	False	False
302	A boy is climbing up a wall artificially built for climbing and is attached to a rope	exists x.exists y.exists z. (Boy(x) & Wall(y) & Rope(z) & ClimbsUp(x, y) & AttachedTo(x, z) -> ArtificialClimbing(x, y))	A boy is effortlessly climbing up a wall artificially built for climbing and is attached to a rope	exists x.exists y.exists z. (Boy(x) & Wall(y) & Rope(z) & EffortlesslyClimbs(x, y) & AttachedTo(x, z) -> ClimbingArtificiallyBuiltWall(x, y))	e	False	False
303	A boy is climbing up a wall artificially built for climbing and is attached to a rope	exists x.exists y.exists z. (Boy(x) & Wall(y) & Rope(z) & ClimbsUp(x, y) & AttachedTo(x, z) -> ArtificialClimbing(x, y))	A boy is coming down a wall artificially built for climbing and isn't attached to the rope	exists x. (Boy(x) & ComingDownWall(x) & ArtificiallyBuiltForClimbing(x) & not AttachedToRope(x) -> ClimbingWithoutRope(x))	c	False	False
304	A boy is climbing up a wall artificially built for climbing and is attached to a rope	exists x.exists y.exists z. (Boy(x) & Wall(y) & Rope(z) & ClimbsUp(x, y) & AttachedTo(x, z) -> ArtificialClimbing(x, y))	A climber on the wall is attached to the climbing boy with an artificially built rope	exists x.exists y.exists z. (Climber(x) & Wall(y) & ClimbingBoy(z) & AttachedWithRope(x, y, z) -> ArtificiallyBuilt(z))	n	False	False
305	A fearful little boy is on a climbing wall	exists x. (LittleBoy(x) & Fearful(x) & OnClimbingWall(x))	A little boy, who looks fearful, is on a climbing wall.	exists x. (LittleBoy(x) & LooksFearful(x) -> OnClimbingWall(x))	e	True	False
306	A climbing boy rescues the fearful cat from over the wall	exists x.exists y. (ClimbingBoy(x) & FearfulCat(y) -> RescuesFromOverWall(x, y))	A fearful little boy is on a climbing wall	exists x. (LittleBoy(x) & Fearful(x) & OnClimbingWall(x))	n	False	False
307	A boy is climbing up a wall artificially built for climbing and is attached to a rope	exists x.exists y.exists z. (Boy(x) & Wall(y) & Rope(z) & ClimbsUp(x, y) & AttachedTo(x, z) -> ArtificialClimbing(x, y))	A fearful little boy is on the ground	exists x. (LittleBoy(x) & Fearful(x) & OnGround(x))	n	False	False
308	A boy is coming down a wall artificially built for climbing and isn't attached to the rope	exists x. (Boy(x) & ComingDownWall(x) & ArtificiallyBuiltForClimbing(x) & not AttachedToRope(x) -> ClimbingWithoutRope(x))	A fearful little boy is on a climbing wall	exists x. (LittleBoy(x) & Fearful(x) & OnClimbingWall(x))	n	False	False
309	A climber on the wall is attached to the climbing boy with an artificially built rope	exists x.exists y.exists z. (Climber(x) & Wall(y) & ClimbingBoy(z) & AttachedWithRope(x, y, z) -> ArtificiallyBuilt(z))	A fearful little boy is on a climbing wall	exists x. (LittleBoy(x) & Fearful(x) & OnClimbingWall(x))	n	False	False
310	A father is launching the daughter in a swimming pool	exists x.exists y. (Father(x) & Daughter(y) -> LaunchingInSwimmingPool(x, y))	A father is taking away his daughter from a swimming pool	exists x.exists y. (Father(x) & Daughter(y) & SwimmingPool(z) -> TakingAwayFrom(x, y, z))	n	False	False
311	A man isn't tossing a kid into the swimming pool that is near the ocean	not exists x. (Man(x) & Tossing(x, y) & Kid(y) & Near(y, ocean) & Near(y, swimmingPool))	A father is launching the daughter in a swimming pool	exists x.exists y. (Father(x) & Daughter(y) -> LaunchingInSwimmingPool(x, y))	n	False	False
312	A dad is launching his daughter into a swimming pool	exists x.exists y. (Dad(x) & Daughter(y) -> LaunchesIntoSwimmingPool(x, y))	The man is tossing a kid into the swimming pool that is near the ocean	exists x. exists y. exists z. (Man(x) & Kid(y) & SwimmingPool(z) & TossesInto(x, y, z) & NearOcean(z))	n	False	False
313	A father is taking away his daughter from a swimming pool	exists x.exists y. (Father(x) & Daughter(y) & SwimmingPool(z) -> TakingAwayFrom(x, y, z))	The man is tossing a kid into the swimming pool that is near the ocean	exists x. exists y. exists z. (Man(x) & Kid(y) & SwimmingPool(z) & TossesInto(x, y, z) & NearOcean(z))	n	False	False
314	One man is descending a cliff with a rope	exists x. (Man(x) & DescendingCliff(x))	One man is climbing a cliff with a rope	exists x. exists y. exists z. (Man(x) & Cliff(y) & Rope(z) & Climbing(x, y, z))	n	False	False
315	A person is climbing a rock with a rope, which is pink	exists x.exists y.exists z. (Person(x) & Rock(y) & Rope(z) & Climbing(x, y, z) -> (Pink(y)))	A rock is being climbed by a person with a rope, which is pink	exists x.exists y.exists z. (Rock(x) & Person(y) & Rope(z) & Climbs(y, x) & Uses(y, z) -> Pink(z))	e	False	False
316	A person is climbing a rock with a rope, which is pink	exists x.exists y.exists z. (Person(x) & Rock(y) & Rope(z) & Climbing(x, y, z) -> (Pink(y)))	A person with pink climbing gear roped the rock	exists x. (Person(x) & PinkClimbingGear(x) -> RopeRock(x))	n	False	False
317	The young boy is climbing the wall made of rock	exists x. exists y. (YoungBoy(x) & Wall(y) & MadeOfRock(y) -> Climbing(x, y))	One young boy is climbing a wall made of rock	exists x. exists y. (YoungBoy(x) & Wall(y) & MadeOfRock(y) & Climbing(x, y))	e	False	False
318	A young climber is making a rock wall for the boys	exists x. (YoungClimber(x) & MakingRockWall(x))	The young boy is climbing the wall made of rock	exists x. exists y. (YoungBoy(x) & Wall(y) & MadeOfRock(y) -> Climbing(x, y))	n	False	False
319	A young child is climbing a rock climbing wall which is indoors	exists x.exists y. (YoungChild(x) & RockClimbingWall(y) -> Climbing(x, y))	A young child is under a rock climbing wall which is indoors	exists x.exists y. (YoungChild(x) & RockClimbingWall(y) -> Under(x, y))	n	False	False
320	The young boy is climbing the wall made of rock	exists x. exists y. (YoungBoy(x) & Wall(y) & MadeOfRock(y) -> Climbing(x, y))	A young kid is climbing a rock climbing wall which is indoors	exists x.exists y. (YoungKid(x) & RockClimbingWall(y) -> Climbing(x, y))	n	False	False
321	A young child is under a rock climbing wall which is indoors	exists x.exists y. (YoungChild(x) & RockClimbingWall(y) -> Under(x, y))	The young boy is climbing the wall made of rock	exists x. exists y. (YoungBoy(x) & Wall(y) & MadeOfRock(y) -> Climbing(x, y))	n	False	False
322	A young boy isn't climbing a wall made of rock	not exists x. (YoungBoy(x) & Climbing(x, y) & Wall(y) & MadeOfRock(y))	A young child is climbing a rock climbing wall which is indoors	exists x.exists y. (YoungChild(x) & RockClimbingWall(y) -> Climbing(x, y))	n	False	False
323	A young child is climbing a rock climbing wall which is indoors	exists x.exists y. (YoungChild(x) & RockClimbingWall(y) -> Climbing(x, y))	The young boy is climbing the wall made of rock	exists x. exists y. (YoungBoy(x) & Wall(y) & MadeOfRock(y) -> Climbing(x, y))	n	False	False
324	One man is doing a trick with a bicycle in midair	exists x. exists y. exists z. (Man(x) & Bicycle(y) & Midair(z) & DoingTrick(x, y, z))	One man is doing a bicycle trick in midair	exists x. (Man(x) & BicycleTrick(x) & InMidair(x))	e	False	False
325	One man is doing a bicycle trick in midair	exists x. (Man(x) & BicycleTrick(x) & InMidair(x))	A man is failing to perform a bicycle trick in midair	exists x. (Man(x) & BicycleTrick(x) & InMidair(x) -> not Performing(x))	n	False	False
326	A cyclist is fearlessly performing a trick in the air	exists x.exists y. (Cyclist(x) & Trick(y) & PerformsInAir(x, y) -> Fearless(x))	The cyclist is performing a trick in the air	exists x.exists y. (Cyclist(x) & Trick(y) -> PerformsInAir(x, y))	e	False	False
327	The air is tricking a performing cyclist	exists x.exists y. (Air(x) & Cyclist(y) & Performing(y) -> Tricks(x, y))	The cyclist is performing a trick in the air	exists x.exists y. (Cyclist(x) & Trick(y) -> PerformsInAir(x, y))	n	False	False
328	One man is doing a bicycle trick in midair	exists x. (Man(x) & BicycleTrick(x) & InMidair(x))	A cyclist is fearlessly performing a trick in the air	exists x.exists y. (Cyclist(x) & Trick(y) & PerformsInAir(x, y) -> Fearless(x))	n	False	False
329	One man is doing a trick with a bicycle in midair	exists x. exists y. exists z. (Man(x) & Bicycle(y) & Midair(z) & DoingTrick(x, y, z))	The cyclist is performing a trick in the air	exists x.exists y. (Cyclist(x) & Trick(y) -> PerformsInAir(x, y))	e	False	False
330	A man is failing to perform a bicycle trick in midair	exists x. (Man(x) & BicycleTrick(x) & InMidair(x) -> not Performing(x))	The cyclist is performing a trick in the air	exists x.exists y. (Cyclist(x) & Trick(y) -> PerformsInAir(x, y))	c	False	False
331	One man is doing a bicycle trick in midair	exists x. (Man(x) & BicycleTrick(x) & InMidair(x))	The cyclist is performing a trick in the air	exists x.exists y. (Cyclist(x) & Trick(y) -> PerformsInAir(x, y))	e	False	False
332	A dog, which is black, and a white one are ignoring each other in the street	exists x.exists y. (Dog(x) & Dog(y) & Black(x) & White(y) -> Ignoring(x, y))	A dog, which is black, and a white one are staring at each other in the street	exists x.exists y. (Dog(x) & Dog(y) & Black(x) & White(y) -> StaringAtEachOther(x, y))	c	False	False
333	Along two streets, different breeds of dogs are being looked at	exists x. exists y. exists z. (Dog(x) & Dog(y) & Dog(z) & Street(x) & Street(y) & Street(z) & BeingLookedAt(x) & BeingLookedAt(y) & BeingLookedAt(z))	Two dogs of different breeds are looking at each other across a street	exists x. exists y. (Dog(x) & Dog(y) & BreedDifferent(x, y) & LookingAtEachOther(x, y))	n	False	False
334	Two dogs of different breeds are looking angrily at each other across a street	exists x. exists y. (Dog(x) & Dog(y) & DifferentBreeds(x, y) & Angry(x) & Angry(y) & AcrossStreet(x, y))	A dog, which is black, and a white one are staring at each other in the street	exists x.exists y. (Dog(x) & Dog(y) & Black(x) & White(y) -> StaringAtEachOther(x, y))	n	False	False
335	A dog, which is black, and a white one are staring at each other in the street	exists x.exists y. (Dog(x) & Dog(y) & Black(x) & White(y) -> StaringAtEachOther(x, y))	There are no dogs of different breeds looking at each other across a street	exists x. exists y. exists z. (Dog(x) & Dog(y) & Street(z) -> not (DifferentBreed(x) & DifferentBreed(y) & LookingAt(x, y, z)))	n	False	False
336	A dog, which is black, and a white one are staring at each other in the street	exists x.exists y. (Dog(x) & Dog(y) & Black(x) & White(y) -> StaringAtEachOther(x, y))	Along two streets, different breeds of dogs are being looked at	exists x. exists y. exists z. (Dog(x) & Dog(y) & Dog(z) & Street(x) & Street(y) & Street(z) & BeingLookedAt(x) & BeingLookedAt(y) & BeingLookedAt(z))	n	False	False
337	Two dogs of different breeds are looking at each other across a street	exists x. exists y. (Dog(x) & Dog(y) & BreedDifferent(x, y) & LookingAtEachOther(x, y))	A dog, which is black, and a white one are ignoring each other in the street	exists x.exists y. (Dog(x) & Dog(y) & Black(x) & White(y) -> Ignoring(x, y))	n	False	False
338	A dog, which is black, and a white one are staring at each other in the street	exists x.exists y. (Dog(x) & Dog(y) & Black(x) & White(y) -> StaringAtEachOther(x, y))	Two dogs of different breeds are looking at each other across a street	exists x. exists y. (Dog(x) & Dog(y) & BreedDifferent(x, y) & LookingAtEachOther(x, y))	n	False	False
339	A dog which is furry and black is in a back yard and is carrying a basket in its mouth	exists x. (Dog(x) & Furry(x) & Black(x) -> (InBackYard(x) & CarryingBasket(x)))	A dog in the backyard is carrying black fur in a basket in its mouth.	exists x. (Dog(x) & InBackyard(x) -> CarriesBlackFurInBasket(x))	n	False	False
340	A dog which is furry and black is in a backyard and is carrying a basket in its mouth.	exists x. (Dog(x) & Furry(x) & Black(x) -> (InBackyard(x) & CarryingBasketInMouth(x)))	A dog next to a tree, which is probably a pine, is biting a bucket	exists x.exists y.exists z. (Dog(x) & Tree(y) & Bucket(z) & NextTo(x, y) & ProbablyPine(y) -> Biting(x, z))	n	False	False
341	A dog which is furry and black is in a back yard and is carrying a basket in its mouth	exists x. (Dog(x) & Furry(x) & Black(x) -> (InBackYard(x) & CarryingBasket(x)))	A dog in a bucket is biting a tree which is probably a pine	exists x.exists y.exists z. (Dog(x) & Bucket(y) & Tree(z) & InBucket(x, y) & Biting(x, z) -> ProbablyPine(z))	n	False	False
342	A dog which is furry and black is in a back yard and is carrying a basket in its mouth	exists x. (Dog(x) & Furry(x) & Black(x) -> (InBackYard(x) & CarryingBasket(x)))	A dog next to a tree, which is probably a pine, is biting a bucket	exists x.exists y.exists z. (Dog(x) & Tree(y) & Bucket(z) & NextTo(x, y) & ProbablyPine(y) -> Biting(x, z))	n	False	False
343	A man and a woman are sitting comfortably on the bench	exists x. exists y. (Man(x) & Woman(y) & SittingOnBench(x, y))	Nobody is sitting comfortably on the bench	not exists x. (SittingComfortablyOnBench(x))	c	False	False
344	Two large persons are sitting on a park bench and they have a bottle of soda between them	exists x. exists y. exists z. (LargePerson(x) & LargePerson(y) & ParkBench(z) & SittingOn(x, z) & SittingOn(y, z) & BottleOfSoda(z))	Two people are sitting comfortably on the bench	exists x. exists y. (Person(x) & Person(y) & SittingOnBench(x) & SittingOnBench(y))	n	False	False
345	Nobody is sitting comfortably on the bench	not exists x. (SittingComfortablyOnBench(x))	Two large persons are sitting on a park bench and they have a bottle of soda between them	exists x. exists y. exists z. (LargePerson(x) & LargePerson(y) & ParkBench(z) & SittingOn(x, z) & SittingOn(y, z) & BottleOfSoda(z))	n	False	False
346	Two large persons are standing near a park bench and they have nothing between them	exists x. exists y. (LargePerson(x) & LargePerson(y) & ParkBench(x) & ParkBench(y) & not Between(x, y))	A man and a woman are sitting comfortably on the bench	exists x. exists y. (Man(x) & Woman(y) & SittingOnBench(x, y))	n	False	False
347	A man and a woman are sitting comfortably on the bench	exists x. exists y. (Man(x) & Woman(y) & SittingOnBench(x, y))	Two large park benches have a person sitting and a bottle of soda between them	exists x. exists y. exists z. (LargeParkBench(x) & LargeParkBench(y) & Person(z) & SitsOn(z, x) & SitsOn(z, y) & BottleOfSoda(z))	n	False	False
348	A man and a woman are sitting comfortably on the bench	exists x. exists y. (Man(x) & Woman(y) & SittingOnBench(x, y))	Two large persons are sitting on a park bench and they have a bottle of soda between them	exists x. exists y. exists z. (LargePerson(x) & LargePerson(y) & ParkBench(z) & SittingOn(x, z) & SittingOn(y, z) & BottleOfSoda(z))	n	False	False
349	One man is leading the race	exists x. (Man(x) & LeadingRace(x))	A man is leading the race	exists x. (Man(x) & LeadingRace(x))	e	True	False
350	A man is leading the race	exists x. (Man(x) & LeadingRace(x))	A man is bringing up the rear of the race	exists x. (Man(x) & BringingUpRear(x))	n	False	False
351	A man is leading the race	exists x. (Man(x) & LeadingRace(x))	A few men in a competition are running indoors	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & Competition(x) & Competition(y) & Competition(z) & not (Indoors(x) & Indoors(y) & Indoors(z)))	n	False	False
352	A man is leading the race	exists x. (Man(x) & LeadingRace(x))	A few men are running competitions outside	exists x.exists y. (Man(x) & Man(y) & RunningCompetition(x, y) & Outside(y))	n	False	False
353	A few men in a competition are running outside	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & Competition(x) & Competition(y) & Competition(z) & not (Competition(x) & Competition(y) & Competition(z)) & exists w. (Outside(w) & Running(x, w) & Running(y, w) & Running(z, w)))	The man is racing for the lead 	exists x. (Man(x) -> RacesForLead(x))	n	True	True
354	The subject is being studied by a man with a camera	exists x.exists y. (Subject(x) & Man(y) & HasCamera(y) -> BeingStudiedBy(x, y))	A man with a camera is studying the subject	exists x.exists y. (Man(x) & Camera(y) & Carries(x, y) -> StudiesSubject(x))	e	False	False
355	The bride is leaving the groom after the wedding	exists x.exists y. (Bride(x) & Groom(y) -> LeavesAfterWedding(x, y))	The bride and the groom are leaving after the wedding	exists x.exists y. (Bride(x) & Groom(y) -> LeavingAfterWedding(x, y))	n	False	False
356	A married couple is walking down the aisle	exists x.exists y. (MarriedCouple(x, y) & WalkingDownAisle(x, y))	A couple who have just got married are walking down the isle	exists x.exists y. (Couple(x) & Married(x, y) -> WalkingDownIsle(x, y))	e	False	False
357	A married couple is walking down the aisle	exists x.exists y. (MarriedCouple(x, y) & WalkingDownAisle(x, y))	The priest is walking down the aisle to marry a couple	exists x.exists y.exists z. (Priest(x) & Aisle(y) & Couple(z) -> WalksDownToMarry(x, y, z))	n	False	False
358	A couple who have just got married are walking down the isle	exists x.exists y. (Couple(x) & Married(x, y) -> WalkingDownIsle(x, y))	The bride and the groom are leaving after the wedding	exists x.exists y. (Bride(x) & Groom(y) -> LeavingAfterWedding(x, y))	e	False	False
359	A married couple is walking up the aisle	exists x.exists y. (MarriedCouple(x) & MarriedCouple(y) -> WalkingUpAisle(x, y))	The bride and the groom are leaving after the wedding	exists x.exists y. (Bride(x) & Groom(y) -> LeavingAfterWedding(x, y))	n	False	False
360	The students are filling the classroom	exists x. (Student(x) -> FillsClassroom(x))	A classroom is full of students	exists x. (Classroom(x) -> FullOfStudents(x))	e	False	False
361	A classroom is full of students	exists x. (Classroom(x) -> FullOfStudents(x))	A classroom is empty	exists x. (Classroom(x) -> Empty(x))	c	False	False
362	The presentation isn't being watched by a classroom of students	not exists x. (Presentation(x) & Classroom(y) & Student(z) & Watching(z, x))	The presentation is being watched by a classroom of students	exists x.exists y. (Presentation(x) & Classroom(y) -> WatchedBy(x, y))	c	False	False
363	The presentation isn't being watched by a classroom of students	not exists x. (Presentation(x) & Classroom(y) & Student(z) & Watching(z, x))	A classroom is full of students	exists x. (Classroom(x) -> FullOfStudents(x))	n	False	False
364	The presentation is being watched by a classroom of students	exists x.exists y. (Presentation(x) & Classroom(y) -> WatchedBy(x, y))	The students are filling the classroom	exists x. (Student(x) -> FillsClassroom(x))	n	False	False
365	The presentation is being watched by a classroom of students	exists x.exists y. (Presentation(x) & Classroom(y) -> WatchedBy(x, y))	A classroom is full of students	exists x. (Classroom(x) -> FullOfStudents(x))	e	False	False
366	The kid is sliding in the snow	exists x. (Kid(x) & SlidingInSnow(x))	The kid is still in the snow	exists x. (Kid(x) -> StillInSnow(x))	n	False	False
367	A boy on a hill covered in snow is wearing a red jacket and a black hat and is sliding on his knees	exists x. (Boy(x) & OnHill(x) & CoveredInSnow(x) -> (WearsRedJacket(x) & WearsBlackHat(x) & SlidesOnKnees(x)))	A snow slide is full of kids	exists x. (SnowSlide(x) -> FullOfKids(x))	n	False	False
368	The kid is sliding in the snow	exists x. (Kid(x) & SlidingInSnow(x))	A boy on a red and black slide is wearing a jacket and a hat and has knees which are covered in snow	exists x. (Boy(x) & OnRedAndBlackSlide(x) -> (WearsJacket(x) & WearsHat(x) & KneesCoveredInSnow(x)))	n	False	False
369	A boy on a hill covered in snow is wearing a red jacket and a black hat and is sliding on his knees	exists x. (Boy(x) & OnHill(x) & CoveredInSnow(x) -> (WearsRedJacket(x) & WearsBlackHat(x) & SlidesOnKnees(x)))	The kid is sliding in the snow	exists x. (Kid(x) & SlidingInSnow(x))	n	False	False
370	A woman and a dog are standing near a tree stump	exists x. exists y. exists z. (Woman(x) & Dog(y) & TreeStump(z) & StandingNear(x, y, z))	A woman and a dog are sitting on a tree stump	exists x. exists y. exists z. (Woman(x) & Dog(y) & TreeStump(z) & SittingOn(x, z) & SittingOn(y, z))	n	False	False
371	A woman, who is old, is near a white dog	exists x. (Woman(x) & Old(x) -> NearWhiteDog(x))	A woman, who is old, is far from a white dog	exists x. (Woman(x) & Old(x) -> FarFromWhiteDog(x))	n	False	False
372	A woman, who is old, is near a dog that has a white coat	exists x.exists y. (Woman(x) & Old(x) & Dog(y) & WhiteCoat(y) -> Near(x, y))	A woman and a dog are sitting on a tree stump	exists x. exists y. exists z. (Woman(x) & Dog(y) & TreeStump(z) & SittingOn(x, z) & SittingOn(y, z))	n	False	False
373	A woman, who is old, is near a white dog	exists x. (Woman(x) & Old(x) -> NearWhiteDog(x))	A woman and a dog are peacefully sitting on a tree stump	exists x. exists y. exists z. (Woman(x) & Dog(y) & TreeStump(z) & SittingOn(x, z) & SittingOn(y, z))	n	False	False
374	A woman, who is old, is near a white dog	exists x. (Woman(x) & Old(x) -> NearWhiteDog(x))	A woman and a dog are standing near a tree stump	exists x. exists y. exists z. (Woman(x) & Dog(y) & TreeStump(z) & StandingNear(x, y, z))	n	False	False
375	A dog is excitedly playing with water in a field	exists x. exists y. exists z. (Dog(x) & Water(y) & Field(z) & PlayingWith(x, y, z))	A dog is excitedly playing with water in the grass	exists x. (Dog(x) & PlayingWithWater(x) & InGrass(x))	e	False	False
376	A dog is excitedly playing with water in the grass	exists x. (Dog(x) & PlayingWithWater(x) & InGrass(x))	There is no dog excitedly playing with water in the grass	not exists x. (Dog(x) & ExcitedlyPlayingWithWater(x) & InGrass(x))	c	False	False
377	The dog is snapping at some droplets of water	exists x.exists y. (Dog(x) & Droplet(y) & SnappingAt(x, y))	A snap is depicting some water falling in droplets on the dog	exists x. (Snap(x) -> exists y. (Water(y) & Droplets(y) & FallingOn(y, x)))	n	False	False
378	A dog is excitedly playing with water in the grass	exists x. (Dog(x) & PlayingWithWater(x) & InGrass(x))	The dog is biting some droplets of water	exists x.exists y. (Dog(x) & Droplet(y) & Biting(x, y))	n	False	False
379	The dog isn't snapping at some droplets of water	not exists x. (Dog(x) & SnappingAt(x, WaterDroplets))	A dog is excitedly playing with water in the grass	exists x. (Dog(x) & PlayingWithWater(x) & InGrass(x))	n	False	False
380	A dog is excitedly playing with water in a field	exists x. exists y. exists z. (Dog(x) & Water(y) & Field(z) & PlayingWith(x, y, z))	The dog is snapping at some droplets of water	exists x.exists y. (Dog(x) & Droplet(y) & SnappingAt(x, y))	n	False	False
381	Two men are walking two dogs with golden coats in the snow	exists x. exists y. exists z. exists w. (Man(x) & Man(y) & Dog(z) & Dog(w) & Walking(x, z) & Walking(y, w) & GoldenCoat(z) & GoldenCoat(w) & Snow(x) & Snow(y))	Two people are walking two dogs with golden coats in the snow	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Dog(z) & Dog(w) & Walking(x, z) & Walking(y, w) & GoldenCoat(z) & GoldenCoat(w) & Snow(x) & Snow(y))	e	True	False
382	Two people are walking two dogs with golden coats in the snow	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Dog(z) & Dog(w) & Walking(x, z) & Walking(y, w) & GoldenCoat(z) & GoldenCoat(w) & Snow(x) & Snow(y))	Two people are in the snow holding two dogs with golden coats	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Dog(z) & Dog(w) & Snow(x) & Snow(y) & Holds(x, z) & Holds(y, w))	n	False	False
383	Two people are in the snow not wearing clothes, which provides camouflage. 	exists x. exists y. (Person(x) & Person(y) & Snow(z) & In(x, z) & In(y, z) & not WearingClothes(x) & not WearingClothes(y) -> Camouflage(x, y))	Two people are in the snow, wearing clothes that provide camouflage	exists x. exists y. (Person(x) & Person(y) & InSnow(x) & InSnow(y) & WearingCamouflageClothes(x) & WearingCamouflageClothes(y))	c	False	False
384	Nobody is in the snow wearing clothes that provide camouflage	not exists x. (Person(x) & InSnow(x) & WearingCamouflageClothes(x))	Two people are walking two dogs with golden coats in the snow	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Dog(z) & Dog(w) & Walking(x, z) & Walking(y, w) & GoldenCoat(z) & GoldenCoat(w) & Snow(x) & Snow(y))	n	False	False
385	Two people are walking two dogs with golden coats in the snow	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Dog(z) & Dog(w) & Walking(x, z) & Walking(y, w) & GoldenCoat(z) & GoldenCoat(w) & Snow(x) & Snow(y))	Two people are in the snow not wearing clothes, which provides camouflage. 	exists x. exists y. (Person(x) & Person(y) & Snow(z) & In(x, z) & In(y, z) & not WearingClothes(x) & not WearingClothes(y) -> Camouflage(x, y))	n	False	False
386	Two people are in the snow, wearing clothes that provide camouflage	exists x. exists y. (Person(x) & Person(y) & InSnow(x) & InSnow(y) & WearingCamouflageClothes(x) & WearingCamouflageClothes(y))	Two people are in the snow holding two dogs with golden coats	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Dog(z) & Dog(w) & Snow(x) & Snow(y) & Holds(x, z) & Holds(y, w))	n	False	False
387	A girl from Asia, in front of a brick window, looks surprised	exists x.exists y.exists z. (Girl(x) & Asia(x) & BrickWindow(y) & InFrontOf(x, y) & Window(z) & Brick(z) -> LooksSurprised(x, z))	A girl from Asia, in front of a window made of bricks, looks surprised	exists x.exists y.exists z. (Girl(x) & FromAsia(x) & Window(y) & MadeOfBricks(y) & InFrontOf(x, y) -> LooksSurprised(x, z) & Window(z))	e	False	False
388	A girl from Asia, in front of a brick window, doesn't look surprised	exists x.exists y.exists z. (Girl(x) & Asia(x) & BrickWindow(y) & InFrontOf(x, y) -> not Surprised(x))	A girl from Asia, in front of a brick window, looks surprised	exists x.exists y.exists z. (Girl(x) & Asia(x) & BrickWindow(y) & InFrontOf(x, y) & Window(z) & Brick(z) -> LooksSurprised(x, z))	c	False	False
389	A girl is looking on surprised from a front window in a house in Asia.	exists x. exists y. exists z. (Girl(x) & FrontWindow(y) & House(z) & InAsia(z) & Surprised(x, y) & In(x, z))	A girl from Asia, in front of a brick window, looks surprised	exists x.exists y.exists z. (Girl(x) & Asia(x) & BrickWindow(y) & InFrontOf(x, y) & Window(z) & Brick(z) -> LooksSurprised(x, z))	e	False	False
390	A girl is wearing a t-shirt and has her mouth open.	exists x. (Girl(x) & WearingTShirt(x) & HasMouthOpen(x))	A girl has a t-shirt and is keeping her mouth open	exists x. (Girl(x) -> (HasTShirt(x) & KeepsMouthOpen(x)))	e	False	False
391	There is no girl wearing a t-shirt and keeping her mouth open	not exists x. (Girl(x) & WearingTShirt(x) & KeepingMouthOpen(x))	A girl is wearing a t-shirt and has her mouth open.	exists x. (Girl(x) & WearingTShirt(x) & HasMouthOpen(x))	c	False	False
392	A girl has a t-shirt and is keeping her mouth open	exists x. (Girl(x) -> (HasTShirt(x) & KeepsMouthOpen(x)))	A girl from Asia, in front of a brick window, looks surprised	exists x.exists y.exists z. (Girl(x) & Asia(x) & BrickWindow(y) & InFrontOf(x, y) & Window(z) & Brick(z) -> LooksSurprised(x, z))	n	False	False
393	A girl is looking on surprised from a front window in a house in Asia.	exists x. exists y. exists z. (Girl(x) & FrontWindow(y) & House(z) & InAsia(z) & Surprised(x, y) & In(x, z))	A girl is wearing a t-shirt and has her mouth open.	exists x. (Girl(x) & WearingTShirt(x) & HasMouthOpen(x))	n	False	False
394	A girl is wearing a t-shirt and has her mouth open.	exists x. (Girl(x) & WearingTShirt(x) & HasMouthOpen(x))	A girl from Asia, in front of a brick window, looks surprised	exists x.exists y.exists z. (Girl(x) & Asia(x) & BrickWindow(y) & InFrontOf(x, y) & Window(z) & Brick(z) -> LooksSurprised(x, z))	n	False	False
395	A group of people is equipped with protective gear	exists x. (GroupOfPeople(x) -> EquippedWithProtectiveGear(x))	A group of people is equipped with unprotective gear	exists x. (GroupOfPeople(x) -> EquippedWithUnprotectiveGear(x))	n	False	False
396	A person in biking gear is standing steadily in front of some mountains 	exists x. (Person(x) & BikingGear(x) -> StandingSteadilyInFrontOfMountains(x))	A person in the gear used for biking is standing steadily in front of the mountains	exists x.exists y. (Person(x) & Gear(y) & UsedForBiking(y) -> StandingSteadilyInFrontOf(x, y))	e	False	False
397	A person in biking gear is standing steadily in front of some mountains 	exists x. (Person(x) & BikingGear(x) -> StandingSteadilyInFrontOfMountains(x))	There is no person in bike gear standing steadily in front of the mountains	not exists x. (Person(x) & InBikeGear(x) & StandingSteadilyInFrontOf(x, mountains))	c	False	False
398	A group of people is equipped with protective gear	exists x. (GroupOfPeople(x) -> EquippedWithProtectiveGear(x))	A person in the gear used for biking is standing steadily in front of the mountains	exists x.exists y. (Person(x) & Gear(y) & UsedForBiking(y) -> StandingSteadilyInFrontOf(x, y))	n	False	False
399	The mountain gear is steadily placed in front of the standing biker	exists x.exists y. (MountainGear(x) & StandingBiker(y) -> SteadilyPlacedInFrontOf(x, y))	A group of people is equipped with protective gear	exists x. (GroupOfPeople(x) -> EquippedWithProtectiveGear(x))	n	False	False
400	A group of people is equipped with protective gear	exists x. (GroupOfPeople(x) -> EquippedWithProtectiveGear(x))	A person in biking gear is standing steadily in front of some mountains 	exists x. (Person(x) & BikingGear(x) -> StandingSteadilyInFrontOfMountains(x))	n	False	False
401	The football is between the feet of a boy who is lying on the grass	exists x. exists y. exists z. (Football(x) & Boy(y) & Grass(z) & LyingOn(y, z) & BetweenFeet(x, y))	The football isn't between the feet of a boy who is lying in the grass	not exists x. (Football(x) & Boy(y) & LyingInGrass(y) & BetweenFeet(x, y))	c	False	False
402	The boy on the grass is lying and is hiding the football between his feet	exists x. (Boy(x) & OnGrass(x) -> (Lying(x) & HidingFootball(x)))	The football is between the feet of a boy who is lying on the grass	exists x. exists y. exists z. (Football(x) & Boy(y) & Grass(z) & LyingOn(y, z) & BetweenFeet(x, y))	e	False	False
403	The little kid is playing football and falling into the grass	exists x. (LittleKid(x) -> (PlaysFootball(x) & FallsIntoGrass(x)))	A football player is falling into the grass to dodge a little kid	exists x.exists y.exists z. (FootballPlayer(x) & Grass(y) & LittleKid(z) -> FallsInto(x, y) & Dodges(x, z))	n	False	False
404	The football is between the feet of a boy who is lying on the grass	exists x. exists y. exists z. (Football(x) & Boy(y) & Grass(z) & LyingOn(y, z) & BetweenFeet(x, y))	The little kid is playing football and falling harmlessly into the grass	exists x. (LittleKid(x) -> (PlaysFootball(x) & FallsHarmlesslyIntoGrass(x)))	n	False	False
405	There is no little kid playing football and falling into the grass	not exists x. (LittleKid(x) & PlayingFootball(x) & FallsIntoGrass(x))	The football is between the feet of a boy who is lying on the grass	exists x. exists y. exists z. (Football(x) & Boy(y) & Grass(z) & LyingOn(y, z) & BetweenFeet(x, y))	n	False	False
406	The football is between the feet of a boy who is lying on the grass	exists x. exists y. exists z. (Football(x) & Boy(y) & Grass(z) & LyingOn(y, z) & BetweenFeet(x, y))	A football player is falling into the grass to dodge a little kid	exists x.exists y.exists z. (FootballPlayer(x) & Grass(y) & LittleKid(z) -> FallsInto(x, y) & Dodges(x, z))	n	False	False
407	The little kid is playing football and falling into the grass	exists x. (LittleKid(x) -> (PlaysFootball(x) & FallsIntoGrass(x)))	The football isn't between the feet of a boy who is lying in the grass	not exists x. (Football(x) & Boy(y) & LyingInGrass(y) & BetweenFeet(x, y))	n	False	False
408	The boy on the grass is lying and is hiding the football between his feet	exists x. (Boy(x) & OnGrass(x) -> (Lying(x) & HidingFootball(x)))	The little kid is playing football and falling into the grass	exists x. (LittleKid(x) -> (PlaysFootball(x) & FallsIntoGrass(x)))	n	False	False
409	A man with climbing equipment is hanging from a rock, which is vertical and white	exists x.exists y. (Man(x) & ClimbingEquipment(x) & Rock(y) & Vertical(y) & White(y) -> HangingFrom(x, y))	A man with equipment used for climbing is hanging from a white, vertical rock.	exists x. (Man(x) & UsesClimbingEquipment(x) -> HangingFromWhiteVerticalRock(x))	e	False	False
410	The climbing equipment to rescue a man is hanging from a white, vertical rock	exists x.exists y. (ClimbingEquipment(x) & Man(y) & HangingFromWhiteVerticalRock(x) -> Rescues(x, y))	A man with equipment used for climbing is hanging from a white, vertical rock.	exists x. (Man(x) & UsesClimbingEquipment(x) -> HangingFromWhiteVerticalRock(x))	n	False	False
411	A woman with pigtails is climbing a rock wall	exists x. (Woman(x) & HasPigtails(x) -> ClimbingRockWall(x))	A woman with a ponytail is climbing a wall of rock	exists x. (Woman(x) & HasPonytail(x) -> ClimbingRockWall(x))	n	False	False
412	A man with equipment used for climbing is hanging from a white, vertical rock.	exists x. (Man(x) & UsesClimbingEquipment(x) -> HangingFromWhiteVerticalRock(x))	A woman with a ponytail is climbing down a wall of rock	exists x. (Woman(x) & HasPonytail(x) -> ClimbingDownRockWall(x))	n	False	False
413	A woman with a ponytail is climbing a wall of rock	exists x. (Woman(x) & HasPonytail(x) -> ClimbingRockWall(x))	A man with climbing equipment is hanging from a rock, which is vertical and white	exists x.exists y. (Man(x) & ClimbingEquipment(x) & Rock(y) & Vertical(y) & White(y) -> HangingFrom(x, y))	n	False	False
414	A man with equipment used for climbing is under a vertical, white rock	exists x. (Man(x) & UsesClimbingEquipment(x) -> UnderVerticalWhiteRock(x))	A woman with a ponytail is climbing a wall of rock	exists x. (Woman(x) & HasPonytail(x) -> ClimbingRockWall(x))	n	False	False
415	A black and a white dog are joyfully running on the grass	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & RunningOnGrass(x) & RunningOnGrass(y))	A dog, which has a black coat, and a white dog are running on the grass	exists x. exists y. (Dog(x) & Dog(y) & BlackCoat(x) & WhiteCoat(y) -> RunOnGrass(x, y))	e	False	False
416	There is no dog joyfully running on the grass	not exists x. (Dog(x) & RunningOnGrass(x) & Joyful(x))	A black and a white dog are joyfully running on the grass	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & RunningOnGrass(x) & RunningOnGrass(y))	c	False	False
417	One white dog and one black one are cheerfully running side by side on the grass	exists x. exists y. (Dog(x) & Dog(y) & White(x) & Black(y) & CheerfullyRunning(x, y) & OnGrass(x, y))	One white dog and one black one are running side by side on the grass	exists x.exists y. (WhiteDog(x) & BlackDog(y) & RunningOnGrass(x) & RunningOnGrass(y))	e	False	False
418	One white dog and one black one are running side by side on the grass	exists x.exists y. (WhiteDog(x) & BlackDog(y) & RunningOnGrass(x) & RunningOnGrass(y))	There is no dog joyfully running on the grass	not exists x. (Dog(x) & RunningOnGrass(x) & Joyful(x))	n	False	False
419	A black and a white dog are joyfully running on the grass	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & RunningOnGrass(x) & RunningOnGrass(y))	One white dog and one black one are running side by side on the grass	exists x.exists y. (WhiteDog(x) & BlackDog(y) & RunningOnGrass(x) & RunningOnGrass(y))	n	False	False
420	A lot of people are in an ice skating park	exists x. (Person(x) & InIceSkatingPark(x))	There aren't many people in the ice skating park	exists x. (Person(x) & IceSkatingPark(x) & not Many(x))	c	False	False
421	A lot of people are in an ice skating park	exists x. (Person(x) & InIceSkatingPark(x))	An ice skating rink placed outdoors is empty	exists x. (IceSkatingRink(x) & Outdoors(x) -> Empty(x))	n	False	False
422	Many people are skating in an ice park	exists x. (Person(x) & Skating(x) & InIcePark(x))	An ice skating rink placed outdoors is full of people	exists x. (IceSkatingRink(x) & Outdoors(x) -> FullOfPeople(x))	e	False	False
423	A girl in a uniform, which is blue, is raising her arm.	exists x. (Girl(x) & WearingUniform(x) & BlueUniform(x) -> RaisingArm(x))	The girl in the blue and white uniform isn't cheering	not Cheering(girl, blueAndWhiteUniform)	n	False	False
424	A girl in a uniform, which is blue, is raising her arm.	exists x. (Girl(x) & WearingUniform(x) & BlueUniform(x) -> RaisingArm(x))	The girl is cheering the man in the blue and white uniform	Cheer(girl, man, blueAndWhiteUniform)	n	False	False
425	A girl in a uniform, which is blue, is quickly raising her arm	exists x. (Girl(x) & WearingUniform(x, blue) -> QuicklyRaisingArm(x))	The girl in the blue and white uniform is cheering	Cheering(girl, blueAndWhiteUniform)	n	False	False
426	A bunch of guys is on the shore	exists x.exists y. (Guys(x) & Shore(y) & On(x, y))	A bunch of people is on the shore	exists x. (Person(x) & OnShore(x))	e	False	False
427	There is no one on the shore	not exists x. (Shore(x) & Person(x))	A bunch of people is on the shore	exists x. (Person(x) & OnShore(x))	c	False	False
428	People are on a beach full of sand by the ocean and are enjoying a day full of sun	exists x. (Person(x) -> (exists y. (Beach(y) & FullOfSand(y) & By(x, y)) & exists z. (Ocean(z) & Near(x, z)) & exists w. (Day(w) & FullOfSun(w) & On(x, w))))	A bunch of people is on the shore	exists x. (Person(x) & OnShore(x))	e	False	False
429	A bunch of guys is on the shore	exists x.exists y. (Guys(x) & Shore(y) & On(x, y))	People are on a beach full of sand by the ocean and are enjoying a sunny day	exists x. (Person(x) -> (exists y. (Beach(y) & On(x, y) & FullOfSand(y) & By(x, ocean) & Enjoying(x, sunnyDay))))	n	False	False
430	People are on a beach full of sand by the ocean and are enjoying a sunny day	exists x. (Person(x) -> (exists y. (Beach(y) & On(x, y) & FullOfSand(y) & By(x, ocean) & Enjoying(x, sunnyDay))))	There is no one on the shore	not exists x. (Shore(x) & Person(x))	c	False	False
431	A man in a blue jumpsuit is failing to perform a wheelie on a motorcycle	exists x. (Man(x) & WearsBlueJumpsuit(x) -> not PerformsWheelie(x))	A man in a blue jumpsuit is courageously performing a wheelie on a motorcycle	exists x. (Man(x) & WearsBlueJumpsuit(x) -> PerformsWheelieOnMotorcycle(x))	c	False	False
432	A courageous performer is doing a wheelie with a motorcycle over a man in a blue jumpsuit	exists x.exists y.exists z. (Performer(x) & Motorcycle(y) & Man(z) & Wheelie(x, y) & Over(x, z) & BlueJumpsuit(z) -> Courageous(x))	A man in a blue jumpsuit is courageously performing a wheelie on a motorcycle	exists x. (Man(x) & WearsBlueJumpsuit(x) -> PerformsWheelieOnMotorcycle(x))	n	False	False
433	The man is getting off a motorcycle onto ground which is mostly barren	exists x.exists y.exists z. (Man(x) & Motorcycle(y) & Ground(z) & GetsOffOnto(x, y, z) -> Barren(z))	The man is doing a wheelie with a motorcycle on ground which is mostly barren	exists x.exists y.exists z. (Man(x) & Motorcycle(y) & Ground(z) & Wheelie(x, y, z) -> (Barren(z)))	n	False	False
434	The man is doing a wheelie with a motorbike in a field which is mostly barren	exists x.exists y.exists z. (Man(x) & Motorbike(y) & Field(z) & Wheelie(x, y, z) -> (MostlyBarren(z)))	A man in a blue jumpsuit is courageously performing a wheelie on a motorcycle	exists x. (Man(x) & WearsBlueJumpsuit(x) -> PerformsWheelieOnMotorcycle(x))	n	False	False
435	The man is on ground which is mostly barren, filming a wheelie done with a motorcycle.	exists x.exists y. (Man(x) & Ground(y) & FilmingWheelie(x, y) -> (MostlyBarren(y) & WithMotorcycle(x)))	A man in a blue jumpsuit is courageously performing a wheelie on a motorcycle	exists x. (Man(x) & WearsBlueJumpsuit(x) -> PerformsWheelieOnMotorcycle(x))	n	False	False
436	The man is doing a wheelie with a motorcycle on ground which is mostly barren	exists x.exists y.exists z. (Man(x) & Motorcycle(y) & Ground(z) & Wheelie(x, y, z) -> (Barren(z)))	A man in a blue jumpsuit is courageously performing a wheelie on a motorcycle	exists x. (Man(x) & WearsBlueJumpsuit(x) -> PerformsWheelieOnMotorcycle(x))	n	False	False
437	A woman is being kissed by a man	exists x. exists y. (Woman(x) & Man(y) & Kissing(y, x))	A lady is being kissed by a man	exists x.exists y. (Lady(x) & Man(y) & Kissing(y, x))	e	False	False
438	Two people are passionately kissing near a crowd	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & PassionateKiss(x, y) & NearCrowd(x, z))	Two people are kissing near a crowd	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Kissing(x, y) & NearCrowd(x, z))	e	False	False
439	A nearby throng of people are kissing two by two	exists x. (Nearby(x) & Throng(x) -> (exists y.exists z. (Person(y) & Person(z) & Kissing(y, z))))	Two people are kissing near a crowd	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Kissing(x, y) & NearCrowd(x, z))	n	False	False
440	Two people are arguing near a crowd	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Argument(x, y) & Argument(y, z) & Crowd(x, y, z))	A woman is being kissed by a man	exists x. exists y. (Woman(x) & Man(y) & Kissing(y, x))	n	False	False
441	A nearby throng of people are kissing two by two	exists x. (Nearby(x) & Throng(x) -> (exists y.exists z. (Person(y) & Person(z) & Kissing(y, z))))	A woman is being kissed by a man	exists x. exists y. (Woman(x) & Man(y) & Kissing(y, x))	n	False	False
442	There is no woman being kissed by a man	not exists x. (Woman(x) & Man(y) & Kissing(y, x))	Two people are kissing near a crowd	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Kissing(x, y) & NearCrowd(x, z))	n	False	False
443	The young woman in a dyed red shirt, is blowing a bubble that is huge	exists x. (YoungWoman(x) & WearsDyedRedShirt(x) -> BlowsHugeBubble(x))	The girl in the red shirt is blowing a bubble 	exists x. (Girl(x) & WearsRedShirt(x) -> BlowingBubble(x))	e	False	False
444	The girl in the red shirt is blowing a bubble 	exists x. (Girl(x) & WearsRedShirt(x) -> BlowingBubble(x))	The girl in a dyed red shirt isn't blowing a bubble	exists x. (Girl(x) & WearsRedShirt(x) -> not BlowingBubble(x))	c	False	False
445	A bubble blew, dyeing the girl's shirt red.	exists x. exists y. exists z. (Bubble(x) & Girl(y) & Shirt(z) & Blew(x) & Dyes(x, y, z) & Red(z))	The girl in the red shirt is blowing a bubble 	exists x. (Girl(x) & WearsRedShirt(x) -> BlowingBubble(x))	n	False	False
446	The young girl is blowing a bubble that is huge	exists x. exists y. (YoungGirl(x) & Bubble(y) & Blowing(x, y) -> Huge(y))	The girl, who is young, is blowing a bubble that is huge	exists x. (Girl(x) & Young(x) -> BlowingHugeBubble(x))	e	False	False
447	The girl, who is young, is blowing a bubble that is huge	exists x. (Girl(x) & Young(x) -> BlowingHugeBubble(x))	The girl in the red shirt is blowing a bubble 	exists x. (Girl(x) & WearsRedShirt(x) -> BlowingBubble(x))	n	False	False
448	The young girl is blowing a bubble that is very small	exists x. exists y. (YoungGirl(x) & Bubble(y) & Blows(x, y) -> VerySmall(y))	The girl in the red shirt is blowing a bubble 	exists x. (Girl(x) & WearsRedShirt(x) -> BlowingBubble(x))	n	False	False
449	The young woman in a dyed red shirt, is blowing a bubble that is huge	exists x. (YoungWoman(x) & WearsDyedRedShirt(x) -> BlowsHugeBubble(x))	The young girl is blowing a bubble that is huge	exists x. exists y. (YoungGirl(x) & Bubble(y) & Blowing(x, y) -> Huge(y))	e	False	False
450	A young child is wearing boots made of green rubber and playing in a puddle full of mud	exists x. (YoungChild(x) & WearingBoots(x) & MadeOfGreenRubber(x) & PlayingInPuddle(x) & FullOfMud(x))	A young child is wearing green boots and playing in a puddle full of mud	exists x. (YoungChild(x) -> (WearsGreenBoots(x) & PlaysInPuddle(x)))	e	False	False
451	A little boy is jumping into a puddle on the street	exists x. exists y. exists z. (LittleBoy(x) & Puddle(y) & Street(z) & JumpsInto(x, y, z))	A little boy is getting out of a puddle in the street	exists x. (LittleBoy(x) & Puddle(x) & Street(x) & GettingOutOf(x))	n	False	False
452	A little boy is jumping into a puddle on the street	exists x. exists y. exists z. (LittleBoy(x) & Puddle(y) & Street(z) & JumpsInto(x, y, z))	A little boy's jumper is in a puddle in the street	exists x.exists y. (LittleBoy(x) & Jumper(y) & InPuddle(y) -> InStreet(y))	n	False	False
453	A young child is wearing green boots and playing in a puddle full of mud	exists x. (YoungChild(x) -> (WearsGreenBoots(x) & PlaysInPuddle(x)))	A little boy is getting out of a puddle in the street	exists x. (LittleBoy(x) & Puddle(x) & Street(x) & GettingOutOf(x))	n	False	False
454	A little boy's jumper is in a puddle in the street	exists x.exists y. (LittleBoy(x) & Jumper(y) & InPuddle(y) -> InStreet(y))	A young child is wearing green boots and playing in a puddle full of mud	exists x. (YoungChild(x) -> (WearsGreenBoots(x) & PlaysInPuddle(x)))	n	False	False
455	A young child is wearing green boots and playing in a puddle full of mud	exists x. (YoungChild(x) -> (WearsGreenBoots(x) & PlaysInPuddle(x)))	A little boy is jumping into a puddle on the street	exists x. exists y. exists z. (LittleBoy(x) & Puddle(y) & Street(z) & JumpsInto(x, y, z))	n	False	False
456	Two young kids are eating corndogs	exists x. exists y. (YoungKid(x) & YoungKid(y) & Eating(x, corndog) & Eating(y, corndog))	Two young kids are fasting	exists x. exists y. (Kid(x) & Kid(y) & Young(x) & Young(y) & Fasting(x) & Fasting(y))	c	False	False
457	Two young kids are playing with a man eating corndogs	exists x. exists y. exists z. (YoungKid(x) & YoungKid(y) & ManEatingCorndog(z) & PlayingWith(x, y, z))	Two young kids are eating corndogs	exists x. exists y. (YoungKid(x) & YoungKid(y) & Eating(x, corndog) & Eating(y, corndog))	n	False	False
458	Two young kids are fasting	exists x. exists y. (Kid(x) & Kid(y) & Young(x) & Young(y) & Fasting(x) & Fasting(y))	Two toddlers are eating corndogs in a wagon, which is really small	exists x. exists y. exists z. (Toddler(x) & Toddler(y) & Corndog(z) & Eating(x, z) & Eating(y, z) & Wagon(w) & Small(w))	n	False	False
459	Two young kids are playing with a man eating corndogs	exists x. exists y. exists z. (YoungKid(x) & YoungKid(y) & ManEatingCorndog(z) & PlayingWith(x, y, z))	Two toddlers are eating corndogs in a wagon, which is really small	exists x. exists y. exists z. (Toddler(x) & Toddler(y) & Corndog(z) & Eating(x, z) & Eating(y, z) & Wagon(w) & Small(w))	n	False	False
460	A man doing a pose is being watched by another man	exists x.exists y. (Man(x) & Man(y) & DoingPose(x) -> BeingWatchedBy(x, y))	There is no man in a pose being watched by another man	not exists x. exists y. (Man(x) & Man(y) & Pose(x) & Pose(y) & Watching(y, x))	c	False	False
461	A man is posing to be watched by another man	exists x. exists y. (Man(x) & Man(y) & Posing(x) & Watching(y, x))	A man doing a pose is being watched by another man	exists x.exists y. (Man(x) & Man(y) & DoingPose(x) -> BeingWatchedBy(x, y))	e	False	False
462	A man in a shirt dyed purple is looking at a man in a black shirt who is doing a funny face	exists x. exists y. exists z. (Man(x) & Shirt(y) & Purple(y) & Man(z) & BlackShirt(z) -> (LookingAt(x, z) & DoingFunnyFace(z)))	A man in a pose is being amusedly watched by another man	exists x. exists y. (Man(x) & Man(y) & Pose(x) & Watches(y, x) -> AmusedlyWatched(x, y))	e	False	False
463	A man is posing to be watched by another man	exists x. exists y. (Man(x) & Man(y) & Posing(x) & Watching(y, x))	A man in a shirt dyed purple is looking at a man in a black shirt who is doing a funny face	exists x. exists y. exists z. (Man(x) & Shirt(y) & Purple(y) & Man(z) & BlackShirt(z) -> (LookingAt(x, z) & DoingFunnyFace(z)))	n	False	False
464	A man in a shirt dyed purple is looking at a man in a black shirt who is doing a face which looks funny	exists x. exists y. exists z. (Man(x) & Shirt(y) & Purple(y) & Man(z) & BlackShirt(z) & Face(z) -> (LookingAt(x, z) & DoingFace(z)))	A man doing a pose is being watched by another man	exists x.exists y. (Man(x) & Man(y) & DoingPose(x) -> BeingWatchedBy(x, y))	e	False	False
465	A man doing a pose is being watched by another man	exists x.exists y. (Man(x) & Man(y) & DoingPose(x) -> BeingWatchedBy(x, y))	A man in a purple shirt is dying another shirt black, which has a man looking at a dog doing a funny face painted on it.	exists x. exists y. exists z. (Man(x) & PurpleShirt(x) & Shirt(y) & Black(y) & Man(z) & Dog(z) & FunnyFace(z) -> (Dying(x, y) & LookingAt(z, x)))	n	False	False
466	A man in a shirt dyed purple is looking at a man in a black shirt who is doing a funny face	exists x. exists y. exists z. (Man(x) & Shirt(y) & Purple(y) & Man(z) & BlackShirt(z) -> (LookingAt(x, z) & DoingFunnyFace(z)))	A man doing a pose is being watched by another man	exists x.exists y. (Man(x) & Man(y) & DoingPose(x) -> BeingWatchedBy(x, y))	e	False	False
467	A man is abruptly falling off a horse on a track laid in the wild	exists x. exists y. exists z. (Man(x) & Horse(y) & Track(z) & AbruptlyFallingOff(x, y, z))	A man is falling off a horse on a track and is laid in the wild	exists x. (Man(x) & FallingOffHorse(x) & OnTrack(x) & LaidInWild(x))	e	False	False
468	A man is falling off a horse on a track and is laid in the wild	exists x. (Man(x) & FallingOffHorse(x) & OnTrack(x) & LaidInWild(x))	A man is getting on a horse on a track laid in the wild	exists x. exists y. exists z. (Man(x) & Horse(y) & Track(z) & LaidInWild(z) & GetsOn(x, y, z))	e	False	False
469	A horse is tossing the cowboy wearing pants of blue and red color	exists x.exists y. (Horse(x) & Cowboy(y) -> Tossing(x, y, BluePants, RedPants))	A man is laying a cover over a wild horse that is falling on the track	exists x.exists y.exists z. (Man(x) & WildHorse(y) & Track(z) -> LaysCoverOver(x, y, z))	n	False	False
470	The cowboy in blue and red pants is being tossed by a horse	exists x.exists y. (Cowboy(x) & Horse(y) & BluePants(x) & RedPants(x) -> BeingTossedBy(x, y))	A man is falling off a horse on a track and is laid in the wild	exists x. (Man(x) & FallingOffHorse(x) & OnTrack(x) & LaidInWild(x))	n	False	False
471	There is no horse tossing the cowboy in red and blue pants	not exists x. (Horse(x) & Cowboy(y) & RedPants(y) & BluePants(y) & Tosses(x, y))	A man is falling off a horse on a track and is laid in the wild	exists x. (Man(x) & FallingOffHorse(x) & OnTrack(x) & LaidInWild(x))	n	False	False
472	An adult is in the amphitheater and is talking seriously to a boy	exists x.exists y. (Adult(x) & Amphitheater(y) & In(x, y) & TalkingTo(x, y) -> SeriousTalk(x, y))	An adult is in the amphitheater and is talking to a boy	exists x. exists y. (Adult(x) & Amphitheater(y) & In(x, y) & TalkingTo(x, y))	e	False	False
473	The man and the boy are standing at the bottom of the stairs, which are outdoors	exists x. exists y. exists z. (Man(x) & Boy(y) & Stairs(z) & StandingAtBottom(x, z) & StandingAtBottom(y, z) -> Outdoors(z))	The man and the boy are standing at the top of the stairs, which are outdoors	exists x. exists y. exists z. (Man(x) & Boy(y) & Stairs(z) & StandingAtTop(x, z) & StandingAtTop(y, z) -> Outdoors(z))	c	False	False
474	An adult is in the amphitheater and is talking to a boy	exists x. exists y. (Adult(x) & Amphitheater(y) & In(x, y) & TalkingTo(x, y))	A man and a boy are standing at the bottom of some stairs, which are outdoors	exists x. exists y. exists z. (Man(x) & Boy(y) & Stairs(z) & StandingAtBottom(x, z) & StandingAtBottom(y, z) & Outdoors(z))	n	False	False
475	An adult is in the amphitheater and is talking to a boy	exists x. exists y. (Adult(x) & Amphitheater(y) & In(x, y) & TalkingTo(x, y))	The man and the boy are standing at the top of the stairs, which are outdoors	exists x. exists y. exists z. (Man(x) & Boy(y) & Stairs(z) & StandingAtTop(x, z) & StandingAtTop(y, z) -> Outdoors(z))	n	False	False
476	The man and the boy are standing at the bottom of the stairs, which are outdoors	exists x. exists y. exists z. (Man(x) & Boy(y) & Stairs(z) & StandingAtBottom(x, z) & StandingAtBottom(y, z) -> Outdoors(z))	An adult is in the amphitheater and is talking seriously to a boy	exists x.exists y. (Adult(x) & Amphitheater(y) & In(x, y) & TalkingTo(x, y) -> SeriousTalk(x, y))	n	False	False
477	A talk about an adult and a boy is given in the amphitheater	exists x.exists y.exists z. (Adult(x) & Boy(y) & Amphitheater(z) -> TalkGiven(x, y, z))	The man and the boy are standing at the bottom of the stairs, which are outdoors	exists x. exists y. exists z. (Man(x) & Boy(y) & Stairs(z) & StandingAtBottom(x, z) & StandingAtBottom(y, z) -> Outdoors(z))	n	False	False
478	A boy in a red shirt is in front of a long blue wall and is suspiciously raising an eyebrow at the camera	exists x.exists y.exists z. (Boy(x) & RedShirt(x) & LongBlueWall(y) & Camera(z) -> (InFrontOf(x, y) & SuspiciouslyRaisingEyebrow(x, z)))	A boy in a red shirt is in front a wall, which is long and blue, and is suspiciously raising an eyebrow at the camera	exists x.exists y.exists z. (Boy(x) & RedShirt(x) & Wall(y) & LongAndBlue(y) & SuspiciouslyRaisingEyebrow(x, z) & Camera(z) -> InFrontOf(x, y))	e	False	False
479	A boy is standing in front of the building painted blue, in the space reserved for handicapped people	exists x.exists y.exists z. (Boy(x) & Building(y) & Space(z) & PaintedBlue(y) & ReservedForHandicapped(z) -> StandingInFrontOf(x, y, z))	A boy is standing in front of the blue building in the space reserved for handicapped people	exists x.exists y.exists z. (Boy(x) & BlueBuilding(y) & SpaceReservedForHandicapped(z) -> StandingInFrontOf(x, y, z))	e	False	False
480	A boy is standing in front of the building painted blue, in the space reserved for handicapped people	exists x.exists y.exists z. (Boy(x) & Building(y) & Space(z) & PaintedBlue(y) & ReservedForHandicapped(z) -> StandingInFrontOf(x, y, z))	A boy in a red shirt is in front of a long blue wall and is suspiciously raising an eyebrow at the camera	exists x.exists y.exists z. (Boy(x) & RedShirt(x) & LongBlueWall(y) & Camera(z) -> (InFrontOf(x, y) & SuspiciouslyRaisingEyebrow(x, z)))	n	False	False
481	A boy in a red shirt is in front a wall, which is long and blue, and is suspiciously raising an eyebrow at the camera	exists x.exists y.exists z. (Boy(x) & RedShirt(x) & Wall(y) & LongAndBlue(y) & SuspiciouslyRaisingEyebrow(x, z) & Camera(z) -> InFrontOf(x, y))	A boy is standing in front of the blue building in the space reserved for handicapped people	exists x.exists y.exists z. (Boy(x) & BlueBuilding(y) & SpaceReservedForHandicapped(z) -> StandingInFrontOf(x, y, z))	n	False	False
482	A boy in a red shirt is behind a long blue wall and is lowering an eyebrow, facing the camera	exists x. (Boy(x) & WearsRedShirt(x) -> (BehindLongBlueWall(x) & LowersEyebrow(x) & FacesCamera(x)))	A boy is standing in front of the blue building in the space reserved for handicapped people	exists x.exists y.exists z. (Boy(x) & BlueBuilding(y) & SpaceReservedForHandicapped(z) -> StandingInFrontOf(x, y, z))	n	False	False
483	The Jockeys are racing horses on the field, which is completely green	exists x.exists y.exists z. (Jockey(x) & Horse(y) & Field(z) -> (RacesOn(x, y, z) & Green(z)))	A few horses are racing furiously over the green grass and jumping the obstacle	exists x.exists y.exists z. (Horse(x) & Horse(y) & Horse(z) & Racing(x) & Racing(y) & Racing(z) & GreenGrass(x) & GreenGrass(y) & GreenGrass(z) & Obstacle(x) & Obstacle(y) & Obstacle(z))	n	False	False
484	Some horses are resting on the green grass	exists x. (Horse(x) & RestingOn(x, GreenGrass))	The Jockeys are racing horses on the field, which is completely green	exists x.exists y.exists z. (Jockey(x) & Horse(y) & Field(z) -> (RacesOn(x, y, z) & Green(z)))	n	False	False
485	The Jockeys are riding horses on the field, which is completely green	exists x.exists y.exists z. (Jockey(x) & Horse(y) & Field(z) -> RidingOn(x, y, z))	Some horses are racing furiously over the green grass and jumping an obstacle	exists x.exists y.exists z. (Horse(x) & GreenGrass(y) & Obstacle(z) & Racing(x, y) & Jumping(x, z))	n	False	False
486	Some horses are racing furiously over the green grass and jumping an obstacle	exists x.exists y.exists z. (Horse(x) & GreenGrass(y) & Obstacle(z) & Racing(x, y) & Jumping(x, z))	The Jockeys are racing horses on the field, which is completely green	exists x.exists y.exists z. (Jockey(x) & Horse(y) & Field(z) -> (RacesOn(x, y, z) & Green(z)))	n	False	False
487	A woman is wearing sunglasses of large size and is holding newspapers in both hands	exists x. (Woman(x) & WearingLargeSunglasses(x) & HoldingNewspapers(x))	A newspaper is featuring a woman with large sized hands holding sunglasses and wearing a coat	exists x.exists y.exists z. (Newspaper(x) & Woman(y) & LargeSizedHands(y) & Sunglasses(z) & Coat(w) -> Features(x, y, z, w))	n	False	False
488	An old woman is wearing a rose patterned shirt and is clumsily carrying two newspapers	exists x. (OldWoman(x) & WearingRosePatternedShirt(x) & ClumsilyCarryingNewspapers(x))	An old woman is wearing a shirt with a rose pattern upon it and is clumsily carrying two newspapers	exists x. (OldWoman(x) & WearingShirt(x) & RosePattern(x) & CarryingNewspapers(x) & Clumsy(x))	e	False	False
489	An old woman is shirtless and is clumsily dropping two newspapers	exists x. (OldWoman(x) & Shirtless(x) & ClumsilyDroppingNewspapers(x, 2))	An old woman is wearing a rose patterned shirt and is clumsily carrying two newspapers	exists x. (OldWoman(x) & WearingRosePatternedShirt(x) & ClumsilyCarryingNewspapers(x))	c	False	False
490	An old woman is shirtless and is clumsily dropping two newspapers	exists x. (OldWoman(x) & Shirtless(x) & ClumsilyDroppingNewspapers(x, 2))	A woman is wearing sunglasses of large size and is holding newspapers in both hands	exists x. (Woman(x) & WearingLargeSunglasses(x) & HoldingNewspapers(x))	n	False	False
491	An old woman is wearing a rose patterned shirt and is clumsily carrying two newspapers	exists x. (OldWoman(x) & WearingRosePatternedShirt(x) & ClumsilyCarryingNewspapers(x))	A newspaper is featuring a woman with large sized hands holding sunglasses and wearing a coat	exists x.exists y.exists z. (Newspaper(x) & Woman(y) & LargeSizedHands(y) & Sunglasses(z) & Coat(w) -> Features(x, y, z, w))	n	False	False
492	One person who is practicing snowboarding jumps into the air	exists x. (Person(x) & PracticingSnowboarding(x) -> JumpsIntoAir(x))	A person who is practicing snowboarding jumps into the air	exists x. (PracticesSnowboarding(x) -> JumpsIntoAir(x))	e	False	False
493	A practicing jumper is tossing a person's snowboard into the air	exists x.exists y.exists z. (PracticingJumper(x) & Person(y) & Snowboard(z) -> TossesIntoAir(x, y, z))	A person who is practicing snowboarding jumps into the air	exists x. (PracticesSnowboarding(x) -> JumpsIntoAir(x))	n	False	False
494	The snowboarder is leaping fearlessly over white snow	exists x. (Snowboarder(x) -> LeapingFearlesslyOverWhiteSnow(x))	The snowboarder is leaping over white snow	exists x. (Snowboarder(x) -> LeapingOverWhiteSnow(x))	e	False	False
495	The snowboarder isn't leaping over white snow	not exists x. (Snowboarder(x) & LeapingOverWhiteSnow(x))	The snowboarder is leaping over white snow	exists x. (Snowboarder(x) -> LeapingOverWhiteSnow(x))	c	False	False
496	A person who is practicing snowboarding jumps into the air	exists x. (PracticesSnowboarding(x) -> JumpsIntoAir(x))	A leap over white snow is greatly appealing to the snowboarders	exists x. (LeapOverWhiteSnow(x) -> AppealingToSnowboarders(x))	n	False	False
497	The snowboarder is leaping over white snow	exists x. (Snowboarder(x) -> LeapingOverWhiteSnow(x))	One person who is practicing snowboarding jumps into the air	exists x. (Person(x) & PracticingSnowboarding(x) -> JumpsIntoAir(x))	e	False	False
498	A person who is practicing snowboarding falls from the air	exists x. (PracticingSnowboarding(x) -> FallsFromAir(x))	The snowboarder is leaping over white snow	exists x. (Snowboarder(x) -> LeapingOverWhiteSnow(x))	n	False	False
499	A dog is near the red ball in the air	exists x.exists y. (Dog(x) & RedBall(y) & Near(x, y))	A dog, which is small, is playing tirelessly on the green grass	exists x. (Dog(x) & Small(x) -> PlayingTirelesslyOnGreenGrass(x))	n	False	False
500	A dog is jumping in the air to catch a red ball	exists x. exists y. exists z. (Dog(x) & RedBall(y) & Air(z) & JumpsIn(x, y, z))	A dog, which is small, is playing on the green grass	exists x. (Dog(x) & Small(x) -> PlayingOnGreenGrass(x))	n	False	False
501	The person is riding a motorbike on a sandy track	exists x. (Person(x) & RidingMotorbike(x) & OnSandyTrack(x))	The person is riding a motorbike on a track on the sand	exists x. exists y. exists z. (Person(x) & Motorbike(y) & Track(z) & RidingOn(x, y, z))	e	False	False
502	The person isn't riding a motorbike on a sandy track	not exists x. (Person(x) & RidingMotorbike(x) & OnSandyTrack(x))	The person is riding a motorbike on a sandy track	exists x. (Person(x) & RidingMotorbike(x) & OnSandyTrack(x))	c	False	True
503	A motorbike rider is jumping over a person on a sandy track	exists x.exists y.exists z. (MotorbikeRider(x) & Person(y) & SandyTrack(z) -> JumpsOver(x, y, z))	The person is riding a motorbike on a sandy track	exists x. (Person(x) & RidingMotorbike(x) & OnSandyTrack(x))	n	False	False
504	A person is riding a motorbike in the event related to motocross	exists x.exists y. (Person(x) & Motorbike(y) & MotocrossEvent(z) -> RidingIn(x, y, z))	There is no person riding a motorbike in the event related to motocross	not exists x. (Person(x) & RidingMotorbike(x) & Event(e) & Motocross(e) & ParticipatingIn(x, e))	c	False	False
505	A person is riding a motorbike in the event related to motocross	exists x.exists y. (Person(x) & Motorbike(y) & MotocrossEvent(z) -> RidingIn(x, y, z))	A motocross rider is giving a motorbike to a person at an event	exists x.exists y.exists z. (MotocrossRider(x) & Motorbike(y) & Event(z) -> GivesTo(x, y, z))	n	False	False
506	The person is riding a motorbike on a sandy track	exists x. (Person(x) & RidingMotorbike(x) & OnSandyTrack(x))	A motocross rider is giving a motorbike to a person at an event	exists x.exists y.exists z. (MotocrossRider(x) & Motorbike(y) & Event(z) -> GivesTo(x, y, z))	n	False	False
507	The person is riding a motorbike on a track on the sand	exists x. exists y. exists z. (Person(x) & Motorbike(y) & Track(z) & RidingOn(x, y, z))	A person is riding a motorbike in the event related to motocross	exists x.exists y. (Person(x) & Motorbike(y) & MotocrossEvent(z) -> RidingIn(x, y, z))	n	False	False
508	The person is riding a motorbike on a sandy track	exists x. (Person(x) & RidingMotorbike(x) & OnSandyTrack(x))	A person is riding a motorbike in the event related to motocross	exists x.exists y. (Person(x) & Motorbike(y) & MotocrossEvent(z) -> RidingIn(x, y, z))	n	False	False
509	A pink shirt with white writing on it is being worn by a girl who is lying in the grass	exists x.exists y. (PinkShirt(x) & WhiteWriting(x) & Girl(y) & Wearing(y, x) & LyingInGrass(y) -> WearingShirt(y, x))	A girl is wearing a pink shirt with white writing on it and is lying in the grass	exists x. (Girl(x) & WearingPinkShirt(x) & WhiteWriting(x) & LyingInGrass(x))	e	False	False
510	A girl is wearing a pink shirt with white writing on it and is lying in the grass	exists x. (Girl(x) & WearingPinkShirt(x) & WhiteWriting(x) & LyingInGrass(x))	A girl is naked and is standing on the grass	exists x. (Girl(x) & Naked(x) & StandingOnGrass(x))	n	False	False
511	The young girl with a shirt dyed pink is peacefully lying on the grass	exists x. (YoungGirl(x) & ShirtDyedPink(x) -> LyingOnGrass(x))	The young girl with a pink shirt is peacefully lying on the grass	exists x. (YoungGirl(x) & PinkShirt(x) -> LyingOnGrass(x))	e	False	False
512	The young peaceful girl is lying about the grass found in the pink shirt	exists x.exists y.exists z. (YoungPeacefulGirl(x) & Grass(y) & PinkShirt(z) -> LyingAbout(x, y, z))	The young girl with a pink shirt is peacefully lying on the grass	exists x. (YoungGirl(x) & PinkShirt(x) -> LyingOnGrass(x))	e	False	False
513	A girl is wearing a pink shirt with white writing on it and is lying in the grass	exists x. (Girl(x) & WearingPinkShirt(x) & WhiteWriting(x) & LyingInGrass(x))	The young girl with a pink shirt isn't peacefully lying on the grass	not exists x. (YoungGirl(x) & PinkShirt(x) & LyingOnGrass(x) & Peaceful(x))	n	False	False
514	The young peaceful girl is lying about the grass found in the pink shirt	exists x.exists y.exists z. (YoungPeacefulGirl(x) & Grass(y) & PinkShirt(z) -> LyingAbout(x, y, z))	A girl is wearing a pink shirt with white writing on it and is lying in the grass	exists x. (Girl(x) & WearingPinkShirt(x) & WhiteWriting(x) & LyingInGrass(x))	n	False	False
515	The young girl with a pink shirt is peacefully lying on the grass	exists x. (YoungGirl(x) & PinkShirt(x) -> LyingOnGrass(x))	A pink shirt with white writing on it is being worn by a girl who is lying in the grass	exists x.exists y. (PinkShirt(x) & WhiteWriting(x) & Girl(y) & Wearing(y, x) & LyingInGrass(y) -> WearingShirt(y, x))	n	False	False
516	The young girl with a pink shirt is peacefully lying on the grass	exists x. (YoungGirl(x) & PinkShirt(x) -> LyingOnGrass(x))	A girl is wearing a pink shirt with white writing on it and is lying in the grass	exists x. (Girl(x) & WearingPinkShirt(x) & WhiteWriting(x) & LyingInGrass(x))	n	False	False
517	A dog, which is large and gray, is difficultly carrying a ball in its mouth and running across the grass	exists x. (Dog(x) & Large(x) & Gray(x) -> (CarriesBallInMouth(x) & RunsAcrossGrass(x)))	A dog, which is large and gray, is carrying a ball in its mouth and running across the grass	exists x. (Dog(x) & Large(x) & Gray(x) -> (CarryingBall(x) & RunningAcrossGrass(x)))	e	False	False
518	A dog, which is large and gray, is dropping a ball from its mouth and stopping in the grass	exists x. (Dog(x) & Large(x) & Gray(x) -> (DropsBallFromMouth(x) & StopsInGrass(x)))	A dog, which is large and gray, is carrying a ball in its mouth and running across the grass	exists x. (Dog(x) & Large(x) & Gray(x) -> (CarryingBall(x) & RunningAcrossGrass(x)))	n	False	False
519	A large dog is running on the grass with a tennis ball in its mouth	exists x. (LargeDog(x) -> (exists y. (Grass(y) & RunningOn(x, y)) & exists z. (TennisBall(z) & HasInMouth(x, z))))	A dog, which is large and gray, is dropping a ball from its mouth and stopping in the grass	exists x. (Dog(x) & Large(x) & Gray(x) -> (DropsBallFromMouth(x) & StopsInGrass(x)))	n	False	False
520	A woman is riding a brown horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y) & Brown(y))	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	e	True	False
521	A man is opening a package that contains headphones	exists x. exists y. (Man(x) & Package(y) & ContainsHeadphones(y) & Opening(x, y))	A woman is riding a brown horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y) & Brown(y))	n	False	False
522	There is no woman riding a horse	not exists x. (Woman(x) & RidingHorse(x))	A man is opening a package that contains headphones	exists x. exists y. (Man(x) & Package(y) & ContainsHeadphones(y) & Opening(x, y))	n	False	False
523	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	A man is opening a package that doesn't contain headphones	exists x. exists y. (Man(x) & Package(y) & not ContainsHeadphones(y) -> Opening(x, y))	n	False	False
524	A man is opening a small package that contains headphones	exists x. exists y. (Man(x) & SmallPackage(y) & ContainsHeadphones(y) & Opens(x, y))	A man is opening a package that contains headphones	exists x. exists y. (Man(x) & Package(y) & ContainsHeadphones(y) & Opening(x, y))	e	False	False
525	A man is opening a package that contains headphones	exists x. exists y. (Man(x) & Package(y) & ContainsHeadphones(y) & Opening(x, y))	A man is opening a package that doesn't contain headphones	exists x. exists y. (Man(x) & Package(y) & not ContainsHeadphones(y) -> Opening(x, y))	c	True	False
526	There is no man singing and playing the guitar	not exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	c	False	True
527	A man is opening a small package that contains headphones	exists x. exists y. (Man(x) & SmallPackage(y) & ContainsHeadphones(y) & Opens(x, y))	A man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	n	False	False
528	A man is opening a package that doesn't contain headphones	exists x. exists y. (Man(x) & Package(y) & not ContainsHeadphones(y) -> Opening(x, y))	A man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	n	False	False
529	A man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is opening a package that contains headphones	exists x. exists y. (Man(x) & Package(y) & ContainsHeadphones(y) & Opening(x, y))	n	False	False
530	A dog is riding a skateboard	exists x. exists y. (Dog(x) & Skateboard(y) & Riding(x, y))	An animal is riding a skateboard	exists x. exists y. (Animal(x) & Skateboard(y) & Riding(x, y))	e	True	False
531	There is no dog riding a skateboard	not exists x. (Dog(x) & RidingSkateboard(x))	A dog is riding a skateboard	exists x. exists y. (Dog(x) & Skateboard(y) & Riding(x, y))	c	False	False
532	A sea turtle is hunting for fish	exists x. (SeaTurtle(x) -> HuntsForFish(x))	A sea turtle is hunting for food	exists x. (SeaTurtle(x) -> HuntingForFood(x))	e	False	False
533	A sea turtle is not hunting for fish	exists x. (SeaTurtle(x) -> not HuntingForFish(x))	A sea turtle is hunting for fish	exists x. (SeaTurtle(x) -> HuntsForFish(x))	c	False	False
534	The turtle is following the fish	exists x. exists y. (Turtle(x) & Fish(y) & Follows(x, y))	The turtle isn't following the fish	not exists x. (Turtle(x) & Follows(x, y) & Fish(y))	c	False	False
535	The turtle is following the fish	exists x. exists y. (Turtle(x) & Fish(y) & Follows(x, y))	The fish is following the turtle	exists x. exists y. (Fish(x) & Turtle(y) & Follows(x, y))	c	False	False
536	A sea turtle is hunting for fish	exists x. (SeaTurtle(x) -> HuntsForFish(x))	The turtle is following the red fish	exists x.exists y. (Turtle(x) & RedFish(y) & Follows(x, y))	n	False	False
537	The fish is following the turtle	exists x. exists y. (Fish(x) & Turtle(y) & Follows(x, y))	A sea turtle is hunting for fish	exists x. (SeaTurtle(x) -> HuntsForFish(x))	n	False	False
538	The turtle is following the fish	exists x. exists y. (Turtle(x) & Fish(y) & Follows(x, y))	A sea turtle is not hunting for fish	exists x. (SeaTurtle(x) -> not HuntingForFish(x))	n	False	False
539	A sea turtle is hunting for fish	exists x. (SeaTurtle(x) -> HuntsForFish(x))	The turtle is following the fish	exists x. exists y. (Turtle(x) & Fish(y) & Follows(x, y))	n	False	False
540	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	The car is being driven by a man	exists x. exists y. (Car(x) & Man(y) & Driving(y, x))	e	True	False
541	There is no man driving the car	not exists x. (Man(x) & DrivingCar(x))	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	c	False	False
542	There is no woman dipping a shrimp in batter	not exists x. (Woman(x) & DippingShrimp(x))	A woman is dipping a shrimp in batter	exists x. exists y. (Woman(x) & Shrimp(y) & Dipping(x, y))	c	False	False
543	A woman is dipping a prawn in batter	exists x. exists y. exists z. (Woman(x) & Prawn(y) & Batter(z) & Dipping(x, y, z))	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	n	False	False
544	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	There is no woman dipping a shrimp in batter	not exists x. (Woman(x) & DippingShrimp(x))	n	False	False
545	A woman is dipping a shrimp in batter	exists x. exists y. (Woman(x) & Shrimp(y) & Dipping(x, y))	There is no man driving the car	not exists x. (Man(x) & DrivingCar(x))	n	False	False
546	A man is playing a guitar under a windows	exists x. exists y. exists z. (Man(x) & Guitar(y) & Windows(z) & PlaysUnder(x, y, z))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
547	A man is playing a piano at a concert	exists x. exists y. exists z. (Man(x) & Piano(y) & Concert(z) & PlayingAt(x, y, z))	A man is playing a piano	exists x. (Man(x) & PlayingPiano(x))	e	False	False
548	A man is playing a piano	exists x. (Man(x) & PlayingPiano(x))	There is no man playing a piano	not exists x. (Man(x) & PlaysPiano(x))	c	False	False
549	A man is playing a piano at a concert	exists x. exists y. exists z. (Man(x) & Piano(y) & Concert(z) & PlayingAt(x, y, z))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
550	A man is playing a piano	exists x. (Man(x) & PlayingPiano(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
551	A woman is removing ingredients from a bowl	exists x. exists y. (Woman(x) & Bowl(y) -> RemovingIngredients(x, y))	A woman is adding ingredients to a bowl	exists x. exists y. (Woman(x) & Bowl(y) -> AddsIngredientsTo(x, y))	c	False	False
552	A woman is cracking some eggs into a bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	A woman is cracking some eggs into a container	exists x. exists y. exists z. (Woman(x) & Egg(y) & Container(z) & CracksInto(x, y, z))	e	True	False
553	A woman is cracking some eggs into a bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	A woman is cracking some eggs outside a bowl	exists x. (Woman(x) & CrackingEggs(x))	n	False	False
554	A woman is adding ingredients to a big bowl	exists x. (Woman(x) -> exists y. (BigBowl(y) & AddingIngredients(x, y)))	A woman is cracking some eggs into a bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	n	False	False
555	A woman is cracking some eggs into a bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	A woman is removing ingredients from a bowl	exists x. exists y. (Woman(x) & Bowl(y) -> RemovingIngredients(x, y))	n	False	False
556	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	A carrot is being sliced by a woman	exists x. exists y. (Carrot(x) & Woman(y) & Slicing(y, x))	e	True	False
557	A potato is being sliced by a woman	exists x. exists y. (Potato(x) & Woman(y) & Slicing(y, x))	A woman is slicing a potato	exists x. (Woman(x) & Slicing(x, potato))	e	False	False
558	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	There is no woman slicing a potato	not exists x. (Woman(x) & Slicing(x, potato))	n	False	False
559	A woman is slicing a potato	exists x. (Woman(x) & Slicing(x, potato))	There is no woman slicing a carrot	not exists x. (Woman(x) & SlicingCarrot(x))	n	False	False
560	A woman is not boiling shrimps	exists x. (Woman(x) & not BoilingShrimps(x))	A woman is boiling shrimps	exists x. (Woman(x) & Boiling(x, Shrimps))	c	False	False
561	A woman is cooking prawns	exists x. (Woman(x) & Cooking(x, Prawns))	A woman is combing her hair	exists x. (Woman(x) & CombingHair(x))	n	False	False
562	A woman is boiling shrimps	exists x. (Woman(x) & Boiling(x, Shrimps))	A woman is combing her hair	exists x. (Woman(x) & CombingHair(x))	n	False	False
563	A man and a woman are walking together through wooded areas	exists x.exists y. (Man(x) & Woman(y) -> WalkTogether(x, y))	A man and a woman are walking together through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingTogether(x, y) & InWoods(x, y))	e	False	False
564	A man and a woman are walking together through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingTogether(x, y) & InWoods(x, y))	A man and a woman are walking together through the city	exists x. exists y. (Man(x) & Woman(y) & WalkingTogether(x, y) & City(z) & In(x, z) & In(y, z))	n	False	False
565	A man and a woman are walking together through the city	exists x. exists y. (Man(x) & Woman(y) & WalkingTogether(x, y) & City(z) & In(x, z) & In(y, z))	A man and a woman are walking through a wooded area	exists x. exists y. (Man(x) & Woman(y) & Walking(x, y) & WoodedArea(x, y))	n	False	False
566	A man is speaking on a stage	exists x. exists y. (Man(x) & Stage(y) & SpeakingOn(x, y))	There is no man speaking on a stage	not exists x. (Man(x) & SpeakingOnStage(x))	c	False	False
567	A man is speaking about the stage	exists x. (Man(x) & SpeakingAboutStage(x))	A man is speaking on a stage	exists x. exists y. (Man(x) & Stage(y) & SpeakingOn(x, y))	n	False	False
568	A man is speaking on a podium	exists x. exists y. (Man(x) & Podium(y) & SpeakingOn(x, y))	A man is tanking on a stage in front of a crowd	exists x. exists y. exists z. (Man(x) & Stage(y) & Crowd(z) & TankingOn(x, y) & InFrontOf(x, z))	n	False	False
569	A man is speaking about the stage	exists x. (Man(x) & SpeakingAboutStage(x))	A man is speaking on a podium	exists x. exists y. (Man(x) & Podium(y) & SpeakingOn(x, y))	n	False	False
570	A man is speaking on a stage	exists x. exists y. (Man(x) & Stage(y) & SpeakingOn(x, y))	There is no man speaking on a podium	not exists x. (Man(x) & SpeakingOnPodium(x))	n	False	False
571	A man is speaking on a stage	exists x. exists y. (Man(x) & Stage(y) & SpeakingOn(x, y))	A podium is where a man is speaking	exists x. (Podium(x) -> exists y. (Man(y) & SpeakingAt(y, x)))	n	False	False
572	Two frightened boys are talking on the phone	exists x. exists y. (Frightened(x) & Frightened(y) & TalkingOnPhone(x, y))	Two boys are talking on the phone	exists x. exists y. (Boy(x) & Boy(y) & TalkingOnPhone(x, y))	e	False	False
573	Two boys are talking on the phone	exists x. exists y. (Boy(x) & Boy(y) & TalkingOnPhone(x, y))	Two boys are not talking on the phone	not exists x. exists y. (Boy(x) & Boy(y) & TalkingOnPhone(x, y))	c	False	True
574	Two frightened boys are talking on the phone	exists x. exists y. (Frightened(x) & Frightened(y) & TalkingOnPhone(x, y))	A woman is talking on a telephone	exists x. (Woman(x) & TalkingOnTelephone(x))	n	False	False
575	A woman is talking on a telephone	exists x. (Woman(x) & TalkingOnTelephone(x))	Two boys are not talking on the phone	not exists x. exists y. (Boy(x) & Boy(y) & TalkingOnPhone(x, y))	n	False	False
576	There is no monkey wading through a marsh	not exists x. (Monkey(x) & Wading(x) & Marsh(x))	A monkey is wading through a marsh	exists x. exists y. (Monkey(x) & Marsh(y) & WadingThrough(x, y))	c	False	False
577	A small monkey is walking in the river	exists x. (Monkey(x) & Small(x) & WalkingIn(x, river))	A small monkey is walking through water	exists x. (Monkey(x) & Small(x) & Walking(x) & Through(x, water))	e	False	False
578	A small monkey is walking through water	exists x. (Monkey(x) & Small(x) & Walking(x) & Through(x, water))	A monkey isn't walking through water	exists x. (Monkey(x) -> not WalkingThroughWater(x))	c	False	False
579	A monkey is wading through a marsh	exists x. exists y. (Monkey(x) & Marsh(y) & WadingThrough(x, y))	A monkey isn't walking through water	exists x. (Monkey(x) -> not WalkingThroughWater(x))	c	False	False
580	A small monkey is walking through water	exists x. (Monkey(x) & Small(x) & Walking(x) & Through(x, water))	A monkey is wading through a marsh	exists x. exists y. (Monkey(x) & Marsh(y) & WadingThrough(x, y))	n	False	False
581	A man is slicing a bun	exists x. exists y. (Man(x) & Bun(y) & Slicing(x, y))	A man is cutting a bun	exists x. exists y. (Man(x) & Bun(y) & Cutting(x, y))	e	False	False
582	A man is slicing a bun	exists x. exists y. (Man(x) & Bun(y) & Slicing(x, y))	There is no man slicing a bun	not exists x. (Man(x) & Slicing(x, bun))	c	False	False
583	A man is slicing a red tomato	exists x. exists y. (Man(x) & RedTomato(y) & Slicing(x, y))	A man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	e	False	False
584	A man is slicing a bun	exists x. exists y. (Man(x) & Bun(y) & Slicing(x, y))	There is no man slicing a tomato	not exists x. (Man(x) & Slicing(x, tomato))	n	False	False
585	A man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	There is no man slicing a bun	not exists x. (Man(x) & Slicing(x, bun))	n	False	False
586	A woman is dancing and singing in the rain	exists x. (Woman(x) & Dancing(x) & Singing(x) & InRain(x))	A woman is performing in the rain	exists x. (Woman(x) & PerformingInRain(x))	e	False	False
587	A woman is dancing and singing in the rain	exists x. (Woman(x) & Dancing(x) & Singing(x) & InRain(x))	There is no woman dancing and singing in the rain	not exists x. (Woman(x) & Dancing(x) & Singing(x) & InRain(x))	c	False	True
588	A woman is dancing and singing in the rain	exists x. (Woman(x) & Dancing(x) & Singing(x) & InRain(x))	A woman is dancing and singing alone	exists x. (Woman(x) & Dancing(x) & Singing(x) & Alone(x))	n	False	False
589	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	There is no woman peeling a potato	not exists x. (Woman(x) & PeelingPotato(x))	c	False	True
590	There is no woman slicing a tomato	not exists x. (Woman(x) & Slicing(x, tomato))	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	n	False	False
591	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	A woman is slicing a tomato	exists x. (Woman(x) & Slicing(x, tomato))	n	False	False
592	There is no woman mixing eggs	not exists x. (Woman(x) & MixingEggs(x))	A woman is mixing eggs	exists x. (Woman(x) & MixingEggs(x))	c	False	True
593	The hungry woman is eating	exists x. (Hungry(x) -> Eating(x))	The woman is eating	exists x. (Woman(x) & Eating(x))	e	False	False
594	The woman is eating	exists x. (Woman(x) & Eating(x))	The woman is drinking	exists x. (Woman(x) & Drinking(x))	n	False	False
595	A woman is mixing eggs	exists x. (Woman(x) & MixingEggs(x))	The woman is drinking	exists x. (Woman(x) & Drinking(x))	n	False	False
596	A woman is amalgamating eggs	exists x. (Woman(x) & AmalgamatingEggs(x))	The woman is eating	exists x. (Woman(x) & Eating(x))	n	False	False
597	The woman is eating	exists x. (Woman(x) & Eating(x))	There is no woman mixing eggs	not exists x. (Woman(x) & MixingEggs(x))	n	False	False
598	A band is performing on a stage	exists x.exists y. (Band(x) & Stage(y) -> PerformsOn(x, y))	A band is playing on a stage	exists x.exists y. (Band(x) & Stage(y) -> PlayingOn(x, y))	e	False	False
599	A band is not performing on a stage	exists x. (Band(x) -> not PerformingOnStage(x))	A band is performing on a stage	exists x.exists y. (Band(x) & Stage(y) -> PerformsOn(x, y))	c	False	False
600	A band is performing onstage	exists x. (Band(x) & PerformingOnstage(x))	A band is playing onstage	exists x. (Band(x) & PlayingOnstage(x))	e	False	False
601	A band is playing onstage	exists x. (Band(x) & PlayingOnstage(x))	There is no band playing	not exists x. (Band(x) & Playing(x))	c	False	False
602	A band is performing onstage	exists x. (Band(x) & PerformingOnstage(x))	A band is performing on a stage	exists x.exists y. (Band(x) & Stage(y) -> PerformsOn(x, y))	e	False	False
603	A band is performing on a stage	exists x.exists y. (Band(x) & Stage(y) -> PerformsOn(x, y))	There is no band playing	not exists x. (Band(x) & Playing(x))	c	False	False
604	A band is not performing on a stage	exists x. (Band(x) -> not PerformingOnStage(x))	A band is playing onstage	exists x. (Band(x) & PlayingOnstage(x))	c	False	False
605	A man is shaking a drink	exists x. (Man(x) & Shaking(x, drink))	A man is mixing	exists x. (Man(x) & Mixing(x))	n	False	False
606	A man is mowing a lawn	exists x. exists y. (Man(x) & Lawn(y) & Mowing(x, y))	A man is not mowing a lawn	exists x. (Man(x) & not MowingLawn(x))	c	False	False
607	A man is mixing	exists x. (Man(x) & Mixing(x))	A man is mowing a lawn	exists x. exists y. (Man(x) & Lawn(y) & Mowing(x, y))	n	False	False
608	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is moving gracefully	exists x. (Man(x) & MovingGracefully(x))	n	False	False
609	A man is sitting	exists x. (Man(x) & Sitting(x))	A man is dancing	exists x. (Dancer(x) & Man(x))	c	False	False
610	There is no man walking outside	not exists x. (Man(x) & WalkingOutside(x))	A man is walking outside	exists x. (Man(x) & Walking(x) & Outside(x))	c	False	False
611	A man is sitting	exists x. (Man(x) & Sitting(x))	A man is walking outside	exists x. (Man(x) & Walking(x) & Outside(x))	n	False	False
612	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is walking outside	exists x. (Man(x) & Walking(x) & Outside(x))	n	False	False
613	There is no cat swinging on a fan	not exists x. (Cat(x) & SwingingOnFan(x))	A cat is swinging on a fan	exists x. exists y. (Cat(x) & Fan(y) & SwingingOn(x, y))	c	False	False
614	A cat is stuck on a ceiling fan that is moving	exists x.exists y. (Cat(x) & CeilingFan(y) & StuckOn(x, y) -> Moving(y))	A cat is stuck on a moving ceiling fan	exists x. (Cat(x) & StuckOnCeilingFan(x))	e	False	False
615	A cat is stuck on a moving ceiling fan	exists x. (Cat(x) & StuckOnCeilingFan(x))	A cat is playing on a moving ceiling fan	exists x.exists y. (Cat(x) & CeilingFan(y) -> PlayingOn(x, y))	n	False	False
616	A cat is swinging on a fan	exists x. exists y. (Cat(x) & Fan(y) & SwingingOn(x, y))	A cat is stuck on a moving ceiling fan	exists x. (Cat(x) & StuckOnCeilingFan(x))	n	False	False
617	A man is making music with a flute	exists x. (Man(x) & MakingMusic(x, flute))	A man is playing flute	exists x. (Man(x) & PlayingFlute(x))	e	False	False
618	A man is playing baseball with a flute	exists x. exists y. (Man(x) & Flute(y) & Playing(x, y))	A man is playing flute	exists x. (Man(x) & PlayingFlute(x))	n	False	False
619	A man is playing soccer	exists x. (Man(x) & PlayingSoccer(x))	A man is playing a game with a ball	exists x. exists y. exists z. (Man(x) & Ball(y) & Game(z) & Plays(x, z, y))	e	False	False
620	There is no man playing soccer	not exists x. (Man(x) & PlaysSoccer(x))	A man is playing soccer	exists x. (Man(x) & PlayingSoccer(x))	c	False	False
621	A man is playing soccer	exists x. (Man(x) & PlayingSoccer(x))	A soccer man is playing piano	exists x. (SoccerMan(x) -> exists y. (Piano(y) & Playing(x, y)))	n	False	False
622	A soccer man is playing piano	exists x. (SoccerMan(x) -> exists y. (Piano(y) & Playing(x, y)))	A man is playing flute	exists x. (Man(x) & PlayingFlute(x))	n	False	False
623	There is no man playing flute	not exists x. (Man(x) & PlaysFlute(x))	A man is playing soccer	exists x. (Man(x) & PlayingSoccer(x))	n	False	False
624	A man is playing baseball with a flute	exists x. exists y. (Man(x) & Flute(y) & Playing(x, y))	A man is playing soccer	exists x. (Man(x) & PlayingSoccer(x))	n	False	False
625	A man is frying a tortilla	exists x. (Man(x) & FryingTortilla(x))	A man is frying food	exists x. (Man(x) & FryingFood(x))	e	False	False
626	There is no man frying a tortilla	not exists x. (Man(x) & FryingTortilla(x))	A man is frying a tortilla	exists x. (Man(x) & FryingTortilla(x))	c	False	True
627	A person is performing a card trick	exists x. (Person(x) & PerformsCardTrick(x))	Nobody is performing a card trick	not exists x. (PerformingCardTrick(x))	c	False	False
628	A person is doing a trick with some cards	exists x. exists y. exists z. (Person(x) & Trick(y) & Card(z) -> Doing(x, y, z))	A man is frying a tortilla	exists x. (Man(x) & FryingTortilla(x))	n	False	False
629	A man is frying a tortilla	exists x. (Man(x) & FryingTortilla(x))	Nobody is performing a card trick	not exists x. (PerformingCardTrick(x))	n	False	False
630	A person is performing a card trick	exists x. (Person(x) & PerformsCardTrick(x))	A man is frying food	exists x. (Man(x) & FryingFood(x))	n	False	False
631	A person is performing a card trick	exists x. (Person(x) & PerformsCardTrick(x))	There is no man frying a tortilla	not exists x. (Man(x) & FryingTortilla(x))	n	False	False
632	A boy is spanking a man with a plastic sword	exists x. exists y. exists z. (Boy(x) & Man(y) & PlasticSword(z) & Spanking(x, y, z))	A man is spanking a boy with a plastic sword	exists x. exists y. exists z. (Man(x) & Boy(y) & PlasticSword(z) & Spanking(x, y, z))	n	False	False
633	There is no man being hit	not exists x. (Man(x) & BeingHit(x))	A boy is whacking a man with a sword	exists x. exists y. exists z. (Boy(x) & Man(y) & Sword(z) & Whacking(x, y, z))	c	False	False
634	A boy is spanking a man with a plastic sword	exists x. exists y. exists z. (Boy(x) & Man(y) & PlasticSword(z) & Spanking(x, y, z))	A man is being hit by a kid with a weapon	exists x. exists y. exists z. (Man(x) & Kid(y) & Weapon(z) & BeingHit(y, x, z))	e	False	False
635	There is no man being hit	not exists x. (Man(x) & BeingHit(x))	A boy is spanking a man with a plastic sword	exists x. exists y. exists z. (Boy(x) & Man(y) & PlasticSword(z) & Spanking(x, y, z))	c	False	False
636	A boy is spanking a man with a toy weapon	exists x. exists y. exists z. (Boy(x) & Man(y) & ToyWeapon(z) & Spanking(x, y, z))	A boy is whacking a man with a sword	exists x. exists y. exists z. (Boy(x) & Man(y) & Sword(z) & Whacking(x, y, z))	n	False	False
637	A boy is spanking a man with a plastic sword	exists x. exists y. exists z. (Boy(x) & Man(y) & PlasticSword(z) & Spanking(x, y, z))	A boy is whacking a man with a sword	exists x. exists y. exists z. (Boy(x) & Man(y) & Sword(z) & Whacking(x, y, z))	e	False	False
638	The young lady is measuring the ankle of another woman	exists x.exists y. (YoungLady(x) & Woman(y) -> MeasuresAnkle(x, y))	The lady is measuring the ankle of another woman	exists x. exists y. (Lady(x) & Lady(y) & MeasuringAnkle(x, y))	e	False	False
639	The lady isn't measuring the ankle of another woman	not exists x. exists y. (Lady(x) & Lady(y) & MeasuringAnkle(x, y))	The lady is measuring the ankle of another woman	exists x. exists y. (Lady(x) & Lady(y) & MeasuringAnkle(x, y))	c	False	True
640	The woman is measuring a man	exists x. exists y. (Woman(x) & Man(y) & Measuring(x, y))	The woman is measuring the other woman	exists x. exists y. (Woman(x) & Woman(y) & Measuring(x, y))	n	False	False
641	The young lady is measuring the ankle of another woman	exists x.exists y. (YoungLady(x) & Woman(y) -> MeasuresAnkle(x, y))	The woman is measuring the other woman	exists x. exists y. (Woman(x) & Woman(y) & Measuring(x, y))	e	False	False
642	The woman is measuring the other woman	exists x. exists y. (Woman(x) & Woman(y) & Measuring(x, y))	The lady isn't measuring the ankle of another woman	not exists x. exists y. (Lady(x) & Lady(y) & MeasuringAnkle(x, y))	n	False	False
643	The lady is measuring the ankle of another woman	exists x. exists y. (Lady(x) & Lady(y) & MeasuringAnkle(x, y))	The woman is measuring the other woman	exists x. exists y. (Woman(x) & Woman(y) & Measuring(x, y))	e	False	False
644	A man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	A man is making a phone call	exists x. (Man(x) & MakingPhoneCall(x))	e	False	False
645	A man is hanging up the phone	exists x. (Man(x) & HangingUpPhone(x))	A man is making a call on a cell phone	exists x. exists y. (Man(x) & CellPhone(y) & MakingCallOn(x, y))	c	False	False
646	There is no man making a phone call	not exists x. (Man(x) & MakingPhoneCall(x))	A man is making a call on a cell phone	exists x. exists y. (Man(x) & CellPhone(y) & MakingCallOn(x, y))	c	False	False
647	A man is making a call on a cell phone	exists x. exists y. (Man(x) & CellPhone(y) & MakingCallOn(x, y))	A man is making a phone call	exists x. (Man(x) & MakingPhoneCall(x))	e	False	False
648	An animal is rolling from side to side in a garden	exists x. (Animal(x) & Rolling(x) & InGarden(x) -> SideToSide(x))	A dog is rolling from side to side	exists x. (Dog(x) -> RollingFromSideToSide(x))	n	False	False
649	A cute puppy is repeatedly rolling from side to side on its back	exists x. (Puppy(x) & RollingFromSideToSide(x) -> Cute(x))	A puppy is repeatedly rolling from side to side on its back	exists x. (Puppy(x) -> RepeatedlyRollsFromSideToSide(x))	e	False	False
650	A cute puppy is repeatedly rolling from side to side on its back	exists x. (Puppy(x) & RollingFromSideToSide(x) -> Cute(x))	A dog is rolling from side to side	exists x. (Dog(x) -> RollingFromSideToSide(x))	e	False	False
651	There is no dog rolling from side to side	not exists x. (Dog(x) & RollingFromSideToSide(x))	A puppy is repeatedly rolling from side to side on its back	exists x. (Puppy(x) -> RepeatedlyRollsFromSideToSide(x))	c	False	False
652	A puppy is repeatedly rolling from side to side on its back	exists x. (Puppy(x) -> RepeatedlyRollsFromSideToSide(x))	A dog is rolling from side to side	exists x. (Dog(x) -> RollingFromSideToSide(x))	e	False	False
653	The machine is shaving the end of a pencil	exists x.exists y. (Machine(x) & Pencil(y) -> ShavingEnd(x, y))	A pencil is being shaved by the machine	exists x. exists y. (Pencil(x) & Machine(y) & Shaves(y, x))	e	False	False
654	A pencil is being shaved by the machine	exists x. exists y. (Pencil(x) & Machine(y) & Shaves(y, x))	A machine is sharpening a pencil	exists x. exists y. (Machine(x) & Pencil(y) & Sharpening(x, y))	e	False	False
655	The machine is not shaving a pencil	exists x. (Machine(x) -> not ShavingPencil(x))	A machine is sharpening a pencil	exists x. exists y. (Machine(x) & Pencil(y) & Sharpening(x, y))	c	False	False
656	The machine is shaving the end of a pencil	exists x.exists y. (Machine(x) & Pencil(y) -> ShavingEnd(x, y))	A pencil is being sharpened	exists x. (Pencil(x) & BeingSharpened(x))	e	False	False
657	A machine is sharpening a pencil	exists x. exists y. (Machine(x) & Pencil(y) & Sharpening(x, y))	The machine is shaving the end of a pencil	exists x.exists y. (Machine(x) & Pencil(y) -> ShavingEnd(x, y))	e	False	False
658	A man is playing a keyboard in a park	exists x. exists y. exists z. (Man(x) & Keyboard(y) & Park(z) & PlayingIn(x, y, z))	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	e	False	False
659	A pianist is playing the keyboard	exists x. (Pianist(x) -> PlayingKeyboard(x))	A person is playing the keyboard	exists x. (Person(x) & PlayingKeyboard(x))	e	False	False
660	A person is not playing the keyboard	not exists x. (Person(x) & PlaysKeyboard(x))	A person is playing the keyboard	exists x. (Person(x) & PlayingKeyboard(x))	c	False	False
661	A person is playing the keyboard	exists x. (Person(x) & PlayingKeyboard(x))	There is no man playing a keyboard	not exists x. (Man(x) & PlaysKeyboard(x))	n	False	False
662	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	A person is playing the keyboard	exists x. (Person(x) & PlayingKeyboard(x))	e	True	False
663	A man is rinsing a large steak	exists x. exists y. (Man(x) & Steak(y) & Large(y) & Rinsing(x, y))	A man is not rinsing a large steak	exists x. (Man(x) & not Rinsing(x, LargeSteak))	c	False	False
664	A person is riding a motorcycle	exists x. exists y. (Person(x) & Motorcycle(y) & Riding(x, y))	A person is chopping a red onion	exists x. (Person(x) & Chopping(x, redOnion))	n	False	False
665	A person is not chopping an onion	not exists x. (Person(x) & ChoppingOnion(x))	A person is riding a motorcycle	exists x. exists y. (Person(x) & Motorcycle(y) & Riding(x, y))	n	False	False
666	A person is riding a motorcycle	exists x. exists y. (Person(x) & Motorcycle(y) & Riding(x, y))	A person is chopping an onion	exists x. (Person(x) & Chopping(x, Onion))	n	False	False
667	A sad man is crying	exists x. (Man(x) & Sad(x) -> Crying(x))	A man is crying	exists x. (Man(x) & Crying(x))	e	False	False
668	A man is laughing	exists x. (Man(x) & Laughing(x))	A man is crying	exists x. (Man(x) & Crying(x))	n	False	False
669	There is no man screaming	not exists x. (Man(x) & Screaming(x))	A man is screaming	exists x. (Man(x) & Screaming(x))	c	False	True
670	A man is crying	exists x. (Man(x) & Crying(x))	A man is scared	exists x. (Man(x) & Scared(x))	n	False	False
671	A man is laughing	exists x. (Man(x) & Laughing(x))	A man is screaming	exists x. (Man(x) & Screaming(x))	n	False	False
672	A man is crying	exists x. (Man(x) & Crying(x))	A man is screaming	exists x. (Man(x) & Screaming(x))	n	False	False
673	A woman is not cutting shrimps	exists x. (Woman(x) & not CuttingShrimps(x))	A woman is cutting shrimps	exists x. (Woman(x) & Cutting(x, shrimps))	c	False	False
674	A woman is cutting shrimps	exists x. (Woman(x) & Cutting(x, shrimps))	A man is chopping butter into a container	exists x. exists y. exists z. (Man(x) & Butter(y) & Container(z) & ChopsInto(x, y, z))	n	False	False
675	Women are sawing logs	exists x. (Woman(x) -> SawingLogs(x))	Men are sawing logs	exists x. (Man(x) -> SawingLogs(x))	n	False	False
676	Men are sawing logs	exists x. (Man(x) -> SawingLogs(x))	Men are sawing	exists x. (Man(x) -> Sawing(x))	e	False	False
677	Men are cutting wood	exists x. (Man(x) -> CuttingWood(x))	Some men are sawing	exists x. (Man(x) & Sawing(x))	e	False	False
678	Men are sawing logs	exists x. (Man(x) -> SawingLogs(x))	Some men are sawing	exists x. (Man(x) & Sawing(x))	e	False	False
679	A woman is brushing her hand	exists x. (Woman(x) & BrushingHand(x))	A woman is brushing her feet	exists x. (Woman(x) & BrushingFeet(x))	n	False	False
680	A woman is chopping an onion	exists x. (Woman(x) & Chopping(x, Onion))	A woman is not chopping an onion	not exists x. (Woman(x) & ChoppingOnion(x))	c	False	False
681	A woman is chopping a red onion	exists x. (Woman(x) & Chopping(x, redOnion))	A woman is brushing her feet	exists x. (Woman(x) & BrushingFeet(x))	n	False	False
682	A woman is brushing her feet	exists x. (Woman(x) & BrushingFeet(x))	A woman is not chopping an onion	not exists x. (Woman(x) & ChoppingOnion(x))	n	False	False
683	A woman is brushing her hand	exists x. (Woman(x) & BrushingHand(x))	A woman is chopping an onion	exists x. (Woman(x) & Chopping(x, Onion))	n	False	False
684	A man is playing an electric guitar	exists x. (Man(x) & Playing(x, ElectricGuitar))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
685	There is no man playing a keyboard	not exists x. (Man(x) & PlaysKeyboard(x))	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	c	False	False
686	A man is playing an electric guitar	exists x. (Man(x) & Playing(x, ElectricGuitar))	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	n	False	False
687	A man is not playing a guitar	exists x. (Man(x) -> not PlayingGuitar(x))	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	n	False	False
688	A man is spitting on the ground	exists x. (Man(x) & SpittingOnGround(x))	A man is spitting	exists x. (Man(x) & Spitting(x))	e	False	False
689	A man is spitting	exists x. (Man(x) & Spitting(x))	There is no man spitting	not exists x. (Man(x) & Spitting(x))	c	False	True
690	A man is talking on the radio	exists x. (Man(x) & TalkingOnRadio(x))	A man is talking	exists x. (Man(x) & Talking(x))	e	False	False
691	A man is talking	exists x. (Man(x) & Talking(x))	A man is laughing	exists x. (Man(x) & Laughing(x))	n	False	False
692	A man is spitting on the ground	exists x. (Man(x) & SpittingOnGround(x))	A man is talking	exists x. (Man(x) & Talking(x))	n	False	False
693	A man is talking	exists x. (Man(x) & Talking(x))	A man is spitting	exists x. (Man(x) & Spitting(x))	n	False	False
694	A man is lumping dough	exists x. (Man(x) & LumpingDough(x))	A man is spreading dough	exists x. (Man(x) & SpreadingDough(x))	n	False	False
695	A woman is slicing meat with a sharp knife	exists x. (Woman(x) & SlicingMeat(x))	A man is spreading dough	exists x. (Man(x) & SpreadingDough(x))	n	False	False
696	Dough is being spread by a man	exists x. exists y. (Dough(x) & Man(y) & Spreading(y, x))	A woman is slicing meat with a knife	exists x. (Woman(x) & SlicingMeat(x, Knife))	n	False	False
697	A woman is slicing meat with a knife	exists x. (Woman(x) & SlicingMeat(x, Knife))	A man is spreading dough	exists x. (Man(x) & SpreadingDough(x))	n	False	False
698	A happy baby is laughing	exists x. (Baby(x) & Happy(x) -> Laughing(x))	A baby is laughing	exists x. (Baby(x) & Laughing(x))	e	False	False
699	A man is exercising	exists x. (Man(x) & Exercising(x))	A man is doing physical activity	exists x. (Man(x) & PhysicalActivity(x))	e	False	False
700	A man is resting	exists x. (Man(x) & Resting(x))	A man is exercising	exists x. (Man(x) & Exercising(x))	n	False	False
701	A baby is laughing	exists x. (Baby(x) & Laughing(x))	A man is resting	exists x. (Man(x) & Resting(x))	n	False	False
702	A man is exercising	exists x. (Man(x) & Exercising(x))	A baby is laughing	exists x. (Baby(x) & Laughing(x))	n	False	False
703	Three young men are furiously running, jumping and kicking near a vending machine	exists x. exists y. exists z. (YoungMan(x) & YoungMan(y) & YoungMan(z) & (FuriouslyRunning(x) & FuriouslyRunning(y) & FuriouslyRunning(z) & NearVendingMachine(x) & NearVendingMachine(y) & NearVendingMachine(z)))	Three young men are running, jumping and kicking near a vending machine	exists x. exists y. exists z. (YoungMan(x) & YoungMan(y) & YoungMan(z) & Running(x) & Jumping(x) & Kicking(x) & NearVendingMachine(x))	e	False	False
704	There is no man running, jumping and kicking near a vending machine	exists x. (Man(x) & exists y. (VendingMachine(y) & Near(x, y) & Running(x) & Jumping(x) & Kicking(x)))	Three men are jumping off a wall	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & JumpingOffWall(x) & JumpingOffWall(y) & JumpingOffWall(z))	n	False	False
705	Three young men are running, jumping and kicking near a vending machine	exists x. exists y. exists z. (YoungMan(x) & YoungMan(y) & YoungMan(z) & Running(x) & Jumping(x) & Kicking(x) & NearVendingMachine(x))	Three men are jumping off a tall wall	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & JumpingOffWall(x) & JumpingOffWall(y) & JumpingOffWall(z))	n	False	False
706	A deer is jumping over a cyclone fence	exists x. exists y. (Deer(x) & CycloneFence(y) & JumpsOver(x, y))	A deer is jumping over a wall	exists x. exists y. (Deer(x) & Wall(y) & JumpsOver(x, y))	e	False	False
707	The deer is jumping over the low fence	exists x. exists y. (Deer(x) & LowFence(y) & JumpsOver(x, y))	The deer is jumping over the fence	exists x. exists y. (Deer(x) & Fence(y) & JumpsOver(x, y))	e	False	False
708	The deer is jumping over the fence	exists x. exists y. (Deer(x) & Fence(y) & JumpsOver(x, y))	The deer is not jumping over the fence	not exists x. (Deer(x) & JumpingOverFence(x))	c	False	False
709	The man is not stirring oil	not exists x. (Man(x) & StirringOil(x))	The man is stirring oil	exists x. (Man(x) & Stirring(x, Oil))	c	False	False
710	The man is stirring the sauce for the chicken	exists x.exists y. (Man(x) & Sauce(y) & Chicken(z) -> Stirring(x, y, z))	The man is not stirring oil	not exists x. (Man(x) & StirringOil(x))	n	False	False
711	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	There is no man playing a guitar	not exists x. (Man(x) & PlaysGuitar(x))	c	False	False
712	A man is strumming a guitar	exists x. (Man(x) & StrummingGuitar(x))	A man is playing guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
713	There is no man playing guitar	not exists x. (Man(x) & PlaysGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	c	False	False
714	Three boys in karate uniform are sparring	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & KarateUniform(x) & KarateUniform(y) & KarateUniform(z) & Sparring(x, y, z))	Three boys in karate costumes are fighting	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & KarateCostume(x) & KarateCostume(y) & KarateCostume(z) & Fighting(x, y, z))	e	False	False
715	Three boys in karate costumes are fighting	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & KarateCostume(x) & KarateCostume(y) & KarateCostume(z) & Fighting(x, y, z))	Three men are practicing karate in a gym	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & PracticingKarate(x) & PracticingKarate(y) & PracticingKarate(z) & Gym(x) & Gym(y) & Gym(z))	n	False	False
716	Three boys in karate uniform are sparring	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & KarateUniform(x) & KarateUniform(y) & KarateUniform(z) & Sparring(x, y, z))	Three men are practicing karate in a field	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & PracticingKarate(x) & PracticingKarate(y) & PracticingKarate(z) & Field(x) & Field(y) & Field(z))	n	False	False
717	Three boys in karate costumes are fighting	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & KarateCostume(x) & KarateCostume(y) & KarateCostume(z) & Fighting(x, y, z))	Three men are practicing karate in a field	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & PracticingKarate(x) & PracticingKarate(y) & PracticingKarate(z) & Field(x) & Field(y) & Field(z))	n	False	False
718	A woman is dancing alone	exists x. (Woman(x) & DancingAlone(x))	A few women are holding each other and dancing together	exists x.exists y.exists z. (Woman(x) & Woman(y) & Woman(z) & Holding(x, y) & Holding(y, z) & DancingTogether(x, y, z))	n	False	False
719	Two men are playing ping pong	exists x. exists y. (Man(x) & Man(y) & PlayingPingPong(x, y))	A few women are holding each other and dancing together	exists x.exists y.exists z. (Woman(x) & Woman(y) & Woman(z) & Holding(x, y) & Holding(y, z) & DancingTogether(x, y, z))	n	False	False
720	A few women are holding each other and dancing together	exists x.exists y.exists z. (Woman(x) & Woman(y) & Woman(z) & Holding(x, y) & Holding(y, z) & DancingTogether(x, y, z))	Two men are playing table football	exists x. exists y. (Man(x) & Man(y) & PlayingTableFootball(x, y))	n	False	False
721	Two men are playing table tennis	exists x. exists y. (Man(x) & Man(y) & PlayingTableTennis(x, y))	A woman is dancing alone	exists x. (Woman(x) & DancingAlone(x))	n	False	False
722	A woman is cutting broccoli	exists x. (Woman(x) & Cutting(x, Broccoli))	A woman is slicing vegetables	exists x. (Woman(x) & SlicingVegetables(x))	e	False	False
723	A woman is cutting some flowers	exists x. (Woman(x) & CuttingFlowers(x))	A woman is cutting some plants	exists x. (Woman(x) & CuttingPlants(x))	n	False	False
724	A woman is slicing vegetables	exists x. (Woman(x) & SlicingVegetables(x))	A woman is cutting some flowers	exists x. (Woman(x) & CuttingFlowers(x))	n	False	False
725	A woman is cutting some flowers	exists x. (Woman(x) & CuttingFlowers(x))	A woman is cutting broccoli	exists x. (Woman(x) & Cutting(x, Broccoli))	n	False	False
726	A white horse is standing	exists x. (WhiteHorse(x) -> Standing(x))	A horse is standing	exists x. (Horse(x) & Standing(x))	e	False	False
727	A horse is standing	exists x. (Horse(x) & Standing(x))	A horse is running	exists x. (Horse(x) & Running(x))	n	False	False
728	A woman is cutting a white onion	exists x. (Woman(x) & Cutting(x, WhiteOnion))	A horse is standing	exists x. (Horse(x) & Standing(x))	n	False	False
729	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	A horse is standing	exists x. (Horse(x) & Standing(x))	n	False	False
730	A cat is playing a keyboard	exists x. (Cat(x) & PlayingKeyboard(x))	There is no cat playing a keyboard	not exists x. (Cat(x) & PlayingKeyboard(x))	c	False	True
731	A musician is playing two keyboards	exists x. (Musician(x) & PlayingTwoKeyboards(x))	A man is playing two keyboards	exists x. (Man(x) & PlayingTwoKeyboards(x))	n	False	False
732	A cat is playing a keyboard	exists x. (Cat(x) & PlayingKeyboard(x))	A musician is playing two keyboards	exists x. (Musician(x) & PlayingTwoKeyboards(x))	n	False	False
733	A cat is playing a keyboard	exists x. (Cat(x) & PlayingKeyboard(x))	There is no man playing two keyboards	not exists x. (Man(x) & PlaysTwoKeyboards(x))	n	False	False
734	A cat is playing a piano	exists x. exists y. (Cat(x) & Piano(y) & Playing(x, y))	A man is playing two keyboards	exists x. (Man(x) & PlayingTwoKeyboards(x))	n	False	False
735	A cat is playing a keyboard	exists x. (Cat(x) & PlayingKeyboard(x))	A man is playing two keyboards	exists x. (Man(x) & PlayingTwoKeyboards(x))	n	False	False
736	There are no mimes performing	exists x. (Mime(x) -> not Performing(x))	Mimes are performing on a stage	exists x.exists y. (Mime(x) & Stage(y) -> PerformsOn(x, y))	c	False	False
737	There are no mimes performing	exists x. (Mime(x) -> not Performing(x))	The men are performing on stage	exists x. (Man(x) -> PerformsOnStage(x))	n	False	False
738	Mimes are performing on a stage	exists x.exists y. (Mime(x) & Stage(y) -> PerformsOn(x, y))	The men are performing on stage	exists x. (Man(x) -> PerformsOnStage(x))	n	False	False
739	A man is carrying a tree	exists x. exists y. (Man(x) & Tree(y) & Carrying(x, y))	A man is carrying a plant	exists x. exists y. (Man(x) & Plant(y) & Carrying(x, y))	e	False	False
740	A tree is being picked up by a man	exists x.exists y. (Tree(x) & Man(y) & PicksUp(y, x))	A man is carrying a tree	exists x. exists y. (Man(x) & Tree(y) & Carrying(x, y))	e	False	False
741	A man is carrying a tree	exists x. exists y. (Man(x) & Tree(y) & Carrying(x, y))	A man is planting a tree	exists x. exists y. (Man(x) & Tree(y) & Planting(x, y))	n	False	False
742	A man is picking up a tree	exists x. exists y. (Man(x) & Tree(y) & PickingUp(x, y))	A man is carrying a plant	exists x. exists y. (Man(x) & Plant(y) & Carrying(x, y))	n	False	False
743	A man is picking up a tree	exists x. exists y. (Man(x) & Tree(y) & PickingUp(x, y))	A man is carrying a tree	exists x. exists y. (Man(x) & Tree(y) & Carrying(x, y))	e	False	False
744	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is playing the guitar owner	exists x. (Man(x) & PlaysGuitar(x) -> GuitarOwner(x))	n	False	False
745	A trumpet is being played by a person	exists x.exists y. (Trumpet(x) & Person(y) -> Playing(y, x))	A person is playing a trumpet	exists x. (Person(x) & PlayingTrumpet(x))	e	False	False
746	A person is stopping playing a trumpet 	exists x. (Person(x) & PlaysTrumpet(x) -> not PlaysTrumpet(x))	A person is playing a trumpet	exists x. (Person(x) & PlayingTrumpet(x))	e	False	False
747	A trumpet is being played by a person	exists x.exists y. (Trumpet(x) & Person(y) -> Playing(y, x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
748	A person is stopping playing a trumpet 	exists x. (Person(x) & PlaysTrumpet(x) -> not PlaysTrumpet(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
749	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A person is playing a trumpet	exists x. (Person(x) & PlayingTrumpet(x))	n	False	False
750	The badger is burrowing a hole	exists x. (Badger(x) & BurrowingHole(x))	A hole is being burrowed by the badger	exists x. exists y. (Hole(x) & Badger(y) & Burrowing(y, x))	e	False	False
751	The badger isn't burrowing a hole	not exists x. (Badger(x) & BurrowingHole(x))	The badger is burrowing a hole	exists x. (Badger(x) & BurrowingHole(x))	c	False	True
752	There is no badger shrewdly digging the earth	not exists x. (Badger(x) & ShrewdlyDigging(x, Earth))	A badger is shrewdly digging the earth	exists x. (Badger(x) -> ShrewdlyDiggingEarth(x))	c	False	False
753	The badger is burrowing a hole	exists x. (Badger(x) & BurrowingHole(x))	There is no badger shrewdly digging the earth	not exists x. (Badger(x) & ShrewdlyDigging(x, Earth))	c	False	False
754	The chef is carefully pouring oil in the pan	exists x.exists y. (Chef(x) & Pan(y) -> CarefullyPoursOil(x, y))	The chef is carefully pouring some oil into a pan	exists x.exists y.exists z. (Chef(x) & Oil(y) & Pan(z) -> CarefullyPoursInto(x, y, z))	e	False	False
755	The chef is carefully drying the oil from the pan	exists x.exists y. (Chef(x) & Pan(y) -> DryingOil(x, y))	The chef is carefully pouring some oil into a pan	exists x.exists y.exists z. (Chef(x) & Oil(y) & Pan(z) -> CarefullyPoursInto(x, y, z))	c	False	False
756	The chef is carefully pouring some oil into a pan	exists x.exists y.exists z. (Chef(x) & Oil(y) & Pan(z) -> CarefullyPoursInto(x, y, z))	Some liquid is being poured into a pan by a man	exists x.exists y.exists z. (Liquid(x) & Pan(y) & Man(z) & PoursInto(x, y, z))	e	False	False
757	The chef is carefully pouring some oil into a pan	exists x.exists y.exists z. (Chef(x) & Oil(y) & Pan(z) -> CarefullyPoursInto(x, y, z))	There is no man pouring liquid into a pot	not exists x. (Man(x) & PouringLiquid(x, pot))	n	False	False
758	The man is typing on a machine used for stenography	exists x.exists y. (Man(x) & Machine(y) & UsedForStenography(y) -> TypingOn(x, y))	A man is typing on a machine used for stenography	exists x.exists y. (Man(x) & Machine(y) & UsedForStenography(y) -> TypingOn(x, y))	e	True	False
759	A man is typing on a machine used for stenography	exists x.exists y. (Man(x) & Machine(y) & UsedForStenography(y) -> TypingOn(x, y))	A man is putting away a stenograph machine	exists x. exists y. (Man(x) & StenographMachine(y) & PuttingAway(x, y))	n	False	False
760	The man is cautiously operating a stenograph	exists x. (Man(x) & OperatingStenograph(x) -> Cautious(x))	The man is operating a stenograph	exists x. (Man(x) -> OperatingStenograph(x))	e	False	False
761	The man needs a stenograph to operate 	exists x. (Man(x) -> NeedsStenograph(x))	The man is operating a stenograph	exists x. (Man(x) -> OperatingStenograph(x))	n	False	False
762	A man is typing on a machine used for stenography	exists x.exists y. (Man(x) & Machine(y) & UsedForStenography(y) -> TypingOn(x, y))	The man isn't operating a stenograph	not exists x. (Man(x) & Operating(x, stenograph))	c	False	False
763	A man is typing on a machine used for stenography	exists x.exists y. (Man(x) & Machine(y) & UsedForStenography(y) -> TypingOn(x, y))	The man needs a stenograph to operate 	exists x. (Man(x) -> NeedsStenograph(x))	n	False	False
764	A man is putting away a stenograph machine	exists x. exists y. (Man(x) & StenographMachine(y) & PuttingAway(x, y))	The man is operating a stenograph	exists x. (Man(x) -> OperatingStenograph(x))	n	False	False
765	A poor man is being fed snakes and mice	exists x. (PoorMan(x) -> (exists y.exists z. (Snake(y) & Mouse(z) & BeingFed(x, y, z))))	The man is cautiously feeding a mouse to the snake	exists x.exists y.exists z. (Man(x) & Mouse(y) & Snake(z) -> FeedsCautiously(x, y, z))	n	False	False
766	The man is cautiously feeding a mouse to the snake	exists x.exists y.exists z. (Man(x) & Mouse(y) & Snake(z) -> FeedsCautiously(x, y, z))	A snake is being fed a mouse by a man	exists x. exists y. exists z. (Snake(x) & Mouse(y) & Man(z) & Feeds(z, x, y))	e	False	False
767	There is a guy cheerfully playing with a footbag	exists x. (Guy(x) & PlayingFootbag(x))	A guy is cheerfully playing with a footbag	exists x. exists y. (Guy(x) & Footbag(y) & PlayingWith(x, y))	e	False	False
768	The man is austerely playing a piano	exists x. (Man(x) & AusterelyPlayingPiano(x))	The man is playing a piano	exists x. (Man(x) & PlayingPiano(x))	e	False	False
769	A guy is cheerfully playing with a footbag	exists x. exists y. (Guy(x) & Footbag(y) & PlayingWith(x, y))	The man is austerely playing a piano	exists x. (Man(x) & AusterelyPlayingPiano(x))	n	False	False
770	A guy is cheerfully playing with a footbag	exists x. exists y. (Guy(x) & Footbag(y) & PlayingWith(x, y))	The man isn't playing the piano	not exists x. (Man(x) & Piano(y) & Playing(x, y))	e	False	False
771	The man is playing a piano	exists x. (Man(x) & PlayingPiano(x))	A guy is cheerfully playing with the footbag	exists x. (Guy(x) & PlayingFootbag(x))	n	False	False
772	A woman is vigorously breaking two eggs in a bowl.	exists x. (Woman(x) & BreakingEggs(x))	A woman is breaking two eggs in a bowl	exists x. (Woman(x) & BreakingEggs(x))	e	True	False
773	A woman is vigorously breaking two eggs in a bowl.	exists x. (Woman(x) & BreakingEggs(x))	Some ingredients are being mixed in a bowl by a person	exists x. exists y. exists z. (Ingredient(x) & Bowl(y) & Person(z) & MixingIn(x, y, z))	n	False	False
774	There is no woman breaking eggs in a bowl	not exists x. (Woman(x) & BreakingEggs(x) & InBowl(x))	Some ingredients are being mixed in a bowl by a person	exists x. exists y. exists z. (Ingredient(x) & Bowl(y) & Person(z) & MixingIn(x, y, z))	n	False	False
775	A woman is breaking two eggs in a bowl	exists x. (Woman(x) & BreakingEggs(x))	A man is mixing a few ingredients in a bowl	exists x. exists y. exists z. (Man(x) & Bowl(y) & Ingredients(z) & Mixing(x, y, z))	n	False	False
776	A woman is breaking two eggs in a bowl	exists x. (Woman(x) & BreakingEggs(x))	Some ingredients are being separated in a bowl by a person	exists x.exists y.exists z. (Ingredient(x) & Bowl(y) & Person(z) & SeparatesIn(x, y, z))	n	False	False
777	A person is bowling the ingredients to the man at the mixer	exists x.exists y.exists z. (Person(x) & Ingredient(y) & Mixer(z) -> BowlsTo(x, y, z))	A woman is breaking two eggs in a bowl	exists x. (Woman(x) & BreakingEggs(x))	n	False	False
778	A car is riskily jumping over a girl	exists x.exists y. (Car(x) & Girl(y) & JumpsOver(x, y))	The girl is recklessly jumping onto a car	exists x. exists y. (Girl(x) & Car(y) & JumpsOnto(x, y))	n	False	False
779	There is no girl jumping into the car	not exists x. (Girl(x) & JumpsIntoCar(x))	One girl is jumping on the car	exists x. (Girl(x) & JumpingOnCar(x))	c	False	False
780	A girl is on a jumping car	exists x. exists y. (Girl(x) & JumpingCar(y) & On(x, y))	One girl is jumping on the car	exists x. (Girl(x) & JumpingOnCar(x))	e	False	False
781	One woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	There is no woman peeling a potato	not exists x. (Woman(x) & PeelingPotato(x))	c	False	True
782	A woman is peeling the potato	exists x. (Woman(x) & PeelingPotato(x))	The potato is being peeled by a woman	exists x. exists y. (Potato(x) & Woman(y) & Peeling(y, x))	e	False	False
783	A woman is peeling the potato	exists x. (Woman(x) & PeelingPotato(x))	One woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	e	True	False
784	The potato is being peeled by a woman	exists x. exists y. (Potato(x) & Woman(y) & Peeling(y, x))	A woman is throwing a potato peel	exists x. (Woman(x) & Throwing(x, PotatoPeel))	n	False	False
785	A boat is sailing quietly over the water	exists x. (Boat(x) -> SailingQuietlyOverWater(x))	A boat is sailing peacefully over the water	exists x. (Boat(x) -> SailingPeacefullyOverWater(x))	e	False	False
786	A boat is sailing peacefully over the water	exists x. (Boat(x) -> SailingPeacefullyOverWater(x))	A boat is anchored	exists x. (Boat(x) & Anchored(x))	n	False	False
787	A boat's sail is being reflected by the peaceful water	exists x.exists y. (Boat(x) & Sail(y) & PeacefulWater(z) -> ReflectedBy(y, z))	A boat is sailing peacefully over the water	exists x. (Boat(x) -> SailingPeacefullyOverWater(x))	e	False	False
788	The guitar is being played by the man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	The guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	e	True	False
789	The man is a guitar player	exists x. (Man(x) & GuitarPlayer(x))	A boat is sailing peacefully over the water	exists x. (Boat(x) -> SailingPeacefullyOverWater(x))	n	False	False
790	A boat is anchored	exists x. (Boat(x) & Anchored(x))	The guitar is being played by the man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	n	False	False
791	A man isn't pouring oil on the tomatoes.	not exists x. (Man(x) & PouringOilOnTomatoes(x))	The man is pouring oil on a few tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & PouringOn(x, y, z))	c	False	False
792	The man is pouring oil on a few tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & PouringOn(x, y, z))	Few men like pouring tomato oil	exists x. (Man(x) & not LikesPouringTomatoOil(x))	n	False	False
793	There is no man pouring some oil on the tomatoes	not exists x. (Man(x) & PouringOil(x) & OnTomatoes(x))	The man is pouring some oil on the tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & Pouring(x, y, z))	c	False	False
794	Some oil is being poured on the tomatoes by the man	exists x.exists y.exists z. (Oil(x) & Tomato(y) & Man(z) & PoursOn(z, y, x))	The man is pouring oil on a few tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & PouringOn(x, y, z))	e	False	False
795	The man is pouring oil on a few tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & PouringOn(x, y, z))	There is no man pouring some oil on the tomatoes	not exists x. (Man(x) & PouringOil(x) & OnTomatoes(x))	c	False	False
796	The man is pouring some oil on the tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & Pouring(x, y, z))	One person pours oil on a few tomatoes	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Oil(x) & Tomato(y) & Tomato(z) & PoursOn(x, y) & PoursOn(x, z))	e	False	False
797	Few men like pouring tomato oil	exists x. (Man(x) & not LikesPouringTomatoOil(x))	The man is pouring some oil on the tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & Pouring(x, y, z))	n	False	False
798	The man is pouring oil on a few tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & PouringOn(x, y, z))	The man is pouring some oil on the tomatoes	exists x. exists y. exists z. (Man(x) & Oil(y) & Tomato(z) & Pouring(x, y, z))	e	False	False
799	The milk is being drunk by a cat	exists x.exists y. (Milk(x) & Cat(y) & Drinking(y, x))	A drunk man is milking a cat	exists x.exists y. (Drunk(x) & Cat(y) -> Milking(x, y))	n	False	False
800	Milk is a kitten's drink	exists x.exists y. (Kitten(x) & Milk(y) -> Drinks(x, y))	A kitten is drinking fresh milk	exists x. (Kitten(x) & Drinking(x, y) & FreshMilk(y))	n	False	False
801	Milk is a kitten's drink	exists x.exists y. (Kitten(x) & Milk(y) -> Drinks(x, y))	The milk is being drunk by a cat	exists x.exists y. (Milk(x) & Cat(y) & Drinking(y, x))	n	False	False
802	A kitten is drinking fresh milk	exists x. (Kitten(x) & Drinking(x, y) & FreshMilk(y))	The cat is drinking some milk	exists x. (Cat(x) & Drinking(x, milk))	n	False	False
803	A kitten is drinking fresh milk	exists x. (Kitten(x) & Drinking(x, y) & FreshMilk(y))	A drunk man is milking a cat	exists x.exists y. (Drunk(x) & Cat(y) -> Milking(x, y))	n	False	False
804	A man is emptying a container made of plastic	exists x. exists y. (Man(x) & Container(y) & MadeOfPlastic(y) & Emptying(x, y))	A man is filling a container made of plastic	exists x. exists y. (Man(x) & Container(y) & MadeOfPlastic(y) & Fills(x, y))	c	False	False
805	A man is carelessly holding a frog	exists x. exists y. (Man(x) & Frog(y) & CarelesslyHolding(x, y))	A man is emptying a container made of plastic completely	exists x. exists y. (Man(x) & Container(y) & MadeOfPlastic(y) -> Emptying(x, y))	n	False	False
806	A man is carelessly holding a frog	exists x. exists y. (Man(x) & Frog(y) & CarelesslyHolding(x, y))	A man is filling a container made of plastic	exists x. exists y. (Man(x) & Container(y) & MadeOfPlastic(y) & Fills(x, y))	n	False	False
807	A man is slicing an onion	exists x. exists y. (Man(x) & Onion(y) & Slicing(x, y))	There is no man slicing an onion	not exists x. (Man(x) & SlicingOnion(x))	c	False	False
808	A man is slicing an onion	exists x. exists y. (Man(x) & Onion(y) & Slicing(x, y))	The onion is being cut by the man	exists x. exists y. (Onion(x) & Man(y) & Cutting(y, x))	e	False	False
809	A man is slicing an onion	exists x. exists y. (Man(x) & Onion(y) & Slicing(x, y))	No onion is being cut by a man	not exists x. (Onion(x) & Man(y) & Cutting(y, x))	c	False	False
810	There is no man slicing an onion	not exists x. (Man(x) & SlicingOnion(x))	An onion is being cut by a man	exists x.exists y. (Onion(x) & Man(y) & Cutting(y, x))	c	False	False
811	An onion is being cut by a man	exists x.exists y. (Onion(x) & Man(y) & Cutting(y, x))	A man is slicing an onion	exists x. exists y. (Man(x) & Onion(y) & Slicing(x, y))	e	False	False
812	The elephant is being ridden by the woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(y, x))	The woman is riding the elephant	exists x. exists y. (Woman(x) & Elephant(y) & Riding(x, y))	e	True	False
813	The elephant is being ridden by the woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(y, x))	The elephant isn't being ridden by the woman	not exists x. (Elephant(x) & Woman(y) & Riding(y, x))	c	False	False
814	The elephant is being ridden by the woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(y, x))	The elephant is being ridden over a woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(x, y))	n	False	False
815	The woman is riding the elephant	exists x. exists y. (Woman(x) & Elephant(y) & Riding(x, y))	A man is recklessly riding a horse	exists x. exists y. (Man(x) & Horse(y) & RecklesslyRiding(x, y))	n	False	False
816	The elephant is being ridden over a woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(x, y))	A man is recklessly riding a horse	exists x. exists y. (Man(x) & Horse(y) & RecklesslyRiding(x, y))	n	False	False
817	The elephant is being ridden by the woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(y, x))	A person is recklessly riding a horse	exists x. (Person(x) & RecklessHorseRiding(x))	n	False	False
818	The elephant is being ridden by the woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(y, x))	There is no man recklessly riding a horse	not exists x. (Man(x) & RecklesslyRidingHorse(x))	n	False	False
819	Someone is feeding an animal	exists x.exists y. (Person(x) & Animal(y) & Feeds(x, y))	Someone is giving food to an animal	exists x.exists y. (Giver(x) & Animal(y) & GivesFood(x, y))	e	False	False
820	Someone is giving food to an animal	exists x.exists y. (Giver(x) & Animal(y) & GivesFood(x, y))	Nobody is feeding an animal	not exists x. (FeedsAnimal(x))	c	False	False
821	The piano isn't being played by anyone	not exists x. (Piano(x) & BeingPlayedBy(x))	The piano is being played by someone	exists x. exists y. (Piano(x) & Person(y) & Playing(y, x))	c	False	False
822	Someone is giving food to an animal	exists x.exists y. (Giver(x) & Animal(y) & GivesFood(x, y))	Somebody is playing the piano	exists x. (PianoPlayer(x))	n	False	False
823	Someone is giving food to an animal	exists x.exists y. (Giver(x) & Animal(y) & GivesFood(x, y))	The piano isn't being played by anyone	not exists x. (Piano(x) & BeingPlayedBy(x))	n	False	False
824	The piano is being played by someone	exists x. exists y. (Piano(x) & Person(y) & Playing(y, x))	Someone is feeding an animal	exists x.exists y. (Person(x) & Animal(y) & Feeds(x, y))	n	False	False
825	The piano is being played by someone	exists x. exists y. (Piano(x) & Person(y) & Playing(y, x))	Someone is giving food to an animal	exists x.exists y. (Giver(x) & Animal(y) & GivesFood(x, y))	n	False	False
826	A man is pushing the buttons of a microwave	exists x. exists y. (Man(x) & Microwave(y) & PushingButtons(x, y))	The buttons of a microwave are being pushed by a man	exists x.exists y. (Microwave(x) & Man(y) -> PushesButtons(y, x))	e	False	False
827	A man is pushing the buttons of a microwave	exists x. exists y. (Man(x) & Microwave(y) & PushingButtons(x, y))	There is no man is pushing the buttons of a microwave	not exists x. (Man(x) & PushingMicrowaveButtons(x))	c	False	False
828	A man is pushing the buttons of a microwave	exists x. exists y. (Man(x) & Microwave(y) & PushingButtons(x, y))	A man is being pushed toward the buttons of a microwave	exists x. exists y. exists z. (Man(x) & Microwave(y) & Buttons(z) & PushedToward(x, y, z))	n	False	False
829	One man is turning on the microwave	exists x. (Man(x) & TurningOnMicrowave(x))	One man is powering the microwave	exists x. (Man(x) & PoweringMicrowave(x))	e	False	False
830	A man is pushing the buttons of a microwave	exists x. exists y. (Man(x) & Microwave(y) & PushingButtons(x, y))	One man is powering the microwave	exists x. (Man(x) & PoweringMicrowave(x))	n	False	False
831	A man is pushing the buttons of a microwave	exists x. exists y. (Man(x) & Microwave(y) & PushingButtons(x, y))	One man is turning off the microwave	exists x. (Man(x) & TurningOffMicrowave(x))	n	False	False
832	One man is turning on the microwave	exists x. (Man(x) & TurningOnMicrowave(x))	The buttons of a microwave are being pushed by a man	exists x.exists y. (Microwave(x) & Man(y) -> PushesButtons(y, x))	e	False	False
833	A man is being pushed toward the buttons of a microwave	exists x. exists y. exists z. (Man(x) & Microwave(y) & Buttons(z) & PushedToward(x, y, z))	One man is turning on the microwave	exists x. (Man(x) & TurningOnMicrowave(x))	n	False	False
834	There is no woman playing a flute	not exists x. (Woman(x) & PlaysFlute(x))	One woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	c	False	False
835	A flute is being played by a girl	exists x. exists y. (Flute(x) & Girl(y) & Playing(y, x))	There is no woman playing a flute	not exists x. (Woman(x) & PlaysFlute(x))	n	False	False
836	A flute is being played in a lovely way by a girl	exists x.exists y. (Flute(x) & Girl(y) & Playing(y, x) & Lovely(y))	One woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	e	False	False
837	One woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	A flute is being put away by a girl	exists x.exists y. (Flute(x) & Girl(y) & PuttingAway(y, x))	n	False	False
838	A girl is making a flute which is not to be played	exists x. exists y. (Girl(x) & Flute(y) & Making(x, y) & not Playable(y))	One woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	n	False	False
839	One woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	A flute is being played by a girl	exists x. exists y. (Flute(x) & Girl(y) & Playing(y, x))	n	False	False
840	The play is about a happy boy playing the piano	exists x. (Play(x) -> (HappyBoy(x) & PlaysPiano(x)))	A boy is happily playing the piano	exists x. (Boy(x) & PlayingPiano(x) & Happy(x))	n	False	False
841	A piano is being played by a man	exists x. exists y. (Piano(x) & Man(y) & Playing(y, x))	A piano is being played by a person	exists x.exists y. (Piano(x) & Person(y) -> Playing(y, x))	e	True	False
842	A piano is being played by a man	exists x. exists y. (Piano(x) & Man(y) & Playing(y, x))	A piano isn't being played by a man	not exists x. (Piano(x) & Man(y) & Playing(y, x))	c	False	False
843	The piano player is being a tough man	exists x. (PianoPlayer(x) -> ToughMan(x))	A piano is being played by a man	exists x. exists y. (Piano(x) & Man(y) & Playing(y, x))	n	False	False
844	A piano is being played by a man	exists x. exists y. (Piano(x) & Man(y) & Playing(y, x))	One boy is happily playing a piano	exists x. (Boy(x) & PlayingPiano(x) & Happy(x))	n	False	False
845	The boy isn't playing the piano happily	not exists x. (Boy(x) & Piano(y) & Playing(x, y) & Happy(x))	A piano is being played by a man	exists x. exists y. (Piano(x) & Man(y) & Playing(y, x))	n	False	False
846	A cheetah is breathlessly chasing its prey across a field	exists x.exists y. (Cheetah(x) & Field(y) -> BreathlesslyChasesPrey(x, y))	A cheetah is chasing its prey across a field	exists x.exists y.exists z. (Cheetah(x) & Prey(y) & Field(z) -> ChasesAcross(x, y, z))	e	False	False
847	A cheetah is shaken off by its prey across a field.	exists x. exists y. exists z. (Cheetah(x) & Prey(y) & Field(z) -> ShakenOffAcross(x, y, z))	A cheetah is chasing its prey across a field	exists x.exists y.exists z. (Cheetah(x) & Prey(y) & Field(z) -> ChasesAcross(x, y, z))	n	False	False
848	A prey is quickly running behind the cheetah	exists x.exists y. (Prey(x) & Cheetah(y) -> QuicklyRunningBehind(x, y))	A cheetah is chasing its prey across a field	exists x.exists y.exists z. (Cheetah(x) & Prey(y) & Field(z) -> ChasesAcross(x, y, z))	n	False	False
849	A cheetah is breathlessly chasing its prey across a field	exists x.exists y. (Cheetah(x) & Field(y) -> BreathlesslyChasesPrey(x, y))	A cheetah is quickly running behind its prey.	exists x.exists y. (Cheetah(x) & Prey(y) -> QuicklyRunningBehind(x, y))	e	False	False
850	A cheetah is chasing its prey across a field	exists x.exists y.exists z. (Cheetah(x) & Prey(y) & Field(z) -> ChasesAcross(x, y, z))	A cheetah is quickly running behind its prey.	exists x.exists y. (Cheetah(x) & Prey(y) -> QuicklyRunningBehind(x, y))	e	False	False
851	There is no lion pacing tiredly in a pen	not exists x. (Lion(x) & Pacing(x) & Tired(x) & InPen(x))	A lion is pacing tiredly in a pen	exists x. (Lion(x) & Pacing(x) & Tiredly(x) & InPen(x))	c	False	False
852	There is no lion walking	not exists x. (Lion(x) & Walking(x))	A lion is slowly walking	exists x. (Lion(x) & SlowlyWalking(x))	c	False	False
853	Not everyone is able to walk a lion	not exists x. (AbleToWalkLion(x))	A lion is slowly walking	exists x. (Lion(x) & SlowlyWalking(x))	n	False	False
854	A lion is pacing tiredly in a pen	exists x. (Lion(x) & Pacing(x) & Tiredly(x) & InPen(x))	A lion is slowly moving around	exists x. (Lion(x) -> SlowlyMoving(x))	n	False	False
855	A lion is pacing tiredly in a pen	exists x. (Lion(x) & Pacing(x) & Tiredly(x) & InPen(x))	There is no lion walking	not exists x. (Lion(x) & Walking(x))	c	False	False
856	Not everyone is able to walk a lion	not exists x. (AbleToWalkLion(x))	A lion is pacing tiredly in a pen	exists x. (Lion(x) & Pacing(x) & Tiredly(x) & InPen(x))	n	False	False
857	A lion is slowly walking	exists x. (Lion(x) & SlowlyWalking(x))	There is no lion pacing tiredly in a pen	not exists x. (Lion(x) & Pacing(x) & Tired(x) & InPen(x))	n	False	False
858	A lion is slowly walking	exists x. (Lion(x) & SlowlyWalking(x))	A lion is tiring the whole pen by pacing	exists x. exists y. (Lion(x) & Pen(y) -> Tires(x, y))	n	False	False
859	A lion is pacing tiredly in a pen	exists x. (Lion(x) & Pacing(x) & Tiredly(x) & InPen(x))	A lion is slowly walking	exists x. (Lion(x) & SlowlyWalking(x))	e	False	False
860	A flute is being played by a man	exists x. exists y. (Flute(x) & Man(y) & Playing(y, x))	The flute is being played by one man	exists x. exists y. (Flute(x) & Man(y) & Playing(y, x))	e	True	False
861	A flute is being played by a man	exists x. exists y. (Flute(x) & Man(y) & Playing(y, x))	A flute isn't being played by a man	not exists x. (Man(x) & PlaysFlute(x))	c	False	False
862	A man is playing the guitar loudly	exists x. (Man(x) & PlayingGuitar(x) & PlayingGuitarLoudly(x))	The adult is playing the guitar loudly	exists x. (Adult(x) & PlayingGuitar(x) -> PlayingGuitarLoudly(x))	e	True	False
863	There is no man playing the guitar loudly	not exists x. (Man(x) & PlaysGuitar(x) & Loudly(x))	A man is playing the guitar loudly	exists x. (Man(x) & PlayingGuitar(x) & PlayingGuitarLoudly(x))	c	False	False
864	The loud man is not allowed to play the guitar	exists x. (Loud(x) -> not AllowsToPlayGuitar(x))	A man is playing the guitar loudly	exists x. (Man(x) & PlayingGuitar(x) & PlayingGuitarLoudly(x))	n	False	False
865	The flute is being played by one man	exists x. exists y. (Flute(x) & Man(y) & Playing(y, x))	A man is playing the guitar loudly	exists x. (Man(x) & PlayingGuitar(x) & PlayingGuitarLoudly(x))	n	False	False
866	The person is dicing up a pepper which is orange	exists x. exists y. (Person(x) & Pepper(y) & Dicing(x, y) & Orange(y))	An orange pepper is being diced up by a person	exists x.exists y. (OrangePepper(x) & Person(y) -> DicesUp(y, x))	e	False	False
867	A cook is rapidly slicing some bell peppers	exists x. exists y. exists z. (Cook(x) & BellPepper(y) & Slice(z) & RapidlySlices(x, y, z))	A cook is slicing some bell peppers	exists x. exists y. (Cook(x) & BellPepper(y) & Slicing(x, y))	e	False	False
868	The person is dicing up a pepper which is orange	exists x. exists y. (Person(x) & Pepper(y) & Dicing(x, y) & Orange(y))	A cook is rapidly slicing some bell peppers	exists x. exists y. exists z. (Cook(x) & BellPepper(y) & Slice(z) & RapidlySlices(x, y, z))	n	False	False
869	Some bells are ringing near a cook slicing peppers	exists x.exists y.exists z. (Bell(x) & Cook(y) & Pepper(z) & Near(x, y) & Slicing(y, z))	The person is dicing up a pepper which is orange	exists x. exists y. (Person(x) & Pepper(y) & Dicing(x, y) & Orange(y))	n	False	False
870	The orange colored dices are being cast by a cook to win the pepper	exists x.exists y.exists z. (OrangeColoredDice(x) & Cook(y) & Pepper(z) -> CastsToWin(y, x, z))	A cook is slicing some bell peppers	exists x. exists y. (Cook(x) & BellPepper(y) & Slicing(x, y))	n	False	False
871	A girl is cutting the butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	A girl is cutting butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	e	True	False
872	A girl is cutting butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	A girl is melting two pieces of butter together	exists x. exists y. exists z. (Girl(x) & Butter(y) & Butter(z) & Melting(x, y, z))	n	False	False
873	A girl is cutting butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	A magician is cutting a girl into two pieces like butter	exists x.exists y. (Magician(x) & Girl(y) -> CutsIntoPiecesLikeButter(x, y))	n	False	False
874	Some sliced tofu is being eaten by a woman	exists x.exists y. (SlicedTofu(x) & Woman(y) & Eating(y, x))	Tofu is being sliced by a woman	exists x. exists y. (Tofu(x) & Woman(y) & Slicing(y, x))	n	False	False
875	Tofu isn't being sliced by a woman	not exists x. (Woman(x) & SlicesTofu(x))	A girl is cutting butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	n	False	False
876	A girl is cutting butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	Some sliced tofu is being eaten by a woman	exists x.exists y. (SlicedTofu(x) & Woman(y) & Eating(y, x))	n	False	False
877	Tofu is being sliced by a woman	exists x. exists y. (Tofu(x) & Woman(y) & Slicing(y, x))	A girl is cutting the butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	n	False	False
878	A girl is melting two pieces of butter together	exists x. exists y. exists z. (Girl(x) & Butter(y) & Butter(z) & Melting(x, y, z))	Tofu is being sliced by a woman	exists x. exists y. (Tofu(x) & Woman(y) & Slicing(y, x))	n	False	False
879	A magician is cutting a girl into two pieces like butter	exists x.exists y. (Magician(x) & Girl(y) -> CutsIntoPiecesLikeButter(x, y))	Tofu is being sliced by a woman	exists x. exists y. (Tofu(x) & Woman(y) & Slicing(y, x))	n	False	False
880	A girl is cutting butter into two pieces	exists x. (Girl(x) & CuttingButter(x))	Tofu is being sliced by a woman	exists x. exists y. (Tofu(x) & Woman(y) & Slicing(y, x))	n	False	False
881	There is no man sitting on the chair	not exists x. (Man(x) & SittingOnChair(x))	One man is sitting on the chair	exists x. exists y. (Man(x) & Chair(y) & SittingOn(x, y))	c	False	False
882	There is no man sitting on the chair	not exists x. (Man(x) & SittingOnChair(x))	The girl, who is little, is combing her hair into a pony tail.	exists x. (Girl(x) & Little(x) -> CombingPonyTail(x))	n	False	False
883	A girl is combing the hair of a little pony's tail	exists x. exists y. (Girl(x) & LittlePony(y) & CombingHair(x, y))	One man is sitting on the chair	exists x. exists y. (Man(x) & Chair(y) & SittingOn(x, y))	n	False	False
884	A man is carelessly smearing butter on a slice of garlic flavored bread 	exists x. (Man(x) & SmearingButter(x) & OnGarlicFlavoredBread(x) -> Careless(x))	The man is carelessly smearing butter on a slice of garlic bread	exists x. (Man(x) & Smearing(x, Butter) & On(x, GarlicBread))	e	False	False
885	A man is spreading butter on a piece of bread which is big	exists x.exists y. (Man(x) & Bread(y) & SpreadingButter(x, y) -> Big(y))	A man is carelessly smearing butter on a slice of garlic flavored bread 	exists x. (Man(x) & SmearingButter(x) & OnGarlicFlavoredBread(x) -> Careless(x))	n	False	False
886	The man isn't smearing butter on bread 	exists x. (Man(x) -> not SmearingButterOnBread(x))	A man is spreading butter on a piece of bread which is big	exists x.exists y. (Man(x) & Bread(y) & SpreadingButter(x, y) -> Big(y))	c	False	False
887	The man is carelessly smearing butter on a slice of garlic bread	exists x. (Man(x) & Smearing(x, Butter) & On(x, GarlicBread))	A man is spreading butter on a piece of bread which is big	exists x.exists y. (Man(x) & Bread(y) & SpreadingButter(x, y) -> Big(y))	n	False	False
888	The parrot is amazingly talking into the microphone	AmazinglyTalksIntoMicrophone(parrot)	The parrot is talking into the microphone	exists x. exists y. (Parrot(x) & Microphone(y) & TalkingInto(x, y))	e	False	False
889	The parrot is talking into the microphone	exists x. exists y. (Parrot(x) & Microphone(y) & TalkingInto(x, y))	The parrot is silent in front of the microphone	exists x. exists y. (Parrot(x) & Microphone(y) -> SilentInFrontOf(x, y))	c	False	False
890	The parrot is speaking	exists x. (Parrot(x) & Speaking(x))	A parrot is speaking	exists x. (Parrot(x) & Speaking(x))	e	True	False
891	A parrot is speaking	exists x. (Parrot(x) & Speaking(x))	There is no parrot speaking	not exists x. (Parrot(x) & Speaking(x))	c	False	True
892	The speaker likes parrots	LikesParrots(speaker)	A parrot is speaking	exists x. (Parrot(x) & Speaking(x))	n	False	False
893	The parrot is talking into the microphone	exists x. exists y. (Parrot(x) & Microphone(y) & TalkingInto(x, y))	The parrot is speaking	exists x. (Parrot(x) & Speaking(x))	e	False	False
894	The speaker likes parrots	LikesParrots(speaker)	The parrot is talking into the microphone	exists x. exists y. (Parrot(x) & Microphone(y) & TalkingInto(x, y))	n	False	False
895	The parrot is amazingly talking into the microphone	AmazinglyTalksIntoMicrophone(parrot)	A parrot is speaking	exists x. (Parrot(x) & Speaking(x))	e	False	False
896	The microphone in front of the talking parrot is being muted	exists x.exists y. (Microphone(x) & Parrot(y) & InFrontOf(x, y) -> Muted(x))	A parrot is speaking	exists x. (Parrot(x) & Speaking(x))	e	False	False
897	The parrot is talking into the microphone	exists x. exists y. (Parrot(x) & Microphone(y) & TalkingInto(x, y))	A parrot is speaking	exists x. (Parrot(x) & Speaking(x))	e	False	False
898	A few kittens are eating	exists x.exists y.exists z. (Kitten(x) & Eating(x) & Eating(y) & Eating(z) & not (Eating(x) & Eating(y) & Eating(z)))	Some kittens are eating	exists x. (Kitten(x) & Eating(x))	e	True	True
899	The food on the trays is being eaten by the kittens	exists x.exists y.exists z. (Food(x) & Tray(y) & Kitten(z) -> Eats(z, x, y))	The kittens are eating the food on the trays	exists x.exists y.exists z. (Kitten(x) & Food(y) & Tray(z) -> EatingOn(x, y, z))	e	False	False
900	The kittens on the trays are being eaten as food for an advertisement	exists x.exists y.exists z. (Kitten(x) & Tray(y) & Advertisement(z) -> EatenAsFood(x, y, z))	Some kittens are eating	exists x. (Kitten(x) & Eating(x))	n	False	False
901	The food on the trays is being eaten by the kittens	exists x.exists y.exists z. (Food(x) & Tray(y) & Kitten(z) -> Eats(z, x, y))	A man is eating near the kittens	exists x. exists y. (Man(x) & Kitten(y) & EatingNear(x, y))	n	False	False
902	A person is singing and playing a guitar	exists x. (Person(x) & Singing(x) & PlayingGuitar(x))	A person is singing and playing the guitar	exists x. (Person(x) & Singing(x) & PlayingGuitar(x))	e	True	False
903	A man is putting away a guitar	exists x. exists y. (Man(x) & Guitar(y) & PuttingAway(x, y))	A man is passionately playing a guitar	exists x. (Man(x) & PassionatelyPlayingGuitar(x))	c	False	False
904	A man is passionately playing a guitar	exists x. (Man(x) & PassionatelyPlayingGuitar(x))	The guitar player loves the man passionately	exists x.exists y. (GuitarPlayer(x) & Man(y) -> LovesPassionately(x, y))	n	False	False
905	A person is singing and playing the guitar	exists x. (Person(x) & Singing(x) & PlayingGuitar(x))	One man is passionately playing the guitar	exists x. (Man(x) & PassionatelyPlayingGuitar(x))	n	False	False
906	The guitar player loves the man passionately	exists x.exists y. (GuitarPlayer(x) & Man(y) -> LovesPassionately(x, y))	A person is singing and playing the guitar	exists x. (Person(x) & Singing(x) & PlayingGuitar(x))	n	False	False
907	A man is passionately playing a guitar	exists x. (Man(x) & PassionatelyPlayingGuitar(x))	There is no person singing and playing the guitar	not exists x. (Person(x) & Singing(x) & PlayingGuitar(x))	c	False	False
908	A man is passionately playing a guitar	exists x. (Man(x) & PassionatelyPlayingGuitar(x))	The singer is playing the guitar in front of a person	exists x.exists y. (Singer(x) & Person(y) & PlaysGuitar(x) -> InFrontOf(x, y))	n	False	False
909	A few animals are out of the water	exists x. (Animal(x) & not InWater(x))	A few animals are playing in the water	exists x.exists y. (Animal(x) & Water(y) & PlayingIn(x, y))	n	False	False
910	Nobody is playing ping pong	not exists x. (PingPongPlayer(x))	Two people are playing ping pong	exists x. exists y. (Person(x) & Person(y) & PlayingPingPong(x, y))	c	False	False
911	Two people are playing ping pong	exists x. exists y. (Person(x) & Person(y) & PlayingPingPong(x, y))	A ping pong player is meeting with two people	exists x. exists y. exists z. (PingPongPlayer(x) & Person(y) & Person(z) & Meeting(x, y, z))	n	False	False
912	Two people are playing ping pong	exists x. exists y. (Person(x) & Person(y) & PlayingPingPong(x, y))	A few animals are playing in the water	exists x.exists y. (Animal(x) & Water(y) & PlayingIn(x, y))	n	False	False
913	A ping pong player is meeting with two people	exists x. exists y. exists z. (PingPongPlayer(x) & Person(y) & Person(z) & Meeting(x, y, z))	A few animals are playing in the water	exists x.exists y. (Animal(x) & Water(y) & PlayingIn(x, y))	n	False	False
914	Two people are playing ping pong	exists x. exists y. (Person(x) & Person(y) & PlayingPingPong(x, y))	Some animals are playing wildly in the water	exists x. (Animal(x) & PlayingWildlyInWater(x))	n	False	False
915	The windows are being cleaned by a man	exists x.exists y. (Window(x) & Man(y) -> Cleaning(y, x))	The man has a window of time to clean himself	exists x. (Man(x) -> HasWindowOfTimeToClean(x))	n	False	False
916	The man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	The man isn't driving a car	not exists x. (Man(x) & DrivingCar(x))	c	False	False
917	The man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	The driver's car is parked by a man	exists x.exists y. (Driver(x) & Car(y) -> ParkedBy(x, y, man))	n	False	False
918	The man is driving a car carefully	exists x. exists y. (Man(x) & Car(y) & Driving(x, y) & Careful(x))	The windows are being cleaned by a man	exists x.exists y. (Window(x) & Man(y) -> Cleaning(y, x))	n	False	False
919	The windows are being cleaned by a man	exists x.exists y. (Window(x) & Man(y) -> Cleaning(y, x))	The man isn't driving a car	not exists x. (Man(x) & DrivingCar(x))	n	False	False
920	The driver's car is parked by a man	exists x.exists y. (Driver(x) & Car(y) -> ParkedBy(x, y, man))	The windows are being cleaned by a man	exists x.exists y. (Window(x) & Man(y) -> Cleaning(y, x))	n	False	False
921	The man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	The man has a window of time to clean himself	exists x. (Man(x) -> HasWindowOfTimeToClean(x))	n	False	False
922	One chimp is angrily kicking the target	exists x. exists y. (Chimp(x) & Target(y) & AngrilyKicks(x, y))	A chimp is angrily kicking a target	exists x.exists y. (Chimp(x) & Target(y) -> AngrilyKicks(x, y))	e	True	False
923	A chimp is angrily kicking a target	exists x.exists y. (Chimp(x) & Target(y) -> AngrilyKicks(x, y))	A chimp is missing the target	exists x. (Chimp(x) -> MissingTarget(x))	c	False	False
924	A chimp is angrily kicking a target	exists x.exists y. (Chimp(x) & Target(y) -> AngrilyKicks(x, y))	An angry man is targeting a kicking chimp	exists x. exists y. (Man(x) & Chimp(y) & Angry(x) & Targeting(x, y) & Kicking(y))	n	False	False
925	The woman is pouring oil into a skillet	exists x. exists y. exists z. (Woman(x) & Oil(y) & Skillet(z) & PouringInto(x, y, z))	Oil is being poured into a skillet by the woman	exists x.exists y. (Oil(x) & Woman(y) -> PoursIntoSkillet(y, x))	e	False	False
926	The woman isn't pouring oil into a skillet	not exists x. (Woman(x) & PouringOil(x, skillet))	The woman is pouring oil into a skillet	exists x. exists y. exists z. (Woman(x) & Oil(y) & Skillet(z) & PouringInto(x, y, z))	c	False	False
927	Oil is being poured into a skillet by the woman	exists x.exists y. (Oil(x) & Woman(y) -> PoursIntoSkillet(y, x))	A chimp is angrily kicking a target	exists x.exists y. (Chimp(x) & Target(y) -> AngrilyKicks(x, y))	n	False	False
928	A chimp is angrily kicking a target	exists x.exists y. (Chimp(x) & Target(y) -> AngrilyKicks(x, y))	The woman isn't pouring oil into a skillet	not exists x. (Woman(x) & PouringOil(x, skillet))	n	False	False
929	A chimp is angrily kicking a target	exists x.exists y. (Chimp(x) & Target(y) -> AngrilyKicks(x, y))	The skillet is being oiled by a woman who is pouring some water	exists x.exists y.exists z. (Skillet(x) & Woman(y) & Water(z) -> Oiling(y, x, z))	n	False	False
930	The woman is pouring oil into a skillet	exists x. exists y. exists z. (Woman(x) & Oil(y) & Skillet(z) & PouringInto(x, y, z))	One chimp is angrily kicking the target	exists x. exists y. (Chimp(x) & Target(y) & AngrilyKicks(x, y))	n	False	False
931	The woman is pouring oil into a skillet	exists x. exists y. exists z. (Woman(x) & Oil(y) & Skillet(z) & PouringInto(x, y, z))	A chimp is missing the target	exists x. (Chimp(x) -> MissingTarget(x))	n	False	False
932	An angry man is targeting a kicking chimp	exists x. exists y. (Man(x) & Chimp(y) & Angry(x) & Targeting(x, y) & Kicking(y))	The woman is pouring oil into a skillet	exists x. exists y. exists z. (Woman(x) & Oil(y) & Skillet(z) & PouringInto(x, y, z))	n	False	False
933	A person is putting meat into a skillet carelessly	exists x. (Person(x) & PuttingMeatIntoSkillet(x) & Carelessly(x))	A person is putting meat into a skillet	exists x. (Person(x) & PuttingMeatIntoSkillet(x))	e	True	False
934	A person is taking away the meat in the skillet	exists x. (Person(x) & TakesAwayMeat(x))	A person is putting meat into a skillet	exists x. (Person(x) & PuttingMeatIntoSkillet(x))	n	False	False
935	A woman is putting the baby into a trash can	exists x.exists y. (Woman(x) & Baby(y) -> PutsIntoTrashCan(x, y))	A person is putting meat into a skillet	exists x. (Person(x) & PuttingMeatIntoSkillet(x))	n	False	False
936	The kitten isn't eagerly drinking some milk from the bowl	not exists x. (Kitten(x) & EagerlyDrinking(x, milk, bowl))	The kitten is eagerly drinking some milk from the bowl	exists x.exists y. (Kitten(x) & Milk(y) & Bowl(z) -> DrinksFrom(x, y, z))	c	False	False
937	One small child is drinking water from the cup	exists x. (SmallChild(x) & DrinkingWater(x, cup))	One small child is filling the cup with water	exists x. (SmallChild(x) & FillsCupWithWater(x))	n	False	False
938	One small child is drinking water from the cup	exists x. (SmallChild(x) & DrinkingWater(x, cup))	The kitten is eagerly drinking some milk from the bowl	exists x.exists y. (Kitten(x) & Milk(y) & Bowl(z) -> DrinksFrom(x, y, z))	n	False	False
939	One small child is drinking water from the cup	exists x. (SmallChild(x) & DrinkingWater(x, cup))	The kitten isn't eagerly drinking some milk from the bowl	not exists x. (Kitten(x) & EagerlyDrinking(x, milk, bowl))	n	False	False
940	The band is singing loudly	SingsLoudly(band)	The band is singing 	Singing(band)	e	False	False
941	A woman is putting on makeup carefully	exists x. (Woman(x) & PuttingOnMakeup(x) -> Careful(x))	A woman is putting on some makeup carefully,	exists x. (Woman(x) & Makeup(y) & PuttingOn(x, y) & Carefully(x))	e	False	False
942	A woman is carefully removing her makeup	exists x. (Woman(x) & CarefullyRemovingMakeup(x))	A woman is putting on makeup carefully	exists x. (Woman(x) & PuttingOnMakeup(x) -> Careful(x))	n	False	False
943	A woman is putting on some makeup carefully,	exists x. (Woman(x) & Makeup(y) & PuttingOn(x, y) & Carefully(x))	The band is singing 	Singing(band)	n	False	False
944	The band is singing 	Singing(band)	A woman is carefully removing her makeup	exists x. (Woman(x) & CarefullyRemovingMakeup(x))	n	False	False
945	A woman is putting on makeup carefully	exists x. (Woman(x) & PuttingOnMakeup(x) -> Careful(x))	The band is singing loudly	SingsLoudly(band)	n	False	False
946	A woman is putting on makeup carefully	exists x. (Woman(x) & PuttingOnMakeup(x) -> Careful(x))	The singer is leaving the band	LeavesBand(singer)	n	False	False
947	A person is playing a guitar and singing	exists x. (Person(x) & PlayingGuitar(x) & Singing(x))	Nobody is playing the guitar and singing	not exists x. (GuitarPlayer(x) & Singer(x))	c	False	False
948	A person is playing a guitar and singing	exists x. (Person(x) & PlayingGuitar(x) & Singing(x))	The singer is hiring a person to fire the guitar player	exists x. exists y. (Singer(x) & Person(y) & Hires(x, y) & FiresGuitarPlayer(y))	n	False	False
949	The woman is playing a guitar, which is acoustic, and singing	exists x.exists y. (Woman(x) & Guitar(y) & Acoustic(y) -> (Plays(x, y) & Sings(x)))	The woman isn't playing the guitar, which is acoustic, or singing	not (Woman(x) & PlayingGuitar(x) & (AcousticGuitar(x) | Singing(x)))	c	False	False
950	A person is playing a guitar and singing	exists x. (Person(x) & PlayingGuitar(x) & Singing(x))	The woman isn't playing the guitar, which is acoustic, or singing	not (Woman(x) & PlayingGuitar(x) & (AcousticGuitar(x) | Singing(x)))	n	False	False
951	The woman is playing a guitar, which is acoustic, and singing	exists x.exists y. (Woman(x) & Guitar(y) & Acoustic(y) -> (Plays(x, y) & Sings(x)))	One person is playing the guitar and singing	exists x. (Person(x) & PlayingGuitar(x) & Singing(x))	e	False	False
952	The woman is playing a guitar, which is acoustic, and singing	exists x.exists y. (Woman(x) & Guitar(y) & Acoustic(y) -> (Plays(x, y) & Sings(x)))	A person is playing a guitar and singing	exists x. (Person(x) & PlayingGuitar(x) & Singing(x))	e	False	False
953	Some water is being casually drunk by a cat	exists x.exists y. (Water(x) & Cat(y) & CasuallyDrinks(y, x))	Some water is being drunk by a cat	exists x.exists y. (Water(x) & Cat(y) & Drinking(y, x))	e	False	False
954	Some water is being drunk by a cat	exists x.exists y. (Water(x) & Cat(y) & Drinking(y, x))	A drunk man is unwarily watering a cat	exists x. exists y. (Drunk(x) & Man(x) & Cat(y) -> UnwarilyWatering(x, y))	n	False	False
955	One truck is quickly going down the hill	exists x. (Truck(x) & QuicklyGoingDownHill(x))	A truck is quickly going down a hill	exists x. (Truck(x) & GoingDownHill(x) -> Quickly(x))	e	False	False
956	One truck is quickly going down the hill	exists x. (Truck(x) & QuicklyGoingDownHill(x))	Some water is being drunk by a cat	exists x.exists y. (Water(x) & Cat(y) & Drinking(y, x))	n	False	False
957	A truck is quickly going up a hill	exists x. (Truck(x) -> QuicklyGoingUpHill(x))	Some water is being drunk by a cat	exists x.exists y. (Water(x) & Cat(y) & Drinking(y, x))	n	False	False
958	A truck is quickly going down a hill	exists x. (Truck(x) & GoingDownHill(x) -> Quickly(x))	There is no water being drunk by a cat	not exists x. (Cat(x) & DrinkingWater(x))	n	False	False
959	A truck is quickly going down a hill	exists x. (Truck(x) & GoingDownHill(x) -> Quickly(x))	A drunk man is unwarily watering a cat	exists x. exists y. (Drunk(x) & Man(x) & Cat(y) -> UnwarilyWatering(x, y))	n	False	False
960	A girl is playing the guitar	exists x. (Girl(x) & PlayingGuitar(x))	The guitar player is loving one girl	exists x. exists y. (GuitarPlayer(x) & Girl(y) & Loves(x, y))	n	False	False
961	The man isn't intensely playing the guitar	not (Man(x) & IntenselyPlayingGuitar(x))	A girl is playing the guitar	exists x. (Girl(x) & PlayingGuitar(x))	n	False	False
962	A young woman is playing the guitar	exists x. (YoungWoman(x) & PlaysGuitar(x))	The man is intensely playing the guitar	IntenselyPlayingGuitar(man)	n	False	False
963	A girl is not playing the guitar	not exists x. (Girl(x) & PlayingGuitar(x))	The man is intensely playing the guitar	IntenselyPlayingGuitar(man)	n	False	False
964	The horse is being ridden by a man	exists x.exists y. (Horse(x) & Man(y) & Riding(y, x))	A man is riding the animal	exists x. exists y. (Man(x) & Animal(y) & Riding(x, y))	e	True	False
965	The man is on the ride with the horse	exists x. exists y. (Man(x) & Horse(y) & Ride(z) & On(x, z) & On(y, z))	The horse is being ridden by a man	exists x.exists y. (Horse(x) & Man(y) & Riding(y, x))	n	False	False
966	A man is riding the horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	A man is riding a motorbike	exists x. exists y. (Man(x) & Motorbike(y) & Riding(x, y))	n	False	False
967	The horse is being ridden by a man	exists x.exists y. (Horse(x) & Man(y) & Riding(y, x))	A man is riding a motorbike	exists x. exists y. (Man(x) & Motorbike(y) & Riding(x, y))	n	False	False
968	A man is dangerously throwing knives at the tree	exists x. exists y. exists z. (Man(x) & Tree(y) & Knife(z) & Throwing(x, z, y) & Dangerous(x))	A man is dangerously throwing knives at a tree	exists x. exists y. exists z. (Man(x) & Knife(y) & Tree(z) & ThrowsAt(x, y, z))	e	False	False
969	The man is doing a magic trick	exists x. (Man(x) & MagicTrick(x))	A man is dangerously extracting knives from a tree	exists x. (Man(x) & DangerouslyExtractingKnivesFromTree(x))	n	False	False
970	The man is doing a magic trick	exists x. (Man(x) & MagicTrick(x))	Some dangerous men with knives are throwing a bike against a tree	exists x. (DangerousMan(x) & Knife(x) & ThrowingBikeAgainstTree(x))	n	False	False
971	The man is doing a magic trick	exists x. (Man(x) & MagicTrick(x))	A man is dangerously throwing knives at a tree	exists x. exists y. exists z. (Man(x) & Knife(y) & Tree(z) & ThrowsAt(x, y, z))	n	False	False
972	The guitar is being sold by a lady	exists x. exists y. (Guitar(x) & Lady(y) & Selling(y, x))	The guitar is being played by a lady	exists x. (Guitar(x) & Lady(y) & Playing(y, x))	n	False	False
973	The person isn't practicing the guitar	not exists x. (Person(x) & PracticingGuitar(x))	The person is practicing the guitar	exists x. (Person(x) & PracticesGuitar(x))	c	False	False
974	The practicing person doesn't like the guitar	exists x. (PracticingPerson(x) -> not LikesGuitar(x))	The person is practicing the guitar	exists x. (Person(x) & PracticesGuitar(x))	n	False	False
975	The guitar is being played by a lady	exists x. (Guitar(x) & Lady(y) & Playing(y, x))	The man is practicing the guitar	exists x. (Man(x) & PracticingGuitar(x))	n	False	False
976	The person isn't practicing the guitar	not exists x. (Person(x) & PracticingGuitar(x))	The guitar is being played by a lady	exists x. (Guitar(x) & Lady(y) & Playing(y, x))	n	False	False
977	The guitar is being played by a girl	exists x. (Guitar(x) & Girl(y) & Playing(y, x))	The person is practicing the guitar	exists x. (Person(x) & PracticesGuitar(x))	e	False	False
978	The guitar is being played by a lady	exists x. (Guitar(x) & Lady(y) & Playing(y, x))	The person is practicing the guitar	exists x. (Person(x) & PracticesGuitar(x))	n	False	False
979	Mud is being thrown to the playing boy	exists x.exists y. (Mud(x) & PlayingBoy(y) -> ThrownTo(x, y))	The boy is playing in the mud	exists x. (Boy(x) & PlayingInMud(x))	n	False	False
980	The cat is playing with a device	exists x.exists y. (Cat(x) & Device(y) -> PlayingWith(x, y))	A cat is playing with a device	exists x.exists y. (Cat(x) & Device(y) -> PlayingWith(x, y))	e	True	False
981	There is no cat playing with a device	not exists x. (Cat(x) & PlayingWithDevice(x))	A cat is playing with a device	exists x.exists y. (Cat(x) & Device(y) -> PlayingWith(x, y))	c	False	False
982	The cat is playing with a device	exists x.exists y. (Cat(x) & Device(y) -> PlayingWith(x, y))	The boy is playing in the mud	exists x. (Boy(x) & PlayingInMud(x))	n	False	False
983	A playing device is amusing a cat	exists x.exists y. (PlayingDevice(x) & Cat(y) -> Amusing(x, y))	The boy is playing in the mud	exists x. (Boy(x) & PlayingInMud(x))	n	False	False
984	A cat is playing with a device	exists x.exists y. (Cat(x) & Device(y) -> PlayingWith(x, y))	The boy isn't playing in the mud	not exists x. (Boy(x) & PlayingInMud(x))	n	False	False
985	Some meat is being cut into pieces by a woman	exists x.exists y. (Meat(x) & Woman(y) & CutsIntoPieces(y, x))	A woman is cutting some meat into pieces	exists x. exists y. (Woman(x) & Meat(y) & Cutting(x, y))	e	False	False
986	Some meat is being stitched together by a woman	exists x.exists y. (Meat(x) & Woman(y) & Stitching(y, x))	Some meat is being cut into pieces by a woman	exists x.exists y. (Meat(x) & Woman(y) & CutsIntoPieces(y, x))	n	False	False
987	A lady is cutting up some meat	exists x. (Lady(x) & CuttingUpMeat(x))	There is no lady cutting up some meat	not exists x. (Lady(x) & CuttingUpMeat(x))	c	False	True
988	A woman is cutting some meat into pieces	exists x. exists y. (Woman(x) & Meat(y) & Cutting(x, y))	A lady is cutting up some meat	exists x. (Lady(x) & CuttingUpMeat(x))	e	False	False
989	A lady is cutting up some meat	exists x. (Lady(x) & CuttingUpMeat(x))	The woman is eating some cut pieces of raw meat	exists x. (Woman(x) & Eating(x, y) & RawMeat(y) & CutPieces(y))	n	False	False
990	A lady is cutting up some meat	exists x. (Lady(x) & CuttingUpMeat(x))	Some meat is being cut into pieces by a woman	exists x.exists y. (Meat(x) & Woman(y) & CutsIntoPieces(y, x))	e	False	False
991	A boy in his teens isn't talking to a girl with a webcam	exists x. exists y. (Boy(x) & Teen(x) & Girl(y) & Webcam(y) -> not TalkingTo(x, y))	A boy in his teens is talking to a girl with a webcam	exists x.exists y. (Boy(x) & Girl(y) & Teen(x) & Webcam(x) -> TalkingTo(x, y))	c	False	False
992	A boy in his teens is talking to a girl with a webcam	exists x.exists y. (Boy(x) & Girl(y) & Teen(x) & Webcam(x) -> TalkingTo(x, y))	One man is chatting with a girl with an internet camera	exists x.exists y.exists z. (Man(x) & Girl(y) & InternetCamera(z) & Chatting(x, y, z))	n	False	False
993	A person is strongly whisking eggs in a bowl	exists x. (Person(x) & StronglyWhiskingEggs(x) & InBowl(x))	A strong person is leaving the whisk in the bowl near the eggs	exists x. exists y. exists z. (StrongPerson(x) & Whisk(y) & Bowl(z) -> LeavesInNearEggs(x, y, z))	n	False	False
994	A person is strongly whisking eggs in a bowl	exists x. (Person(x) & StronglyWhiskingEggs(x) & InBowl(x))	A woman is beating the man that is keeping two eggs in the bowl, using a wire whisk 	exists x.exists y.exists z. (Woman(x) & Man(y) & Eggs(z) & Beating(x, y) & Keeping(y, z) & UsingWireWhisk(x) -> Beat(x, y))	n	False	False
995	A woman is beating two eggs in a bowl and using a whisk made of wire	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & Beating(x, y, z) -> (UsesWhisk(x) & MadeOfWire(x)))	A person is removing eggs from a bowl	exists x. (Person(x) -> RemovingEggsFromBowl(x))	n	False	False
996	A white car is being driven by the man	exists x.exists y. (WhiteCar(x) & Man(y) -> Driving(y, x))	A man's white car is being driven away	exists x. (Man(x) & WhiteCar(x) -> BeingDrivenAway(x))	e	False	False
997	The man is granting an interview	GrantInterview(man)	There is no white car being driven by the man	not exists x. (Car(x) & White(x) & DrivenBy(x, man))	n	False	False
998	A white car is being driven by the man	exists x.exists y. (WhiteCar(x) & Man(y) -> Driving(y, x))	The interviewer is granting a break to the man	GrantsBreak(interviewer, man)	n	False	False
999	A cord is being climbed by a man	exists x. exists y. (Cord(x) & Man(y) & Climbs(y, x))	A rope is being climbed by a man	exists x.exists y. (Rope(x) & Man(y) & Climbing(y, x))	e	False	False
1000	A man is eating a carrot sliced by a machine	exists x. exists y. exists z. (Man(x) & Carrot(y) & Machine(z) & Eating(x, y) & SlicedBy(y, z))	A man is slicing the carrot with a machine	exists x.exists y.exists z. (Man(x) & Carrot(y) & Machine(z) -> SlicesWith(x, y, z))	n	False	False
1001	A man is removing a carrot from a machine	exists x.exists y.exists z. (Man(x) & Carrot(y) & Machine(z) -> RemovingFrom(x, y, z))	A rope is being climbed by a man	exists x.exists y. (Rope(x) & Man(y) & Climbing(y, x))	n	False	False
1002	A cord is being climbed by a man	exists x. exists y. (Cord(x) & Man(y) & Climbs(y, x))	A man is slicing the carrot with a machine	exists x.exists y.exists z. (Man(x) & Carrot(y) & Machine(z) -> SlicesWith(x, y, z))	n	False	False
1003	There is no rope being climbed by a man	not exists x. (Rope(x) & Man(y) & Climbing(y, x))	A man is slicing the carrot with a machine	exists x.exists y.exists z. (Man(x) & Carrot(y) & Machine(z) -> SlicesWith(x, y, z))	n	False	False
1004	The cat is licking a shallow dish full of milk	exists x.exists y. (Cat(x) & ShallowDish(y) & FullOfMilk(y) -> Licking(x, y))	The cat is licking milk from a saucer	exists x. exists y. exists z. (Cat(x) & Milk(y) & Saucer(z) & LickingFrom(x, y, z))	n	False	False
1005	The cat is licking milk from a saucer	exists x. exists y. exists z. (Cat(x) & Milk(y) & Saucer(z) & LickingFrom(x, y, z))	A lick of milk sauce is being given to the cat	exists x. (Lick(x) & MilkSauce(x) & GivenTo(x, cat))	n	False	False
1006	The cat is licking milk from a saucer	exists x. exists y. exists z. (Cat(x) & Milk(y) & Saucer(z) & LickingFrom(x, y, z))	Some milk is being hungrily drunk by a cat	exists x.exists y. (Milk(x) & Cat(y) & HungrilyDrinks(y, x))	n	False	False
1007	The cat is licking milk from a saucer	exists x. exists y. exists z. (Cat(x) & Milk(y) & Saucer(z) & LickingFrom(x, y, z))	The cat is hungrily drinking milk	exists x. (Cat(x) -> HungrilyDrinkingMilk(x))	n	False	False
1008	A baby is cheerfully playing with a dog	exists x. exists y. (Baby(x) & Dog(y) & PlayingWith(x, y) & Cheerful(x))	A baby is playing with a dog 	exists x.exists y. (Baby(x) & Dog(y) -> PlayingWith(x, y))	e	True	False
1009	There is no baby playing with a dog	not exists x. (Baby(x) & Dog(y) & PlayingWith(x, y))	A baby is playing with a dog 	exists x.exists y. (Baby(x) & Dog(y) -> PlayingWith(x, y))	c	False	False
1010	A small boy is playing with a dog	exists x.exists y. (SmallBoy(x) & Dog(y) & PlayingWith(x, y))	The small boy is playing with the dog	exists x. exists y. (SmallBoy(x) & Dog(y) & PlayingWith(x, y))	e	True	False
1011	A baby is playing with a dog 	exists x.exists y. (Baby(x) & Dog(y) -> PlayingWith(x, y))	The small boy is playing with the dog	exists x. exists y. (SmallBoy(x) & Dog(y) & PlayingWith(x, y))	n	False	False
1012	A baby is cheerfully playing with a dog	exists x. exists y. (Baby(x) & Dog(y) & PlayingWith(x, y) & Cheerful(x))	A small boy is playing with a dog	exists x.exists y. (SmallBoy(x) & Dog(y) & PlayingWith(x, y))	n	False	False
1013	A small boy is playing with a dog	exists x.exists y. (SmallBoy(x) & Dog(y) & PlayingWith(x, y))	There is no baby playing with a dog	not exists x. (Baby(x) & Dog(y) & PlayingWith(x, y))	n	False	False
1014	A small boy is playing with a dog	exists x.exists y. (SmallBoy(x) & Dog(y) & PlayingWith(x, y))	A baby is playing with a dog 	exists x.exists y. (Baby(x) & Dog(y) -> PlayingWith(x, y))	n	True	False
1015	There is no woman peeling a potato	not exists x. (Woman(x) & PeelingPotato(x))	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	c	False	True
1016	A potato peel is falling over a woman	exists x.exists y. (PotatoPeel(x) & Woman(y) -> FallsOver(x, y))	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	n	False	False
1017	The man is not slicing potatoes	not exists x. (Man(x) & SlicingPotatoes(x))	The man is slicing potatoes	exists x. (Man(x) & SlicingPotatoes(x))	c	False	True
1018	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	The man is slicing some potatoes	exists x. (Man(x) & SlicingPotatoes(x))	n	False	False
1019	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	The man is not slicing potatoes	not exists x. (Man(x) & SlicingPotatoes(x))	n	False	False
1020	A potato peel is falling over a woman	exists x.exists y. (PotatoPeel(x) & Woman(y) -> FallsOver(x, y))	The man is slicing potatoes	exists x. (Man(x) & SlicingPotatoes(x))	n	False	False
1021	A man is taking pictures of a lake	exists x. exists y. (Man(x) & Lake(y) & TakingPictures(x, y))	A man is attentively taking pictures of a lake	exists x.exists y. (Man(x) & Lake(y) -> AttentivelyTakingPictures(x, y))	e	False	False
1022	The picture of a man is being taken near a lake	exists x. exists y. (Man(x) & Picture(y) & TakenNear(y, x, lake))	A man is taking pictures of a lake	exists x. exists y. (Man(x) & Lake(y) & TakingPictures(x, y))	n	False	False
1023	The man is setting up the camera and taking sunset pictures at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesSunsetPictures(x, z)))	The man is setting up the camera and takes pictures of the sunset at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesPicturesOf(x, z)))	e	False	False
1024	The man is setting up the camera and taking sunset pictures at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesSunsetPictures(x, z)))	The picture of a camera set up is being taken by a man on the beach at the sunset	exists x.exists y.exists z. (Camera(x) & Picture(y) & Man(z) & SetUp(x) & OnBeach(z) & Sunset(y) -> Taking(z, y))	e	False	False
1025	A man is taking pictures of a lake	exists x. exists y. (Man(x) & Lake(y) & TakingPictures(x, y))	The man is setting up the camera and takes pictures of the sunset at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesPicturesOf(x, z)))	n	False	False
1026	A man is taking pictures of a lake	exists x. exists y. (Man(x) & Lake(y) & TakingPictures(x, y))	The man is putting away the camera and walks away from the beach	exists x.exists y. (Man(x) & Camera(y) -> (PutsAway(x, y) & WalksAwayFromBeach(x)))	n	False	False
1027	The man is setting up the camera and taking sunset pictures at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesSunsetPictures(x, z)))	A man is attentively taking pictures of a lake	exists x.exists y. (Man(x) & Lake(y) -> AttentivelyTakingPictures(x, y))	n	False	False
1028	A man is tearing up the pictures of a lake	exists x.exists y. (Man(x) & Lake(y) -> TearingUpPicturesOf(x, y))	The man is setting up the camera and taking sunset pictures at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesSunsetPictures(x, z)))	n	False	False
1029	The picture of a man is being taken near a lake	exists x. exists y. (Man(x) & Picture(y) & TakenNear(y, x, lake))	The man is setting up the camera and taking sunset pictures at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesSunsetPictures(x, z)))	n	False	False
1030	The man is setting up the camera and taking sunset pictures at the beach	exists x.exists y.exists z. (Man(x) & Camera(y) & Beach(z) -> (SetsUp(x, y) & TakesSunsetPictures(x, z)))	A man is taking pictures of a lake	exists x. exists y. (Man(x) & Lake(y) & TakingPictures(x, y))	n	False	False
1031	A woman is sewing with a machine	exists x. (Woman(x) & SewingMachine(x))	A woman is using a sewing machine	exists x. (Woman(x) & SewingMachine(x))	e	True	False
1032	A woman is using a sewing machine	exists x. (Woman(x) & SewingMachine(x))	A woman is unstitching with a machine	exists x. (Woman(x) -> UnstitchingWithMachine(x))	n	False	False
1033	A woman is cracking an egg into a bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	A woman is placing a bowl with a crack near an egg	exists x. exists y. exists z. (Woman(x) & Bowl(y) & Crack(z) & Placing(x, y) & Near(y, z) & Egg(y))	n	False	False
1034	The woman is cracking two eggs into a bowl made of glass	exists x. exists y. exists z. (Woman(x) & Egg(y) & GlassBowl(z) & CracksInto(x, y, z))	The woman is cracking two eggs into a glass bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & GlassBowl(z) & CracksInto(x, y, z))	e	True	False
1035	A woman is cracking an egg into a bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	The woman is not cracking two eggs into a glass bowl	not exists x. (Woman(x) & CracksTwoEggsIntoGlassBowl(x))	n	False	False
1036	The woman is cracking two eggs into a glass bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & GlassBowl(z) & CracksInto(x, y, z))	An egg is being cracked into a bowl by a woman	exists x. exists y. exists z. (Egg(x) & Woman(y) & Bowl(z) & CracksInto(x, y, z))	e	False	False
1037	A few men are cheerfully playing cricket	exists x. (Man(x) & CheerfullyPlayingCricket(x))	A few men are playing cricket	exists x. (Man(x) & PlayingCricket(x))	e	False	False
1038	People are not playing cricket	not exists x. (Person(x) & PlayingCricket(x))	People are playing cricket	exists x. (Person(x) -> PlayingCricket(x))	c	False	False
1039	A few men are playing cricket	exists x. (Man(x) & PlayingCricket(x))	Some people are playing cricket	exists x. (Person(x) & PlayingCricket(x))	e	True	False
1040	A few men are playing cricket	exists x. (Man(x) & PlayingCricket(x))	People are not playing cricket	not exists x. (Person(x) & PlayingCricket(x))	c	False	True
1041	People are playing cricket	exists x. (Person(x) -> PlayingCricket(x))	A few men are watching cricket	exists x. (Man(x) & WatchingCricket(x))	n	False	False
1042	People are playing cricket	exists x. (Person(x) -> PlayingCricket(x))	A few men are playing cricket	exists x. (Man(x) & PlayingCricket(x))	e	False	False
1043	A man is putting garlic on some slices of bread	exists x. exists y. exists z. (Man(x) & Garlic(y) & Bread(z) & PutsOn(x, y, z))	A man is putting garlic on some bread slices	exists x. exists y. exists z. (Man(x) & Garlic(y) & BreadSlice(z) & PutsOn(x, y, z))	e	False	False
1044	A man is slicing some garlic and putting away the bread	exists x. (Man(x) & SlicingGarlic(x) & PuttingAwayBread(x))	A man is putting garlic on some bread slices	exists x. exists y. exists z. (Man(x) & Garlic(y) & BreadSlice(z) & PutsOn(x, y, z))	n	False	False
1045	A man is sprinkling seasoning on several sliced and buttered loaves of bread	exists x.exists y.exists z. (Man(x) & Seasoning(y) & LoafOfBread(z) & Sliced(z) & Buttered(z) -> SprinklesOn(x, y, z))	A person is sprinkling seasoning on several sliced and buttered loaves of bread	exists x. exists y. exists z. (Person(x) & SlicedLoaf(y) & ButteredLoaf(z) -> SprinklesSeasoning(x, y, z))	e	False	False
1046	A man is putting garlic on some bread slices	exists x. exists y. exists z. (Man(x) & Garlic(y) & BreadSlice(z) & PutsOn(x, y, z))	There is no man sprinkling seasoning on several sliced and buttered loaves of bread	not exists x. (Man(x) & SprinklingSeasoning(x) & SlicedLoaves(x) & ButteredLoaves(x))	n	False	False
1047	A man is sprinkling seasoning on several sliced and buttered loaves of bread	exists x.exists y.exists z. (Man(x) & Seasoning(y) & LoafOfBread(z) & Sliced(z) & Buttered(z) -> SprinklesOn(x, y, z))	A man is slicing some garlic and putting away the bread	exists x. (Man(x) & SlicingGarlic(x) & PuttingAwayBread(x))	n	False	False
1048	A man is putting garlic on some bread slices	exists x. exists y. exists z. (Man(x) & Garlic(y) & BreadSlice(z) & PutsOn(x, y, z))	A man is sprinkling seasoning on several sliced and buttered loaves of bread	exists x.exists y.exists z. (Man(x) & Seasoning(y) & LoafOfBread(z) & Sliced(z) & Buttered(z) -> SprinklesOn(x, y, z))	n	False	False
1049	Two crocodiles are floating in a green colored swimming pool near some playing kids	exists x. exists y. exists z. (Crocodile(x) & Crocodile(y) & GreenSwimmingPool(z) & FloatingIn(x, z) & FloatingIn(y, z) & PlayingKids(w) & Near(x, w) & Near(y, w))	Two kids are playing in a swimming pool with a green colored crocodile float	exists x. exists y. exists z. (Kid(x) & Kid(y) & SwimmingPool(z) & GreenCrocodileFloat(z) & PlayingIn(x, z) & PlayingIn(y, z))	n	False	False
1050	Two kids are pulling an inflatable crocodile out of a pool	exists x. exists y. exists z. (Kid(x) & Kid(y) & InflatableCrocodile(z) & PullingOutOfPool(x, z) & PullingOutOfPool(y, z))	Two kids are pushing an inflatable crocodile in a pool	exists x. exists y. exists z. (Kid(x) & Kid(y) & InflatableCrocodile(z) & Pushing(x, z) & Pushing(y, z))	n	False	False
1051	Two kids are playing in a swimming pool with a green colored crocodile float	exists x. exists y. exists z. (Kid(x) & Kid(y) & SwimmingPool(z) & GreenCrocodileFloat(z) & PlayingIn(x, z) & PlayingIn(y, z))	Two kids are pulling an inflatable crocodile out of a pool	exists x. exists y. exists z. (Kid(x) & Kid(y) & InflatableCrocodile(z) & PullingOutOfPool(x, z) & PullingOutOfPool(y, z))	n	False	False
1052	Two kids are playing in a swimming pool with a crocodile float that is green	exists x. exists y. exists z. (Kid(x) & Kid(y) & SwimmingPool(z) & PlayingIn(x, z) & PlayingIn(y, z) & CrocodileFloat(z) & Green(z))	Two kids are pushing an inflatable crocodile in a pool	exists x. exists y. exists z. (Kid(x) & Kid(y) & InflatableCrocodile(z) & Pushing(x, z) & Pushing(y, z))	e	False	False
1053	Two kids are pushing an inflatable crocodile in a pool	exists x. exists y. exists z. (Kid(x) & Kid(y) & InflatableCrocodile(z) & Pushing(x, z) & Pushing(y, z))	Two kids are playing in a swimming pool with a green colored crocodile float	exists x. exists y. exists z. (Kid(x) & Kid(y) & SwimmingPool(z) & GreenCrocodileFloat(z) & PlayingIn(x, z) & PlayingIn(y, z))	e	False	False
1054	Someone is falling off a horse	exists x. (FallingOffHorse(x))	Someone is on a horse	exists x. (Horse(x) & On(x))	n	False	False
1055	The man is being knocked off of a horse	exists x.exists y. (Man(x) & Horse(y) -> KnockedOff(x, y))	The man is not knocked off of a horse	exists x. exists y. (Man(x) & Horse(y) -> not KnockedOff(x, y))	c	False	False
1056	The man is abruptly knocked off of a horse	exists x.exists y. (Man(x) & Horse(y) -> KnockedOff(x, y))	Someone is falling off a horse	exists x. (FallingOffHorse(x))	e	False	False
1057	The man is being knocked off of a horse	exists x.exists y. (Man(x) & Horse(y) -> KnockedOff(x, y))	Someone is on a horse	exists x. (Horse(x) & On(x))	n	False	False
1058	A horse is falling on someone	exists x.exists y. (Horse(x) & Person(y) & FallingOn(x, y))	The man is being knocked off of a horse	exists x.exists y. (Man(x) & Horse(y) -> KnockedOff(x, y))	n	False	False
1059	The man is being knocked off of a horse	exists x.exists y. (Man(x) & Horse(y) -> KnockedOff(x, y))	Someone is falling off a horse	exists x. (FallingOffHorse(x))	e	False	False
1060	There is no woman tapping her fingers	not exists x. (Woman(x) & TappingFingers(x))	A woman is tapping her fingers	exists x. (Woman(x) & TappingFingers(x))	c	False	True
1061	A woman is tapping her fingers on a desk	exists x. (Woman(x) & TappingFingers(x))	A woman is tapping her fingers	exists x. (Woman(x) & TappingFingers(x))	e	True	False
1062	The dog is knocking a boy into the water	exists x.exists y.exists z. (Dog(x) & Boy(y) & Water(z) -> KnocksInto(x, y, z))	A boy is being knocked into the water by the dog	exists x.exists y. (Boy(x) & Dog(y) -> KnocksIntoWater(x, y))	e	False	False
1063	The dog is not knocking the boy into the water	not (Dog(d) & KnocksBoyIntoWater(d))	A dog is pushing a toddler into a rain puddle	exists x. exists y. exists z. (Dog(x) & Toddler(y) & RainPuddle(z) & Pushing(x, y, z))	n	False	False
1064	The dog is knocking a boy into the water	exists x.exists y.exists z. (Dog(x) & Boy(y) & Water(z) -> KnocksInto(x, y, z))	A dog is pulling a toddler out of a rain puddle	exists x.exists y. (Dog(x) & Toddler(y) & RainPuddle(z) -> PullsOutOf(x, y, z))	n	False	False
1065	The dog is knocking a boy into the water	exists x.exists y.exists z. (Dog(x) & Boy(y) & Water(z) -> KnocksInto(x, y, z))	A dog is pushing a toddler into a rain puddle	exists x. exists y. exists z. (Dog(x) & Toddler(y) & RainPuddle(z) & Pushing(x, y, z))	n	False	False
1066	A man is hungrily eating a bowl of cereal	exists x. exists y. (Man(x) & BowlOfCereal(y) & HungrilyEating(x, y))	A man is eating a bowl of cereal	exists x. exists y. (Man(x) & BowlOfCereal(y) & Eating(x, y))	e	False	False
1067	Cereal is being eaten by the man	exists x. exists y. (Cereal(x) & Man(y) & Eating(y, x))	The man is eating cereal	exists x. (Man(x) & EatingCereal(x))	e	False	False
1068	The man is eating cereal	exists x. (Man(x) & EatingCereal(x))	There is no man eating cereal	not exists x. (Man(x) & Eating(x, Cereal))	c	False	False
1069	A man is eating a bowl of cereal	exists x. exists y. (Man(x) & BowlOfCereal(y) & Eating(x, y))	The man is eating cereal	exists x. (Man(x) & EatingCereal(x))	e	False	False
1070	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is strumming the guitar	exists x. (Man(x) & StrummingGuitar(x))	e	False	False
1071	A man is packing away the guitar	exists x. (Man(x) & PackingAwayGuitar(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1072	The man in not playing the flute	not exists x. (Man(x) & PlaysFlute(x))	The man is playing the flute	exists x. (Man(x) & Playing(x, flute))	c	False	False
1073	A man is packing away the guitar	exists x. (Man(x) & PackingAwayGuitar(x))	The man is playing the flute	exists x. (Man(x) & Playing(x, flute))	n	False	False
1074	There is no woman adding spices to some meat	not exists x. (Woman(x) & AddsSpices(x, y) & Meat(y))	A woman is adding spices to some meat	exists x. exists y. (Woman(x) & Meat(y) & AddsSpices(x, y))	c	False	True
1075	The woman is adding sugar to the meat	exists x.exists y. (Woman(x) & Meat(y) -> AddsSugarTo(x, y))	The woman is not adding sugar to the meat	not exists x. (Woman(x) & AddSugarToMeat(x))	c	False	False
1076	A woman is adding spices to some meat	exists x. exists y. (Woman(x) & Meat(y) & AddsSpices(x, y))	The woman is adding sugar to the meat slowly	exists x. (Woman(x) -> AddsSugarToMeat(x))	n	False	False
1077	The woman is not adding sugar to the meat	not exists x. (Woman(x) & AddSugarToMeat(x))	A woman is adding spices to some meat	exists x. exists y. (Woman(x) & Meat(y) & AddsSpices(x, y))	n	False	False
1078	A woman is adding spices to some meat	exists x. exists y. (Woman(x) & Meat(y) & AddsSpices(x, y))	The woman is adding sugar to the meat	exists x.exists y. (Woman(x) & Meat(y) -> AddsSugarTo(x, y))	n	False	False
1079	The woman is adding sugar to the meat	exists x.exists y. (Woman(x) & Meat(y) -> AddsSugarTo(x, y))	There is no woman adding spices to some meat	not exists x. (Woman(x) & AddsSpices(x, y) & Meat(y))	n	False	False
1080	A dog is biting a can	exists x. exists y. (Dog(x) & Can(y) -> Biting(x, y))	A can is being bitten by a dog	exists x. exists y. (Can(x) & Dog(y) & BittenBy(x, y))	e	False	False
1081	A dog is opening a can of food	exists x. exists y. (Dog(x) & CanOfFood(y) & Opening(x, y))	A dog is closing a can of food	exists x. exists y. (Dog(x) & CanOfFood(y) & Closes(x, y))	n	False	False
1082	A dog is closing a can of food	exists x. exists y. (Dog(x) & CanOfFood(y) & Closes(x, y))	A dog is biting a can	exists x. exists y. (Dog(x) & Can(y) -> Biting(x, y))	n	False	False
1083	A can is being bitten by a dog	exists x. exists y. (Can(x) & Dog(y) & BittenBy(x, y))	A dog is opening a can of food	exists x. exists y. (Dog(x) & CanOfFood(y) & Opening(x, y))	n	False	False
1084	A dog is dropping a can	exists x. (Dog(x) & DroppingCan(x))	A dog is opening a can of food	exists x. exists y. (Dog(x) & CanOfFood(y) & Opening(x, y))	n	False	False
1085	A cat is playing with a watermelon	exists x. exists y. (Cat(x) & Watermelon(y) & PlayingWith(x, y))	There is no cat playing with a watermelon	not exists x. (Cat(x) & PlayingWithWatermelon(x))	c	False	False
1086	The cat is playing with a watermelon	exists x. exists y. (Cat(x) & Watermelon(y) & PlayingWith(x, y))	The cat isn't playing with a watermelon	not exists x. (Cat(x) & Watermelon(y) & PlayingWith(x, y))	c	False	False
1087	A cat is playing with a watermelon	exists x. exists y. (Cat(x) & Watermelon(y) & PlayingWith(x, y))	The cat is playing with a watermelon	exists x. exists y. (Cat(x) & Watermelon(y) & PlayingWith(x, y))	e	True	False
1088	There is no boy playing a guitar	not exists x. (Boy(x) & PlaysGuitar(x))	A boy is playing a guitar	exists x. (Boy(x) & PlayingGuitar(x))	c	False	False
1089	A teenager is playing the guitar	exists x. (Teenager(x) & PlayingGuitar(x))	A kid is playing a guitar	exists x. (Kid(x) & PlayingGuitar(x))	n	False	False
1090	A kid is putting the guitar away	exists x. (Kid(x) & PuttingAwayGuitar(x))	A kid is playing a guitar	exists x. (Kid(x) & PlayingGuitar(x))	n	False	False
1091	A teenager is playing the guitar	exists x. (Teenager(x) & PlayingGuitar(x))	A boy is playing a guitar	exists x. (Boy(x) & PlayingGuitar(x))	n	False	False
1092	A boy is playing a guitar	exists x. (Boy(x) & PlayingGuitar(x))	A kid is putting the guitar away	exists x. (Kid(x) & PuttingAwayGuitar(x))	n	False	False
1093	There is no boy playing a guitar	not exists x. (Boy(x) & PlaysGuitar(x))	A kid is playing a guitar	exists x. (Kid(x) & PlayingGuitar(x))	n	False	False
1094	A woman is wakeboarding on a lake	exists x. exists y. exists z. (Woman(x) & Lake(y) & Wakeboarding(z) & On(x, z, y))	One woman is wakeboarding on the lake	exists x. (Woman(x) & Wakeboarding(x))	e	False	False
1095	A woman is wakeboarding on a lake	exists x. exists y. exists z. (Woman(x) & Lake(y) & Wakeboarding(z) & On(x, z, y))	A woman is watching the lake	exists x. (Woman(x) & Watching(x, lake))	n	False	False
1096	One woman is wakeboarding on the lake	exists x. (Woman(x) & Wakeboarding(x))	The woman is waterskiing	exists x. (Woman(x) & Waterskiing(x))	n	False	False
1097	A camera is being hammered onto the nail by the man	exists x. exists y. exists z. (Camera(x) & Man(y) & Nail(z) & HammeredOnto(x, y, z))	The man is hammering a nail with a camera	exists x. exists y. exists z. (Man(x) & Nail(y) & Camera(z) & Hammering(x, y, z))	e	False	False
1098	The man is hammering a nail with a camera	exists x. exists y. exists z. (Man(x) & Nail(y) & Camera(z) & Hammering(x, y, z))	The man is not hammering a nail with a camera	not exists x. (Man(x) & HammeringNail(x) & Camera(x))	c	False	False
1099	The man is hammering a nail with a camera	exists x. exists y. exists z. (Man(x) & Nail(y) & Camera(z) & Hammering(x, y, z))	Someone is nailing a camera lens with loud bangs	exists x. (Person(x) & NailingCameraLens(x))	n	False	False
1100	A person is wrapping up an onion	exists x. (Person(x) & WrappingUpOnion(x))	A person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	n	False	False
1101	A person near an onion has a cut	exists x. exists y. (Person(x) & Onion(y) -> HasCut(x, y))	A person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	n	False	False
1102	One person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	A person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	e	True	False
1103	A person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	There is no person cutting an onion	not exists x. (Person(x) & CuttingOnion(x))	c	False	True
1104	A person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	One person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	e	True	False
1105	A person is slicing an onion	exists x. (Person(x) & Slicing(x, Onion))	A person is cutting an onion	exists x. (Person(x) & CuttingOnion(x))	e	False	False
1106	A carrot is being sliced by a woman	exists x. exists y. (Carrot(x) & Woman(y) & Slicing(y, x))	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	e	True	False
1107	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	There is no woman slicing a carrot	not exists x. (Woman(x) & SlicingCarrot(x))	c	False	False
1108	The oriental lady is cutting a carrot into thin pieces	exists x.exists y. (OrientalLady(x) & Carrot(y) -> CutsIntoThinPieces(x, y))	The oriental lady is cutting a carrot into pieces that are thin	exists x. exists y. (OrientalLady(x) & Carrot(y) -> CutsIntoThinPieces(x, y))	e	True	False
1109	A thin lady is piecing together oriental carrot cuts	exists x. (ThinLady(x) -> PiecesOrientalCarrotCuts(x))	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	n	False	False
1110	The oriental lady is cutting a carrot into thin pieces	exists x.exists y. (OrientalLady(x) & Carrot(y) -> CutsIntoThinPieces(x, y))	A carrot is being sliced by a woman	exists x. exists y. (Carrot(x) & Woman(y) & Slicing(y, x))	e	False	False
1111	The oriental lady is cutting a carrot into thin pieces	exists x.exists y. (OrientalLady(x) & Carrot(y) -> CutsIntoThinPieces(x, y))	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	e	False	False
1112	A man is pouring a plate of shredded cheese into a pot of sauce	exists x.exists y.exists z. (Man(x) & Plate(y) & ShreddedCheese(y) & Pot(z) & Sauce(z) -> PouringInto(x, y, z))	A man is pouring a plate of cheese which is shredded into a pot of sauce	exists x.exists y.exists z. (Man(x) & PlateOfCheese(y) & PotOfSauce(z) -> PoursInto(x, y, z))	e	False	False
1113	A man is pouring a plate of shredded cheese into a pot of sauce	exists x.exists y.exists z. (Man(x) & Plate(y) & ShreddedCheese(y) & Pot(z) & Sauce(z) -> PouringInto(x, y, z))	A man is taking a plate of shredded cheese off of a pot of sauce	exists x.exists y.exists z. (Man(x) & PlateOfShreddedCheese(y) & PotOfSauce(z) -> TakesOffFrom(x, y, z))	n	False	False
1114	The woman is adding cheese to the sauce	exists x. (Woman(x) -> AddsCheeseToSauce(x))	The lady is adding cheese to the sauce	exists x.exists y. (Lady(x) & Sauce(y) -> AddsCheese(x, y))	e	False	False
1115	A man is pouring a plate of cheese which is shredded into a pot of sauce	exists x.exists y.exists z. (Man(x) & PlateOfCheese(y) & PotOfSauce(z) -> PoursInto(x, y, z))	The lady is adding cheese to the sauce	exists x.exists y. (Lady(x) & Sauce(y) -> AddsCheese(x, y))	e	False	False
1116	The lady is adding cheese to the sauce	exists x.exists y. (Lady(x) & Sauce(y) -> AddsCheese(x, y))	A man is taking a plate of shredded cheese off of a pot of sauce	exists x.exists y.exists z. (Man(x) & PlateOfShreddedCheese(y) & PotOfSauce(z) -> TakesOffFrom(x, y, z))	n	False	False
1117	A man is pouring a pot of cheese sauce into a shredded plate	exists x. exists y. exists z. (Man(x) & Pot(y) & CheeseSauce(y) & ShreddedPlate(z) -> PoursInto(x, y, z))	The lady is adding cheese to the sauce	exists x.exists y. (Lady(x) & Sauce(y) -> AddsCheese(x, y))	n	False	False
1118	The lady is adding cheese to the sauce	exists x.exists y. (Lady(x) & Sauce(y) -> AddsCheese(x, y))	A man is pouring a plate of shredded cheese into a pot of sauce	exists x.exists y.exists z. (Man(x) & Plate(y) & ShreddedCheese(y) & Pot(z) & Sauce(z) -> PouringInto(x, y, z))	n	False	False
1119	Some cameras are being burned by a person with a blow torch	exists x.exists y.exists z. (Camera(x) & Person(y) & BlowTorch(z) & Burns(y, x, z))	A person is burning some cameras with a blow torch	exists x. exists y. exists z. (Person(x) & Camera(y) & BlowTorch(z) & BurnsWith(x, y, z))	e	False	False
1120	There is no person setting fire to the cameras	not exists x. (Person(x) & SetsFireToCameras(x))	The person is setting fire to the cameras	exists x. (Person(x) & SetsFireTo(x, cameras))	c	False	False
1121	A person is burning some cameras with a blow torch	exists x. exists y. exists z. (Person(x) & Camera(y) & BlowTorch(z) & BurnsWith(x, y, z))	The person is setting fire to the cameras	exists x. (Person(x) & SetsFireTo(x, cameras))	e	False	False
1122	The man is playing an acoustic guitar	exists x. (Man(x) & PlayingAcousticGuitar(x))	The man is playing a guitar which is acoustic	exists x.exists y. (Man(x) & Guitar(y) & Plays(x, y) -> Acoustic(y))	e	False	False
1123	The man isn't playing an acoustic guitar	not exists x. (Man(x) & AcousticGuitar(x))	The man is playing an acoustic guitar	exists x. (Man(x) & PlayingAcousticGuitar(x))	c	False	False
1124	The man is playing a guitar which is acoustic	exists x.exists y. (Man(x) & Guitar(y) & Plays(x, y) -> Acoustic(y))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
1125	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	The man isn't playing an acoustic guitar	not exists x. (Man(x) & AcousticGuitar(x))	n	False	False
1126	The man is playing an acoustic guitar	exists x. (Man(x) & PlayingAcousticGuitar(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
1127	A person is cutting an onion into pieces	exists x. (Person(x) & Cutting(x, Onion) & IntoPieces(x))	A person is piecing together an onion	exists x. (Person(x) & PiecingTogetherOnion(x))	n	False	False
1128	A person is slicing a carrot into pieces	exists x. exists y. (Person(x) & Carrot(y) & Slicing(x, y))	A carrot is being sliced into pieces by a person	exists x.exists y. (Carrot(x) & Person(y) -> Slicing(y, x))	e	True	False
1129	There is no person slicing a carrot into pieces	not exists x. (Person(x) & SlicingCarrot(x))	A person is slicing a carrot into pieces	exists x. exists y. (Person(x) & Carrot(y) & Slicing(x, y))	c	False	False
1130	There is no person slicing a carrot into pieces	not exists x. (Person(x) & SlicingCarrot(x))	A person is cutting an onion into pieces	exists x. (Person(x) & Cutting(x, Onion) & IntoPieces(x))	n	False	False
1131	A person is piecing together an onion	exists x. (Person(x) & PiecingTogetherOnion(x))	A person is slicing a carrot into pieces	exists x. exists y. (Person(x) & Carrot(y) & Slicing(x, y))	n	False	False
1132	The man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	The man is wrapping a potato	exists x. exists y. (Man(x) & Potato(y) & Wrapping(x, y))	n	False	False
1133	The man is slicing the potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	The person is slicing the potato	exists x. (Person(x) & Slicing(x, potato))	e	False	False
1134	The man is slicing the potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	The man is not slicing the potato	not exists x. (Man(x) & Slicing(x, potato))	c	False	False
1135	The man is slicing the potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	The man is wrapping a potato	exists x. exists y. (Man(x) & Potato(y) & Wrapping(x, y))	n	False	False
1136	The man is cooking slices of potato	exists x. (Man(x) & Cooking(x, PotatoSlices))	The man is slicing the potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	n	False	False
1137	The man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	The man is slicing the potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	e	True	False
1138	The lady is slicing a tomato	exists x. exists y. (Lady(x) & Tomato(y) & Slicing(x, y))	The woman is slicing a tomato	exists x. (Woman(x) & Slicing(x, tomato))	e	False	False
1139	A man is preparing some dish	exists x. (Man(x) & PreparingDish(x))	A man is preparing a dish	exists x. (Man(x) & PreparingDish(x))	e	True	False
1140	The woman is slicing an onion with a knife	exists x. exists y. exists z. (Woman(x) & Onion(y) & Knife(z) & Slicing(x, y, z))	An onion is being sliced with a knife by the woman	exists x. exists y. exists z. (Onion(x) & Knife(y) & Woman(z) & Slicing(z, x, y))	e	True	False
1141	A man is preparing some dish	exists x. (Man(x) & PreparingDish(x))	The woman is not slicing an onion with a knife	not exists x. (Woman(x) & SlicingOnion(x, Knife))	n	False	False
1142	The woman is slicing an onion with a knife	exists x. exists y. exists z. (Woman(x) & Onion(y) & Knife(z) & Slicing(x, y, z))	A man is preparing a dish	exists x. (Man(x) & PreparingDish(x))	n	False	False
1143	Runners are competing in a race	exists x.exists y. (Runner(x) & Race(y) -> CompetingIn(x, y))	Runners are not taking part in the race	exists x. (Runner(x) -> not TakingPartInRace(x))	c	False	False
1144	Runners are racing in a competition	exists x.exists y. (Runner(x) & Competition(y) -> RacesIn(x, y))	Runners are competing in a race	exists x.exists y. (Runner(x) & Race(y) -> CompetingIn(x, y))	e	False	False
1145	The runners are racing impetuously around a track	exists x.exists y. (Runner(x) & Track(y) -> RacesImpetuouslyAround(x, y))	The runners are racing around a track	exists x.exists y. (Runner(x) & Track(y) -> RacesAround(x, y))	e	False	False
1146	The runners are racing around a track	exists x.exists y. (Runner(x) & Track(y) -> RacesAround(x, y))	The runners are not racing around a track	not exists x. (Runner(x) & Racing(x))	c	False	False
1147	The runners are racing impetuously around a track	exists x.exists y. (Runner(x) & Track(y) -> RacesImpetuouslyAround(x, y))	Runners are competing in a race	exists x.exists y. (Runner(x) & Race(y) -> CompetingIn(x, y))	e	False	False
1148	Runners are competing in a race	exists x.exists y. (Runner(x) & Race(y) -> CompetingIn(x, y))	The runners are not racing around a track	not exists x. (Runner(x) & Racing(x))	n	False	False
1149	The runners are racing around a track	exists x.exists y. (Runner(x) & Track(y) -> RacesAround(x, y))	Runners are racing in a competition	exists x.exists y. (Runner(x) & Competition(y) -> RacesIn(x, y))	n	False	False
1150	The runners are racing around a track	exists x.exists y. (Runner(x) & Track(y) -> RacesAround(x, y))	Runners are competing in a race	exists x.exists y. (Runner(x) & Race(y) -> CompetingIn(x, y))	e	False	False
1151	A man is running	exists x. (Man(x) & Running(x))	A man is standing still	exists x. (Man(x) & StandingStill(x))	n	False	False
1152	A man is running down the road	exists x. (Man(x) & Running(x))	One man is running down the road	exists x. (Man(x) & Running(x))	e	True	False
1153	A man is racing	exists x. (Man(x) & Racing(x))	A man is running down the road	exists x. (Man(x) & Running(x))	n	False	False
1154	A man is running down the road	exists x. (Man(x) & Running(x))	A man is standing still	exists x. (Man(x) & StandingStill(x))	n	False	False
1155	A man is running down the road	exists x. (Man(x) & Running(x))	A man is running	exists x. (Man(x) & Running(x))	e	True	False
1156	The keyboard is being played with his nose by a man	exists x. exists y. exists z. (Keyboard(x) & Man(y) & Nose(z) & PlaysWith(y, x, z))	A man is playing the keyboard with his nose	exists x. (Man(x) & PlayingKeyboard(x) & WithNose(x))	e	False	False
1157	A man at the keyboard is playing with his nose	exists x. (Man(x) & AtKeyboard(x) -> PlayingWithNose(x))	A man is playing the keyboard with his nose	exists x. (Man(x) & PlayingKeyboard(x) & WithNose(x))	e	False	False
1158	The man is playing the piano with his nose	exists x.exists y. (Man(x) & Piano(y) -> PlaysWithNose(x, y))	There is no man playing the piano with his nose	not exists x. (Man(x) & PlaysPiano(x) & WithNose(x))	c	False	False
1159	The man is playing the piano with his nose	exists x.exists y. (Man(x) & Piano(y) -> PlaysWithNose(x, y))	The keyboard is being played with his nose by a man	exists x. exists y. exists z. (Keyboard(x) & Man(y) & Nose(z) & PlaysWith(y, x, z))	e	False	False
1160	A man is idling	exists x. (Man(x) & Idling(x))	The man is playing the piano with his nose	exists x.exists y. (Man(x) & Piano(y) -> PlaysWithNose(x, y))	n	False	False
1161	A man at the keyboard is playing with his nose	exists x. (Man(x) & AtKeyboard(x) -> PlayingWithNose(x))	The man is playing the piano with his nose	exists x.exists y. (Man(x) & Piano(y) -> PlaysWithNose(x, y))	n	False	False
1162	A baby rhino is following an adult rhino	exists x.exists y. (BabyRhino(x) & AdultRhino(y) -> Follows(x, y))	A rhino, which is little, is following an adult rhino	exists x. (Rhino(x) & Little(x) -> FollowsAdultRhino(x))	e	False	False
1163	A baby rhino is following an adult rhino	exists x.exists y. (BabyRhino(x) & AdultRhino(y) -> Follows(x, y))	A baby and an adult are being followed by a rhino	exists x. exists y. exists z. (Baby(x) & Adult(y) & Rhino(z) & Follows(z, x) & Follows(z, y))	n	False	False
1164	A baby rhino is walking around a pen with its mother	exists x.exists y.exists z. (BabyRhino(x) & Pen(y) & Mother(z) & WalksAround(x, y) -> MotheredBy(x, z))	A mother is giving the baby a pen with a walking rhino on it	exists x.exists y.exists z. (Mother(x) & Baby(y) & Pen(z) & Has(x, z) & Has(y, z) -> WalkingRhino(z))	n	False	False
1165	A baby rhino is following an adult rhino	exists x.exists y. (BabyRhino(x) & AdultRhino(y) -> Follows(x, y))	A rhino, which is a youngling, is walking around a pen with its mother	exists x.exists y.exists z. (Rhino(x) & Youngling(x) & Pen(y) & Mother(x, z) -> WalkingAround(x, y, z))	e	False	False
1166	A baby rhino and its mother are standing in a pen	exists x.exists y.exists z. (BabyRhino(x) & MotherRhino(y) & Pen(z) -> StandingIn(x, y, z))	A baby rhino is following an adult rhino	exists x.exists y. (BabyRhino(x) & AdultRhino(y) -> Follows(x, y))	n	False	False
1167	A baby rhino is following an adult rhino	exists x.exists y. (BabyRhino(x) & AdultRhino(y) -> Follows(x, y))	A mother is giving the baby a pen with a walking rhino on it	exists x.exists y.exists z. (Mother(x) & Baby(y) & Pen(z) & Has(x, z) & Has(y, z) -> WalkingRhino(z))	n	False	False
1168	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	A man is getting off the motorcycle	exists x. (Man(x) & Motorcycle(y) & Riding(x, y) & not Riding(x, y))	n	False	True
1169	A man is dangerously riding a motorcycle through a town	exists x. exists y. exists z. (Man(x) & Motorcycle(y) & Town(z) & DangerouslyRides(x, y, z))	A man is riding a motorcycle through the town	exists x. exists y. exists z. (Man(x) & Motorcycle(y) & Town(z) & Riding(x, y, z))	e	False	False
1170	There is no man riding a motorcycle through the town	not exists x. (Man(x) & RidingMotorcycle(x) & InTown(x))	A man is riding a motorcycle through the town	exists x. exists y. exists z. (Man(x) & Motorcycle(y) & Town(z) & Riding(x, y, z))	c	False	False
1171	A man is dangerously riding a motorcycle through a town	exists x. exists y. exists z. (Man(x) & Motorcycle(y) & Town(z) & DangerouslyRides(x, y, z))	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	e	False	False
1172	There is no man riding a motorcycle through the town	not exists x. (Man(x) & RidingMotorcycle(x) & InTown(x))	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	n	False	False
1173	A group of people is singing	exists x. (Group(x) & People(x) & Singing(x))	A few people are singing	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & Singing(x) & Singing(y) & Singing(z))	e	False	False
1174	A group of people is singing	exists x. (Group(x) & People(x) & Singing(x))	A group of people is silent	exists x. (Group(x) & Silent(x))	n	False	False
1175	Some people are singing	exists x. (Person(x) & Singing(x))	Some persons are singing	exists x. (Person(x) & Singing(x))	e	True	False
1176	Some people are singing	exists x. (Person(x) & Singing(x))	Some people are silent	exists x. (Person(x) & Silent(x))	n	False	False
1177	Some people are silent	exists x. (Person(x) & Silent(x))	A group of people is singing	exists x. (Group(x) & People(x) & Singing(x))	n	False	False
1178	Some people are singing	exists x. (Person(x) & Singing(x))	A group of people is silent	exists x. (Group(x) & Silent(x))	n	False	False
1179	A man is playing a trumpet brightly	exists x. (Man(x) & PlayingTrumpet(x))	A man is playing a trumpet	exists x. (Man(x) & PlayingTrumpet(x))	e	True	False
1180	A man is playing a trumpet	exists x. (Man(x) & PlayingTrumpet(x))	A man is putting a trumpet away	exists x. (Man(x) & PuttingAwayTrumpet(x))	n	False	False
1181	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A guitar is being played by the man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	e	False	False
1182	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	The man is not playing a guitar	not exists x. (Man(x) & PlayingGuitar(x))	c	False	True
1183	A guitar is being played by the man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	A man is playing a trumpet	exists x. (Man(x) & PlayingTrumpet(x))	n	False	False
1184	The man is not playing a guitar	not exists x. (Man(x) & PlayingGuitar(x))	A man is playing a trumpet	exists x. (Man(x) & PlayingTrumpet(x))	n	False	False
1185	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is playing a trumpet brightly	exists x. (Man(x) & PlayingTrumpet(x))	n	False	False
1186	A man is putting a trumpet away	exists x. (Man(x) & PuttingAwayTrumpet(x))	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1187	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is motionless	exists x. (Man(x) -> Motionless(x))	n	False	False
1188	A man is speaking	exists x. (Man(x) & Speaking(x))	A man is silent	exists x. (Man(x) & Silent(x))	c	False	False
1189	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is talking	exists x. (Man(x) & Talking(x))	n	False	False
1190	A man is speaking	exists x. (Man(x) & Speaking(x))	One man is dancing	exists x. (Man(x) & Dancing(x))	n	False	False
1191	A man is speaking	exists x. (Man(x) & Speaking(x))	A man is motionless	exists x. (Man(x) -> Motionless(x))	n	False	False
1192	One panda is climbing	exists x. (Panda(x) & Climbing(x))	A panda is climbing	exists x. (Panda(x) & Climbing(x))	e	True	False
1193	There is no panda climbing	not exists x. (Panda(x) & Climbing(x))	A man is climbing a rope	exists x. (Man(x) & ClimbingRope(x))	n	False	False
1194	A man is carefully climbing a rope	exists x. (Man(x) & ClimbingRope(x))	A panda is climbing	exists x. (Panda(x) & Climbing(x))	n	False	False
1195	A panda is climbing	exists x. (Panda(x) & Climbing(x))	A man is untying a rope	exists x. (Man(x) & UntyingRope(x))	n	False	False
1196	A man is being roped before a climb	exists x. exists y. (Man(x) & Climb(y) & BeingRoped(x, y))	A panda is climbing	exists x. (Panda(x) & Climbing(x))	n	False	False
1197	A woman is dancing in a cage	exists x. exists y. (Woman(x) & Cage(y) & DancingIn(x, y))	There is no woman dancing in a cage	not exists x. (Woman(x) & DancingInCage(x))	c	False	False
1198	A woman is dancing in a cage	exists x. exists y. (Woman(x) & Cage(y) & DancingIn(x, y))	The lady is dancing	exists x. (Lady(x) & Dancing(x))	e	False	False
1199	The woman is not dancing	not Dancing(woman)	A woman is dancing in a cage	exists x. exists y. (Woman(x) & Cage(y) & DancingIn(x, y))	n	False	False
1200	A woman is dancing beautifully in a cage	exists x. (Woman(x) & Dancing(x) & InCage(x))	The woman is dancing	exists x. (Dancer(x) & Woman(x))	e	False	False
1201	A woman is dancing in a cage	exists x. exists y. (Woman(x) & Cage(y) & DancingIn(x, y))	The woman is dancing	exists x. (Dancer(x) & Woman(x))	e	False	False
1202	Four people are floating on a raft	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & FloatingOnRaft(x, y, z, w))	A few people are floating on a raft	exists x.exists y.exists z. (Person(x) & Person(y) & Raft(z) & FloatingOn(x, z) & FloatingOn(y, z))	e	False	False
1203	People are riding and paddling a raft	exists x.exists y. (Person(x) & Raft(y) -> (Riding(x, y) & Paddling(x, y)))	Some persons are riding and paddling a raft	exists x.exists y.exists z. (Person(x) & Person(y) & Raft(z) & Riding(x, z) & Paddling(y, z))	e	False	False
1204	Some persons are riding and paddling a raft	exists x.exists y.exists z. (Person(x) & Person(y) & Raft(z) & Riding(x, z) & Paddling(y, z))	Four people are floating on a raft	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & FloatingOnRaft(x, y, z, w))	n	False	False
1205	Four people are floating on a raft	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & FloatingOnRaft(x, y, z, w))	People are not riding and paddling a raft	not exists x. (Person(x) & Riding(x, raft) & Paddling(x, raft))	n	False	False
1206	People are paddling near a raft that is being ridden	exists x.exists y.exists z. (Person(x) & Raft(y) & Near(x, y) & Ridden(y) -> Paddling(x, y))	Four people are floating on a raft	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & FloatingOnRaft(x, y, z, w))	n	False	False
1207	People are riding and paddling a raft	exists x.exists y. (Person(x) & Raft(y) -> (Riding(x, y) & Paddling(x, y)))	Nobody is floating on a raft	not exists x. (Raft(x) & FloatingOn(x))	c	False	False
1208	A cat is eagerly eating corn on the cob	exists x. (Cat(x) -> EagerlyEatingCornOnTheCob(x))	A cat is eating corn on the cob	exists x. (Cat(x) & Eating(x, corn) & OnCob(x))	e	False	False
1209	A cat is walking away from some corn	exists x.exists y. (Cat(x) & Corn(y) & WalkingAwayFrom(x, y))	A cat is eating some corn	exists x.exists y. (Cat(x) & Corn(y) & Eating(x, y))	n	False	False
1210	A cat is walking away from some corn	exists x.exists y. (Cat(x) & Corn(y) & WalkingAwayFrom(x, y))	A cat is eating corn on the cob	exists x. (Cat(x) & Eating(x, corn) & OnCob(x))	n	False	False
1211	A cat is eagerly eating corn on the cob	exists x. (Cat(x) -> EagerlyEatingCornOnTheCob(x))	A cat is eating some corn	exists x.exists y. (Cat(x) & Corn(y) & Eating(x, y))	e	False	False
1212	Someone is slicing a tomato	exists x. (Person(x) & Slicing(x, tomato))	Someone is cutting a tomato	exists x. (Person(x) & Cutting(x, tomato))	e	False	False
1213	The person is quickly slicing a vegetable	exists x. (Person(x) & SlicingVegetable(x) -> Quickly(x))	Someone is slicing a tomato	exists x. (Person(x) & Slicing(x, tomato))	n	False	False
1214	Someone is slicing a tomato	exists x. (Person(x) & Slicing(x, tomato))	The person isn't slicing a vegetable	not exists x. (Person(x) & SlicingVegetable(x))	n	False	False
1215	A little girl is playing a grand piano on stage	exists x. exists y. exists z. (LittleGirl(x) & GrandPiano(y) & Stage(z) & PlayingOn(x, y, z))	A little girl is playing a piano, which is very big, on stage	exists x. exists y. exists z. (LittleGirl(x) & Piano(y) & Stage(z) & Playing(x, y) & VeryBig(y) & On(y, z))	e	False	False
1216	There is no little girl playing a grand piano on stage	not exists x. (LittleGirl(x) & PlayingGrandPiano(x) & OnStage(x))	A little girl is playing a grand piano on stage	exists x. exists y. exists z. (LittleGirl(x) & GrandPiano(y) & Stage(z) & PlayingOn(x, y, z))	c	False	False
1217	A girl, who is little, is playing the piano	exists x. (Girl(x) & Little(x) -> PlayingPiano(x))	A little girl is playing the piano	exists x. (LittleGirl(x) & PlayingPiano(x))	e	False	False
1218	A little girl is playing a grand piano on stage	exists x. exists y. exists z. (LittleGirl(x) & GrandPiano(y) & Stage(z) & PlayingOn(x, y, z))	A girl, who is little, is playing the piano	exists x. (Girl(x) & Little(x) -> PlayingPiano(x))	e	False	False
1219	A little girl is playing a piano, which is very big, on stage	exists x. exists y. exists z. (LittleGirl(x) & Piano(y) & Stage(z) & Playing(x, y) & VeryBig(y) & On(y, z))	A little girl is playing the piano	exists x. (LittleGirl(x) & PlayingPiano(x))	e	False	False
1220	A man is packing a guitar	exists x. (Man(x) & PackingGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1221	Someone is putting the guitar away	exists x. (Person(x) & PuttingAwayGuitar(x))	Someone is playing the guitar	exists x. (GuitarPlayer(x))	n	False	False
1222	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	Someone is strumming the guitar	exists x. (StrummingGuitar(x))	e	False	False
1223	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	Someone is putting the guitar away	exists x. (Person(x) & PuttingAwayGuitar(x))	n	False	False
1224	A man is packing a guitar	exists x. (Man(x) & PackingGuitar(x))	Someone is playing the guitar	exists x. (GuitarPlayer(x))	n	False	False
1225	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	Someone is playing the guitar	exists x. (GuitarPlayer(x))	e	False	False
1226	The man is dancing frantically	DancingFrantically(man)	The man is dancing	exists x. (Dancer(x) & Man(x))	e	False	False
1227	The man is dancing	exists x. (Dancer(x) & Man(x))	The man is not dancing	not Dancing(man)	c	False	False
1228	Three women are standing still	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & StandingStill(x) & StandingStill(y) & StandingStill(z))	Three women are dancing	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & Dancing(x) & Dancing(y) & Dancing(z))	n	False	False
1229	The man is dancing	exists x. (Dancer(x) & Man(x))	A few women are dancing	exists x. (Woman(x) & Dancing(x))	n	False	False
1230	The man is dancing frantically	DancingFrantically(man)	Three women are dancing	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & Dancing(x) & Dancing(y) & Dancing(z))	n	False	False
1231	A man is playing a flute made of bamboo	exists x. exists y. (Man(x) & Flute(y) & MadeOfBamboo(y) & Playing(x, y))	A man is playing a bamboo flute	exists x. (Man(x) & PlayingBambooFlute(x))	e	False	False
1232	The man is playing a flute	exists x. (Man(x) & Playing(x, flute))	The man is not playing a flute	not exists x. (Man(x) & PlaysFlute(x))	c	False	False
1233	There is no man playing a bamboo flute	not exists x. (Man(x) & PlaysBambooFlute(x))	The man is playing a flute	exists x. (Man(x) & Playing(x, flute))	n	False	False
1234	A man is playing a bamboo flute	exists x. (Man(x) & PlayingBambooFlute(x))	The man is playing a flute	exists x. (Man(x) & Playing(x, flute))	e	False	False
1235	A person is slicing some mushrooms	exists x. (Person(x) & Slicing(x, mushrooms))	A person is cutting some mushrooms	exists x. (Person(x) & Cutting(x, mushrooms))	e	False	False
1236	A person is cutting mushrooms with a knife	exists x. (Person(x) & Cutting(x, mushrooms) & Using(x, knife))	A person is slicing some mushrooms	exists x. (Person(x) & Slicing(x, mushrooms))	e	False	False
1237	A tiger is aimlessly walking around	exists x. (Tiger(x) -> AimlesslyWalksAround(x))	A tiger is walking around aimlessly	exists x. (Tiger(x) -> WalksAimlessly(x))	e	False	False
1238	A tiger is aimlessly walking around	exists x. (Tiger(x) -> AimlesslyWalksAround(x))	A tiger is walking around a cage	exists x. exists y. (Tiger(x) & Cage(y) & WalkingAround(x, y))	n	False	False
1239	A tiger is walking outside a cage	exists x. (Tiger(x) & WalkingOutsideCage(x))	A tiger is walking around aimlessly	exists x. (Tiger(x) -> WalksAimlessly(x))	n	False	False
1240	The monkey is brushing a bull dog	exists x. exists y. (Monkey(x) & BullDog(y) & Brushing(x, y))	The monkey is not brushing a bull dog	not exists x. (Monkey(x) & BullDog(y) & Brushing(x, y))	c	False	False
1241	A bull dog is being brushed by the monkey	exists x. exists y. (BullDog(x) & Monkey(y) & Brushing(y, x))	A monkey is brushing the dog	exists x. exists y. (Monkey(x) & Dog(y) & Brushing(x, y))	e	True	False
1242	A monkey is brushing the dog	exists x. exists y. (Monkey(x) & Dog(y) & Brushing(x, y))	A bull dog is brushing the monkey	exists x.exists y. (BullDog(x) & Monkey(y) -> Brushes(x, y))	n	False	False
1243	The monkey is brushing a bull dog	exists x. exists y. (Monkey(x) & BullDog(y) & Brushing(x, y))	The monkey is brushing the dog	exists x. exists y. (Monkey(x) & Dog(y) & Brushing(x, y))	e	True	False
1244	The monkey is brushing a bull dog	exists x. exists y. (Monkey(x) & BullDog(y) & Brushing(x, y))	There is no monkey brushing the dog	not exists x. (Monkey(x) & Brushes(x, Dog))	c	False	False
1245	The monkey is brushing a bull dog	exists x. exists y. (Monkey(x) & BullDog(y) & Brushing(x, y))	A monkey is brushing the dog	exists x. exists y. (Monkey(x) & Dog(y) & Brushing(x, y))	e	True	False
1246	A woman is swiftly cutting an onion	exists x. (Woman(x) & Cutting(x, Onion))	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	e	False	False
1247	There is no woman cutting an onion	not exists x. (Woman(x) & CuttingOnion(x))	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	c	False	True
1248	The woman is dicing onions	exists x. (Woman(x) & DicingOnions(x))	The woman is throwing onions away	exists x. (Woman(x) & ThrowingOnions(x))	n	False	False
1249	The lady is dicing onions	exists x. (Lady(x) & DicingOnions(x))	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	e	False	False
1250	The woman is throwing onions away	exists x. (Woman(x) & ThrowingOnions(x))	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	n	False	False
1251	The woman is dicing onions	exists x. (Woman(x) & DicingOnions(x))	There is no woman cutting an onion	not exists x. (Woman(x) & CuttingOnion(x))	c	False	False
1252	The woman is dicing onions	exists x. (Woman(x) & DicingOnions(x))	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	e	False	False
1253	A man is dancing with a worn hard hat	exists x. exists y. (Man(x) & HardHat(y) & Worn(y) & DancingWith(x, y))	A man is wearing a hard hat and dancing	exists x. (Man(x) & WearingHardHat(x) & Dancing(x))	n	False	False
1254	A man with a hard hat is dancing	exists x. (Man(x) & WearsHardHat(x) -> Dancing(x))	A man is wearing a hat which is hard and is dancing	exists x. (Man(x) & WearingHardHat(x) & Dancing(x))	e	False	False
1255	A man is dancing with a worn hard hat	exists x. exists y. (Man(x) & HardHat(y) & Worn(y) & DancingWith(x, y))	A man with a hard hat is dancing	exists x. (Man(x) & WearsHardHat(x) -> Dancing(x))	e	False	False
1256	Two boys are playing a video game	exists x. exists y. (Boy(x) & Boy(y) & PlayingVideoGame(x, y))	A couple of boys are playing a video game	exists x.exists y.exists z. (Boy(x) & Boy(y) & VideoGame(z) & Playing(x, z) & Playing(y, z))	e	False	False
1257	Two boys on a couch are playing games on the TV	exists x.exists y.exists z. (Boy(x) & Boy(y) & Couch(z) -> (On(x, z) & On(y, z) & PlayingGamesOn(x, y, z)))	Two boys on a couch are playing video games	exists x. exists y. (Boy(x) & Boy(y) & Couch(c) & OnCouch(x, c) & OnCouch(y, c) -> PlayingVideoGames(x, y))	e	False	False
1258	Two boys are playing a video game	exists x. exists y. (Boy(x) & Boy(y) & PlayingVideoGame(x, y))	Two boys on a couch are reading a book	exists x. exists y. (Boy(x) & Boy(y) & Couch(c) & OnCouch(x, c) & OnCouch(y, c) & ReadingBook(x, y, c))	n	False	False
1259	Two boys on a couch are playing video games	exists x. exists y. (Boy(x) & Boy(y) & Couch(c) & OnCouch(x, c) & OnCouch(y, c) -> PlayingVideoGames(x, y))	A couple of boys are playing a video game	exists x.exists y.exists z. (Boy(x) & Boy(y) & VideoGame(z) & Playing(x, z) & Playing(y, z))	e	False	False
1260	Two boys are studying	exists x. exists y. (Boy(x) & Boy(y) & Studying(x) & Studying(y))	Two boys on a couch are playing video games	exists x. exists y. (Boy(x) & Boy(y) & Couch(c) & OnCouch(x, c) & OnCouch(y, c) -> PlayingVideoGames(x, y))	n	False	False
1261	A woman is cutting a potato	exists x. exists y. (Woman(x) & Potato(y) & Cutting(x, y))	A woman is slicing a potato	exists x. (Woman(x) & Slicing(x, potato))	e	False	False
1262	The man is slicing vegetables	exists x. (Man(x) & SlicingVegetables(x))	Vegetables are being sliced by a man	exists x.exists y. (Vegetable(x) & Man(y) -> Slices(y, x))	e	False	False
1263	The man is not slicing vegetables	not exists x. (Man(x) & SlicingVegetables(x))	The man is slicing vegetables	exists x. (Man(x) & SlicingVegetables(x))	c	False	True
1264	A woman is slicing a potato	exists x. (Woman(x) & Slicing(x, potato))	Vegetables are being sliced by a man	exists x.exists y. (Vegetable(x) & Man(y) -> Slices(y, x))	n	False	False
1265	The man is not slicing vegetables	not exists x. (Man(x) & SlicingVegetables(x))	A woman is slicing a potato	exists x. (Woman(x) & Slicing(x, potato))	n	False	False
1266	The man is slicing vegetables	exists x. (Man(x) & SlicingVegetables(x))	A woman is slicing a potato	exists x. (Woman(x) & Slicing(x, potato))	n	False	False
1267	The lady is breaking an egg for the mixer	BreaksEggForMixer(lady)	The lady is cracking an egg for the mixer	exists x. exists y. (Lady(x) & Egg(y) & Cracks(x, y) & For(x, Mixer))	e	False	False
1268	The lady is carefully slicing up the meat	exists x.exists y. (Lady(x) & Meat(y) -> CarefullySlicing(x, y))	The lady is cracking an egg for the mixer	exists x. exists y. (Lady(x) & Egg(y) & Cracks(x, y) & For(x, Mixer))	n	False	False
1269	The lady isn't slicing up the meat	not exists x. (Lady(x) & SlicingMeat(x))	The lady is cracking an egg for the mixer	exists x. exists y. (Lady(x) & Egg(y) & Cracks(x, y) & For(x, Mixer))	n	False	False
1270	The lady is slicing up the meat	exists x. exists y. (Lady(x) & Meat(y) & Slicing(x, y))	The lady is breaking an egg for the mixer	BreaksEggForMixer(lady)	n	False	False
1271	The lady is cracking an egg for the mixer	exists x. exists y. (Lady(x) & Egg(y) & Cracks(x, y) & For(x, Mixer))	The lady is slicing up the meat	exists x. exists y. (Lady(x) & Meat(y) & Slicing(x, y))	n	False	False
1272	Ferrets are climbing up a shelf	exists x. exists y. (Ferret(x) & Shelf(y) -> ClimbingUp(x, y))	Ferrets are climbing down from a shelf	exists x. (Ferret(x) -> ClimbingDownFromShelf(x))	n	False	False
1273	Several ferrets are climbing into the cage	exists x.exists y.exists z. (Ferret(x) & Ferret(y) & Ferret(z) & ClimbsIntoCage(x) & ClimbsIntoCage(y) & ClimbsIntoCage(z))	Several ferrets are climbing out of the cage	exists x.exists y.exists z. (Ferret(x) & Ferret(y) & Ferret(z) & ClimbingOutOfCage(x) & ClimbingOutOfCage(y) & ClimbingOutOfCage(z))	n	False	False
1274	Several ferrets are climbing into the cage	exists x.exists y.exists z. (Ferret(x) & Ferret(y) & Ferret(z) & ClimbsIntoCage(x) & ClimbsIntoCage(y) & ClimbsIntoCage(z))	Ferrets are climbing down from a shelf	exists x. (Ferret(x) -> ClimbingDownFromShelf(x))	n	False	False
1275	Ferrets are climbing up a shelf	exists x. exists y. (Ferret(x) & Shelf(y) -> ClimbingUp(x, y))	Several ferrets are climbing out of the cage	exists x.exists y.exists z. (Ferret(x) & Ferret(y) & Ferret(z) & ClimbingOutOfCage(x) & ClimbingOutOfCage(y) & ClimbingOutOfCage(z))	n	False	False
1276	A man is getting off the car	exists x. (Man(x) & GettingOffCar(x))	A man is getting into a car	exists x. exists y. (Man(x) & Car(y) & GettingInto(x, y))	n	False	False
1277	A man is parking a car in a garage	exists x. exists y. exists z. (Man(x) & Car(y) & Garage(z) & Parking(x, y, z))	A man is getting into a car in a garage	exists x. exists y. exists z. (Man(x) & Car(y) & Garage(z) & GettingInto(x, y, z))	n	False	False
1278	A man is getting into a car in a garage	exists x. exists y. exists z. (Man(x) & Car(y) & Garage(z) & GettingInto(x, y, z))	A man is getting a garage for the car	exists x. exists y. (Man(x) & Car(y) & Garage(z) & Buying(x, z) & For(z, y))	n	False	False
1279	A person is cutting a capsicum into pieces	exists x. exists y. (Person(x) & Capsicum(y) & Cutting(x, y))	Nobody is cutting a capsicum into pieces	not exists x. (CuttingCapsicum(x))	c	False	False
1280	A capsicum is being cut into pieces by a person	exists x.exists y. (Capsicum(x) & Person(y) -> Cutting(y, x))	The person is slicing a clove of garlic into pieces	exists x. (Person(x) & Slicing(x, garlic) & IntoPieces(x))	n	False	False
1281	A man is performing with the guitar	exists x. (Man(x) & PerformsWithGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
1282	A man is putting away the guitar	exists x. (Man(x) & PuttingAwayGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1283	The man is gracefully singing and playing the guitar	exists x. (Man(x) & GracefullySinging(x) & PlayingGuitar(x))	The man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	e	False	False
1284	The man is gracefully singing and playing the guitar	exists x. (Man(x) & GracefullySinging(x) & PlayingGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	True	False
1285	There is no man singing and playing the guitar	not exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1286	The man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is performing with the guitar	exists x. (Man(x) & PerformsWithGuitar(x))	e	False	False
1287	The man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is putting away the guitar	exists x. (Man(x) & PuttingAwayGuitar(x))	n	False	False
1288	Noodles are being boiled in water by a woman	exists x.exists y.exists z. (Noodles(x) & Water(y) & Woman(z) -> BoilsIn(x, y, z))	A person is boiling noodles	exists x. (Person(x) & BoilingNoodles(x))	e	False	False
1289	A karate practitioner is kicking at another man who is wearing protective boxing gloves	exists x.exists y. (KaratePractitioner(x) & Man(y) & WearingProtectiveBoxingGloves(y) -> Kicking(x, y))	The man is not kick boxing with a trainer	not exists x. (Man(x) & Trainer(y) & KickBoxing(x, y))	n	False	False
1290	The man is kick boxing with a trainer	exists x.exists y. (Man(x) & Trainer(y) -> KickBoxingWith(x, y))	A karate practitioner is kicking at another man who is wearing protective gloves for boxing	exists x.exists y. (KaratePractitioner(x) & Man(y) & WearingProtectiveGloves(y) -> Kicking(x, y))	n	False	False
1291	A woman on a rock is lying on a blanket and reading a book	exists x.exists y.exists z. (Woman(x) & Rock(y) & Blanket(z) -> (LyingOn(x, y, z) & ReadingBook(x)))	A woman on a rock is standing and looking around	exists x. (Woman(x) & OnRock(x) -> (Standing(x) & LookingAround(x)))	n	False	False
1292	A woman on a boulder is lying on a blanket and reading a book	exists x.exists y.exists z. (Woman(x) & Boulder(y) & Blanket(z) -> (LyingOn(x, y, z) & ReadingBook(x)))	A seated woman is singing a song and playing the guitar	exists x. (SeatedWoman(x) -> (exists y. (Song(y) & Singing(x, y)) & exists z. (Guitar(z) & Playing(x, z))))	n	False	False
1293	A woman is rocking over a blanket lying on someone reading a book	exists x. exists y. exists z. (Woman(x) & Blanket(y) & Book(z) & LyingOn(y, x) & Reading(z, x) & Rocking(x, y))	A seated woman is singing a song and playing the guitar	exists x. (SeatedWoman(x) -> (exists y. (Song(y) & Singing(x, y)) & exists z. (Guitar(z) & Playing(x, z))))	n	False	False
1294	A seated woman is singing a song and playing the guitar	exists x. (SeatedWoman(x) -> (exists y. (Song(y) & Singing(x, y)) & exists z. (Guitar(z) & Playing(x, z))))	A woman on a rock is lying on a blanket and reading a book	exists x.exists y.exists z. (Woman(x) & Rock(y) & Blanket(z) -> (LyingOn(x, y, z) & ReadingBook(x)))	n	False	False
1295	A man is playing an acoustic guitar	exists x. (Man(x) & PlayingAcousticGuitar(x))	A man is playing a guitar that is acoustic	exists x.exists y. (Man(x) & Guitar(y) & Acoustic(y) -> Playing(x, y))	e	False	False
1296	The woman is playing an electric guitar	exists x. (Woman(x) & ElectricGuitar(x))	The woman is not playing an electric guitar	not exists x. (Woman(x) & ElectricGuitar(x))	c	False	True
1297	A man is playing an acoustic guitar	exists x. (Man(x) & PlayingAcousticGuitar(x))	The woman is playing a guitar which is electric	exists x.exists y. (Woman(x) & Guitar(y) & Electric(y) -> Playing(x, y))	n	False	False
1298	A man is packing away an acoustic guitar	exists x. exists y. (Man(x) & AcousticGuitar(y) & PackingAway(x, y))	The woman is playing an electric guitar	exists x. (Woman(x) & ElectricGuitar(x))	n	False	False
1299	The lady is breaking eggs that are raw into a bowl	exists x.exists y.exists z. (Lady(x) & Egg(y) & Bowl(z) -> BreaksRawEggsInto(x, y, z))	The lady is breaking raw eggs into a bowl	BreaksRawEggsIntoBowl(lady)	e	False	False
1300	The lady is breaking raw eggs into a bowl	BreaksRawEggsIntoBowl(lady)	The lady isn't breaking raw eggs into a bowl	not BreaksRawEggsIntoBowl(lady)	c	False	True
1301	The woman is storing away the eggs	exists x. (Woman(x) & StoringAwayEggs(x))	The woman is cracking eggs into a bowl	exists x. (Woman(x) & CracksEggs(x))	n	False	False
1302	The lady is breaking raw eggs into a bowl	BreaksRawEggsIntoBowl(lady)	Eggs are being cracked into a bowl by the woman	exists x.exists y. (Egg(x) & Woman(y) -> CracksIntoBowl(y, x))	e	False	False
1303	The woman is storing away the eggs	exists x. (Woman(x) & StoringAwayEggs(x))	The lady is breaking raw eggs into a bowl	BreaksRawEggsIntoBowl(lady)	n	False	False
1304	The woman is cracking eggs into a bowl	exists x. (Woman(x) & CracksEggs(x))	The lady isn't breaking raw eggs into a bowl	not BreaksRawEggsIntoBowl(lady)	c	False	False
1305	The lady is breaking raw eggs into a bowl	BreaksRawEggsIntoBowl(lady)	The woman is cracking eggs into a bowl	exists x. (Woman(x) & CracksEggs(x))	e	False	False
1306	Some people who play soccer are kicking a soccer ball into the goal	exists x. (Person(x) & PlaysSoccer(x) & KicksSoccerBall(x))	Soccer players are kicking a soccer ball into the goal	exists x.exists y.exists z. (SoccerPlayer(x) & SoccerBall(y) & Goal(z) -> KicksInto(x, y, z))	e	False	False
1307	Soccer players are kicking a soccer ball into the goal	exists x.exists y.exists z. (SoccerPlayer(x) & SoccerBall(y) & Goal(z) -> KicksInto(x, y, z))	A soccer player is scoring a goal	exists x. (SoccerPlayer(x) -> ScoringGoal(x))	e	False	False
1308	A man and a woman are eating happily	exists x. exists y. (Man(x) & Woman(y) & Eating(x) & Eating(y) & Happy(x) & Happy(y))	A man and a woman are eating	exists x. exists y. (Man(x) & Woman(y) & Eating(x) & Eating(y))	e	True	False
1309	A man and woman are talking	exists x. exists y. (Man(x) & Woman(y) & Talking(x, y))	A man and a woman are having a conversation	exists x. exists y. (Man(x) & Woman(y) & Conversation(x, y))	e	True	False
1310	A man and woman are talking	exists x. exists y. (Man(x) & Woman(y) & Talking(x, y))	A man and a woman are not eating	exists x. exists y. (Man(x) & Woman(y) -> not Eating(x) & not Eating(y))	n	False	False
1311	A person is pouring oil made with olives into a pot on the stove	exists x.exists y.exists z. (Person(x) & Oil(y) & Pot(z) & MadeWithOlives(y) -> PoursInto(x, y, z))	A person is pouring olive oil into a pot on the stove	exists x. exists y. exists z. (Person(x) & OliveOil(y) & Pot(z) & PouringInto(x, y, z))	e	False	False
1312	A person is pouring olive oil into a pot on the stove	exists x. exists y. exists z. (Person(x) & OliveOil(y) & Pot(z) & PouringInto(x, y, z))	A person is pouring olive oil into the stove from a pot	exists x.exists y.exists z. (Person(x) & OliveOil(y) & Stove(z) -> PoursInto(x, y, z))	n	False	False
1313	A person is cleaning a pot of cooking oil	exists x. (Person(x) & Cleaning(x, pot) & CookingOil(pot))	A person is pouring cooking oil into a pot	exists x. exists y. exists z. (Person(x) & CookingOil(y) & Pot(z) -> PouringInto(x, y, z))	n	False	False
1314	A woman is walking the dog down the street	exists x. exists y. (Woman(x) & Dog(y) & Walking(x, y) & DownStreet(y))	The woman is walking the dog down the street 	exists x.exists y. (Woman(x) & Dog(y) -> WalksDownStreet(x, y))	e	False	False
1315	A woman is walking the dog down the street	exists x. exists y. (Woman(x) & Dog(y) & Walking(x, y) & DownStreet(y))	A woman is restraining the dog	exists x. exists y. (Woman(x) & Dog(y) & Restraining(x, y))	n	False	False
1316	The woman is walking the dog	exists x. exists y. (Woman(x) & Dog(y) & Walking(x, y))	The dog is being walked by the woman	exists x.exists y. (Dog(x) & Woman(y) & Walking(y, x))	e	True	False
1317	A woman is walking the dog down the street	exists x. exists y. (Woman(x) & Dog(y) & Walking(x, y) & DownStreet(y))	The woman is not walking the dog	not exists x. (Woman(x) & Walking(x, dog))	c	False	False
1318	The woman is walking the dog down the street 	exists x.exists y. (Woman(x) & Dog(y) -> WalksDownStreet(x, y))	The woman is walking the dog	exists x. exists y. (Woman(x) & Dog(y) & Walking(x, y))	e	False	False
1319	A guinea pig, which is small, is gnawing and eating a piece of carrot on the floor	exists x. (GuineaPig(x) -> (Small(x) & Gnawing(x) & EatingCarrot(x) & OnFloor(x)))	A guinea pig is eating a carrot	exists x. exists y. (GuineaPig(x) & Carrot(y) & Eating(x, y))	e	False	False
1320	There is no small guinea pig gnawing and eating a piece of carrot on the floor	not exists x. (SmallGuineaPig(x) & Gnawing(x) & EatingCarrot(x) & OnFloor(x))	A guinea pig is eating a carrot	exists x. exists y. (GuineaPig(x) & Carrot(y) & Eating(x, y))	c	False	False
1321	There is no guinea pig eating a carrot	not exists x. (GuineaPig(x) & Eating(x, carrot))	A small guinea pig is gnawing and eating a piece of carrot on the floor	exists x.exists y.exists z. (SmallGuineaPig(x) & Carrot(y) & Floor(z) -> GnawingAndEating(x, y, z))	n	False	False
1322	A man is confidently slicing a carrot with a knife	exists x. exists y. exists z. (Man(x) & Carrot(y) & Knife(z) & Slicing(x, y, z))	A man is slicing a carrot with a knife	exists x. exists y. exists z. (Man(x) & Carrot(y) & Knife(z) & Slicing(x, y, z))	e	True	False
1323	The woman is not slicing an onion	not exists x. (Woman(x) & SlicingOnion(x))	The woman is slicing an onion	exists x. (Woman(x) & Slicing(x, Onion))	c	False	False
1324	The woman is slicing an onion	exists x. (Woman(x) & Slicing(x, Onion))	A man is putting away a carrot	exists x. exists y. (Man(x) & Carrot(y) & PutsAway(x, y))	n	False	False
1325	A plane is taking off	exists x. (Plane(x) & TakingOff(x))	A plane is landing	exists x. (Plane(x) & Landing(x))	n	False	False
1326	An animated airplane is landing	exists x. (AnimatedAirplane(x) -> Landing(x))	An animated airplane is taking off	exists x. (AnimatedAirplane(x) -> TakingOff(x))	n	False	False
1327	An animated airplane is landing	exists x. (AnimatedAirplane(x) -> Landing(x))	A plane is taking off	exists x. (Plane(x) & TakingOff(x))	n	False	False
1328	A woman is cooking an egg in a skillet	exists x. exists y. exists z. (Woman(x) & Egg(y) & Skillet(z) & CookingIn(x, y, z))	A woman is preparing an egg in a skillet	exists x. exists y. exists z. (Woman(x) & Egg(y) & Skillet(z) & PreparingIn(x, y, z))	e	False	False
1329	A woman is carefully pouring a mixture into a bowl and mixing it	exists x.exists y.exists z. (Woman(x) & Mixture(y) & Bowl(z) -> (CarefullyPoursInto(x, y, z) & Mixes(x, y)))	A woman is pouring a mixture into a bowl and mixing it	exists x.exists y.exists z. (Woman(x) & Mixture(y) & Bowl(z) -> (PouringInto(x, y, z) & Mixing(x, y)))	e	False	False
1330	A woman is pouring a mixture into a bowl and mixing it	exists x.exists y.exists z. (Woman(x) & Mixture(y) & Bowl(z) -> (PouringInto(x, y, z) & Mixing(x, y)))	A woman is taking a mixture out of a bowl	exists x. exists y. exists z. (Woman(x) & Mixture(y) & Bowl(z) -> TakesOutOf(x, y, z))	n	False	False
1331	A woman is cooking an egg in a skillet	exists x. exists y. exists z. (Woman(x) & Egg(y) & Skillet(z) & CookingIn(x, y, z))	A woman is pouring a mixture into a bowl and mixing it	exists x.exists y.exists z. (Woman(x) & Mixture(y) & Bowl(z) -> (PouringInto(x, y, z) & Mixing(x, y)))	n	False	False
1332	There is no woman preparing an egg in a skillet	not exists x. (Woman(x) & PreparingEgg(x) & Skillet(x))	A woman is pouring a mixture into a bowl and mixing it	exists x.exists y.exists z. (Woman(x) & Mixture(y) & Bowl(z) -> (PouringInto(x, y, z) & Mixing(x, y)))	n	False	False
1333	A woman is pouring a mixture into a bowl and mixing it	exists x.exists y.exists z. (Woman(x) & Mixture(y) & Bowl(z) -> (PouringInto(x, y, z) & Mixing(x, y)))	A woman is preparing a skillet for the eggs	exists x. (Woman(x) & PreparingSkillet(x))	n	False	False
1334	A woman is preparing an egg in a skillet	exists x. exists y. exists z. (Woman(x) & Egg(y) & Skillet(z) & PreparingIn(x, y, z))	A woman is pouring a mixture into a bowl and mixing it	exists x.exists y.exists z. (Woman(x) & Mixture(y) & Bowl(z) -> (PouringInto(x, y, z) & Mixing(x, y)))	n	False	False
1335	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	The woman is not penciling on eyeshadow	not exists x. (Woman(x) & PencilingOnEyeshadow(x))	c	False	False
1336	The lady is penciling on eyeshadow	exists x. (Lady(x) & Penciling(x, Eyeshadow))	The girl is using an eye pencil on her eyelid	exists x.exists y. (Girl(x) & EyePencil(y) -> UsesOnEyelid(x, y))	e	False	False
1337	The woman is not penciling on eyeshadow	not exists x. (Woman(x) & PencilingOnEyeshadow(x))	The girl is using an eye pencil on her eyelid	exists x.exists y. (Girl(x) & EyePencil(y) -> UsesOnEyelid(x, y))	n	False	False
1338	The girl is using a pencil for the eyes on her eyelid	exists x.exists y. (Girl(x) & Pencil(y) -> UsedForEyesOnEyelid(x, y))	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	e	False	False
1339	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	The girl is not using an eye pencil on her eyelid	not exists x. (Girl(x) & EyePencil(x) & OnEyelid(x))	n	False	False
1340	The girl is using an eye pencil on her eyelid	exists x.exists y. (Girl(x) & EyePencil(y) -> UsesOnEyelid(x, y))	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	e	False	False
1341	A girl is practicing the piano	exists x. (Girl(x) & PracticingPiano(x))	A girl is playing the piano	exists x. (Girl(x) & PlayingPiano(x))	e	False	False
1342	A girl, who is little, is playing a grand piano on stage	exists x. (Girl(x) & Little(x) -> PlayingGrandPianoOnStage(x))	A girl is playing the piano	exists x. (Girl(x) & PlayingPiano(x))	e	False	False
1343	A girl is playing the piano	exists x. (Girl(x) & PlayingPiano(x))	A little girl is walking off the stage	exists x. (LittleGirl(x) & WalkingOffStage(x))	n	False	False
1344	There is no girl playing the piano	not exists x. (Girl(x) & PlaysPiano(x))	A little girl is playing a grand piano on stage	exists x. exists y. exists z. (LittleGirl(x) & GrandPiano(y) & Stage(z) & PlayingOn(x, y, z))	c	False	False
1345	The woman is lovingly cooking something	exists x. (Woman(x) & LovinglyCooking(x))	The woman is cooking something	exists x. (Woman(x) & Cooking(x))	e	False	False
1346	The woman is not cooking something	not exists x. (Woman(x) & Cooking(x))	The woman is cooking something	exists x. (Woman(x) & Cooking(x))	c	False	True
1347	A woman is cooking eggs	exists x. (Woman(x) & Cooking(x, Eggs))	The woman is lovingly cooking something	exists x. (Woman(x) & LovinglyCooking(x))	n	False	False
1348	Two cats are playfully fighting each other	exists x.exists y. (Cat(x) & Cat(y) & PlayfullyFighting(x, y))	The cats are playing with each other	exists x.exists y.exists z. (Cat(x) & Cat(y) & Cat(z) -> PlayingWith(x, y, z))	e	False	False
1349	The cats are playing with each other	exists x.exists y.exists z. (Cat(x) & Cat(y) & Cat(z) -> PlayingWith(x, y, z))	Two cats are lying together	exists x. exists y. (Cat(x) & Cat(y) & LyingTogether(x, y))	n	False	False
1350	Two people are stopping on a motorcycle	exists x. exists y. (Person(x) & Person(y) & Motorcycle(z) & StoppingOn(x, z) & StoppingOn(y, z))	Two people are riding a motorcycle	exists x. exists y. (Person(x) & Person(y) & Motorcycle(z) & Riding(x, z) & Riding(y, z))	n	False	False
1351	Two bikes are being ridden by two people	exists x. exists y. exists z. exists w. (Bike(x) & Bike(y) & Person(z) & Person(w) & Riding(z, x) & Riding(w, y))	Two people are riding a motorcycle	exists x. exists y. (Person(x) & Person(y) & Motorcycle(z) & Riding(x, z) & Riding(y, z))	n	False	False
1352	Two people are riding a motorcycle	exists x. exists y. (Person(x) & Person(y) & Motorcycle(z) & Riding(x, z) & Riding(y, z))	Two people are riding a bike	exists x. exists y. (Person(x) & Person(y) & RidingBike(x, y))	e	False	False
1353	A man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	A person is riding a mechanical bull	exists x. exists y. (Person(x) & MechanicalBull(y) & Riding(x, y))	e	True	False
1354	There is no man riding a mechanical bull	not exists x. (Man(x) & RidingMechanicalBull(x))	A man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	c	False	False
1355	A man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	The man is riding a bull which is mechanical	exists x.exists y. (Man(x) & Bull(y) -> Riding(x, y))	e	True	False
1356	The man is not riding a mechanical bull	not exists x. (Man(x) & RidingMechanicalBull(x))	A man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	c	False	False
1357	The man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	A person is riding a mechanical bull	exists x. exists y. (Person(x) & MechanicalBull(y) & Riding(x, y))	e	True	False
1358	A man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	The man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	e	True	False
1359	A woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	A woman is putting down a flute	exists x. (Woman(x) & PuttingDownFlute(x))	n	False	False
1360	The woman is playing the flute	exists x. (Woman(x) & Playing(x, flute))	The woman is not playing the flute	not exists x. (Woman(x) & PlayingFlute(x))	c	False	False
1361	A woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	The flute is being played by the woman	exists x. exists y. (Flute(x) & Woman(y) & Playing(y, x))	e	False	False
1362	A woman is skillfully playing a flute	exists x. (Woman(x) & SkillfullyPlayingFlute(x))	The woman is playing the flute	exists x. (Woman(x) & Playing(x, flute))	e	False	False
1363	A woman is putting down a flute	exists x. (Woman(x) & PuttingDownFlute(x))	The woman is playing the flute	exists x. (Woman(x) & Playing(x, flute))	n	False	False
1364	The woman is playing the flute	exists x. (Woman(x) & Playing(x, flute))	A woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	e	False	False
1365	The man is lifting weights	exists x. (Man(x) & LiftingWeights(x))	Weights are being lifted by the man	exists x. (Weight(x) -> BeingLiftedBy(x, man))	e	False	False
1366	The man is lifting weights	exists x. (Man(x) & LiftingWeights(x))	The man isn't lifting weights	not exists x. (Man(x) & LiftingWeights(x))	c	False	True
1367	The man isn't lifting weights	not exists x. (Man(x) & LiftingWeights(x))	The man is lifting barbells	exists x. (Man(x) & LiftingBarbells(x))	c	False	False
1368	The man is lifting weights	exists x. (Man(x) & LiftingWeights(x))	The man is lowering barbells	exists x. (Man(x) -> LoweringBarbells(x))	n	False	False
1369	A tree is being cut by a man with an axe	exists x.exists y.exists z. (Tree(x) & Man(y) & Axe(z) & Cutting(y, x, z))	A man is cutting a tree with an axe	exists x. exists y. exists z. (Man(x) & Tree(y) & Axe(z) & Cutting(x, y, z))	e	True	False
1370	A man is cutting a tree with an axe	exists x. exists y. exists z. (Man(x) & Tree(y) & Axe(z) & Cutting(x, y, z))	A man is watering a tree	exists x. exists y. (Man(x) & Tree(y) & Watering(x, y))	n	False	False
1371	A man is watering a tree	exists x. exists y. (Man(x) & Tree(y) & Watering(x, y))	A man is chopping down a tree with an axe	exists x. exists y. exists z. (Man(x) & Tree(y) & Axe(z) & Chopping(x, y, z))	n	False	False
1372	A man is cutting a tree with an axe	exists x. exists y. exists z. (Man(x) & Tree(y) & Axe(z) & Cutting(x, y, z))	A person is planting a tree	exists x. (Person(x) & PlantingTree(x))	n	False	False
1373	A girl is applying makeup to her face	exists x. (Girl(x) & ApplyingMakeup(x))	A lady is putting on makeup	exists x. (Lady(x) & PuttingOnMakeup(x))	e	False	False
1374	The girl is applying makeup to her face	AppliesMakeup(girl, Face)	A woman is putting on makeup	exists x. (Woman(x) & PuttingOnMakeup(x))	n	False	False
1375	The herd of caribous is crossing a road quickly	exists x. (CaribouHerd(x) -> CrossingRoadQuickly(x))	A herd of deer is crossing the street	exists x. (Herd(x) & Deer(x) & CrossingStreet(x))	n	False	False
1376	The herd of caribous is not crossing a road	not exists x. (Herd(x) & Caribou(x) & CrossingRoad(x))	A herd of deer is crossing the street	exists x. (Herd(x) & Deer(x) & CrossingStreet(x))	n	False	False
1377	The herd of caribous is crossing a road	exists x. exists y. (Caribou(x) & Road(y) & Crossing(x, y))	One herd of deer is crossing the street	exists x. (Herd(x) & Deer(x) & CrossingStreet(x))	n	False	False
1378	A herd of deer is crossing the street	exists x. (Herd(x) & Deer(x) & CrossingStreet(x))	The herd of caribous is crossing a road	exists x. exists y. (Caribou(x) & Road(y) & Crossing(x, y))	n	False	False
1379	The woman is dicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Dicing(x, y))	The woman is cutting a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Cutting(x, y))	e	False	False
1380	The woman is not cutting a carrot	not exists x. (Woman(x) & CuttingCarrot(x))	The woman is cutting a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Cutting(x, y))	c	False	False
1381	A woman is slicing an onion	exists x. (Woman(x) & SlicingOnion(x))	The woman is not cutting a carrot	not exists x. (Woman(x) & CuttingCarrot(x))	n	False	False
1382	The woman is cutting a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Cutting(x, y))	A woman is slicing an onion	exists x. (Woman(x) & SlicingOnion(x))	n	False	False
1383	Two men are fighting in a pasture for cows	exists x. exists y. exists z. (Man(x) & Man(y) & Pasture(z) & FightingIn(x, y, z) & ForCows(z))	Two men are fighting in a cattle pen	exists x. exists y. (Man(x) & Man(y) & FightingInCattlePen(x, y))	e	False	False
1384	Two cows are fighting in a pasture by a man	exists x.exists y.exists z. (Cow(x) & Cow(y) & Pasture(z) & FightingIn(x, y, z))	Two men are fighting in a cattle pen	exists x. exists y. (Man(x) & Man(y) & FightingInCattlePen(x, y))	n	False	False
1385	Two men are outside a cattle pen	exists x. exists y. (Man(x) & Man(y) & OutsideCattlePen(x) & OutsideCattlePen(y))	Two men are fighting in a cow pasture	exists x. exists y. (Man(x) & Man(y) & Fighting(x, y) & CowPasture(x, y))	n	False	False
1386	A woman is putting cosmetics on her eyelid	exists x. (Woman(x) & PuttingCosmeticsOnEyelid(x))	A woman is applying cosmetics to her eyelid	exists x. (Woman(x) & ApplyingCosmetics(x) -> ApplyingCosmeticsToEyelid(x))	e	False	False
1387	A woman is putting cosmetics on her eyelid	exists x. (Woman(x) & PuttingCosmeticsOnEyelid(x))	A woman is removing cosmetics from her eyelid	exists x. (Woman(x) -> RemovingCosmeticsFromEyelid(x))	c	False	False
1388	A woman is penciling on eyeshadow	exists x. (Woman(x) & PencilingOnEyeshadow(x))	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	e	False	False
1389	There is no woman penciling on eyeshadow	not exists x. (Woman(x) & PencilingOnEyeshadow(x))	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	c	False	False
1390	A woman is penciling on eyeshadow	exists x. (Woman(x) & PencilingOnEyeshadow(x))	A woman is putting cosmetics on her eyelid	exists x. (Woman(x) & PuttingCosmeticsOnEyelid(x))	e	False	False
1391	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	A woman is removing cosmetics from her eyelid	exists x. (Woman(x) -> RemovingCosmeticsFromEyelid(x))	c	False	False
1392	The woman is penciling on eyeshadow	exists x. (Woman(x) & Penciling(x, Eyeshadow))	A woman is putting cosmetics on her eyelid	exists x. (Woman(x) & PuttingCosmeticsOnEyelid(x))	e	False	False
1393	The man is eating a banana by a tree	exists x. exists y. exists z. (Man(x) & Banana(y) & Tree(z) & Eating(x, y, z))	There is no man eating a banana	not exists x. (Man(x) & EatingBanana(x))	c	False	False
1394	A large green ball is hitting a potato	exists x. exists y. (LargeGreenBall(x) & Potato(y) & Hitting(x, y))	A big potato is knocking a green ball	exists x.exists y. (BigPotato(x) & GreenBall(y) -> Knocks(x, y))	n	False	False
1395	Different teams are playing football on the field	exists x.exists y. (Team(x) & Team(y) -> PlayingFootballOnField(x, y))	Different teams are playing football on a field	exists x. exists y. exists z. (Team(x) & Team(y) & Team(z) & Football(x) & Football(y) & Football(z) & PlayingOnField(x) & PlayingOnField(y) & PlayingOnField(z))	e	False	False
1396	Two teams are enthusiastically playing soccer	exists x. exists y. (Team(x) & Team(y) & EnthusiasticallyPlaying(x, Soccer) & EnthusiasticallyPlaying(y, Soccer))	Two teams are playing soccer	exists x. exists y. (Team(x) & Team(y) & PlayingSoccer(x, y))	e	False	False
1397	There is no team playing soccer	not exists x. (Team(x) & Soccer(x))	Two teams are playing soccer	exists x. exists y. (Team(x) & Team(y) & PlayingSoccer(x, y))	c	False	False
1398	Different teams are playing football on the field	exists x.exists y. (Team(x) & Team(y) -> PlayingFootballOnField(x, y))	Two teams are playing soccer	exists x. exists y. (Team(x) & Team(y) & PlayingSoccer(x, y))	e	False	False
1399	Different teams are playing football on a field	exists x. exists y. exists z. (Team(x) & Team(y) & Team(z) & Football(x) & Football(y) & Football(z) & PlayingOnField(x) & PlayingOnField(y) & PlayingOnField(z))	Two teams are playing soccer	exists x. exists y. (Team(x) & Team(y) & PlayingSoccer(x, y))	n	False	False
1400	A boy is playing a keyboard	exists x. (Boy(x) & PlayingKeyboard(x))	A boy is practicing the keyboard	exists x. (Boy(x) & PracticingKeyboard(x))	e	False	False
1401	A boy is playing a keyboard	exists x. (Boy(x) & PlayingKeyboard(x))	There is no boy playing a keyboard	not exists x. (Boy(x) & PlaysKeyboard(x))	c	False	False
1402	A boy is comfortably sitting in a room and playing a piano by a lamp	exists x. exists y. exists z. (Boy(x) & Room(y) & Piano(z) & ComfortablySitsIn(x, y) & PlaysBy(x, z))	A boy is playing a keyboard	exists x. (Boy(x) & PlayingKeyboard(x))	n	False	False
1403	A boy is playing a keyboard	exists x. (Boy(x) & PlayingKeyboard(x))	A boy is standing in a room by a lamp light	exists x. exists y. exists z. (Boy(x) & Room(y) & Lamp(z) & StandingIn(x, y) & LightedBy(z, y))	n	False	False
1404	A boy is sitting in a room and playing a piano by lamp light	exists x. exists y. exists z. (Boy(x) & Room(y) & Piano(z) & SittingIn(x, y) & Playing(x, z) & LampLight(z))	There is no boy playing a keyboard	not exists x. (Boy(x) & PlaysKeyboard(x))	n	False	False
1405	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A woman is playing a guitar which is electric	exists x.exists y. (Woman(x) & Guitar(y) & Electric(y) -> Playing(x, y))	n	False	False
1406	There is no woman playing an electric guitar	not exists x. (Woman(x) & ElectricGuitarPlayer(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1407	A woman is playing an electric guitar	exists x. (Woman(x) & Playing(x, ElectricGuitar))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1408	A man in a suit is standing at a microphone and singing	exists x. (Man(x) & InSuit(x) -> (StandingAtMicrophone(x) & Singing(x)))	The man in a suit is standing at a microphone and singing	exists x. (Man(x) & InSuit(x) -> (StandingAtMicrophone(x) & Singing(x)))	e	True	False
1409	The man is staging a microphone and is singing	exists x. (Man(x) & StagingMicrophone(x) & Singing(x))	The man on stage is singing into the microphone	exists x.exists y. (Man(x) & Stage(y) & OnStage(x, y) -> SingingIntoMicrophone(x))	n	False	False
1410	A man in a suit is standing at a microphone and singing	exists x. (Man(x) & InSuit(x) -> (StandingAtMicrophone(x) & Singing(x)))	The man on stage is passionately singing into the microphone	exists x. (Man(x) & OnStage(x) & PassionatelySinging(x) -> IntoMicrophone(x))	n	False	False
1411	A man in a suit is standing at a microphone and singing	exists x. (Man(x) & InSuit(x) -> (StandingAtMicrophone(x) & Singing(x)))	The man is staging a microphone and is singing	exists x. (Man(x) & StagingMicrophone(x) & Singing(x))	e	False	False
1412	The man in a suit is standing at a microphone and singing	exists x. (Man(x) & InSuit(x) -> (StandingAtMicrophone(x) & Singing(x)))	The man on stage is singing into the microphone	exists x.exists y. (Man(x) & Stage(y) & OnStage(x, y) -> SingingIntoMicrophone(x))	e	False	False
1413	The man on stage is singing into the microphone	exists x.exists y. (Man(x) & Stage(y) & OnStage(x, y) -> SingingIntoMicrophone(x))	There is no man in a suit standing at a microphone and singing	not exists x. (Man(x) & InSuit(x) & StandingAtMicrophone(x) & Singing(x))	n	False	False
1414	Three teenage girls are dancing in the room	exists x. exists y. exists z. (TeenageGirl(x) & TeenageGirl(y) & TeenageGirl(z) & DancingInRoom(x) & DancingInRoom(y) & DancingInRoom(z))	Three young girls are dancing in the room	exists x. exists y. exists z. (YoungGirl(x) & YoungGirl(y) & YoungGirl(z) & DancingInRoom(x) & DancingInRoom(y) & DancingInRoom(z))	e	False	False
1415	Three teenage girls are idling in the room	exists x. exists y. exists z. (TeenageGirl(x) & TeenageGirl(y) & TeenageGirl(z) & IdlingInRoom(x) & IdlingInRoom(y) & IdlingInRoom(z))	Some teenage girls are dancing for the camera	exists x. (TeenageGirl(x) & Dancing(x))	n	False	False
1416	Some girls in their teens are dancing for the camera	exists x. (Girl(x) & Teen(x) & DancingForCamera(x))	Three teenage girls are dancing in the room	exists x. exists y. exists z. (TeenageGirl(x) & TeenageGirl(y) & TeenageGirl(z) & DancingInRoom(x) & DancingInRoom(y) & DancingInRoom(z))	n	False	False
1417	Some teenage girls are dancing for the camera	exists x. (TeenageGirl(x) & Dancing(x))	Three teenage girls are dancing in the room	exists x. exists y. exists z. (TeenageGirl(x) & TeenageGirl(y) & TeenageGirl(z) & DancingInRoom(x) & DancingInRoom(y) & DancingInRoom(z))	n	False	False
1418	Some children are jumping off a trampoline	exists x. (Child(x) & JumpingOffTrampoline(x))	Some children are jumping on a trampoline	exists x. (Child(x) & JumpingOnTrampoline(x))	n	False	False
1419	Some boys are playing on a trampoline	exists x. (Boy(x) & PlayingOnTrampoline(x))	Some children are jumping on a trampoline	exists x. (Child(x) & JumpingOnTrampoline(x))	n	False	False
1420	Nobody is playing on a trampoline	not exists x. (Person(x) & PlayingOnTrampoline(x))	Some children are jumping on a trampoline	exists x. (Child(x) & JumpingOnTrampoline(x))	c	False	False
1421	A few children are jumping on a trampoline	exists x.exists y. (Child(x) & Trampoline(y) & JumpingOn(x, y))	Two boy are playing on a trampoline	exists x. exists y. (Boy(x) & Boy(y) & PlayingOnTrampoline(x, y))	n	False	False
1422	Two boy are playing on a trampoline	exists x. exists y. (Boy(x) & Boy(y) & PlayingOnTrampoline(x, y))	Some children are jumping on a trampoline	exists x. (Child(x) & JumpingOnTrampoline(x))	n	False	False
1423	The dog is not playing with a plastic container	not exists x. (Dog(x) & PlasticContainer(y) & PlayingWith(x, y))	The dog is playing with a plastic container	exists x. exists y. (Dog(x) & PlasticContainer(y) & PlayingWith(x, y))	c	False	True
1424	The puppy is playing with a plastic container	exists x. exists y. (Puppy(x) & PlasticContainer(y) & PlayingWith(x, y))	The puppy is playing with a container made of plastic	exists x.exists y. (Puppy(x) & Container(y) & MadeOfPlastic(y) -> PlayingWith(x, y))	e	True	False
1425	The puppy is playing with a container made of plastic	exists x.exists y. (Puppy(x) & Container(y) & MadeOfPlastic(y) -> PlayingWith(x, y))	The dog is playing with a plastic container	exists x. exists y. (Dog(x) & PlasticContainer(y) & PlayingWith(x, y))	e	False	False
1426	The puppy is playing with a plastic container	exists x. exists y. (Puppy(x) & PlasticContainer(y) & PlayingWith(x, y))	The dog is not playing with a plastic container	not exists x. (Dog(x) & PlasticContainer(y) & PlayingWith(x, y))	c	False	False
1427	A man is jumping onto a wall which is low	exists x. exists y. (Man(x) & Wall(y) & JumpsOnto(x, y) -> Low(y))	A man is jumping onto a low wall	exists x. exists y. (Man(x) & LowWall(y) & JumpsOnto(x, y))	e	False	False
1428	A man is jumping onto a low wall	exists x. exists y. (Man(x) & LowWall(y) & JumpsOnto(x, y))	A man is jumping off a low wall	exists x. (Man(x) & JumpingOffLowWall(x))	c	False	False
1429	A man is athletically jumping a wall	exists x. (Man(x) & JumpingWall(x))	A man is jumping onto a low wall	exists x. exists y. (Man(x) & LowWall(y) & JumpsOnto(x, y))	n	False	False
1430	The man is pouring oil into a pan	exists x.exists y. (Man(x) & Pan(y) -> PoursOilInto(x, y))	A man is pouring oil into a pan	exists x. exists y. exists z. (Man(x) & Pan(y) & Oil(z) & Pouring(x, y, z))	e	False	False
1431	There is no man pouring oil into a pan	not exists x. (Man(x) & PouringOil(x, pan))	A man is pouring oil into a pan	exists x. exists y. exists z. (Man(x) & Pan(y) & Oil(z) & Pouring(x, y, z))	c	False	False
1432	A man is pouring oil into a skillet	exists x. exists y. exists z. (Man(x) & Skillet(y) & Oil(z) & Pouring(x, y, z))	Oil is being poured into a skillet by a man	exists x. exists y. exists z. (Oil(x) & Skillet(y) & Man(z) & PoursInto(x, y, z))	e	False	False
1433	A man is pouring oil into a pan	exists x. exists y. exists z. (Man(x) & Pan(y) & Oil(z) & Pouring(x, y, z))	Oil is being poured into a skillet by a man	exists x. exists y. exists z. (Oil(x) & Skillet(y) & Man(z) & PoursInto(x, y, z))	e	False	False
1434	A man is pouring oil into a pan	exists x. exists y. exists z. (Man(x) & Pan(y) & Oil(z) & Pouring(x, y, z))	A man is taking the oil out off a skillet	exists x. exists y. (Man(x) & Skillet(y) & TakingOilOut(x, y))	n	False	False
1435	A man is pouring oil into a skillet	exists x. exists y. exists z. (Man(x) & Skillet(y) & Oil(z) & Pouring(x, y, z))	The man is pouring oil into a pan	exists x.exists y. (Man(x) & Pan(y) -> PoursOilInto(x, y))	e	False	False
1436	There is no man pouring oil into a pan	not exists x. (Man(x) & PouringOil(x, pan))	A man is pouring oil into a skillet	exists x. exists y. exists z. (Man(x) & Skillet(y) & Oil(z) & Pouring(x, y, z))	c	False	False
1437	A woman is driving a car and is animatedly talking to the man who is seated beside her	exists x.exists y. (Woman(x) & Car(y) & Driving(x, y) & Man(z) & SeatedBeside(x, z) -> AnimatedlyTalking(x, z))	A woman is driving a car and is talking to the man who is seated beside her	exists x. exists y. (Woman(x) & Car(y) & Driving(x, y) & Man(z) & SeatedBeside(z, x) & TalkingTo(z, x))	e	False	False
1438	The woman and the man are travelling by car	exists x. exists y. (Woman(x) & Man(y) & TravellingByCar(x, y))	The woman and the man are travelling by automobile	exists x. exists y. (Woman(x) & Man(y) & TravellingByAutomobile(x, y))	e	False	False
1439	The woman and the man are not travelling by car	not (exists x. exists y. (Woman(x) & Man(y) & TravellingByCar(x, y)))	The woman and the man are travelling by car	exists x. exists y. (Woman(x) & Man(y) & TravellingByCar(x, y))	c	False	True
1440	A woman is driving a car and is talking to the man who is seated beside her	exists x. exists y. (Woman(x) & Car(y) & Driving(x, y) & Man(z) & SeatedBeside(z, x) & TalkingTo(z, x))	The woman and the man are not travelling by car	not (exists x. exists y. (Woman(x) & Man(y) & TravellingByCar(x, y)))	c	False	False
1441	A woman is driving a car and is animatedly talking to the man who is seated beside her	exists x.exists y. (Woman(x) & Car(y) & Driving(x, y) & Man(z) & SeatedBeside(x, z) -> AnimatedlyTalking(x, z))	The woman and the man are travelling by car	exists x. exists y. (Woman(x) & Man(y) & TravellingByCar(x, y))	e	False	False
1442	A woman is driving a car and is talking to the man who is seated beside her	exists x. exists y. (Woman(x) & Car(y) & Driving(x, y) & Man(z) & SeatedBeside(z, x) & TalkingTo(z, x))	The woman and the man are travelling by car	exists x. exists y. (Woman(x) & Man(y) & TravellingByCar(x, y))	e	False	False
1443	A person is ruffling the fur of a cat	exists x. exists y. (Person(x) & Cat(y) & RufflesFur(x, y))	A person is combing the fur of a cat	exists x. exists y. (Person(x) & Cat(y) & CombingFur(x, y))	n	False	False
1444	The fur of a cat is being combed by a person	exists x.exists y. (Cat(x) & Person(y) -> CombingFur(y, x))	A person is brushing a cat	exists x. exists y. (Person(x) & Cat(y) & Brushing(x, y))	e	False	False
1445	A person is ruffling the fur of a cat	exists x. exists y. (Person(x) & Cat(y) & RufflesFur(x, y))	A person is brushing a cat	exists x. exists y. (Person(x) & Cat(y) & Brushing(x, y))	n	False	False
1446	A person is combing the fur of a cat	exists x. exists y. (Person(x) & Cat(y) & CombingFur(x, y))	The person is brushing a cat	exists x. exists y. (Person(x) & Cat(y) & Brushing(x, y))	e	False	False
1447	Nobody is brushing a cat	not exists x. (Brushing(x, cat))	A person is combing the fur of a cat	exists x. exists y. (Person(x) & Cat(y) & CombingFur(x, y))	c	False	False
1448	Broccoli is being chopped by a woman	exists x. exists y. (Broccoli(x) & Woman(y) & Chopping(y, x))	A woman is chopping broccoli	exists x. (Woman(x) & Chopping(x, broccoli))	e	False	False
1449	The woman is chopping garlic	exists x. (Woman(x) & ChoppingGarlic(x))	The woman is slicing garlic	exists x. (Woman(x) & SlicingGarlic(x))	e	False	False
1450	The woman is chopping garlic	exists x. (Woman(x) & ChoppingGarlic(x))	The woman is not chopping garlic	not exists x. (Woman(x) & ChoppingGarlic(x))	c	False	True
1451	The woman is slicing garlic	exists x. (Woman(x) & SlicingGarlic(x))	A woman is chopping broccoli	exists x. (Woman(x) & Chopping(x, broccoli))	n	False	False
1452	The woman is chopping garlic	exists x. (Woman(x) & ChoppingGarlic(x))	Broccoli is being chopped by a woman	exists x. exists y. (Broccoli(x) & Woman(y) & Chopping(y, x))	n	False	False
1453	A woman is storing broccoli	exists x. (Woman(x) & StoringBroccoli(x))	The woman is chopping garlic	exists x. (Woman(x) & ChoppingGarlic(x))	n	False	False
1454	A woman is chopping broccoli	exists x. (Woman(x) & Chopping(x, broccoli))	The woman is chopping garlic	exists x. (Woman(x) & ChoppingGarlic(x))	n	False	False
1455	Some women are cheerfully dancing	exists x. (Woman(x) & CheerfullyDancing(x))	Some women are dancing	exists x. (Woman(x) & Dancing(x))	e	False	False
1456	There is no woman dancing	not exists x. (Woman(x) & Dancing(x))	Some women are dancing	exists x. (Woman(x) & Dancing(x))	c	False	True
1457	A few men are dancing	exists x. (Man(x) & Dancing(x))	Some women are dancing	exists x. (Woman(x) & Dancing(x))	n	False	False
1458	Some women are cheerfully dancing	exists x. (Woman(x) & CheerfullyDancing(x))	Three men are dancing	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Dancing(x) & Dancing(y) & Dancing(z))	n	False	False
1459	Three men are dancing	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Dancing(x) & Dancing(y) & Dancing(z))	There is no woman dancing	not exists x. (Woman(x) & Dancing(x))	n	False	False
1460	There is no man sitting on the floor and playing a guitar	not exists x. (Man(x) & SittingOnFloor(x) & PlayingGuitar(x))	A man is sitting on the floor and is playing a guitar	exists x. (Man(x) & SittingOnFloor(x) & PlayingGuitar(x))	c	False	True
1461	The man is sitting on the floor in a room and strumming a guitar	exists x. exists y. exists z. (Man(x) & Floor(y) & Room(z) & SittingOn(x, y) & StrummingGuitar(x))	A man is sitting on the floor in a room and strumming a guitar	exists x. exists y. exists z. (Man(x) & Floor(y) & Room(z) & SittingOn(x, y) & StrummingGuitar(x))	e	True	False
1462	The man is sitting on the floor in a room and strumming a guitar	exists x. exists y. exists z. (Man(x) & Floor(y) & Room(z) & SittingOn(x, y) & StrummingGuitar(x))	A man is sitting on the floor and is playing a guitar	exists x. (Man(x) & SittingOnFloor(x) & PlayingGuitar(x))	e	False	False
1463	A man is sitting on the floor and is playing a guitar	exists x. (Man(x) & SittingOnFloor(x) & PlayingGuitar(x))	The man is pacing around a room	exists x. exists y. (Man(x) & Room(y) & PacingAround(x, y))	n	False	False
1464	There is no man sitting on the floor and playing a guitar	not exists x. (Man(x) & SittingOnFloor(x) & PlayingGuitar(x))	A man is sitting on the floor in a room and strumming a guitar	exists x. exists y. exists z. (Man(x) & Floor(y) & Room(z) & SittingOn(x, y) & StrummingGuitar(x))	c	False	False
1465	A man is sitting on the floor in a room and strumming a guitar	exists x. exists y. exists z. (Man(x) & Floor(y) & Room(z) & SittingOn(x, y) & StrummingGuitar(x))	A man is sitting on the floor and is playing a guitar	exists x. (Man(x) & SittingOnFloor(x) & PlayingGuitar(x))	e	False	False
1466	One man is eating some food	exists x. exists y. (Man(x) & Food(y) & Eating(x, y))	A man is eating some food	exists x. exists y. (Man(x) & Food(y) & Eating(x, y))	e	True	False
1467	The man is fasting	exists x. (Man(x) & Fasting(x))	The man is eating	exists x. (Man(x) & Eating(x))	c	False	False
1468	A woman is carefully applying cosmetics to her eyelid	exists x. (Woman(x) & ApplyingCosmetics(x) & ToEyelid(x))	A woman is applying cosmetics to her eyelid	exists x. (Woman(x) & ApplyingCosmetics(x) -> ApplyingCosmeticsToEyelid(x))	e	False	False
1469	A woman is applying cosmetics to her eyelid	exists x. (Woman(x) & ApplyingCosmetics(x) -> ApplyingCosmeticsToEyelid(x))	A woman is removing cosmetics from her eyelid	exists x. (Woman(x) -> RemovingCosmeticsFromEyelid(x))	c	False	False
1470	A woman is using a pencil for eyes and is applying eye liner to her eyelid	exists x. (Woman(x) & UsingPencilForEyes(x) & ApplyingEyeLiner(x))	A woman is using an eye pencil and is applying eye liner to her eyelid	exists x. (Woman(x) & UsingEyePencil(x) -> ApplyingEyeLiner(x))	e	True	False
1471	A woman is carefully applying cosmetics to her eyelid	exists x. (Woman(x) & ApplyingCosmetics(x) & ToEyelid(x))	A woman is using an eye pencil and is applying eye liner to her eyelid	exists x. (Woman(x) & UsingEyePencil(x) -> ApplyingEyeLiner(x))	n	False	False
1472	A woman is using an eye pencil and is applying eye liner to her eyelid	exists x. (Woman(x) & UsingEyePencil(x) -> ApplyingEyeLiner(x))	A woman is removing cosmetics from her eyelid	exists x. (Woman(x) -> RemovingCosmeticsFromEyelid(x))	n	False	False
1473	A baby is crawling happily	exists x. (Baby(x) & Crawling(x) & Happy(x))	A baby is sitting	exists x. (Baby(x) & Sitting(x))	n	False	False
1474	A baby is crawling happily	exists x. (Baby(x) & Crawling(x) & Happy(x))	A baby is sneezing and frightening another baby	exists x. exists y. (Baby(x) & Baby(y) & Sneezing(x) & Frightening(x, y))	n	False	False
1475	The baby is crawling happily	Crawling(baby) & Happily(baby)	A baby is sneezing and scaring another baby	exists x.exists y. (Baby(x) & Baby(y) & Sneezing(x) -> Scares(x, y))	n	False	False
1476	A baby is crawling happily	exists x. (Baby(x) & Crawling(x) & Happy(x))	A baby is sneezing and scaring another baby	exists x.exists y. (Baby(x) & Baby(y) & Sneezing(x) -> Scares(x, y))	n	False	False
1477	A monkey is kicking at the gloved hand of a person	exists x.exists y. (Monkey(x) & Person(y) & GlovedHand(y) -> KicksAt(x, y))	A monkey is kicking at a person's glove	exists x.exists y. (Monkey(x) & Person(y) & WearingGlove(y) -> KickingAt(x, y))	e	False	False
1478	There is no monkey kicking at the gloved hand of a person	not exists x. (Monkey(x) & KicksAtGlovedHand(x))	A monkey is kicking at the gloved hand of a person	exists x.exists y. (Monkey(x) & Person(y) & GlovedHand(y) -> KicksAt(x, y))	c	False	False
1479	A gloved person is kicking at the hand of a monkey	exists x.exists y. (GlovedPerson(x) & Monkey(y) -> KickingAtHand(x, y))	A monkey is kicking at the gloved hand of a person	exists x.exists y. (Monkey(x) & Person(y) & GlovedHand(y) -> KicksAt(x, y))	n	False	False
1480	The monkey is being trained in martial arts	exists x. (Monkey(x) & BeingTrainedIn(x, MartialArts))	The monkey is practicing martial arts	exists x. (Monkey(x) -> PracticingMartialArts(x))	e	False	False
1481	The monkey is being trained in martial arts	exists x. (Monkey(x) & BeingTrainedIn(x, MartialArts))	A monkey is kicking at the gloved hand of a person	exists x.exists y. (Monkey(x) & Person(y) & GlovedHand(y) -> KicksAt(x, y))	n	False	False
1482	A monkey is kicking at the gloved hand of a person	exists x.exists y. (Monkey(x) & Person(y) & GlovedHand(y) -> KicksAt(x, y))	The monkey isn't practicing martial arts	not PracticesMartialArts(monkey)	n	False	False
1483	There is no monkey kicking at the gloved hand of a person	not exists x. (Monkey(x) & KicksAtGlovedHand(x))	The monkey is practicing martial arts	exists x. (Monkey(x) -> PracticingMartialArts(x))	n	False	False
1484	The monkey is practicing martial arts	exists x. (Monkey(x) -> PracticingMartialArts(x))	A gloved person is kicking at the hand of a monkey	exists x.exists y. (GlovedPerson(x) & Monkey(y) -> KickingAtHand(x, y))	n	False	False
1485	The monkey is practicing martial arts	exists x. (Monkey(x) -> PracticingMartialArts(x))	A monkey is kicking at the gloved hand of a person	exists x.exists y. (Monkey(x) & Person(y) & GlovedHand(y) -> KicksAt(x, y))	n	False	False
1486	A man is powerfully kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & PowerfullyKicks(x, y))	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	e	False	False
1487	A man is missing the soccer ball	exists x. (Man(x) & MissingSoccerBall(x))	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	n	False	False
1488	A man is performing tricks with a soccer ball	exists x.exists y. (Man(x) & SoccerBall(y) -> PerformsTricksWith(x, y))	A man is doing some tricks with a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & DoingTricks(x, y))	e	False	False
1489	A man is doing some tricks with a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & DoingTricks(x, y))	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	n	False	False
1490	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	A man is running away from the soccer ball	exists x.exists y. (Man(x) & SoccerBall(y) -> RunningAwayFrom(x, y))	n	False	False
1491	A man is missing the soccer ball	exists x. (Man(x) & MissingSoccerBall(x))	A man is performing tricks with a soccer ball	exists x.exists y. (Man(x) & SoccerBall(y) -> PerformsTricksWith(x, y))	n	False	False
1492	A man is performing tricks with a soccer ball	exists x.exists y. (Man(x) & SoccerBall(y) -> PerformsTricksWith(x, y))	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	e	False	False
1493	The man is cutting the tape on the box	exists x. exists y. (Man(x) & Tape(y) & Box(z) & Cutting(x, y, z))	The man is not cutting the tape on the box	not CuttingTapeOnBox(man)	c	False	False
1494	The man is cutting the tape on the box	exists x. exists y. (Man(x) & Tape(y) & Box(z) & Cutting(x, y, z))	A man is taping a cut box	exists x. (Man(x) & Taping(x, cutBox))	n	False	False
1495	A man is taping a cut box	exists x. (Man(x) & Taping(x, cutBox))	A man is cutting a box	exists x. exists y. (Man(x) & Box(y) & Cutting(x, y))	n	False	False
1496	A kid is practicing with an instrument	exists x.exists y. (Kid(x) & Instrument(y) -> PracticingWith(x, y))	A kid is playing an instrument	exists x. (Kid(x) -> exists y. (Instrument(y) & Playing(x, y)))	e	False	False
1497	A kid is playing an instrument	exists x. (Kid(x) -> exists y. (Instrument(y) & Playing(x, y)))	A kid is throwing away an instrument	exists x.exists y. (Kid(x) & Instrument(y) -> ThrowingAway(x, y))	n	False	False
1498	A boy, who is young, is playing a wind instrument	exists x. (Boy(x) & Young(x) -> PlayingWindInstrument(x))	A young boy is playing a wind instrument	exists x. (YoungBoy(x) & exists y. (WindInstrument(y) & Playing(x, y)))	e	False	False
1499	A boy, who is young, is playing a wind instrument	exists x. (Boy(x) & Young(x) -> PlayingWindInstrument(x))	A kid is playing an instrument	exists x. (Kid(x) -> exists y. (Instrument(y) & Playing(x, y)))	e	False	False
1500	There is no young boy playing a wind instrument	not exists x. (YoungBoy(x) & PlaysWindInstrument(x))	A kid is playing an instrument	exists x. (Kid(x) -> exists y. (Instrument(y) & Playing(x, y)))	n	False	False
1501	A young boy is playing a wind instrument	exists x. (YoungBoy(x) & exists y. (WindInstrument(y) & Playing(x, y)))	A kid is practicing with an instrument	exists x.exists y. (Kid(x) & Instrument(y) -> PracticingWith(x, y))	n	False	False
1502	A young boy is playing a wind instrument	exists x. (YoungBoy(x) & exists y. (WindInstrument(y) & Playing(x, y)))	A kid is playing an instrument	exists x. (Kid(x) -> exists y. (Instrument(y) & Playing(x, y)))	e	False	False
1503	A man is slowly trekking in the woods	exists x. (Man(x) & Trekking(x) & InWoods(x))	A man is trekking in the woods	exists x. (Man(x) & Trekking(x) & InWoods(x))	e	True	False
1504	A man is trekking in the woods	exists x. (Man(x) & Trekking(x) & InWoods(x))	A man is sitting in the woods	exists x. (Man(x) & SittingInWoods(x))	n	False	False
1505	The man is cheerfully hiking in the woods	CheerfulHiker(man) & HikingInWoods(man)	The man is hiking in the woods	exists x. (Man(x) & Hiking(x) & InWoods(x))	e	False	False
1506	The man is hiking in the woods	exists x. (Man(x) & Hiking(x) & InWoods(x))	The man is not hiking in the woods	not exists x. (Man(x) & Hiking(x) & InWoods(x))	c	False	True
1507	The man is cheerfully hiking in the woods	CheerfulHiker(man) & HikingInWoods(man)	A man is trekking in the woods	exists x. (Man(x) & Trekking(x) & InWoods(x))	e	False	False
1508	A man is sitting in the woods	exists x. (Man(x) & SittingInWoods(x))	The man is hiking in the woods	exists x. (Man(x) & Hiking(x) & InWoods(x))	n	False	False
1509	A man is trekking in the woods	exists x. (Man(x) & Trekking(x) & InWoods(x))	The man is hiking in the woods	exists x. (Man(x) & Hiking(x) & InWoods(x))	e	False	False
1510	The man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	A man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	e	True	False
1511	A woman is cutting a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Cutting(x, y))	A man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	n	False	False
1512	A man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	A woman is putting away a carrot	exists x. exists y. (Woman(x) & Carrot(y) & PuttingAway(x, y))	n	False	False
1513	The man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	n	False	False
1514	A man is slicing a tomato	exists x. exists y. (Man(x) & Tomato(y) & Slicing(x, y))	A woman is slicing a carrot	exists x. exists y. (Woman(x) & Carrot(y) & Slicing(x, y))	n	False	False
1515	A lady is mixing a meat mixture in a bowl	exists x. exists y. exists z. (Lady(x) & MeatMixture(y) & Bowl(z) & MixingIn(x, y, z))	A lady is mixing a mixture of meat in a bowl	exists x. exists y. exists z. (Lady(x) & Mixture(y) & Meat(z) & Mixing(x, y, z))	e	False	False
1516	There is no lady mixing a meat mixture in a bowl	not exists x. (Lady(x) & MixingMeatMixture(x) & InBowl(x))	A lady is mixing a meat mixture in a bowl	exists x. exists y. exists z. (Lady(x) & MeatMixture(y) & Bowl(z) & MixingIn(x, y, z))	c	False	False
1517	The lady is stirring meat in a bowl	exists x. exists y. exists z. (Lady(x) & Meat(y) & Bowl(z) & StirringIn(x, y, z))	The woman is stirring meat in a bowl	exists x. exists y. exists z. (Woman(x) & Meat(y) & Bowl(z) & StirringIn(x, y, z))	e	True	False
1518	The woman is stirring meat in a bowl	exists x. exists y. exists z. (Woman(x) & Meat(y) & Bowl(z) & StirringIn(x, y, z))	The woman is not stirring meat in a bowl	not exists x. (Woman(x) & StirringMeat(x, bowl))	c	False	False
1519	The lady is stirring meat in a bowl	exists x. exists y. exists z. (Lady(x) & Meat(y) & Bowl(z) & StirringIn(x, y, z))	A lady is mixing a meat mixture in a bowl	exists x. exists y. exists z. (Lady(x) & MeatMixture(y) & Bowl(z) & MixingIn(x, y, z))	e	False	False
1520	A lady is mixing a meat mixture in a bowl	exists x. exists y. exists z. (Lady(x) & MeatMixture(y) & Bowl(z) & MixingIn(x, y, z))	The woman is not stirring meat in a bowl	not exists x. (Woman(x) & StirringMeat(x, bowl))	c	False	False
1521	A woman is putting down a lemon	exists x. (Woman(x) & PuttingDown(x, lemon))	A woman is squeezing a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	n	False	False
1522	The woman is squeezing juice out of a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	A woman is squeezing juice out of a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	e	True	False
1523	A woman is squeezing juice out of a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	There is no woman squeezing juice out of a lemon	not exists x. (Woman(x) & SqueezingJuice(x, lemon))	c	False	False
1524	A woman is squeezing a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	The woman is squeezing juice out of a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	e	True	False
1525	A woman is squeezing juice out of a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	A lemon is being squeezed by a woman	exists x. exists y. (Lemon(x) & Woman(y) & Squeezing(y, x))	e	True	False
1526	A woman is putting down a lemon	exists x. (Woman(x) & PuttingDown(x, lemon))	A woman is squeezing juice out of a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	n	False	False
1527	A woman is squeezing juice out of a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	A woman is squeezing a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Squeezing(x, y))	e	True	False
1528	A kitten is playing with a blue rope toy	exists x. exists y. (Kitten(x) & BlueRopeToy(y) & PlayingWith(x, y))	A kitten is playing with a toy made of blue rope	exists x.exists y. (Kitten(x) & Toy(y) & BlueRope(y) -> PlayingWith(x, y))	e	True	False
1529	The kitten is not playing with a toy	not exists x. (Kitten(x) & Toy(y) & PlayingWith(x, y))	The kitten is playing with a toy	exists x. exists y. (Kitten(x) & Toy(y) & PlayingWith(x, y))	c	False	True
1530	A kitten is playing with a blue rope toy	exists x. exists y. (Kitten(x) & BlueRopeToy(y) & PlayingWith(x, y))	The little cat is playing with a toy	exists x.exists y. (LittleCat(x) & Toy(y) & PlayingWith(x, y))	e	False	False
1531	A kitten is getting bored	exists x. (Kitten(x) & Bored(x))	The kitten is playing with a toy	exists x. exists y. (Kitten(x) & Toy(y) & PlayingWith(x, y))	n	False	False
1532	A kitten is playing with a blue rope toy	exists x. exists y. (Kitten(x) & BlueRopeToy(y) & PlayingWith(x, y))	The kitten is playing with a toy	exists x. exists y. (Kitten(x) & Toy(y) & PlayingWith(x, y))	e	False	False
1533	A man is being stopped on a rope bridge	exists x. (Man(x) & StoppedOnRopeBridge(x))	A boy is walking across a bridge	exists x. exists y. exists z. (Boy(x) & Bridge(y) & WalkingAcross(x, y) & Boy(z) & OnBridge(z, y))	n	False	False
1534	A boy is walking across a bridge	exists x. exists y. exists z. (Boy(x) & Bridge(y) & WalkingAcross(x, y) & Boy(z) & OnBridge(z, y))	A man is walking slowly across a rope bridge	exists x. (Man(x) & Walking(x) & Across(x, ropeBridge))	n	False	False
1535	There is no boy hanging a fishing rod and running in front of a fish	not exists x. (Boy(x) & HangingFishingRod(x) & RunningInFrontOfFish(x))	A boy is hanging a fishing rod and running in front of a fish 	exists x.exists y.exists z. (Boy(x) & FishingRod(y) & Fish(z) -> (Hangs(x, y) & RunsInFrontOf(x, z)))	c	False	False
1536	A boy is running away from the fishing line	exists x. (Boy(x) -> exists y. (FishingLine(y) & RunningAwayFrom(x, y)))	A boy is running towards the fishing line	exists x. exists y. (Boy(x) & FishingLine(y) -> RunningTowards(x, y))	c	False	False
1537	A boy is hanging a fishing rod and running in front of a fish 	exists x.exists y.exists z. (Boy(x) & FishingRod(y) & Fish(z) -> (Hangs(x, y) & RunsInFrontOf(x, z)))	A young man is running away from the fishing line	exists x. (YoungMan(x) -> exists y. (FishingLine(y) & RunningAwayFrom(x, y)))	n	False	False
1538	A boy is hanging a fishing rod and running in front of a fish 	exists x.exists y.exists z. (Boy(x) & FishingRod(y) & Fish(z) -> (Hangs(x, y) & RunsInFrontOf(x, z)))	A boy is running towards the fishing line	exists x. exists y. (Boy(x) & FishingLine(y) -> RunningTowards(x, y))	n	False	False
1539	A boy is hanging a rod for fishing and running in front of a fish	exists x.exists y.exists z. (Boy(x) & Rod(y) & Fish(z) -> (HangsForFishing(x, y) & RunsInFrontOf(x, z)))	A boy is running away from the fishing line	exists x. (Boy(x) -> exists y. (FishingLine(y) & RunningAwayFrom(x, y)))	n	False	False
1540	A boy is running away from the fishing line	exists x. (Boy(x) -> exists y. (FishingLine(y) & RunningAwayFrom(x, y)))	There is no boy hanging a fishing rod and running in front of a fish	not exists x. (Boy(x) & HangingFishingRod(x) & RunningInFrontOfFish(x))	n	False	False
1541	The squirrel is running in circles	exists x. (Squirrel(x) -> RunsInCircles(x))	A squirrel is running in circles	exists x. (Squirrel(x) & RunningInCircles(x))	e	False	False
1542	A squirrel is running in circles	exists x. (Squirrel(x) & RunningInCircles(x))	The squirrel is not running in circles	exists x. (Squirrel(x) -> not RunningInCircles(x))	c	False	False
1543	An animal is running tiredly in circles	exists x. (Animal(x) & Running(x) & Tiredly(x) -> Circles(x))	An animal is running in circles	exists x. (Animal(x) & RunningInCircles(x))	e	False	False
1544	An animal is resting	exists x. (Animal(x) & Resting(x))	A squirrel is running in circles	exists x. (Squirrel(x) & RunningInCircles(x))	n	False	False
1545	The squirrel is running in circles	exists x. (Squirrel(x) -> RunsInCircles(x))	An animal is running in circles	exists x. (Animal(x) & RunningInCircles(x))	e	False	False
1546	The squirrel is not running in circles	exists x. (Squirrel(x) -> not RunningInCircles(x))	An animal is running in circles	exists x. (Animal(x) & RunningInCircles(x))	n	False	False
1547	A squirrel is running in circles	exists x. (Squirrel(x) & RunningInCircles(x))	An animal is running in circles	exists x. (Animal(x) & RunningInCircles(x))	e	True	False
1548	A woman is boiling eggs	exists x. (Woman(x) & BoilingEggs(x))	A woman is drying eggs	exists x. (Woman(x) & DryingEggs(x))	n	False	False
1549	A woman is placing two eggs into a pot of water	exists x. (Woman(x) -> (exists y. (Egg(y) & PlacingIntoWater(x, y))))	A woman is taking two eggs out of a pot of water	exists x. exists y. exists z. (Woman(x) & Egg(y) & PotOfWater(z) & TakingOutOf(x, y, z))	n	False	False
1550	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	e	False	False
1551	The man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	e	True	False
1552	There is no person kicking a soccer ball between somebody's feet	not exists x. (Person(x) & KickingSoccerBall(x) & BetweenFeet(x))	A person is kicking a soccer ball between their feet	exists x. (Person(x) & KickingSoccerBall(x) -> BetweenFeet(x))	n	False	False
1553	The person who is playing soccer is kicking the ball between somebody's legs	exists x. (Person(x) & PlayingSoccer(x) -> KickingBallBetweenLegs(x))	The soccer player is kicking the ball between somebody's legs	exists x.exists y.exists z. (SoccerPlayer(x) & Ball(y) & Legs(z) -> KicksBetween(x, y, z))	e	False	False
1554	The soccer player is not kicking the ball between somebody's legs	not exists x. (SoccerPlayer(x) & KickingBall(x) & BetweenLegs(x))	The soccer player is kicking the ball between somebody's legs	exists x.exists y.exists z. (SoccerPlayer(x) & Ball(y) & Legs(z) -> KicksBetween(x, y, z))	c	False	False
1555	A person is kicking a soccer ball between their feet	exists x. (Person(x) & KickingSoccerBall(x) -> BetweenFeet(x))	The person who is playing soccer is kicking the ball between somebody's legs	exists x. (Person(x) & PlayingSoccer(x) -> KickingBallBetweenLegs(x))	e	False	False
1556	A child is running in and out of the ocean waves	exists x. (Child(x) -> (RunsInOceanWaves(x) & RunsOutOfOceanWaves(x)))	A child is staring at the ocean waves	exists x. (Child(x) & StaringAtOceanWaves(x))	n	False	False
1557	A boy is waving at some young runners from the ocean	exists x.exists y.exists z. (Boy(x) & YoungRunner(y) & Ocean(z) & WavingAt(x, y, z))	The young boy is running through the ocean waves	exists x. (YoungBoy(x) -> exists y. (Ocean(y) & Waves(y) & RunningThrough(x, y)))	n	False	False
1558	A child is running in and out of the ocean waves	exists x. (Child(x) -> (RunsInOceanWaves(x) & RunsOutOfOceanWaves(x)))	A boy is waving at some young runners from the ocean	exists x.exists y.exists z. (Boy(x) & YoungRunner(y) & Ocean(z) & WavingAt(x, y, z))	n	False	False
1559	The young boy is running through the ocean waves	exists x. (YoungBoy(x) -> exists y. (Ocean(y) & Waves(y) & RunningThrough(x, y)))	A child is staring at the ocean waves	exists x. (Child(x) & StaringAtOceanWaves(x))	n	False	False
1560	A woman is putting away carrots	exists x. (Woman(x) & PuttingAwayCarrots(x))	A woman is grating carrots	exists x. (Woman(x) & GratingCarrots(x))	n	False	False
1561	A woman is coating a pork chop	exists x. (Woman(x) & Coating(x, porkChop))	Carrots are being grated by a woman	exists x. exists y. (Carrot(x) & Woman(y) & Grating(y, x))	n	False	False
1562	A woman is grating carrots	exists x. (Woman(x) & GratingCarrots(x))	There is no woman coating a pork chop	not exists x. (Woman(x) & CoatingPorkChop(x))	n	False	False
1563	A man and a woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingThroughWoods(x, y))	The man and the woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y) & Woods(z) & Through(x, z) & Through(y, z))	e	False	False
1564	A man and a woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingThroughWoods(x, y))	A man and a woman are standing still in the woods	exists x. exists y. (Man(x) & Woman(y) & StandingStillInWoods(x, y))	n	False	False
1565	A man is walking a woman through the woods	exists x. exists y. (Man(x) & Woman(y) & Walking(x, y) & Woods(z) & Through(x, z))	A man and a woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingThroughWoods(x, y))	e	False	False
1566	A man and a woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingThroughWoods(x, y))	The man and woman are strolling	exists x. exists y. (Man(x) & Woman(y) & Strolling(x, y))	n	False	False
1567	The man and woman are not walking	not (Man(m) & Woman(w) & Walking(m) & Walking(w))	A man and a woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingThroughWoods(x, y))	c	False	False
1568	The man and the woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y) & Woods(z) & Through(x, z) & Through(y, z))	The man and woman are walking	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y))	e	True	False
1569	A man and a woman are walking through the woods	exists x. exists y. (Man(x) & Woman(y) & WalkingThroughWoods(x, y))	The man and woman are walking	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y))	e	False	False
1570	An airplane is swiftly flying through the air	exists x. (Airplane(x) -> SwiftlyFlying(x))	An airplane is flying through the air	exists x. (Airplane(x) & Flying(x))	e	False	False
1571	An airplane is flying through the air	exists x. (Airplane(x) & Flying(x))	An airplane is being stationed on the ground	exists x. (Airplane(x) & StationedOnGround(x))	c	False	False
1572	The south African plane is flying in a blue sky	exists x. (Plane(x) & SouthAfrican(x) & FlyingInBlueSky(x))	The plane, which is south African, is flying in a blue sky	exists x. (Plane(x) & SouthAfrican(x) -> FlyingInBlueSky(x))	e	True	False
1573	The south African plane is flying in a blue sky	exists x. (Plane(x) & SouthAfrican(x) & FlyingInBlueSky(x))	The south African plane is not flying in a blue sky	not exists x. (Plane(x) & SouthAfrican(x) & FlyingInBlueSky(x))	c	False	True
1574	The plane, which is south African, is flying in a blue sky	exists x. (Plane(x) & SouthAfrican(x) -> FlyingInBlueSky(x))	An airplane is flying through the air	exists x. (Airplane(x) & Flying(x))	e	False	False
1575	The south African plane is flying in a blue sky	exists x. (Plane(x) & SouthAfrican(x) & FlyingInBlueSky(x))	An airplane is swiftly flying through the air	exists x. (Airplane(x) -> SwiftlyFlying(x))	n	False	False
1576	A woman is cooking a pork chop which is breaded	exists x. exists y. (Woman(x) & PorkChop(y) & Breaded(y) -> Cooking(x, y))	A woman is cooking a breaded pork chop	exists x. (Woman(x) & Cooking(x, breaded_pork_chop))	e	False	False
1577	The man is slicing bread	exists x. (Man(x) & SlicingBread(x))	Bread is being sliced by the man	exists x.exists y. (Bread(x) & Man(y) -> Slices(y, x))	e	False	False
1578	The woman is slicing herbs	exists x. (Woman(x) & SlicingHerbs(x))	A woman is slicing herbs	exists x. (Woman(x) & SlicingHerbs(x))	e	True	False
1579	The man is slicing bread	exists x. (Man(x) & SlicingBread(x))	The woman is not slicing herbs	not exists x. (Woman(x) & SlicingHerbs(x))	n	False	False
1580	The man is putting away the bread	exists x. exists y. (Man(x) & Bread(y) -> PutsAway(x, y))	The woman is slicing herbs	exists x. (Woman(x) & SlicingHerbs(x))	n	False	False
1581	The woman is slicing herbs	exists x. (Woman(x) & SlicingHerbs(x))	The man is slicing bread	exists x. (Man(x) & SlicingBread(x))	n	False	False
1582	A man is dancing on a roof 	exists x. exists y. (Man(x) & Roof(y) & DancingOn(x, y))	A person is dancing on a roof	exists x. (Person(x) & Dancing(x) & On(x, roof))	e	False	False
1583	A man is standing on the top of a roof and playing a violin	exists x. (Man(x) & StandingOnTopOfRoof(x) & PlayingViolin(x))	A man is standing on a roof top and playing a violin	exists x. exists y. (Man(x) & RoofTop(y) & StandingOn(x, y) & PlayingViolin(x))	e	False	False
1584	A man is dancing on a roof 	exists x. exists y. (Man(x) & Roof(y) & DancingOn(x, y))	There is no man standing on a roof top and playing a violin	not exists x. (Man(x) & StandingOnRoofTop(x) & PlayingViolin(x))	n	False	False
1585	A man is standing on a roof top and playing a violin	exists x. exists y. (Man(x) & RoofTop(y) & StandingOn(x, y) & PlayingViolin(x))	A person is dancing on a roof	exists x. (Person(x) & Dancing(x) & On(x, roof))	n	False	False
1586	Someone is typing on a keyboard	exists x. (Person(x) & Typing(x, Keyboard))	Somebody is typing on the keyboard	exists x. (Person(x) & TypingOnKeyboard(x))	e	False	False
1587	Somebody is typing on the keyboard	exists x. (Person(x) & TypingOnKeyboard(x))	Someone is typing	exists x. (Person(x) & Typing(x))	e	False	False
1588	Someone is writing	exists x. (Person(x) & Writing(x))	Someone is typing on a keyboard	exists x. (Person(x) & Typing(x, Keyboard))	n	False	False
1589	A woman is absently peeling a potato	exists x. (Woman(x) & AbsentlyPeelingPotato(x))	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	e	False	False
1590	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	A woman is putting away a potato	exists x. exists y. (Woman(x) & Potato(y) & PuttingAway(x, y))	n	False	False
1591	The boy is riding a tricycle	exists x. (Boy(x) & Riding(x, tricycle))	The boy is not riding a tricycle	not exists x. (Boy(x) & RidingTricycle(x))	c	False	False
1592	The boy is not riding a tricycle	not exists x. (Boy(x) & RidingTricycle(x))	A woman is riding a water scooter	exists x. exists y. (Woman(x) & WaterScooter(y) & Riding(x, y))	n	False	False
1593	A woman is riding a water scooter	exists x. exists y. (Woman(x) & WaterScooter(y) & Riding(x, y))	The boy is riding a tricycle	exists x. (Boy(x) & Riding(x, tricycle))	n	False	False
1594	The panda is not eating bamboo	exists x. (Panda(x) -> not EatingBamboo(x))	The panda is eating bamboo	exists x. (Panda(x) -> EatingBamboo(x))	c	False	False
1595	Some bamboo is being eaten by a panda bear	exists x.exists y. (Bamboo(x) & PandaBear(y) & Eats(y, x))	The panda is eating bamboo	exists x. (Panda(x) -> EatingBamboo(x))	e	False	False
1596	There is no panda bear eating some bamboo	not exists x. (PandaBear(x) & Eating(x, bamboo))	The panda is eating bamboo	exists x. (Panda(x) -> EatingBamboo(x))	c	False	False
1597	A panda bear is eating some bamboo	exists x. (PandaBear(x) & Eating(x, bamboo))	The panda is eating bamboo	exists x. (Panda(x) -> EatingBamboo(x))	e	False	False
1598	Someone is beating an egg	exists x. (Person(x) & BeatingEgg(x))	Somebody is beating an egg	exists x. (BeatingEgg(x))	e	True	False
1599	Nobody is beating an egg	not exists x. (BeatingEgg(x))	Someone is beating an egg	exists x. (Person(x) & BeatingEgg(x))	c	False	True
1600	The woman is stirring eggs in a bowl	exists x. exists y. exists z. (Woman(x) & Eggs(y) & Bowl(z) & StirringIn(x, y, z))	Somebody is beating an egg	exists x. (BeatingEgg(x))	n	False	False
1601	The woman is stirring eggs in a bowl	exists x. exists y. exists z. (Woman(x) & Eggs(y) & Bowl(z) & StirringIn(x, y, z))	Someone is beating an egg	exists x. (Person(x) & BeatingEgg(x))	n	False	False
1602	A man is slowly folding a tortilla	exists x. exists y. (Man(x) & Tortilla(y) & SlowlyFolding(x, y))	A man is folding a tortilla	exists x. exists y. (Man(x) & Tortilla(y) & Folding(x, y))	e	False	False
1603	A man is folding a tortilla	exists x. exists y. (Man(x) & Tortilla(y) & Folding(x, y))	A man is unfolding a tortilla	exists x. (Man(x) & UnfoldingTortilla(x))	n	False	False
1604	A person is folding a tortilla	exists x. (Person(x) & FoldingTortilla(x))	A tortilla is being folded by a person	exists x.exists y. (Tortilla(x) & Person(y) -> Folds(y, x))	e	False	False
1605	A man is folding a tortilla	exists x. exists y. (Man(x) & Tortilla(y) & Folding(x, y))	A tortilla is being folded by a person	exists x.exists y. (Tortilla(x) & Person(y) -> Folds(y, x))	e	False	False
1606	A man is slowly folding a tortilla	exists x. exists y. (Man(x) & Tortilla(y) & SlowlyFolding(x, y))	A person is folding a tortilla	exists x. (Person(x) & FoldingTortilla(x))	e	False	False
1607	A man is unfolding a tortilla	exists x. (Man(x) & UnfoldingTortilla(x))	A person is folding a tortilla	exists x. (Person(x) & FoldingTortilla(x))	n	False	False
1608	A man is folding a tortilla	exists x. exists y. (Man(x) & Tortilla(y) & Folding(x, y))	A person is folding a tortilla	exists x. (Person(x) & FoldingTortilla(x))	e	False	False
1609	A woman is deboning a fish	exists x. exists y. (Woman(x) & Fish(y) & Deboning(x, y))	A woman is freeing a fish	exists x. exists y. (Woman(x) & Fish(y) & Freeing(x, y))	c	False	False
1610	A woman is freeing a fish	exists x. exists y. (Woman(x) & Fish(y) & Freeing(x, y))	A man is catching a fish	exists x. exists y. (Man(x) & Fish(y) & Catching(x, y))	n	False	False
1611	A man is freeing a fish	exists x. exists y. (Man(x) & Fish(y) & Freeing(x, y))	A woman is deboning a fish	exists x. exists y. (Woman(x) & Fish(y) & Deboning(x, y))	n	False	False
1612	A man is catching a fish	exists x. exists y. (Man(x) & Fish(y) & Catching(x, y))	A woman is deboning a fish	exists x. exists y. (Woman(x) & Fish(y) & Deboning(x, y))	n	False	False
1613	There is no man playing a harp	not exists x. (Man(x) & PlaysHarp(x))	A man is playing a harp	exists x. (Man(x) & PlayingHarp(x))	c	False	False
1614	There is no man playing a harp	not exists x. (Man(x) & PlaysHarp(x))	A man is playing a violin	exists x. (Man(x) & PlayingViolin(x))	n	False	False
1615	A man is playing a violin	exists x. (Man(x) & PlayingViolin(x))	A man is harping on about a play	exists x. exists y. (Man(x) & Play(y) & HarpingOnAbout(x, y))	n	False	False
1616	There is no person buttering a tray	not exists x. (Person(x) & ButteringTray(x))	A person is buttering a tray	exists x. (Person(x) & Buttering(x, tray))	c	False	False
1617	A person is wiping butter on a tray	exists x. (Person(x) & Wiping(x, butter) & On(x, tray))	A tray is being buttered by a person	exists x. exists y. (Tray(x) & Person(y) & Buttering(y, x))	e	False	False
1618	A person is wiping butter on a tray	exists x. (Person(x) & Wiping(x, butter) & On(x, tray))	A person is buttering a tray	exists x. (Person(x) & Buttering(x, tray))	e	False	False
1619	A woman is throwing volleyballs over a net	exists x. (Woman(x) & ThrowingVolleyballs(x) -> OverNet(x))	A woman is serving volleyballs over a net	exists x. (Woman(x) -> ServingVolleyballsOverNet(x))	e	False	False
1620	One woman is handing volleyballs to another woman	exists x. exists y. (Woman(x) & Woman(y) & HandingVolleyballs(x, y))	One woman is denying the volleyballs to another woman	exists x. exists y. (Woman(x) & Woman(y) & DeniesVolleyballs(x, y))	n	False	False
1621	A woman is serving volleyballs over a net	exists x. (Woman(x) -> ServingVolleyballsOverNet(x))	A woman is being handed volleyballs by another woman	exists x.exists y. (Woman(x) & Woman(y) -> HandingVolleyballs(x, y))	n	False	False
1622	One woman is denying the volleyballs to another woman	exists x. exists y. (Woman(x) & Woman(y) & DeniesVolleyballs(x, y))	A woman is serving volleyballs over a net	exists x. (Woman(x) -> ServingVolleyballsOverNet(x))	n	False	False
1623	One woman is handing volleyballs to another woman	exists x. exists y. (Woman(x) & Woman(y) & HandingVolleyballs(x, y))	A woman is receiving volleyballs	exists x. (Woman(x) & ReceivingVolleyballs(x))	e	False	False
1624	One woman is handing volleyballs to another woman	exists x. exists y. (Woman(x) & Woman(y) & HandingVolleyballs(x, y))	A woman is serving volleyballs over a net	exists x. (Woman(x) -> ServingVolleyballsOverNet(x))	n	False	False
1625	A man is chopping a log with an axe	exists x. exists y. exists z. (Man(x) & Log(y) & Axe(z) & Chopping(x, y, z))	The man is chopping the trunk of a tree with an axe	exists x. exists y. exists z. (Man(x) & Tree(y) & Axe(z) & Chopping(x, y, z))	n	False	False
1626	The man is chopping a tree trunk with an axe	exists x. exists y. exists z. (Man(x) & TreeTrunk(y) & Axe(z) & Chopping(x, y, z))	One man is chopping a log with an axe	exists x. exists y. exists z. (Man(x) & Log(y) & Axe(z) & Chopping(x, y, z))	n	False	False
1627	A man is putting away a guitar	exists x. exists y. (Man(x) & Guitar(y) & PuttingAway(x, y))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	c	False	False
1628	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is strumming a guitar	exists x. (Man(x) & StrummingGuitar(x))	e	False	False
1629	A guitar is being passionately played by a man	exists x. exists y. (Guitar(x) & Man(y) & PassionatelyPlaying(y, x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
1630	A man is dancing	exists x. (Dancer(x) & Man(x))	A person is dancing	exists x. (Dancing(x))	e	False	False
1631	A person is sitting	exists x. (Person(x) & Sitting(x))	A man is dancing	exists x. (Dancer(x) & Man(x))	n	False	False
1632	A woman is thinking of a man	exists x. exists y. (Woman(x) & Man(y) & ThinkingOf(x, y))	A man is thinking	exists x. (Man(x) & Thinking(x))	n	False	False
1633	The man is thinking	exists x. (Man(x) & Thinking(x))	A man is dancing	exists x. (Dancer(x) & Man(x))	n	False	False
1634	A man is dancing	exists x. (Dancer(x) & Man(x))	There is no man thinking	not exists x. (Man(x) & Thinking(x))	n	False	False
1635	A man is dancing	exists x. (Dancer(x) & Man(x))	A woman is thinking of a man	exists x. exists y. (Woman(x) & Man(y) & ThinkingOf(x, y))	n	False	False
1636	A person is dancing	exists x. (Dancing(x))	A man is thinking	exists x. (Man(x) & Thinking(x))	n	False	False
1637	A man is thinking	exists x. (Man(x) & Thinking(x))	A person is sitting	exists x. (Person(x) & Sitting(x))	n	False	False
1638	A white cat perched on a small wooden cabinet is looking outside the window	exists x.exists y.exists z. (WhiteCat(x) & SmallWoodenCabinet(y) & Window(z) & PerchedOn(x, y) -> LookingAt(x, z))	There is no white cat perched on a small wooden cabinet looking outside the window	not exists x. (WhiteCat(x) & PerchedOnSmallWoodenCabinet(x) & LookingOutsideWindow(x))	c	False	False
1639	A white cat perched on a small wooden cabinet is looking outside the window	exists x.exists y.exists z. (WhiteCat(x) & SmallWoodenCabinet(y) & Window(z) & PerchedOn(x, y) -> LookingAt(x, z))	Someone on a perch is looking at a small wooden cat that is on a white cabinet outside the window 	exists x. exists y. exists z. (Perch(x) & SmallWoodenCat(y) & WhiteCabinet(z) & On(y, x) & On(z, x) & OutsideWindow(x))	n	False	False
1640	The cat perched on the table is looking out the window	exists x.exists y. (Cat(x) & Table(y) & PerchedOn(x, y) -> LookingOutWindow(x))	The cat perched on the table is looking curiously out the window	exists x.exists y.exists z. (Cat(x) & Table(y) & Window(z) & PerchedOn(x, y) -> CuriouslyLookingAt(x, z))	e	False	False
1641	A cat with a white coat, perched on a small wooden cabinet, is looking outside the window	exists x.exists y.exists z. (Cat(x) & WhiteCoat(x) & SmallWoodenCabinet(y) & PerchedOn(x, y) & Window(z) & LookingAt(x, z) -> CatWithWhiteCoatAndPerchedOnSmallWoodenCabinet(x, y, z))	The cat perched on the table is looking out the window	exists x.exists y. (Cat(x) & Table(y) & PerchedOn(x, y) -> LookingOutWindow(x))	n	False	False
1642	There is no white cat perched on a small wooden cabinet looking outside the window	not exists x. (WhiteCat(x) & PerchedOnSmallWoodenCabinet(x) & LookingOutsideWindow(x))	The cat perched on the table is looking out the window	exists x.exists y. (Cat(x) & Table(y) & PerchedOn(x, y) -> LookingOutWindow(x))	n	False	False
1643	The dog is licking the baby	exists x. exists y. (Dog(x) & Baby(y) & Licking(x, y))	A dog is licking a baby	exists x. exists y. (Dog(x) & Baby(y) & Licking(x, y))	e	True	False
1644	A baby is licking a dog	exists x. exists y. (Baby(x) & Dog(y) & Licking(x, y))	A dog is licking a baby	exists x. exists y. (Dog(x) & Baby(y) & Licking(x, y))	n	False	False
1645	A dog is licking a toddler	exists x. exists y. (Dog(x) & Toddler(y) & Licking(x, y))	A dog is licking a baby	exists x. exists y. (Dog(x) & Baby(y) & Licking(x, y))	n	False	False
1646	A dog is walking away from a baby	exists x. exists y. (Dog(x) & Baby(y) & WalkingAwayFrom(x, y))	A dog is licking a baby	exists x. exists y. (Dog(x) & Baby(y) & Licking(x, y))	n	False	False
1647	There is no dog licking a baby	not exists x. (Dog(x) & Licking(x, y) & Baby(y))	A dog is licking a baby	exists x. exists y. (Dog(x) & Baby(y) & Licking(x, y))	c	False	True
1648	Garlic is being diced by the woman	exists x. exists y. (Garlic(x) & Woman(y) & Dices(y, x))	The woman is dicing garlic	exists x. (Woman(x) & DicingGarlic(x))	e	False	False
1649	The woman is not dicing garlic	not DicingGarlic(woman)	A woman is chopping up garlic	exists x. (Woman(x) & ChoppingGarlic(x))	c	False	False
1650	The woman is dancing	exists x. (Dancer(x) & Woman(x))	A woman is dancing	exists x. (Dancer(x) & Woman(x))	e	True	False
1651	The man is wildly dancing	WildlyDancing(man)	The man is dancing	exists x. (Dancer(x) & Man(x))	e	False	False
1652	The woman is dancing	exists x. (Dancer(x) & Woman(x))	The man is dancing	exists x. (Dancer(x) & Man(x))	n	False	False
1653	There is no woman dancing	not exists x. (Woman(x) & Dancing(x))	The man is dancing	exists x. (Dancer(x) & Man(x))	n	False	False
1654	The man is dancing	exists x. (Dancer(x) & Man(x))	A woman is dancing	exists x. (Dancer(x) & Woman(x))	n	False	False
1655	The person is writing	exists x. (Person(x) & Writing(x))	A person is writing	exists x. (Person(x) & Writing(x))	e	True	False
1656	There is no person writing	not exists x. (Person(x) & Writing(x))	A person is writing	exists x. (Person(x) & Writing(x))	c	False	True
1657	A person is jotting something with a pencil	exists x. (Person(x) & Jotting(x) & With(x, pencil))	The person is writing with a pencil	exists x. (Person(x) & WritingWithPencil(x))	e	False	False
1658	The person is not writing with a pencil	not exists x. (Person(x) & WritingWithPencil(x))	The person is writing with a pencil	exists x. (Person(x) & WritingWithPencil(x))	c	False	True
1659	The person is writing with a pencil	exists x. (Person(x) & WritingWithPencil(x))	The writing is about a person penciling	exists x. (Writing(x) -> exists y. (Person(y) & Penciling(y)))	n	False	False
1660	A person is jotting something with a pencil	exists x. (Person(x) & Jotting(x) & With(x, pencil))	A person is writing	exists x. (Person(x) & Writing(x))	e	False	False
1661	There is no person writing	not exists x. (Person(x) & Writing(x))	The person is writing with a pencil	exists x. (Person(x) & WritingWithPencil(x))	c	False	False
1662	The person is writing with a pencil	exists x. (Person(x) & WritingWithPencil(x))	A person is writing	exists x. (Person(x) & Writing(x))	e	False	False
1663	Someone is boiling okra in a pot	exists x.exists y.exists z. (Person(x) & Okra(y) & Pot(z) & BoilingIn(x, y, z))	Someone is being boiled with okra in a pot	exists x.exists y.exists z. (Person(x) & Okra(y) & Pot(z) & BeingBoiledIn(x, y, z))	n	False	False
1664	Someone is cooking okra in a pan	exists x. (Person(x) & Cooking(x, okra) & InPan(x))	Somebody is boiling okra in a pot	exists x.exists y.exists z. (Boiling(x, y, z) & Okra(y) & Pot(z) & In(y, z))	n	False	False
1665	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is standing still	exists x. (Man(x) & StandingStill(x))	n	False	False
1666	A man is speaking	exists x. (Man(x) & Speaking(x))	The man is dancing	exists x. (Dancer(x) & Man(x))	n	False	False
1667	A man is standing still	exists x. (Man(x) & StandingStill(x))	A man is speaking	exists x. (Man(x) & Speaking(x))	n	False	False
1668	A squirrel is crazily spinning around in circles	exists x. (Squirrel(x) -> CrazilySpinningInCircles(x))	A squirrel is spinning around in circles	exists x. (Squirrel(x) -> SpinningInCircles(x))	e	False	False
1669	A squirrel is running around in circles	exists x. (Squirrel(x) -> RunsInCircles(x))	An animal is running around in circles	exists x. (Animal(x) -> exists y. (Running(y) & InCircle(y) & In(x, y)))	e	False	False
1670	A squirrel is running around in circles	exists x. (Squirrel(x) -> RunsInCircles(x))	A runner is circling a squirrel	exists x.exists y. (Runner(x) & Squirrel(y) -> Circling(x, y))	n	False	False
1671	A squirrel is spinning around in circles	exists x. (Squirrel(x) -> SpinningInCircles(x))	An animal is running around in circles	exists x. (Animal(x) -> exists y. (Running(y) & InCircle(y) & In(x, y)))	e	False	False
1672	A squirrel is spinning around in circles	exists x. (Squirrel(x) -> SpinningInCircles(x))	A squirrel is lying down	exists x. (Squirrel(x) & LyingDown(x))	n	False	False
1673	A runner is circling a squirrel	exists x.exists y. (Runner(x) & Squirrel(y) -> Circling(x, y))	A squirrel is spinning around in circles	exists x. (Squirrel(x) -> SpinningInCircles(x))	n	False	False
1674	There is no squirrel spinning around in circles	not exists x. (Squirrel(x) & SpinningInCircles(x))	A squirrel is running around in circles	exists x. (Squirrel(x) -> RunsInCircles(x))	c	False	False
1675	A squirrel is running around in circles	exists x. (Squirrel(x) -> RunsInCircles(x))	A squirrel is spinning around in circles	exists x. (Squirrel(x) -> SpinningInCircles(x))	e	False	False
1676	The piece of paper is not being cut	not exists x. (Paper(x) & BeingCut(x))	Paper is being cut with scissors	exists x. exists y. (Paper(x) & Scissors(y) & Cut(x, y))	c	False	False
1677	Paper and scissors both cut	exists x. exists y. (Paper(x) & Scissors(y) -> (Cuts(x) & Cuts(y)))	The piece of paper is being cut	exists x. (Paper(x) & BeingCut(x))	n	False	False
1678	The man is playing the flute	exists x. (Man(x) & Playing(x, flute))	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	e	False	False
1679	The man is not playing the guitar	not exists x. (Man(x) & PlaysGuitar(x))	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	c	False	False
1680	The man is playing the flute	exists x. (Man(x) & Playing(x, flute))	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1681	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1682	A man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	There is no man playing the drums	not exists x. (Man(x) & PlaysDrums(x))	c	False	False
1683	A man is playing the drum	exists x. (Man(x) & PlayingDrum(x))	A man is disassembling the drum	exists x. (Man(x) -> DisassemblingDrum(x))	n	False	False
1684	A man is practicing the drum	exists x. (Man(x) & PracticingDrum(x))	A man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	e	False	False
1685	A man is playing the drum	exists x. (Man(x) & PlayingDrum(x))	The drums are being played by a man	exists x. (Drum(x) -> PlayedBy(x, man))	e	False	False
1686	There is no man playing the drums	not exists x. (Man(x) & PlaysDrums(x))	A man is playing the drum	exists x. (Man(x) & PlayingDrum(x))	c	False	False
1687	A man is doing exercises	exists x. (Man(x) & DoingExercises(x))	A person is doing exercises	exists x. (Person(x) & DoingExercises(x))	e	True	False
1688	A man is lazing	exists x. (Man(x) & Lazing(x))	A man is doing exercises	exists x. (Man(x) & DoingExercises(x))	n	False	False
1689	The man is doing floor exercises	exists x. (Man(x) & DoingFloorExercises(x))	One man is doing floor exercises	exists x. (Man(x) & DoingFloorExercises(x))	e	True	False
1690	The man is not doing floor exercises	not exists x. (Man(x) & DoingFloorExercises(x))	The man is doing floor exercises	exists x. (Man(x) & DoingFloorExercises(x))	c	False	True
1691	The man is doing floor exercises	exists x. (Man(x) & DoingFloorExercises(x))	A man doing exercises is being floored	exists x. (Man(x) & DoingExercises(x) -> BeingFloored(x))	n	False	False
1692	The man is not doing floor exercises	not exists x. (Man(x) & DoingFloorExercises(x))	A man is doing exercises	exists x. (Man(x) & DoingExercises(x))	n	False	False
1693	A man doing exercises is being floored	exists x. (Man(x) & DoingExercises(x) -> BeingFloored(x))	A man is doing exercises	exists x. (Man(x) & DoingExercises(x))	e	False	False
1694	The man is doing floor exercises	exists x. (Man(x) & DoingFloorExercises(x))	A person is doing exercises	exists x. (Person(x) & DoingExercises(x))	e	False	False
1695	A bicycle is being ridden by a man	exists x.exists y. (Bicycle(x) & Man(y) & Riding(y, x))	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	e	True	False
1696	A man is stopping the bicycle	exists x. (Man(x) & StoppingBicycle(x))	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	n	False	False
1697	A monkey is riding a bike	exists x. exists y. (Monkey(x) & Bike(y) & Riding(x, y))	A monkey is riding a bicycle	exists x. exists y. (Monkey(x) & Bicycle(y) & Riding(x, y))	e	False	False
1698	A monkey is riding a bike	exists x. exists y. (Monkey(x) & Bike(y) & Riding(x, y))	A bike is being ridden over a monkey	exists x.exists y. (Bike(x) & Monkey(y) -> RiddenOver(x, y))	n	False	False
1699	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	A monkey is riding a bicycle	exists x. exists y. (Monkey(x) & Bicycle(y) & Riding(x, y))	n	False	False
1700	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	There is no monkey riding a bike	not exists x. (Monkey(x) & RidingBike(x))	n	False	False
1701	A bicycle is being ridden by a man	exists x.exists y. (Bicycle(x) & Man(y) & Riding(y, x))	A monkey is riding a bike	exists x. exists y. (Monkey(x) & Bike(y) & Riding(x, y))	n	False	False
1702	A monkey is riding a bike	exists x. exists y. (Monkey(x) & Bike(y) & Riding(x, y))	A man is stopping the bicycle	exists x. (Man(x) & StoppingBicycle(x))	n	False	False
1703	One fish is swimming 	exists x. (Fish(x) & Swimming(x))	A fish is swimming	exists x. (Fish(x) & Swimming(x))	e	True	False
1704	A fish is swimming	exists x. (Fish(x) & Swimming(x))	A fish is not swimming	exists x. (Fish(x) & not Swimming(x))	c	False	False
1705	Some fish are swimming quickly	exists x. (Fish(x) & SwimmingQuickly(x))	Some fish are swimming	exists x. (Fish(x) & Swimming(x))	e	False	False
1706	Some fish are swimming quickly	exists x. (Fish(x) & SwimmingQuickly(x))	A fish is swimming	exists x. (Fish(x) & Swimming(x))	e	False	False
1707	Some fish are swimming	exists x. (Fish(x) & Swimming(x))	One fish is swimming 	exists x. (Fish(x) & Swimming(x))	e	True	False
1708	Some fish are swimming	exists x. (Fish(x) & Swimming(x))	A fish is not swimming	exists x. (Fish(x) & not Swimming(x))	n	False	False
1709	A pan is being dropped over the meat	exists x. (Pan(x) & BeingDroppedOverMeat(x))	The meat is being dropped into a pan	exists x. exists y. (Meat(x) & Pan(y) -> DroppedInto(x, y))	n	False	False
1710	A woman is putting meat in a pan	exists x. (Woman(x) & PuttingMeatInPan(x))	A pan is being dropped over the meat	exists x. (Pan(x) & BeingDroppedOverMeat(x))	n	False	False
1711	A woman is clumsily putting meat in a pan	exists x. (Woman(x) & ClumsilyPutsMeatInPan(x))	The meat is being dropped into a pan	exists x. exists y. (Meat(x) & Pan(y) -> DroppedInto(x, y))	e	False	False
1712	A woman is putting meat in a pan	exists x. (Woman(x) & PuttingMeatInPan(x))	The meat is being dropped into a pan	exists x. exists y. (Meat(x) & Pan(y) -> DroppedInto(x, y))	n	False	False
1713	There is no man holding a frog	not exists x. (Man(x) & HoldsFrog(x))	A man is holding a frog	exists x. exists y. (Man(x) & Frog(y) & Holding(x, y))	c	False	False
1714	A frog is being handled by the woman	exists x.exists y. (Frog(x) & Woman(y) & Handling(y, x))	The woman is handling a frog	exists x. exists y. (Woman(x) & Frog(y) & Handling(x, y))	e	True	False
1715	The woman is handling a frog	exists x. exists y. (Woman(x) & Frog(y) & Handling(x, y))	A person is holding a frog	exists x. (Person(x) & HoldingFrog(x))	e	False	False
1716	The woman is handling a frog	exists x. exists y. (Woman(x) & Frog(y) & Handling(x, y))	There is no man holding a frog	not exists x. (Man(x) & HoldsFrog(x))	n	False	False
1717	Four young men are standing still and a car is exploding behind them	exists x. exists y. exists z. exists w. (YoungMan(x) & YoungMan(y) & YoungMan(z) & YoungMan(w) & StandingStill(x) & StandingStill(y) & StandingStill(z) & StandingStill(w) & Car(x) & Exploding(x))	Some young men are standing still and a car is exploding behind them	exists x.exists y. (YoungMan(x) & StandingStill(x) & Car(y) & ExplodingBehind(y, x))	e	False	False
1718	Four young men are running away and a car is staying put behind them	exists x.exists y. (YoungMan(x) & YoungMan(y) -> (RunsAway(x) & StaysPut(y)))	Four young men are standing still and a car is exploding behind them	exists x. exists y. exists z. exists w. (YoungMan(x) & YoungMan(y) & YoungMan(z) & YoungMan(w) & StandingStill(x) & StandingStill(y) & StandingStill(z) & StandingStill(w) & Car(x) & Exploding(x))	n	False	False
1719	The boys are standing in front of the burning car	exists x.exists y. (Boy(x) & Car(y) & Burning(y) -> StandingInFrontOf(x, y))	The boys are not standing in front of the burning car	not exists x. (Boy(x) & StandingInFrontOf(x, car) & Burning(car))	c	False	False
1720	The boys are standing and burning a car	exists x.exists y. (Boy(x) & Car(y) -> (Standing(x) & Burning(x, y)))	Four young men are standing still and a car is exploding behind them	exists x. exists y. exists z. exists w. (YoungMan(x) & YoungMan(y) & YoungMan(z) & YoungMan(w) & StandingStill(x) & StandingStill(y) & StandingStill(z) & StandingStill(w) & Car(x) & Exploding(x))	n	False	False
1721	Four young men are running away and a car is staying put behind them	exists x.exists y. (YoungMan(x) & YoungMan(y) -> (RunsAway(x) & StaysPut(y)))	The boys are standing in front of the burning car	exists x.exists y. (Boy(x) & Car(y) & Burning(y) -> StandingInFrontOf(x, y))	n	False	False
1722	Four young men are exploding and a car is standing still behind them	exists x. exists y. exists z. exists w. (YoungMan(x) & YoungMan(y) & YoungMan(z) & YoungMan(w) & Exploding(x) & Exploding(y) & Exploding(z) & Exploding(w) & Car(x) & StandingStillBehind(x, y, z, w))	The boys are standing in front of the burning car	exists x.exists y. (Boy(x) & Car(y) & Burning(y) -> StandingInFrontOf(x, y))	n	False	False
1723	Four young men are standing still and a car is exploding behind them	exists x. exists y. exists z. exists w. (YoungMan(x) & YoungMan(y) & YoungMan(z) & YoungMan(w) & StandingStill(x) & StandingStill(y) & StandingStill(z) & StandingStill(w) & Car(x) & Exploding(x))	The boys are standing in front of the burning car	exists x.exists y. (Boy(x) & Car(y) & Burning(y) -> StandingInFrontOf(x, y))	n	False	False
1724	A woman is collecting tap water in a mug	exists x. exists y. (Woman(x) & TapWater(y) -> CollectingInMug(x, y))	A woman is collecting the water from a tap in a mug	exists x. exists y. exists z. (Woman(x) & Tap(y) & Mug(z) -> CollectingWater(x, y, z))	e	False	False
1725	A woman is collecting tap water in a mug	exists x. exists y. (Woman(x) & TapWater(y) -> CollectingInMug(x, y))	A woman is emptying the water from a mug	exists x. exists y. (Woman(x) & Mug(y) -> EmptyingWater(x, y))	n	False	False
1726	A boy is filling a pitcher with water	exists x. exists y. (Boy(x) & Pitcher(y) -> FillsWithWater(x, y))	A woman is emptying the water from a mug	exists x. exists y. (Woman(x) & Mug(y) -> EmptyingWater(x, y))	n	False	False
1727	A woman is collecting tap water in a mug	exists x. exists y. (Woman(x) & TapWater(y) -> CollectingInMug(x, y))	A pitcher is being filled with water by a boy	exists x.exists y. (Pitcher(x) & Boy(y) -> FillsWithWater(x, y))	n	False	False
1728	A woman is collecting tap water in a mug	exists x. exists y. (Woman(x) & TapWater(y) -> CollectingInMug(x, y))	There is no boy filling a pitcher with water	not exists x. (Boy(x) & FillsPitcherWithWater(x))	n	False	False
1729	A boy is filling a pitcher with water	exists x. exists y. (Boy(x) & Pitcher(y) -> FillsWithWater(x, y))	A woman is collecting tap water in a mug	exists x. exists y. (Woman(x) & TapWater(y) -> CollectingInMug(x, y))	n	False	False
1730	A man and a woman are sitting	exists x. exists y. (Man(x) & Woman(y) & Sitting(x) & Sitting(y))	A man and a woman are walking	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y))	n	False	False
1731	A man is strolling in the rain	exists x. (Man(x) & Strolling(x) & InRain(x))	A man and a woman are walking	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y))	n	False	False
1732	A man and a woman are walking nicely	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y) & Nice(x) & Nice(y))	A man is walking in the rain	exists x. (Man(x) & Walking(x) & InRain(x))	n	False	False
1733	A man is walking in the rain	exists x. (Man(x) & Walking(x) & InRain(x))	A man and a woman are sitting	exists x. exists y. (Man(x) & Woman(y) & Sitting(x) & Sitting(y))	n	False	False
1734	A man and a woman are walking	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y))	A man is walking in the rain	exists x. (Man(x) & Walking(x) & InRain(x))	n	False	False
1735	Some men are running a race	exists x. (Man(x) & RunningRace(x))	Men are running a race	exists x. (Man(x) -> exists y. (Race(y) & Running(x, y)))	e	False	False
1736	Men are running a race	exists x. (Man(x) -> exists y. (Race(y) & Running(x, y)))	Some men are resting	exists x. (Man(x) & Resting(x))	n	False	False
1737	Racers are running down a track	exists x. exists y. (Racer(x) & Track(y) -> RunningOn(x, y))	Some racers are running down a track	exists x.exists y. (Racer(x) & Track(y) & RunningOn(x, y))	e	False	False
1738	Runners are racing down a track	exists x.exists y. (Runner(x) & Track(y) -> RacesDown(x, y))	Racers are running down a track	exists x. exists y. (Racer(x) & Track(y) -> RunningOn(x, y))	e	False	False
1739	There are no racers running down a track	exists x. (Racer(x) & not RunningDownTrack(x))	Men are running a race	exists x. (Man(x) -> exists y. (Race(y) & Running(x, y)))	n	False	False
1740	The men are placing suitcases in the trunk of a car	exists x.exists y.exists z. (Man(x) & Suitcase(y) & Car(z) -> PlacesInTrunk(x, y, z))	The men are packing suitcases into the trunk of a car	exists x.exists y.exists z. (Man(x) & Suitcase(y) & Car(z) -> PacksIntoTrunk(x, y, z))	e	False	False
1741	The men are putting suitcases into the trunk of a car	exists x.exists y.exists z. (Man(x) & Suitcase(y) & Car(z) -> PutsIntoTrunk(x, y, z))	The men are packing suitcases into the trunk of a car	exists x.exists y.exists z. (Man(x) & Suitcase(y) & Car(z) -> PacksIntoTrunk(x, y, z))	e	False	False
1742	A woman is taking off eyeshadow	exists x. (Woman(x) & TakingOffEyeshadow(x))	A woman is putting on eyeshadow	exists x. (Woman(x) & PuttingOnEyeshadow(x))	n	False	False
1743	A woman is putting on eyeshadow	exists x. (Woman(x) & PuttingOnEyeshadow(x))	The woman is removing make-up	exists x. (Woman(x) & RemovingMakeUp(x))	c	False	False
1744	A woman is taking off eyeshadow	exists x. (Woman(x) & TakingOffEyeshadow(x))	A woman is putting make-up on	exists x. (Woman(x) & PuttingMakeUp(x))	n	False	False
1745	A toy train is missing a toy car	exists x. (ToyTrain(x) & exists y. (ToyCar(y) & Missing(x, y)))	A toy train is striking a toy car	exists x.exists y. (ToyTrain(x) & ToyCar(y) & Strikes(x, y))	n	False	False
1746	A toy train is striking a toy car	exists x.exists y. (ToyTrain(x) & ToyCar(y) & Strikes(x, y))	A car and a train are striking a toy	exists x.exists y.exists z. (Car(x) & Train(y) & Toy(z) & Strikes(x, z) & Strikes(y, z))	n	False	False
1747	A toy train is violently striking a toy car	exists x.exists y. (ToyTrain(x) & ToyCar(y) -> ViolentlyStriking(x, y))	A toy train is striking a toy car	exists x.exists y. (ToyTrain(x) & ToyCar(y) & Strikes(x, y))	e	False	False
1748	A toy train is striking a toy car	exists x.exists y. (ToyTrain(x) & ToyCar(y) & Strikes(x, y))	There is no toy train striking a toy car	not exists x. (ToyTrain(x) & StrikesToyCar(x))	c	False	False
1749	The person is not slicing onions	not exists x. (Person(x) & SlicingOnions(x))	The person is slicing onions	exists x. (Person(x) & SlicingOnions(x))	c	False	True
1750	A person is peeling an onion	exists x. (Person(x) & PeelingOnion(x))	Onions are being sliced by the person	exists x.exists y. (Onion(x) & Person(y) -> Slicing(y, x))	n	False	False
1751	The person is not slicing onions	not exists x. (Person(x) & SlicingOnions(x))	A person is peeling an onion	exists x. (Person(x) & PeelingOnion(x))	n	False	False
1752	The person is slicing onions	exists x. (Person(x) & SlicingOnions(x))	There is no person peeling an onion	not exists x. (Person(x) & PeelingOnion(x))	c	False	False
1753	Several swimmers are jumping into the water	exists x.exists y.exists z. (Swimmer(x) & Swimmer(y) & Swimmer(z) & JumpingIntoWater(x) & JumpingIntoWater(y) & JumpingIntoWater(z))	Several swimmers are jumping out of the water	exists x.exists y.exists z. (Swimmer(x) & Swimmer(y) & Swimmer(z) & JumpingOutOfWater(x) & JumpingOutOfWater(y) & JumpingOutOfWater(z))	n	False	False
1754	Several swimmers are jumping into the water	exists x.exists y.exists z. (Swimmer(x) & Swimmer(y) & Swimmer(z) & JumpingIntoWater(x) & JumpingIntoWater(y) & JumpingIntoWater(z))	Several jumpers are swimming in the water	exists x. exists y. exists z. (Jumper(x) & Jumper(y) & Jumper(z) & SwimmingInWater(x) & SwimmingInWater(y) & SwimmingInWater(z))	n	False	False
1755	Some swimmers are getting out of a lake	exists x. (Swimmer(x) & exists y. (Lake(y) & GettingOutOf(x, y)))	Swimmers are racing in a lake	exists x.exists y. (Swimmer(x) & Lake(y) -> RacesIn(x, y))	n	False	False
1756	Several swimmers are jumping into the water	exists x.exists y.exists z. (Swimmer(x) & Swimmer(y) & Swimmer(z) & JumpingIntoWater(x) & JumpingIntoWater(y) & JumpingIntoWater(z))	A few swimmers are racing in a lake	exists x.exists y.exists z. (Swimmer(x) & Swimmer(y) & Swimmer(z) & Lake(l) & RacesIn(x, y, z, l))	n	False	False
1757	Some swimmers are getting out of a lake	exists x. (Swimmer(x) & exists y. (Lake(y) & GettingOutOf(x, y)))	Several swimmers are jumping into the water	exists x.exists y.exists z. (Swimmer(x) & Swimmer(y) & Swimmer(z) & JumpingIntoWater(x) & JumpingIntoWater(y) & JumpingIntoWater(z))	n	False	False
1758	Several swimmers are jumping out of the water	exists x.exists y.exists z. (Swimmer(x) & Swimmer(y) & Swimmer(z) & JumpingOutOfWater(x) & JumpingOutOfWater(y) & JumpingOutOfWater(z))	Swimmers are racing in a lake	exists x.exists y. (Swimmer(x) & Lake(y) -> RacesIn(x, y))	n	False	False
1759	A talented man is playing the guitar	exists x. (TalentedMan(x) -> exists y. (Guitar(y) & Playing(x, y)))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
1760	A woman is playing a guitar	exists x. (Woman(x) & PlayingGuitar(x))	There is no woman playing a guitar	not exists x. (Woman(x) & PlaysGuitar(x))	c	False	False
1761	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A guitar is being played by a woman	exists x. exists y. (Guitar(x) & Woman(y) & Playing(y, x))	n	False	False
1762	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A woman is playing a guitar	exists x. (Woman(x) & PlayingGuitar(x))	n	False	False
1763	A boy is looking at a calendar	exists x. exists y. (Boy(x) & Calendar(y) & LookingAt(x, y))	The boy is studying a calendar	exists x. (Boy(x) & Calendar(x))	e	False	False
1764	There is no boy looking at a calendar	not exists x. (Boy(x) & LookingAtCalendar(x))	A boy is studying a calendar	exists x. exists y. (Boy(x) & Calendar(y) & Studying(x, y))	c	False	False
1765	A cat is thrown at the ceiling by a person	exists x.exists y. (Cat(x) & Person(y) -> ThrowsAtCeiling(y, x))	A person is throwing a cat at the ceiling	exists x. exists y. exists z. (Person(x) & Cat(y) & Ceiling(z) & Throwing(x, y, z))	e	False	False
1766	A person is throwing a cat at the ceiling	exists x. exists y. exists z. (Person(x) & Cat(y) & Ceiling(z) & Throwing(x, y, z))	A person is taking a cat down from the ceiling	exists x. exists y. exists z. (Person(x) & Cat(y) & Ceiling(z) & TakingDown(x, y, z))	n	False	False
1767	A woman is picking up and holding a baby kangaroo in her arms	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y) & HoldingInArms(x, y))	A woman is picking up and holding a kangaroo, which is a baby, in her arms	exists x.exists y. (Woman(x) & Kangaroo(y) -> (PickingUp(x, y) & HoldingInArms(x, y)))	e	True	False
1768	A woman is picking up and holding a baby kangaroo in her arms	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y) & HoldingInArms(x, y))	A woman is dropping a baby kangaroo from her arms	exists x. exists y. (Woman(x) & BabyKangaroo(y) & DroppingFromArms(x, y))	n	False	False
1769	The woman is picking up and holding a baby kangaroo	exists x. (Woman(x) & PickingUpBabyKangaroo(x))	The woman is not picking up and holding a baby kangaroo	not exists x. (Woman(x) & PickingUpBabyKangaroo(x))	c	False	True
1770	The woman is taking up and holding a baby kangaroo	exists x.exists y. (Woman(x) & BabyKangaroo(y) -> TakesUpAndHolds(x, y))	A woman is picking up and holding a baby kangaroo in her arms	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y) & HoldingInArms(x, y))	e	False	False
1771	The woman is not picking up and holding a baby kangaroo	not exists x. (Woman(x) & PickingUpBabyKangaroo(x))	A woman is picking up and holding a baby kangaroo in her arms	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y) & HoldingInArms(x, y))	c	False	False
1772	The woman is picking up and holding a baby kangaroo	exists x. (Woman(x) & PickingUpBabyKangaroo(x))	A woman is dropping a baby kangaroo from her arms	exists x. exists y. (Woman(x) & BabyKangaroo(y) & DroppingFromArms(x, y))	n	False	False
1773	A woman is dancing and a man is playing the keyboard	exists x. exists y. (Dancer(x) & Woman(x) & KeyboardPlayer(y) & Man(y) & PlayingKeyboard(y))	A woman is standing still and a man is sitting and idling	exists x. exists y. (Woman(x) & Man(y) -> (StandingStill(x) & Sitting(y) & Idling(y)))	n	False	False
1774	A woman is staging a dance	exists x. (Woman(x) & StagingDance(x))	A woman is dancing on a stage	exists x. exists y. (Woman(x) & Stage(y) & DancingOn(x, y))	n	False	False
1775	A woman is dancing on a stage	exists x. exists y. (Woman(x) & Stage(y) & DancingOn(x, y))	The woman is dancing and a man is playing the keyboard	exists x. exists y. (Woman(x) & Dancing(x) & Man(y) & PlayingKeyboard(y))	n	False	False
1776	A woman is dancing on a stage	exists x. exists y. (Woman(x) & Stage(y) & DancingOn(x, y))	A woman is standing still and a man is sitting and idling	exists x. exists y. (Woman(x) & Man(y) -> (StandingStill(x) & Sitting(y) & Idling(y)))	n	False	False
1777	A person is scrubbing a zucchini	exists x. exists y. (Person(x) & Zucchini(y) & Scrubbing(x, y))	A person is packing a zucchini	exists x. (Person(x) & Packing(x, zucchini))	n	False	False
1778	A woman is scrubbing a zucchini with a brush for vegetables	exists x.exists y.exists z. (Woman(x) & Zucchini(y) & Brush(z) -> ScrubbingForVegetables(x, y, z))	A woman is scrubbing a zucchini with a vegetable brush	exists x. exists y. exists z. (Woman(x) & Zucchini(y) & VegetableBrush(z) & Scrubbing(x, y, z))	e	False	False
1779	A woman is scrubbing a zucchini with a vegetable brush	exists x. exists y. exists z. (Woman(x) & Zucchini(y) & VegetableBrush(z) & Scrubbing(x, y, z))	A woman is eating zucchini and vegetables and scrubbing with a brush	exists x. (Woman(x) -> (EatingZucchini(x) & EatingVegetables(x) & ScrubbingWithBrush(x)))	n	False	False
1780	There is no man in a hat playing a harp	not exists x. (Man(x) & InHat(x) & PlaysHarp(x))	A man in a hat is playing a harp	exists x. (Man(x) & WearsHat(x) -> PlaysHarp(x))	c	False	False
1781	A man in a hat is playing a harp	exists x. (Man(x) & WearsHat(x) -> PlaysHarp(x))	A man is playing an instrument	exists x. exists y. (Man(x) & Instrument(y) & Playing(x, y))	e	False	False
1782	A man in a cap is playing a harp	exists x. (Man(x) & WearsCap(x) -> PlaysHarp(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1783	A harp is being played with a hat by a man	exists x. exists y. exists z. (Harp(x) & Hat(y) & Man(z) & Playing(z, x, y))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
1784	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A man in a hat is playing a harp	exists x. (Man(x) & WearsHat(x) -> PlaysHarp(x))	n	False	False
1785	The pepper is being sliced by a woman with a knife	exists x. exists y. exists z. (Pepper(x) & Woman(y) & Knife(z) & Slicing(y, x, z))	The woman with a knife is slicing a pepper	exists x. (Woman(x) & HasKnife(x) -> SlicingPepper(x))	e	False	False
1786	The woman with a knife is slicing a pepper	exists x. (Woman(x) & HasKnife(x) -> SlicingPepper(x))	The woman with the knife is not slicing a pepper	exists x. (Woman(x) & HasKnife(x) -> not SlicingPepper(x))	c	False	False
1787	The woman with the knife is not slicing a pepper	exists x. (Woman(x) & HasKnife(x) -> not SlicingPepper(x))	A woman is slicing a green pepper	exists x. (Woman(x) & Slicing(x, GreenPepper))	n	False	False
1788	A woman is slicing a pepper which is green	exists x. exists y. (Woman(x) & Pepper(y) & Slicing(x, y) & Green(y))	The woman with a knife is slicing a pepper	exists x. (Woman(x) & HasKnife(x) -> SlicingPepper(x))	e	False	False
1789	A woman is slicing a green pepper	exists x. (Woman(x) & Slicing(x, GreenPepper))	The woman with a knife is slicing a pepper	exists x. (Woman(x) & HasKnife(x) -> SlicingPepper(x))	e	False	False
1790	A woman is getting rid of a flute	exists x. (Woman(x) & Flute(x) & GettingRidOf(x))	A woman is playing flute	exists x. (Woman(x) & PlayingFlute(x))	n	False	False
1791	A concentrated woman is playing flute	exists x. (Concentrated(x) -> PlaysFlute(x))	A woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	e	False	False
1792	A woman is playing a flute	exists x. (Woman(x) & PlayingFlute(x))	A woman is getting rid of a flute	exists x. (Woman(x) & Flute(x) & GettingRidOf(x))	n	False	False
1793	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	A horse is being ridden by a man	exists x.exists y. (Horse(x) & Man(y) & Riding(y, x))	e	True	False
1794	There is no man riding a horse	not exists x. (Man(x) & RidingHorse(x))	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	c	False	False
1795	The man is not riding a horse by a creek	not exists x. (Man(x) & RidingHorse(x) & ByCreek(x))	The man is riding a horse by a creek	exists x. exists y. exists z. (Man(x) & Horse(y) & Creek(z) & Riding(x, y, z))	c	False	False
1796	The man is riding a horse by a creek	exists x. exists y. exists z. (Man(x) & Horse(y) & Creek(z) & Riding(x, y, z))	There is no man riding a horse	not exists x. (Man(x) & RidingHorse(x))	c	False	False
1797	A cat is playing a piano funnily	exists x. (Cat(x) & PlayingPiano(x) & Funnily(x))	A cat is playing a piano	exists x. exists y. (Cat(x) & Piano(y) & Playing(x, y))	e	False	False
1798	A cat is playing a piano	exists x. exists y. (Cat(x) & Piano(y) & Playing(x, y))	The cat is playing keyboards	exists x. (Cat(x) -> PlaysKeyboards(x))	n	False	False
1799	A cat is playing a piano	exists x. exists y. (Cat(x) & Piano(y) & Playing(x, y))	There is no cat playing keyboards	not exists x. (Cat(x) & PlaysKeyboards(x))	c	False	False
1800	A cat is playing a piano funnily	exists x. (Cat(x) & PlayingPiano(x) & Funnily(x))	A cat is playing keyboards	exists x. (Cat(x) -> PlaysKeyboards(x))	e	False	False
1801	A cat is playing keyboards	exists x. (Cat(x) -> PlaysKeyboards(x))	A cat is sitting on a piano	exists x. exists y. (Cat(x) & Piano(y) & SittingOn(x, y))	n	False	False
1802	A man is lazily walking down a road	exists x. (Man(x) & Walking(x) & Road(x) & Lazy(x))	A man is walking down a road	exists x. (Man(x) & Walking(x) & DownRoad(x))	e	False	False
1803	A man from the wilderness is on a walking path	exists x. (Man(x) & FromWilderness(x) -> OnWalkingPath(x))	The man is walking along a path through the wilderness	exists x. exists y. exists z. (Man(x) & Path(y) & Wilderness(z) & WalkingAlong(x, y) & LocatedIn(y, z))	n	False	False
1804	A man is walking down a road	exists x. (Man(x) & Walking(x) & DownRoad(x))	The man is walking along a track through the wilderness	exists x. exists y. exists z. (Man(x) & Track(y) & Wilderness(z) & WalkingAlong(x, y) & In(x, z))	n	False	False
1805	A man is stopping in the middle of a road	exists x. (Man(x) & StoppingInMiddleOfRoad(x))	The man is walking along a path through the wilderness	exists x. exists y. exists z. (Man(x) & Path(y) & Wilderness(z) & WalkingAlong(x, y) & LocatedIn(y, z))	n	False	False
1806	A man is coming out of the water	exists x. (Man(x) & ComingOutOfWater(x))	A person is coming out of the water	exists x. (Person(x) & ComingOutOfWater(x))	e	True	False
1807	The man is rising from a swamp	exists x. (Man(x) & RisingFromSwamp(x))	A man is rising from a swamp	exists x. (Man(x) & RisingFromSwamp(x))	e	True	False
1808	A man is rising from a swamp	exists x. (Man(x) & RisingFromSwamp(x))	A man is coming out of the water	exists x. (Man(x) & ComingOutOfWater(x))	e	False	False
1809	A man is dangerously dancing on the ceiling of a room	exists x. exists y. (Man(x) & Room(y) & DancingOnCeiling(x, y))	A man is dancing on the ceiling of a room	exists x. exists y. (Man(x) & Room(y) & DancingOnCeiling(x, y))	e	True	False
1810	A man is dancing on the ceiling of a room	exists x. exists y. (Man(x) & Room(y) & DancingOnCeiling(x, y))	A man is idling on the floor	exists x. (Man(x) & Idling(x))	n	False	False
1811	A man is dancing upside-down on the ceiling	exists x. (Man(x) & Dancing(x) & UpsideDown(x) & OnCeiling(x))	The man is dancing upside-down on the ceiling	exists x. (Man(x) & Dancing(x) & UpsideDown(x) & OnCeiling(x))	e	True	False
1812	A man is dancing upside-down on the ceiling	exists x. (Man(x) & Dancing(x) & UpsideDown(x) & OnCeiling(x))	There is no man dancing upside-down on the ceiling	not exists x. (Man(x) & Dancing(x) & UpsideDown(x))	c	False	True
1813	A man is dancing on the ceiling of a room	exists x. exists y. (Man(x) & Room(y) & DancingOnCeiling(x, y))	There is no man dancing upside-down on the ceiling	not exists x. (Man(x) & Dancing(x) & UpsideDown(x))	c	False	False
1814	A man is silent	exists x. (Man(x) & Silent(x))	A man is singing	exists x. (Man(x) & Singing(x))	n	False	False
1815	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is singing passionately	exists x. (Man(x) & Singing(x) & Passionate(x))	n	False	False
1816	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is silent	exists x. (Man(x) & Silent(x))	n	False	False
1817	A man is singing	exists x. (Man(x) & Singing(x))	A male is dancing	exists x. (Dancer(x) & Male(x))	n	False	False
1818	The girl is exercising	exists x. (Girl(x) & Exercising(x))	A girl is exercising	exists x. (Girl(x) & Exercising(x))	e	True	False
1819	A man is doing exercise	exists x. (Man(x) & Exercise(x))	A man is exercising	exists x. (Man(x) & Exercising(x))	e	True	False
1820	A man is exercising	exists x. (Man(x) & Exercising(x))	The girl is exercising	exists x. (Girl(x) & Exercising(x))	n	False	False
1821	A man is exercising	exists x. (Man(x) & Exercising(x))	A girl is exercising	exists x. (Girl(x) & Exercising(x))	n	False	False
1822	The man is silent and still	Silent(man) & Still(man)	The man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	c	False	False
1823	The man is singing heartily and playing the guitar	exists x. (Man(x) & SingingHeartily(x) & PlayingGuitar(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	e	True	False
1824	The man is singing and playing the guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	e	True	False
1825	There is no group of people dancing	not exists x. (Group(x) & People(x) & Dancing(x))	A group of people are dancing	exists x. (Group(x) & People(x) & Dancing(x))	c	False	True
1826	The women are divinely dancing outside	exists x. (Woman(x) -> DivinelyDancingOutside(x))	A group of people are dancing	exists x. (Group(x) & People(x) & Dancing(x))	n	False	False
1827	The women are dancing outside	exists x. (Woman(x) -> DancingOutside(x))	A few people are dancing	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & Dancing(x) & Dancing(y) & Dancing(z))	e	False	False
1828	There is no group of people dancing	not exists x. (Group(x) & People(x) & Dancing(x))	The women are dancing outside	exists x. (Woman(x) -> DancingOutside(x))	c	False	False
1829	Some boys are in front of dancing people	exists x.exists y. (Boy(x) & DancingPerson(y) & InFrontOf(x, y))	Boys are dancing in front of some people	exists x.exists y. (Boy(x) & Person(y) -> DancingInFrontOf(x, y))	n	False	False
1830	Two men are doing a funny skit with a boxer in front of a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Boxer(z) & FunnySkit(x, y, z) -> CrowdOfPeople(x, y, z))	Two men with a dog are boring a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Dog(z) & BoringCrowd(x, y, z))	n	False	False
1831	Two men are doing a funny skit with a boxer in front of a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Boxer(z) & FunnySkit(x, y, z) -> CrowdOfPeople(x, y, z))	A funny crowd of people is doing a skit of two boxing men	exists x.exists y.exists z. (FunnyCrowd(x) & Skit(y) & BoxingMen(z) -> Doing(x, y, z))	n	False	False
1832	Two men are doing a skit, which is very funny, with a boxer in front of a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Boxer(z) & Skit(x, y, z) & InFrontOfCrowd(z))	Boys are dancing in front of some people	exists x.exists y. (Boy(x) & Person(y) -> DancingInFrontOf(x, y))	n	False	False
1833	Boys are dancing in front of some people	exists x.exists y. (Boy(x) & Person(y) -> DancingInFrontOf(x, y))	Two men with a dog are boring a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Dog(z) & BoringCrowd(x, y, z))	n	False	False
1834	Boys are not dancing in front of some people	exists x. exists y. (Boy(x) & Person(y) -> not DancingInFrontOf(x, y))	Two men are doing a funny skit with a boxer in front of a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Boxer(z) & FunnySkit(x, y, z) -> CrowdOfPeople(x, y, z))	n	False	False
1835	Two men are doing a funny skit with a boxer in front of a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Boxer(z) & FunnySkit(x, y, z) -> CrowdOfPeople(x, y, z))	Some boys are in front of dancing people	exists x.exists y. (Boy(x) & DancingPerson(y) & InFrontOf(x, y))	n	False	False
1836	Boys are dancing in front of some people	exists x.exists y. (Boy(x) & Person(y) -> DancingInFrontOf(x, y))	Two men are doing a funny skit with a boxer in front of a crowd of people	exists x. exists y. exists z. (Man(x) & Man(y) & Boxer(z) & FunnySkit(x, y, z) -> CrowdOfPeople(x, y, z))	n	False	False
1837	A boy is throwing away a calendar	exists x.exists y. (Boy(x) & Calendar(y) -> ThrowingAway(x, y))	A boy is looking at a calendar	exists x. exists y. (Boy(x) & Calendar(y) & LookingAt(x, y))	n	False	False
1838	Two men are fist fighting in a ring	exists x. exists y. (Man(x) & Man(y) & FistFighting(x, y) & InRing(x, y))	Two people are fist fighting in a ring	exists x. exists y. (Person(x) & Person(y) & FistFight(x, y) & Ring(x, y))	e	False	False
1839	A biker is riding along the top of a fence	exists x.exists y. (Biker(x) & Fence(y) -> RidingAlongTop(x, y))	The biker is riding along the top of a fence	exists x. exists y. (Biker(x) & Fence(y) -> RidingAlongTop(x, y))	e	True	False
1840	A biker is riding away from a fence	exists x.exists y. (Biker(x) & Fence(y) -> RidingAwayFrom(x, y))	A biker is riding along the top of a fence	exists x.exists y. (Biker(x) & Fence(y) -> RidingAlongTop(x, y))	n	False	False
1841	The boy is riding a bike on the top of a fence made of metal	exists x. exists y. exists z. (Boy(x) & Bike(y) & Fence(z) & MadeOfMetal(z) & RidingOnTopOf(x, y, z))	The boy is riding a bike on the top of a metal fence	exists x. exists y. exists z. (Boy(x) & Bike(y) & MetalFence(z) & RidingOn(x, y, z))	e	False	False
1842	The riders are fencing in a boy's metal bike	exists x.exists y.exists z. (Rider(x) & Boy(y) & MetalBike(z) -> FencesIn(x, y, z))	A biker is riding along the top of a fence	exists x.exists y. (Biker(x) & Fence(y) -> RidingAlongTop(x, y))	n	False	False
1843	The boy is riding a bike on the top of a metal fence	exists x. exists y. exists z. (Boy(x) & Bike(y) & MetalFence(z) & RidingOn(x, y, z))	The biker is riding along the top of a fence	exists x. exists y. (Biker(x) & Fence(y) -> RidingAlongTop(x, y))	e	False	False
1844	The boy is riding a bike on the top of a metal fence	exists x. exists y. exists z. (Boy(x) & Bike(y) & MetalFence(z) & RidingOn(x, y, z))	A biker is riding along the top of a fence	exists x.exists y. (Biker(x) & Fence(y) -> RidingAlongTop(x, y))	e	False	False
1845	A woman is slicing a pepper which is big	exists x. exists y. (Woman(x) & Pepper(y) & Slicing(x, y) -> Big(y))	A woman is slicing a big pepper	exists x. exists y. (Woman(x) & Pepper(y) & Slicing(x, y))	e	False	False
1846	A woman is washing a big pepper	exists x. exists y. (Woman(x) & Pepper(y) & Washing(x, y))	A woman is slicing a big pepper	exists x. exists y. (Woman(x) & Pepper(y) & Slicing(x, y))	n	False	False
1847	A woman is slicing a big pepper	exists x. exists y. (Woman(x) & Pepper(y) & Slicing(x, y))	The woman is slicing a clove of garlic	exists x. (Woman(x) & Slicing(x, garlic))	n	False	False
1848	A woman is slicing a big pepper	exists x. exists y. (Woman(x) & Pepper(y) & Slicing(x, y))	There is no woman slicing a clove of garlic	not exists x. (Woman(x) & Slicing(x, garlic))	n	False	False
1849	A girl is awakening	exists x. (Girl(x) & Awakening(x))	A girl is waking up	exists x. (Girl(x) & WakingUp(x))	e	False	False
1850	A girl is falling asleep	exists x. (Girl(x) & FallingAsleep(x))	A girl is waking up	exists x. (Girl(x) & WakingUp(x))	n	False	False
1851	A child is waking up	exists x. (Child(x) & WakingUp(x))	A girl is falling asleep	exists x. (Girl(x) & FallingAsleep(x))	n	False	False
1852	A child is slowly waking up	exists x. (Child(x) -> SlowlyWakingUp(x))	A girl is waking up	exists x. (Girl(x) & WakingUp(x))	n	False	False
1853	There is no child waking up	not exists x. (Child(x) & WakingUp(x))	A girl is waking up	exists x. (Girl(x) & WakingUp(x))	c	False	False
1854	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	The woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	e	True	False
1855	A woman is slicing a tomato	exists x. (Woman(x) & Slicing(x, tomato))	A woman is refrigerating a potato	exists x. exists y. (Woman(x) & Potato(y) & Refrigerating(x, y))	n	False	False
1856	There is no boy playing a piano	not exists x. (Boy(x) & PlaysPiano(x))	A boy is playing a piano	exists x. (Boy(x) & PlayingPiano(x))	c	False	False
1857	A boy is playing a piano	exists x. (Boy(x) & PlayingPiano(x))	Someone is singing about a man who plays the guitar	exists x.exists y. (Person(x) & Person(y) & PlaysGuitar(y) & SingsAbout(x, y))	n	False	False
1858	A man is singing and playing a guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A boy is playing a piano	exists x. (Boy(x) & PlayingPiano(x))	n	False	False
1859	A man is being roped before climbing	exists x. (Man(x) & BeingRoped(x) -> Climbing(x))	A man is climbing a rope	exists x. (Man(x) & ClimbingRope(x))	n	False	False
1860	A man is climbing up a rope	exists x. (Man(x) & ClimbingUpRope(x))	The man is not climbing up a rope	not exists x. (Man(x) & ClimbingUpRope(x))	c	False	True
1861	A man is recklessly climbing a rope	exists x. (Man(x) & RecklesslyClimbingRope(x))	A man is climbing up a rope	exists x. (Man(x) & ClimbingUpRope(x))	e	False	False
1862	A man is climbing up a rope	exists x. (Man(x) & ClimbingUpRope(x))	A man is coming down a rope	exists x. (Man(x) & ComingDownRope(x))	n	False	False
1863	A man is climbing up a rope	exists x. (Man(x) & ClimbingUpRope(x))	A man is being roped before climbing	exists x. (Man(x) & BeingRoped(x) -> Climbing(x))	n	False	False
1864	The woman is putting down the kangaroo	exists x. exists y. (Woman(x) & Kangaroo(y) -> PuttingDown(x, y))	The woman is picking up the kangaroo	exists x. exists y. (Woman(x) & Kangaroo(y) & PickingUp(x, y))	c	False	False
1865	The woman is picking up a baby kangaroo	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y))	The lady is picking up the kangaroo	exists x. exists y. (Lady(x) & Kangaroo(y) & PickingUp(x, y))	e	False	False
1866	The woman is picking up a baby kangaroo	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y))	The woman is putting down the kangaroo	exists x. exists y. (Woman(x) & Kangaroo(y) -> PuttingDown(x, y))	n	False	False
1867	The woman is not picking up a baby kangaroo	not exists x. (Woman(x) & PickingUpBabyKangaroo(x))	The woman is picking up the kangaroo	exists x. exists y. (Woman(x) & Kangaroo(y) & PickingUp(x, y))	c	False	False
1868	The woman is picking up a baby kangaroo	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y))	The woman is picking up the kangaroo	exists x. exists y. (Woman(x) & Kangaroo(y) & PickingUp(x, y))	e	False	False
1869	A man is breaking tiles with his hands	exists x. (Man(x) & BreakingTiles(x))	Tiles are being broken with his hands by a man	exists x.exists y. (Tile(x) & Man(y) -> BreaksWithHands(y, x))	e	False	False
1870	A man is breaking tiles with his hands	exists x. (Man(x) & BreakingTiles(x))	A man is repairing tiles with his hands	exists x. (Man(x) & RepairingTiles(x) -> UsesHands(x))	n	False	False
1871	A man is breaking wooden boards with his hand	exists x. (Man(x) & BreakingWoodenBoards(x))	A man is breaking boards made of wood with his hand	exists x. exists y. (Man(x) & Wood(y) & Breaking(x, y) -> MadeOf(y, wood))	e	False	False
1872	A man is breaking a wooden hand against a board	exists x. exists y. exists z. (Man(x) & WoodenHand(y) & Board(z) & BreakingAgainst(x, y, z))	A man is breaking wooden boards with his hand	exists x. (Man(x) & BreakingWoodenBoards(x))	n	False	False
1873	A man is breaking boards made of wood with his hand	exists x. exists y. (Man(x) & Wood(y) & Breaking(x, y) -> MadeOf(y, wood))	A man is breaking tiles with his hands	exists x. (Man(x) & BreakingTiles(x))	n	False	False
1874	A man is breaking a wooden hand against a board	exists x. exists y. exists z. (Man(x) & WoodenHand(y) & Board(z) & BreakingAgainst(x, y, z))	A man is breaking tiles with his hands	exists x. (Man(x) & BreakingTiles(x))	n	False	False
1875	A man is breaking wooden boards with his hand	exists x. (Man(x) & BreakingWoodenBoards(x))	A man is breaking tiles with his hands	exists x. (Man(x) & BreakingTiles(x))	n	False	False
1876	A woman is riding a Seadoo	exists x. exists y. (Woman(x) & Seadoo(y) & Riding(x, y))	A woman is parking a Seadoo	exists x. exists y. (Woman(x) & Seadoo(y) & Parking(x, y))	n	False	False
1877	The person is riding a jetski in the waves	exists x. (Person(x) & RidingJetski(x))	A woman is riding a Seadoo	exists x. exists y. (Woman(x) & Seadoo(y) & Riding(x, y))	n	False	False
1878	A person is riding a jetski in the waves	exists x. exists y. exists z. (Person(x) & Jetski(y) & Waves(z) & Riding(x, y) & In(x, z))	A woman is riding a Seadoo	exists x. exists y. (Woman(x) & Seadoo(y) & Riding(x, y))	n	False	False
1879	There is no man dancing on the road	not exists x. (Man(x) & Dancing(x) & OnRoad(x))	A man is dancing on the road	exists x. (Man(x) & Dancing(x))	c	False	False
1880	A man is dancing on the road	exists x. (Man(x) & Dancing(x))	A person is dancing	exists x. (Dancing(x))	e	True	False
1881	A man is standing still	exists x. (Man(x) & StandingStill(x))	A man is dancing on the road	exists x. (Man(x) & Dancing(x))	n	False	False
1882	A man is dancing on the road	exists x. (Man(x) & Dancing(x))	A man is dancing	exists x. (Dancer(x) & Man(x))	e	False	False
1883	A dog is running on the road	exists x. (Dog(x) & RunningOnRoad(x))	There is no dog running on the road	exists x. (Dog(x) & not RunningOnRoad(x))	c	False	False
1884	There is no man running on the road	not exists x. (Man(x) & RunningOnRoad(x))	A man is running on the road	exists x. (Man(x) & RunningOnRoad(x))	c	False	True
1885	A dog is running on the road	exists x. (Dog(x) & RunningOnRoad(x))	There is no man running on the road	not exists x. (Man(x) & RunningOnRoad(x))	n	False	False
1886	A man is inside the house and is throwing blades at a close target	exists x. (Man(x) & InsideHouse(x) & ThrowingBlades(x) & CloseTarget(x))	A man is outside and is throwing blades at a close target	exists x. (Man(x) & Outside(x) & ThrowingBlades(x) & CloseTarget(x))	c	False	False
1887	The man is throwing knives at a tree	exists x. exists y. exists z. (Man(x) & Knife(y) & Tree(z) & ThrowsAt(x, y, z))	A man is outside and is throwing blades at a target which is close	exists x. (Man(x) & Outside(x) & ThrowingBlades(x) & CloseTarget(x))	n	False	False
1888	A man is outside and is throwing blades at a close target	exists x. (Man(x) & Outside(x) & ThrowingBlades(x) & CloseTarget(x))	The man is throwing knives at a tree	exists x. exists y. exists z. (Man(x) & Knife(y) & Tree(z) & ThrowsAt(x, y, z))	n	False	False
1889	A man is stopping a horse	exists x. exists y. (Man(x) & Horse(y) & Stops(x, y))	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	n	False	False
1890	The man is not riding a horse	not exists x. (Man(x) & RidingHorse(x))	The man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	c	False	False
1891	The man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	A horse is riding over a man	exists x. exists y. (Horse(x) & Man(y) & Riding(x, y))	n	False	False
1892	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	The man is not riding a horse	not exists x. (Man(x) & RidingHorse(x))	c	False	False
1893	A horse is riding over a man	exists x. exists y. (Horse(x) & Man(y) & Riding(x, y))	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	n	False	False
1894	A horse is being ridden by a man	exists x.exists y. (Horse(x) & Man(y) & Riding(y, x))	The man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	e	True	False
1895	The person is not drawing	not exists x. (Person(x) & Drawing(x))	The person is drawing	exists x. (Person(x) & Drawing(x))	c	False	True
1896	A man is drawing a picture	exists x. (Man(x) & Drawing(x, Picture))	The person is painting	exists x. (Person(x) & Painting(x))	n	False	False
1897	The person is drawing	exists x. (Person(x) & Drawing(x))	There is no man drawing a picture	not exists x. (Man(x) & DrawingPicture(x))	n	False	False
1898	A man is taking a picture of a drawing	exists x. exists y. (Man(x) & Drawing(y) & TakingPictureOf(x, y))	The person is drawing	exists x. (Person(x) & Drawing(x))	n	False	False
1899	Someone is beautifully playing the piano	exists x. (Person(x) & BeautifullyPlayingPiano(x))	Someone is playing a piano	exists x. (Person(x) & PlayingPiano(x))	e	False	False
1900	Someone is dismantling a piano	exists x. (DismantlingPiano(x))	Someone is playing a piano	exists x. (Person(x) & PlayingPiano(x))	n	False	False
1901	There is no one playing the guitar	not exists x. (GuitarPlayer(x))	Someone is playing the guitar	exists x. (GuitarPlayer(x))	c	False	True
1902	Someone is playing a piano	exists x. (Person(x) & PlayingPiano(x))	There is no one playing the guitar	not exists x. (GuitarPlayer(x))	n	False	False
1903	Someone is beautifully playing the piano	exists x. (Person(x) & BeautifullyPlayingPiano(x))	Someone is playing the guitar	exists x. (GuitarPlayer(x))	n	False	False
1904	Someone is playing a piano	exists x. (Person(x) & PlayingPiano(x))	Someone is playing the guitar	exists x. (GuitarPlayer(x))	n	False	False
1905	Some food is being eaten by a man	exists x.exists y. (Food(x) & Man(y) & Eating(y, x))	A man is eating some food	exists x. exists y. (Man(x) & Food(y) & Eating(x, y))	e	True	False
1906	A man is eating a pizza	exists x. exists y. (Man(x) & Pizza(y) & Eating(x, y))	There is no man eating a pizza	not exists x. (Man(x) & Eating(x, pizza))	c	False	False
1907	A pizza is being eaten by a man	exists x.exists y. (Pizza(x) & Man(y) & Eating(y, x))	A man is eating some food	exists x. exists y. (Man(x) & Food(y) & Eating(x, y))	e	True	False
1908	A cute panda is lying down	exists x. (Panda(x) & Cute(x) & LyingDown(x))	A panda that is cute is lying down	exists x. (Panda(x) & Cute(x) -> LyingDown(x))	e	True	False
1909	The panda bear is resting on the logs	exists x.exists y. (PandaBear(x) & Log(y) -> RestingOn(x, y))	A cute panda is lying down	exists x. (Panda(x) & Cute(x) & LyingDown(x))	n	False	False
1910	The panda bear is not lying on the logs	not LyingOnLogs(PandaBear)	A cute panda is lying down	exists x. (Panda(x) & Cute(x) & LyingDown(x))	n	False	False
1911	A panda that is cute is lying down	exists x. (Panda(x) & Cute(x) -> LyingDown(x))	The panda bear is lying on the logs	LyingOnLogs(pandaBear)	n	False	False
1912	There is no dog bouncing on a trampoline	not exists x. (Dog(x) & BouncingOnTrampoline(x))	A dog is bouncing on a trampoline	exists x. exists y. (Dog(x) & Trampoline(y) & BouncingOn(x, y))	c	False	False
1913	A dog is jumping on a diving board	exists x. exists y. (Dog(x) & DivingBoard(y) & JumpsOn(x, y))	A dog is jumping on a trampoline	exists x. exists y. (Dog(x) & Trampoline(y) & JumpsOn(x, y))	n	False	False
1914	A dog is lying on a trampoline	exists x. exists y. (Dog(x) & Trampoline(y) & LyingOn(x, y))	A dog is jumping on a trampoline	exists x. exists y. (Dog(x) & Trampoline(y) & JumpsOn(x, y))	n	False	False
1915	A dog is jumping on a diving board	exists x. exists y. (Dog(x) & DivingBoard(y) & JumpsOn(x, y))	A dog is bouncing on a trampoline	exists x. exists y. (Dog(x) & Trampoline(y) & BouncingOn(x, y))	n	False	False
1916	Several boys are jumping on a trampoline	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOnTrampoline(x) & JumpingOnTrampoline(y) & JumpingOnTrampoline(z))	Several kids are jumping on a trampoline	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & JumpingOnTrampoline(x) & JumpingOnTrampoline(y) & JumpingOnTrampoline(z))	e	False	False
1917	There are no kids jumping on a trampoline	not exists x. (Kid(x) & JumpingOnTrampoline(x))	Several kids are jumping on a trampoline	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & JumpingOnTrampoline(x) & JumpingOnTrampoline(y) & JumpingOnTrampoline(z))	c	False	True
1918	There is no man doing back flips on a trampoline	not exists x. (Man(x) & DoingBackFlips(x) & OnTrampoline(x))	Several kids are jumping on a trampoline	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & JumpingOnTrampoline(x) & JumpingOnTrampoline(y) & JumpingOnTrampoline(z))	n	False	False
1919	Several kids are jumping on a trampoline	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & JumpingOnTrampoline(x) & JumpingOnTrampoline(y) & JumpingOnTrampoline(z))	A man is doing back flips on a trampoline	exists x. (Man(x) & DoingBackFlips(x))	n	False	False
1920	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	A woman is not cutting meat	exists x. (Woman(x) -> not CuttingMeat(x))	e	False	False
1921	A woman is cutting meat	exists x. (Woman(x) & CuttingMeat(x))	A woman is slicing an onion	exists x. (Woman(x) & SlicingOnion(x))	n	False	False
1922	A woman is cutting meat	exists x. (Woman(x) & CuttingMeat(x))	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	n	False	False
1923	The piano is being played by a man	exists x. exists y. (Piano(x) & Man(y) & Playing(y, x))	A man is playing a wooden flute	exists x. (Man(x) & PlayingWoodenFlute(x))	n	False	False
1924	There is no man playing the piano	not exists x. (Man(x) & PlaysPiano(x))	A man is playing a wooden flute	exists x. (Man(x) & PlayingWoodenFlute(x))	n	False	False
1925	A wooden flute is being played by a man	exists x. exists y. (WoodenFlute(x) & Man(y) & Playing(y, x))	A man is playing the piano	exists x. (Man(x) & PlayingPiano(x))	n	False	False
1926	There is no man playing a wooden flute	not exists x. (Man(x) & PlaysWoodenFlute(x))	A man is playing the piano	exists x. (Man(x) & PlayingPiano(x))	n	False	False
1927	The man is erasing the drawing on the board	exists x.exists y. (Man(x) & Drawing(y) & OnBoard(y) -> Erasing(x, y))	The man is erasing the other man's work from the panel	exists x.exists y. (Man(x) & Man(y) & Panel(z) -> ErasingWorkFrom(x, y, z))	n	False	False
1928	The man is cleaning the drawing on the board	exists x.exists y.exists z. (Man(x) & Drawing(y) & Board(z) -> CleaningOn(x, y, z))	The man is erasing the other man's work from the board	exists x.exists y. (Man(x) & Man(y) & Work(x, y) -> Erasing(x, y))	n	False	False
1929	The woman is erasing the drawing on the board	exists x.exists y. (Woman(x) & Drawing(y) & OnBoard(y) -> Erasing(x, y))	The man is erasing the other man's work from the board	exists x.exists y. (Man(x) & Man(y) & Work(x, y) -> Erasing(x, y))	n	False	False
1930	The man is erasing the other man's work from the board	exists x.exists y. (Man(x) & Man(y) & Work(x, y) -> Erasing(x, y))	The man is erasing the drawing on the board	exists x.exists y. (Man(x) & Drawing(y) & OnBoard(y) -> Erasing(x, y))	n	False	False
1931	A woman is cutting a vegetable	exists x. exists y. (Woman(x) & Vegetable(y) & Cutting(x, y))	A woman is slicing a vegetable	exists x. exists y. (Woman(x) & Vegetable(y) & Slicing(x, y))	e	False	False
1932	A woman is slicing an eggplant	exists x. exists y. (Woman(x) & Eggplant(y) & Slicing(x, y))	There is no woman slicing an eggplant	not exists x. (Woman(x) & Slicing(x, eggplant))	c	False	False
1933	There is no woman slicing an eggplant	not exists x. (Woman(x) & Slicing(x, eggplant))	A woman is cutting a vegetable	exists x. exists y. (Woman(x) & Vegetable(y) & Cutting(x, y))	n	False	False
1934	A woman is slicing an eggplant	exists x. exists y. (Woman(x) & Eggplant(y) & Slicing(x, y))	A woman is cutting a vegetable	exists x. exists y. (Woman(x) & Vegetable(y) & Cutting(x, y))	e	False	False
1935	A dog is playing with a toy	exists x. exists y. (Dog(x) & Toy(y) & PlayingWith(x, y))	There is no dog playing with a toy	not exists x. (Dog(x) & PlayingWithToy(x))	c	False	False
1936	A dog is eating a doll	exists x. exists y. (Dog(x) & Doll(y) & Eating(x, y))	A dog is having fun with a toy	exists x.exists y. (Dog(x) & Toy(y) -> HavingFunWith(x, y))	n	False	False
1937	A dog is eating a doll	exists x. exists y. (Dog(x) & Doll(y) & Eating(x, y))	A kid is playing with a toy dog	exists x. exists y. (Kid(x) & ToyDog(y) & PlayingWith(x, y))	n	False	False
1938	A dog is playing with a toy	exists x. exists y. (Dog(x) & Toy(y) & PlayingWith(x, y))	A dog is biting a doll	exists x. exists y. (Dog(x) & Doll(y) & Biting(x, y))	n	False	False
1939	A dog is playing with a toy	exists x. exists y. (Dog(x) & Toy(y) & PlayingWith(x, y))	There is no dog eating a doll	not exists x. (Dog(x) & Eating(x, doll))	n	False	False
1940	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is performing a dance	exists x. (Man(x) & PerformsDance(x))	e	False	False
1941	A man is performing a dance	exists x. (Man(x) & PerformsDance(x))	A man is praying	exists x. (Man(x) & Praying(x))	n	False	False
1942	A man is dancing	exists x. (Dancer(x) & Man(x))	A man is praying	exists x. (Man(x) & Praying(x))	n	False	False
1943	A man is slicing some bread	exists x. exists y. (Man(x) & Bread(y) & Slicing(x, y))	A man is slicing bread	exists x. (Man(x) & SlicingBread(x))	e	False	False
1944	A man is cutting a slice of bread	exists x. exists y. (Man(x) & Bread(y) & Cutting(x, y))	A person is slicing a piece of bread	exists x. (Person(x) & Slicing(x, bread))	e	False	False
1945	A person is slicing a piece of bread	exists x. (Person(x) & Slicing(x, bread))	There is no man slicing some bread	not exists x. (Man(x) & SlicingBread(x))	n	False	False
1946	A woman is stroking a lemur	exists x. exists y. (Woman(x) & Lemur(y) & Stroking(x, y))	A lemur is being stroked by a woman	exists x.exists y. (Lemur(x) & Woman(y) & Stroking(y, x))	e	True	False
1947	A woman is stroking a lemur	exists x. exists y. (Woman(x) & Lemur(y) & Stroking(x, y))	Someone is scratching the back of an animal	exists x.exists y. (Person(x) & Animal(y) & Scratching(x, y))	n	False	False
1948	Someone is scratching the belly of an animal	exists x.exists y. (Person(x) & Animal(y) & ScratchesBelly(x, y))	There is no woman stroking a lemur	not exists x. (Woman(x) & Stroking(x, lemur))	n	False	False
1949	A woman is stroking a lemur	exists x. exists y. (Woman(x) & Lemur(y) & Stroking(x, y))	Someone is scratching the belly of an animal	exists x.exists y. (Person(x) & Animal(y) & ScratchesBelly(x, y))	n	False	False
1950	The animal with big eyes is sleeping	exists x. (Animal(x) & BigEyes(x) -> Sleeping(x))	The animal with big eyes is eating	exists x. (Animal(x) & BigEyes(x) -> Eating(x))	c	False	False
1951	The animal with big eyes is sleeping	exists x. (Animal(x) & BigEyes(x) -> Sleeping(x))	A lemur is eating	exists x. (Lemur(x) -> Eating(x))	n	False	False
1952	A lemur is eating quickly	exists x. (Lemur(x) -> EatingQuickly(x))	The animal with big eyes is eating	exists x. (Animal(x) & BigEyes(x) -> Eating(x))	e	False	False
1953	The animal with big eyes is eating	exists x. (Animal(x) & BigEyes(x) -> Eating(x))	There is no lemur eating	exists x. (Lemur(x) & not Eating(x))	n	False	False
1954	The animal with big eyes is eating	exists x. (Animal(x) & BigEyes(x) -> Eating(x))	A lemur is eating	exists x. (Lemur(x) -> Eating(x))	n	False	False
1955	Two men are playing guitar	exists x. exists y. (Man(x) & Man(y) & PlayingGuitar(x) & PlayingGuitar(y))	Two girls are playing guitar	exists x. exists y. (Girl(x) & Girl(y) & PlayingGuitar(x) & PlayingGuitar(y))	n	False	False
1956	Two men are talking	exists x. exists y. (Man(x) & Man(y) & Talking(x, y))	Two people are talking	exists x. exists y. (Person(x) & Person(y) & Talking(x, y))	e	True	False
1957	Two women are talking	exists x. exists y. (Woman(x) & Woman(y) & Talking(x, y))	Two men are playing guitar	exists x. exists y. (Man(x) & Man(y) & PlayingGuitar(x) & PlayingGuitar(y))	n	False	False
1958	Guitar is being played by two men	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	Two men are talking	exists x. exists y. (Man(x) & Man(y) & Talking(x, y))	n	False	False
1959	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	A flute is being played by a man	exists x. exists y. (Flute(x) & Man(y) & Playing(y, x))	e	False	False
1960	There is no man playing an electronic keyboard	not exists x. (Man(x) & PlaysElectronicKeyboard(x))	A man is playing an electronic keyboard	exists x. (Man(x) & PlayingElectronicKeyboard(x))	c	False	False
1961	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	An electronic keyboard is being played by a man	exists x. exists y. (ElectronicKeyboard(x) & Man(y) & Playing(y, x))	n	False	False
1962	A flute is being played by a man	exists x. exists y. (Flute(x) & Man(y) & Playing(y, x))	A man is playing an electronic keyboard	exists x. (Man(x) & PlayingElectronicKeyboard(x))	n	False	False
1963	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	A man is playing an electronic keyboard	exists x. (Man(x) & PlayingElectronicKeyboard(x))	n	False	False
1964	There is no clown singing and people are not dancing	not exists x. (Clown(x) & Singing(x)) & not exists y. (Person(y) & Dancing(y))	A clown is singing and people are dancing	exists x. exists y. (Clown(x) & Singing(x) & Person(y) & Dancing(y))	c	False	True
1965	People are singing and a clown is dancing	exists x. exists y. (Person(x) & Person(y) & Singing(x) & Dancing(y))	A clown is singing and people are dancing	exists x. exists y. (Clown(x) & Singing(x) & Person(y) & Dancing(y))	n	False	False
1966	There is no clown singing	not exists x. (Clown(x) & Singing(x))	A clown is singing and people are dancing	exists x. exists y. (Clown(x) & Singing(x) & Person(y) & Dancing(y))	c	False	True
1967	A clown is singing and people are dancing	exists x. exists y. (Clown(x) & Singing(x) & Person(y) & Dancing(y))	A clown is singing	exists x. (Clown(x) & Singing(x))	e	True	False
1968	The girl is riding the horse	exists x. exists y. (Girl(x) & Horse(y) & Riding(x, y))	The man is riding the horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	n	False	False
1969	The girl is riding the horse	exists x. exists y. (Girl(x) & Horse(y) & Riding(x, y))	The girl is watering the plants	WateringPlants(girl)	n	False	False
1970	The girl is riding the horse	exists x. exists y. (Girl(x) & Horse(y) & Riding(x, y))	The boy is spraying the plants with water	exists x.exists y. (Boy(x) & Plant(y) -> SpraysWithWater(x, y))	n	False	False
1971	The horse is being ridden by the girl	exists x.exists y. (Horse(x) & Girl(y) & Riding(y, x))	The girl is spraying the plants with water	exists x. exists y. exists z. (Girl(x) & Plant(y) & Water(z) & Sprays(x, y, z))	n	False	False
1972	The man is riding the horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	The girl is spraying the plants with water	exists x. exists y. exists z. (Girl(x) & Plant(y) & Water(z) & Sprays(x, y, z))	n	False	False
1973	A person is quickly cutting mushrooms with a knife	exists x. (Person(x) & QuicklyCuttingMushrooms(x))	A person is quickly chopping mushrooms with a knife	exists x. (Person(x) & QuicklyChoppingMushrooms(x))	e	False	False
1974	A person is quickly cutting mushrooms with a knife	exists x. (Person(x) & QuicklyCuttingMushrooms(x))	A man is rapidly chopping some mushrooms with a knife	exists x. exists y. exists z. (Man(x) & Mushroom(y) & Knife(z) & RapidlyChopping(x, y, z))	e	False	False
1975	A person is not quickly chopping mushrooms with a knife	exists x. (Person(x) & not QuicklyChoppingMushroomsWithKnife(x))	A man is rapidly chopping some mushrooms with a knife	exists x. exists y. exists z. (Man(x) & Mushroom(y) & Knife(z) & RapidlyChopping(x, y, z))	n	False	False
1976	A person is quickly chopping mushrooms with a knife	exists x. (Person(x) & QuicklyChoppingMushrooms(x))	There is no man rapidly chopping some mushrooms with a knife	not exists x. (Man(x) & RapidlyChopping(x, mushrooms) & UsingKnife(x))	n	False	False
1977	A man and a woman are shaking hands	exists x. exists y. (Man(x) & Woman(y) & ShakingHands(x, y))	A man and a woman are not shaking hands	exists x. exists y. (Man(x) & Woman(y) -> not ShakingHands(x, y))	c	False	False
1978	An old woman is shaking hands with a man	exists x. exists y. (OldWoman(x) & Man(y) & ShakingHands(x, y))	A young woman is shaking hands with a man	exists x. exists y. (YoungWoman(x) & Man(y) & ShakingHands(x, y))	n	False	False
1979	An old woman is shaking hands with a man	exists x. exists y. (OldWoman(x) & Man(y) & ShakingHands(x, y))	Two persons are shaking hands	exists x. exists y. (Person(x) & Person(y) & ShakingHands(x, y))	e	False	False
1980	There is no woman chopping up an octopus	not exists x. (Woman(x) & ChoppingOctopus(x))	A woman is chopping up an octopus	exists x. exists y. (Woman(x) & Octopus(y) & Chopping(x, y))	c	False	False
1981	The woman is slicing cooked octopus	exists x. (Woman(x) & Slicing(x, CookedOctopus))	The woman is cutting cooked octopus	exists x. (Woman(x) & Cutting(x, CookedOctopus))	e	False	False
1982	The woman is cutting cooked octopus	exists x. (Woman(x) & Cutting(x, CookedOctopus))	A woman is chopping up an octopus	exists x. exists y. (Woman(x) & Octopus(y) & Chopping(x, y))	e	False	False
1983	A plane is taking off	exists x. (Plane(x) & TakingOff(x))	An airplane is taking off	exists x. (Airplane(x) & TakingOff(x))	e	True	False
1984	A plane is landing	exists x. (Plane(x) & Landing(x))	A plane is taking off	exists x. (Plane(x) & TakingOff(x))	n	False	False
1985	An airplane is taking off	exists x. (Airplane(x) & TakingOff(x))	There is no airplane taking off	not exists x. (Airplane(x) & TakingOff(x))	c	False	True
1986	An aircraft is taking off	exists x. (Aircraft(x) & TakingOff(x))	A plane is taking off	exists x. (Plane(x) & TakingOff(x))	e	False	False
1987	A plane is taking off	exists x. (Plane(x) & TakingOff(x))	There is no airplane taking off	not exists x. (Airplane(x) & TakingOff(x))	c	False	True
1988	An airplane is taking off	exists x. (Airplane(x) & TakingOff(x))	A plane is landing	exists x. (Plane(x) & Landing(x))	n	False	False
1989	A man is shooting guns	exists x. (Man(x) & ShootingGuns(x))	A man is shooting a weapon	exists x. exists y. (Man(x) & Weapon(y) & Shooting(x, y))	e	False	False
1990	A man is shooting guns	exists x. (Man(x) & ShootingGuns(x))	There is no man shooting guns	not exists x. (Man(x) & ShootingGuns(x))	c	False	True
1991	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	There is no man shooting guns	not exists x. (Man(x) & ShootingGuns(x))	n	False	False
1992	A man is shooting guns	exists x. (Man(x) & ShootingGuns(x))	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	n	False	False
1993	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	A man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	e	False	False
1994	A woman is slicing a tomato	exists x. (Woman(x) & Slicing(x, tomato))	A woman is cutting a tomato	exists x. exists y. (Woman(x) & Tomato(y) & Cutting(x, y))	e	False	False
1995	A woman is cutting a tomato	exists x. exists y. (Woman(x) & Tomato(y) & Cutting(x, y))	A man is cutting a tomato	exists x. exists y. (Man(x) & Tomato(y) & Cutting(x, y))	n	False	False
1996	A man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	A woman is cutting a tomato	exists x. exists y. (Woman(x) & Tomato(y) & Cutting(x, y))	n	False	False
1997	A woman is cutting a tomato	exists x. exists y. (Woman(x) & Tomato(y) & Cutting(x, y))	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	n	False	False
1998	The man is drawing	exists x. (Man(x) & Drawing(x))	The man is not drawing	not exists x. (Man(x) & Drawing(x))	c	False	True
1999	The man is painting	exists x. (Man(x) & Painting(x))	A man is drawing	exists x. (Man(x) & Drawing(x))	e	False	False
2000	The man is not drawing	not exists x. (Man(x) & Drawing(x))	A man is drawing	exists x. (Man(x) & Drawing(x))	c	False	True
2001	A man is drawing	exists x. (Man(x) & Drawing(x))	The man is drawing	exists x. (Man(x) & Drawing(x))	e	True	False
2002	A woman is picking a can	exists x. (Woman(x) & Picking(x, can))	A woman is taking a can	exists x. (Woman(x) -> exists y. (Can(y) & Taking(x, y)))	e	False	False
2003	A woman is picking a can	exists x. (Woman(x) & Picking(x, can))	A woman is cutting a tomato	exists x. exists y. (Woman(x) & Tomato(y) & Cutting(x, y))	n	False	False
2004	A man is eating a banana	exists x. exists y. (Man(x) & Banana(y) & Eating(x, y))	There is no man eating a banana	not exists x. (Man(x) & EatingBanana(x))	c	False	False
2005	Someone is peeling a banana	exists x. (PeelingBanana(x))	There is no one peeling a banana	not exists x. (Person(x) & PeelingBanana(x))	c	False	False
2006	There is no dog barking	exists x. (Dog(x) & not Barking(x))	A dog is barking	exists x. (Dog(x) & Barking(x))	c	False	False
2007	A jet is flying	exists x. (Jet(x) & Flying(x))	A plane is flying	exists x. (Plane(x) & Flying(x))	e	True	False
2008	A plane is flying	exists x. (Plane(x) & Flying(x))	A dog is barking	exists x. (Dog(x) & Barking(x))	n	False	False
2009	A jet is not flying	exists x. (Jet(x) -> not Flying(x))	A dog is barking	exists x. (Dog(x) & Barking(x))	n	False	False
2010	A jet is flying	exists x. (Jet(x) & Flying(x))	There is no dog barking	exists x. (Dog(x) & not Barking(x))	n	False	False
2011	A man is cutting a paper	exists x. exists y. (Man(x) & Paper(y) & Cutting(x, y))	A man is cutting himself with a piece of paper	exists x. (Man(x) & Cutting(x, paper))	n	False	False
2012	A man is cutting a paper	exists x. exists y. (Man(x) & Paper(y) & Cutting(x, y))	A person is not tearing paper	exists x. (Person(x) -> not TearingPaper(x))	n	False	False
2013	A man is cutting a note	exists x. exists y. (Man(x) & Note(y) & Cutting(x, y))	A person is tearing paper	exists x. (Person(x) & TearingPaper(x))	n	False	False
2014	A person is tearing paper	exists x. (Person(x) & TearingPaper(x))	There is no man cutting a paper	not exists x. (Man(x) & CuttingPaper(x))	n	False	False
2015	A man is not playing a guitar	exists x. (Man(x) -> not PlayingGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	c	False	False
2016	Someone is playing a piano	exists x. (Person(x) & PlayingPiano(x))	A piano is being played by someone	exists x. exists y. (Piano(x) & Person(y) & Playing(y, x))	e	False	False
2017	Someone is playing a piano	exists x. (Person(x) & PlayingPiano(x))	There is no one playing a piano	not exists x. (PianoPlayer(x))	c	False	False
2018	A piano is being played by someone	exists x. exists y. (Piano(x) & Person(y) & Playing(y, x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2019	A shoe is being tied by a man	exists x.exists y. (Shoe(x) & Man(y) & Tying(y, x))	A man is tying a shoe	exists x. (Man(x) & TyingShoe(x))	e	False	False
2020	There is no man tying a shoe	not exists x. (Man(x) & TyingShoe(x))	A man is tying a shoe	exists x. (Man(x) & TyingShoe(x))	c	False	True
2021	A man is tying a shoe	exists x. (Man(x) & TyingShoe(x))	A man is tying the shoe	exists x. (Man(x) & TyingShoe(x))	e	True	False
2022	A guy is riding a horse	exists x. exists y. (Guy(x) & Horse(y) & Riding(x, y))	A horse is being ridden by a guy	exists x.exists y. (Horse(x) & Guy(y) & Riding(y, x))	e	True	False
2023	A man is riding a horse in the desert	exists x. exists y. exists z. (Man(x) & Horse(y) & Desert(z) & Riding(x, y, z))	A man is riding a horse in a sandy land	exists x. exists y. exists z. (Man(x) & Horse(y) & SandyLand(z) & Riding(x, y, z))	e	False	False
2024	A paper plate is being cut by the man	exists x. exists y. (PaperPlate(x) & Man(y) & Cutting(y, x))	The man is cutting a paper plate	exists x. exists y. (Man(x) & PaperPlate(y) & Cutting(x, y))	e	True	False
2025	A man is cutting a paper plate	exists x. exists y. (Man(x) & PaperPlate(y) & Cutting(x, y))	A paper plate is being cut by the man	exists x. exists y. (PaperPlate(x) & Man(y) & Cutting(y, x))	e	True	False
2026	A paper plate is being cut by a man	exists x.exists y. (PaperPlate(x) & Man(y) & Cutting(y, x))	The man is cutting a paper plate	exists x. exists y. (Man(x) & PaperPlate(y) & Cutting(x, y))	e	True	False
2027	A man is cutting a paper plate	exists x. exists y. (Man(x) & PaperPlate(y) & Cutting(x, y))	The man is cutting a paper plate	exists x. exists y. (Man(x) & PaperPlate(y) & Cutting(x, y))	e	True	False
2028	Two men in a race are flipping the tires of a tractor	exists x. exists y. exists z. (Man(x) & Man(y) & Tractor(z) & FlippingTires(x, z) & FlippingTires(y, z))	Two people in a race are flipping the tires of a tractor	exists x. exists y. exists z. (Person(x) & Person(y) & Tractor(z) & Race(x, y, z) & FlippingTires(x, z))	e	False	False
2029	Two people in a race are flipping the tires of a tractor	exists x. exists y. exists z. (Person(x) & Person(y) & Tractor(z) & Race(x, y, z) & FlippingTires(x, z))	Two men are racing in a tire rolling competition	exists x. exists y. (Man(x) & Man(y) & Racing(x, y) & TireRollingCompetition(x, y))	e	False	False
2030	Two men are competing in a tire rolling race	exists x. exists y. (Man(x) & Man(y) & TireRollingRace(x, y))	Two people in a race are flipping the tires of a tractor	exists x. exists y. exists z. (Person(x) & Person(y) & Tractor(z) & Race(x, y, z) & FlippingTires(x, z))	n	False	False
2031	An alligator is being patted on the mouth by a man	exists x. exists y. (Alligator(x) & Man(y) & Patting(y, x))	A man is patting an alligator on the mouth	exists x. exists y. (Man(x) & Alligator(y) & Patting(x, y) & OnMouth(x, y))	e	False	False
2032	A person is removing chopped vegetables from a pot on the stove	exists x.exists y.exists z. (Person(x) & Pot(y) & Stove(z) & ChoppedVegetables(y) -> RemovingFrom(x, y, z))	A person is dropping chopped vegetables into a pot on the stove	exists x.exists y.exists z. (Person(x) & Pot(y) & Stove(z) -> DropsChoppedVegetablesInto(x, y, z))	c	False	False
2033	Chopped vegetables are being dropped into a pot on the stove by a person	exists x.exists y.exists z. (ChoppedVegetables(x) & Pot(y) & Stove(z) -> DroppedInto(x, y, z))	A man is patting an alligator on the mouth	exists x. exists y. (Man(x) & Alligator(y) & Patting(x, y) & OnMouth(x, y))	n	False	False
2034	A person is removing chopped vegetables from a pot on the stove	exists x.exists y.exists z. (Person(x) & Pot(y) & Stove(z) & ChoppedVegetables(y) -> RemovingFrom(x, y, z))	A man is patting an alligator on the mouth	exists x. exists y. (Man(x) & Alligator(y) & Patting(x, y) & OnMouth(x, y))	n	False	False
2035	An alligator is being patted on the mouth by a man	exists x. exists y. (Alligator(x) & Man(y) & Patting(y, x))	A person is dropping chopped vegetables into a pot on the stove	exists x.exists y.exists z. (Person(x) & Pot(y) & Stove(z) -> DropsChoppedVegetablesInto(x, y, z))	n	False	False
2036	A person is dropping chopped vegetables into a pot on the stove	exists x.exists y.exists z. (Person(x) & Pot(y) & Stove(z) -> DropsChoppedVegetablesInto(x, y, z))	There is no man patting an alligator on the mouth	not exists x. (Man(x) & Patting(x, alligator) & OnMouth(x, alligator))	n	False	False
2037	A man is patting an alligator on the mouth	exists x. exists y. (Man(x) & Alligator(y) & Patting(x, y) & OnMouth(x, y))	A person is dropping chopped vegetables into a pot on the stove	exists x.exists y.exists z. (Person(x) & Pot(y) & Stove(z) -> DropsChoppedVegetablesInto(x, y, z))	n	False	False
2038	The men are having a conversation	exists x.exists y.exists z. (Man(x) & Man(y) & Conversation(z) -> HasConversation(x, y, z))	The men are talking	exists x. (Man(x) -> Talking(x))	e	False	False
2039	Some old women are talking	exists x. (OldWoman(x) & Talking(x))	Some women are talking	exists x. (Woman(x) & Talking(x))	e	False	False
2040	Some women are talking	exists x. (Woman(x) & Talking(x))	Some women are not talking	exists x. (Woman(x) & not Talking(x))	n	False	False
2041	Some women are not talking	exists x. (Woman(x) & not Talking(x))	The men are talking	exists x. (Man(x) -> Talking(x))	n	False	False
2042	The men are talking	exists x. (Man(x) -> Talking(x))	Some women are talking	exists x. (Woman(x) & Talking(x))	n	False	False
2043	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is playing an instrument	exists x. exists y. (Man(x) & Instrument(y) & Playing(x, y))	e	False	False
2044	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	There is no man playing the guitar	not exists x. (Man(x) & PlaysGuitar(x))	c	False	False
2045	A woman is putting on lipstick	exists x. (Woman(x) & PuttingOnLipstick(x))	A woman is putting on makeup	exists x. (Woman(x) & PuttingOnMakeup(x))	e	False	False
2046	A woman is putting on lipstick	exists x. (Woman(x) & PuttingOnLipstick(x))	There is no woman putting on lipstick	not exists x. (Woman(x) & PuttingOnLipstick(x))	c	False	True
2047	A woman is putting on makeup	exists x. (Woman(x) & PuttingOnMakeup(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2048	There is no man playing the guitar	not exists x. (Man(x) & PlaysGuitar(x))	A woman is putting on lipstick	exists x. (Woman(x) & PuttingOnLipstick(x))	n	False	False
2049	There is no man singing to a woman	not exists x. (Man(x) & Singing(x, y) & Woman(y))	A man is singing to a woman	exists x. exists y. (Man(x) & Woman(y) & Singing(x, y))	c	False	True
2050	A man is singing to a woman	exists x. exists y. (Man(x) & Woman(y) & Singing(x, y))	A man is not talking on the phone	exists x. (Man(x) & not TalkingOnPhone(x))	n	False	False
2051	A man is singing to a girl	exists x. exists y. (Man(x) & Girl(y) & SingingTo(x, y))	A man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	n	False	False
2052	There is no man singing to a woman	not exists x. (Man(x) & Singing(x, y) & Woman(y))	A man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	n	False	False
2053	A man is singing to a woman	exists x. exists y. (Man(x) & Woman(y) & Singing(x, y))	A man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	n	False	False
2054	A rhino is grazing in a field	exists x. exists y. (Rhino(x) & Field(y) -> GrazingIn(x, y))	A animal is grazing in a field	exists x. exists y. (Animal(x) & Field(y) -> GrazingIn(x, y))	e	False	False
2055	A rhino is grazing in a field	exists x. exists y. (Rhino(x) & Field(y) -> GrazingIn(x, y))	There is no rhino grazing in a field	not exists x. (Rhino(x) & Grazing(x, field))	c	False	False
2056	The rhino is grazing on the grass	exists x.exists y. (Rhino(x) & Grass(y) -> GrazingOn(x, y))	The rhino is not grazing on the grass	exists x. (Rhino(x) -> not GrazingOnGrass(x))	c	False	False
2057	The rhino is being fed on the grass	exists x. exists y. (Rhino(x) & Grass(y) & BeingFedOn(x, y))	A rhino is grazing in a field	exists x. exists y. (Rhino(x) & Field(y) -> GrazingIn(x, y))	n	False	False
2058	There is no rhino grazing in a field	not exists x. (Rhino(x) & Grazing(x, field))	The rhino is grazing on the grass	exists x.exists y. (Rhino(x) & Grass(y) -> GrazingOn(x, y))	c	False	False
2059	A rhino is grazing in a field	exists x. exists y. (Rhino(x) & Field(y) -> GrazingIn(x, y))	The rhino is grazing on the grass	exists x.exists y. (Rhino(x) & Grass(y) -> GrazingOn(x, y))	e	False	False
2060	A couple is running towards the ocean	exists x.exists y. (Couple(x) & Ocean(y) -> RunningTowards(x, y))	A couple is running towards the water	exists x.exists y. (Couple(x) & Water(y) -> RunningTowards(x, y))	e	False	False
2061	There is no couple running towards the ocean	not exists x. (Couple(x) & RunningTowardsOcean(x))	A couple is running towards the ocean	exists x.exists y. (Couple(x) & Ocean(y) -> RunningTowards(x, y))	c	False	False
2062	A man and a woman are running together and holding hands	exists x. exists y. (Man(x) & Woman(y) & RunningTogether(x, y) & HoldingHands(x, y))	A couple is running and holding hands	exists x.exists y. (Couple(x) & Couple(y) -> (Running(x) & Running(y) & HoldingHands(x, y)))	e	False	False
2063	A couple is running towards the ocean	exists x.exists y. (Couple(x) & Ocean(y) -> RunningTowards(x, y))	A couple is running and holding hands	exists x.exists y. (Couple(x) & Couple(y) -> (Running(x) & Running(y) & HoldingHands(x, y)))	n	False	False
2064	A couple is running towards the ocean	exists x.exists y. (Couple(x) & Ocean(y) -> RunningTowards(x, y))	A man and a woman are standing together and holding hands	exists x. exists y. (Man(x) & Woman(y) & StandingTogether(x, y) & HoldingHands(x, y))	n	False	False
2065	A couple is running towards the water	exists x.exists y. (Couple(x) & Water(y) -> RunningTowards(x, y))	A man and a woman are running together and holding hands	exists x. exists y. (Man(x) & Woman(y) & RunningTogether(x, y) & HoldingHands(x, y))	n	False	False
2066	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	A man is kicking a ball	exists x. exists y. (Man(x) & Ball(y) & Kicking(x, y))	e	False	False
2067	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	The content of a bowl is being mixed by a man	exists x.exists y. (Bowl(x) & Man(y) -> MixedBy(x, y))	n	False	False
2068	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	A woman is mixing the content of a bowl	exists x. exists y. (Woman(x) & Bowl(y) & MixingContent(x, y))	n	False	False
2069	A man is kicking a ball	exists x. exists y. (Man(x) & Ball(y) & Kicking(x, y))	A man is mixing the content of a bowl	exists x. exists y. (Man(x) & Bowl(y) & MixingContent(x, y))	n	False	False
2070	A man is mixing the content of a bowl	exists x. exists y. (Man(x) & Bowl(y) & MixingContent(x, y))	A man is kicking a soccer ball	exists x. exists y. (Man(x) & SoccerBall(y) & Kicking(x, y))	n	False	False
2071	The boy is playing the piano	exists x. (Boy(x) & PlayingPiano(x))	The boy is playing a musical instrument	exists x. (Boy(x) & exists y. (MusicalInstrument(y) & Playing(x, y)))	e	False	False
2072	The boy is playing the piano	exists x. (Boy(x) & PlayingPiano(x))	The boy is not playing the piano	not PlaysPiano(boy)	c	False	False
2073	The woman is not pouring oil into the pan	not exists x. (Woman(x) & PouringOilIntoPan(x))	The woman is pouring oil into the pan	exists x. exists y. exists z. (Woman(x) & Oil(y) & Pan(z) & PouringInto(x, y, z))	c	False	False
2074	Oil is being poured into the pan by the woman	exists x.exists y. (Oil(x) & Pan(y) & Woman(z) -> PoursInto(z, x, y))	The boy is playing the piano	exists x. (Boy(x) & PlayingPiano(x))	n	False	False
2075	The woman is not pouring oil into the pan	not exists x. (Woman(x) & PouringOilIntoPan(x))	The boy is playing the piano	exists x. (Boy(x) & PlayingPiano(x))	n	False	False
2076	The woman is pouring oil into the pan	exists x. exists y. exists z. (Woman(x) & Oil(y) & Pan(z) & PouringInto(x, y, z))	The boy is playing a musical instrument	exists x. (Boy(x) & exists y. (MusicalInstrument(y) & Playing(x, y)))	n	False	False
2077	A girl is brushing her hair	exists x. (Girl(x) & BrushingHair(x))	A girl is combing her hair	exists x. (Girl(x) & CombingHair(x))	n	False	False
2078	There is no girl brushing her hair	not exists x. (Girl(x) & BrushingHair(x))	A girl is brushing her hair	exists x. (Girl(x) & BrushingHair(x))	c	False	True
2079	A girl is styling her hair	exists x. (Girl(x) & StylingHair(x))	A boy is styling his hair	exists x. (Boy(x) & StylingHair(x))	n	False	False
2080	A girl is brushing her hair	exists x. (Girl(x) & BrushingHair(x))	A boy is styling his hair	exists x. (Boy(x) & StylingHair(x))	n	False	False
2081	A girl is combing her hair	exists x. (Girl(x) & CombingHair(x))	A girl is styling her hair	exists x. (Girl(x) & StylingHair(x))	e	False	False
2082	There is no girl brushing her hair	not exists x. (Girl(x) & BrushingHair(x))	A girl is styling her hair	exists x. (Girl(x) & StylingHair(x))	n	False	False
2083	A girl is styling her hair	exists x. (Girl(x) & StylingHair(x))	A girl is brushing her hair	exists x. (Girl(x) & BrushingHair(x))	n	False	False
2084	The patient is being helped by the doctor	exists x.exists y. (Patient(x) & Doctor(y) -> Helps(y, x))	The doctor is helping the patient	exists x.exists y. (Doctor(x) & Patient(y) -> Helping(x, y))	e	False	False
2085	The patient is being helped by the doctor	exists x.exists y. (Patient(x) & Doctor(y) -> Helps(y, x))	The doctors are reviving a man	exists x.exists y. (Doctor(x) & Man(y) -> Reviving(x, y))	n	False	False
2086	The patient is helping the doctor	exists x.exists y. (Patient(x) & Doctor(y) -> Helping(x, y))	The doctors are reviving a man	exists x.exists y. (Doctor(x) & Man(y) -> Reviving(x, y))	n	False	False
2087	The doctor is helping the patient	exists x.exists y. (Doctor(x) & Patient(y) -> Helping(x, y))	The doctors are not reviving a man	not exists x. (Doctor(x) & Reviving(x, man))	n	False	False
2088	A woman is being massaged by a man	exists x. exists y. (Woman(x) & Man(y) & Massages(y, x))	A man is massaging a woman	exists x. exists y. (Man(x) & Woman(y) & Massaging(x, y))	e	False	False
2089	A piece of wood is being screwed to a wall by a man	exists x.exists y.exists z. (Wood(x) & Man(y) & Wall(z) -> ScrewedTo(x, y, z))	A man is screwing a piece of wood to a wall	exists x.exists y.exists z. (Man(x) & Wood(y) & Wall(z) -> ScrewsTo(x, y, z))	e	False	False
2090	A piece of wood is being screwed to a wall by a man	exists x.exists y.exists z. (Wood(x) & Man(y) & Wall(z) -> ScrewedTo(x, y, z))	A man is massaging a woman	exists x. exists y. (Man(x) & Woman(y) & Massaging(x, y))	n	False	False
2091	There is no man playing a flute	not exists x. (Man(x) & PlaysFlute(x))	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	c	False	False
2092	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	A guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	n	False	False
2093	There is no man driving a car	not exists x. (Man(x) & DrivingCar(x))	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	c	False	False
2094	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	A man is riding an animal	exists x. exists y. (Man(x) & Animal(y) & Riding(x, y))	e	True	False
2095	A man is riding an animal	exists x. exists y. (Man(x) & Animal(y) & Riding(x, y))	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	n	False	False
2096	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	There is no man riding a horse	not exists x. (Man(x) & RidingHorse(x))	n	False	False
2097	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	A man is driving a vehicle	exists x. exists y. (Man(x) & Vehicle(y) & Driving(x, y))	n	False	False
2098	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	There is no man driving a car	not exists x. (Man(x) & DrivingCar(x))	n	False	False
2099	A cat is crawling under a piece of furniture	exists x. exists y. (Cat(x) & Furniture(y) & CrawlingUnder(x, y))	An animal is crawling under a piece of furniture	exists x. exists y. (Animal(x) & Furniture(y) & CrawlingUnder(x, y))	e	True	False
2100	A cat is not crawling under a piece of furniture	exists x. (Cat(x) -> not CrawlingUnderFurniture(x))	A cat is crawling under a piece of furniture	exists x. exists y. (Cat(x) & Furniture(y) & CrawlingUnder(x, y))	c	False	False
2101	A cat is sliding upside down under a sofa	exists x. exists y. (Cat(x) & Sofa(y) & SlidingUnder(x, y))	A cat is sliding upside down under a couch	exists x. exists y. (Cat(x) & Couch(y) & SlidingUnder(x, y))	e	True	False
2102	There is no cat sliding upside down under a couch	not exists x. (Cat(x) & SlidingUpsideDown(x) & UnderCouch(x))	A cat is sliding upside down under a couch	exists x. exists y. (Cat(x) & Couch(y) & SlidingUnder(x, y))	c	False	False
2103	A cat is sliding upside down under a sofa	exists x. exists y. (Cat(x) & Sofa(y) & SlidingUnder(x, y))	A cat is crawling under a piece of furniture	exists x. exists y. (Cat(x) & Furniture(y) & CrawlingUnder(x, y))	n	False	False
2104	A cat is sliding upside down under a couch	exists x. exists y. (Cat(x) & Couch(y) & SlidingUnder(x, y))	A cat is not crawling under a piece of furniture	exists x. (Cat(x) -> not CrawlingUnderFurniture(x))	c	False	False
2105	A cat is crawling under a piece of furniture	exists x. exists y. (Cat(x) & Furniture(y) & CrawlingUnder(x, y))	A cat is sliding upside down under a couch	exists x. exists y. (Cat(x) & Couch(y) & SlidingUnder(x, y))	n	False	False
2106	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	There is no woman riding a horse	not exists x. (Woman(x) & RidingHorse(x))	c	False	False
2107	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	A horse is being ridden by a woman	exists x.exists y. (Horse(x) & Woman(y) & Riding(y, x))	n	False	False
2108	A horse is being ridden by a man	exists x.exists y. (Horse(x) & Man(y) & Riding(y, x))	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	n	False	False
2109	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	n	False	False
2110	A man is emptying a plastic container	exists x. (Man(x) & EmptyingPlasticContainer(x))	A man is filling a plastic container	exists x. exists y. (Man(x) & PlasticContainer(y) & Filling(x, y))	c	False	False
2111	A container is being shaken over a sink in the kitchen by a man	exists x. exists y. exists z. (Container(x) & Sink(y) & Kitchen(z) & Man(m) & ShakingOver(m, x, y) & In(x, y, z))	A man is shaking a container over a sink in the kitchen	exists x. exists y. exists z. (Man(x) & Container(y) & Sink(z) & ShakingOver(x, y, z))	e	True	False
2112	A man is emptying a plastic container	exists x. (Man(x) & EmptyingPlasticContainer(x))	A container is being shaken over a sink in the kitchen by a man	exists x. exists y. exists z. (Container(x) & Sink(y) & Kitchen(z) & Man(m) & ShakingOver(m, x, y) & In(x, y, z))	n	False	False
2113	A man is shaking a container over a sink in the kitchen	exists x. exists y. exists z. (Man(x) & Container(y) & Sink(z) & ShakingOver(x, y, z))	A man is filling a plastic container	exists x. exists y. (Man(x) & PlasticContainer(y) & Filling(x, y))	n	False	False
2114	A man is shaking a container over a sink in the kitchen	exists x. exists y. exists z. (Man(x) & Container(y) & Sink(z) & ShakingOver(x, y, z))	A man is emptying a plastic container	exists x. (Man(x) & EmptyingPlasticContainer(x))	n	False	False
2115	Some men are fighting	exists x. (Man(x) & Fighting(x))	There are no men fighting	not exists x. (Man(x) & Fighting(x))	c	False	True
2116	Two men are battling	exists x. exists y. (Man(x) & Man(y) & Battling(x, y))	Some men are fighting	exists x. (Man(x) & Fighting(x))	e	False	False
2117	A couple of policewomen are singing karaoke	exists x.exists y. (Policewoman(x) & Policewoman(y) & SingingKaraoke(x) & SingingKaraoke(y))	A couple of policewomen are singing	exists x.exists y.exists z. (Policewoman(x) & Policewoman(y) & Policewoman(z) & Singing(x) & Singing(y) & Singing(z))	e	False	False
2118	There is no policewoman singing at karaoke	not exists x. (Policewoman(x) & SingingAtKaraoke(x))	A couple of policewomen are singing karaoke	exists x.exists y. (Policewoman(x) & Policewoman(y) & SingingKaraoke(x) & SingingKaraoke(y))	c	False	False
2119	Two women are happily dancing	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y) & Happy(x) & Happy(y))	A couple of policewomen are singing karaoke	exists x.exists y. (Policewoman(x) & Policewoman(y) & SingingKaraoke(x) & SingingKaraoke(y))	n	False	False
2120	A couple of policewomen are singing karaoke	exists x.exists y. (Policewoman(x) & Policewoman(y) & SingingKaraoke(x) & SingingKaraoke(y))	Two women are not dancing	exists x. exists y. (Woman(x) & Woman(y) & not Dancing(x) & not Dancing(y))	n	False	False
2121	A couple of policewomen are singing	exists x.exists y.exists z. (Policewoman(x) & Policewoman(y) & Policewoman(z) & Singing(x) & Singing(y) & Singing(z))	Two women are dancing	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y))	n	False	False
2122	Two women are dancing	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y))	There is no policewoman singing at karaoke	not exists x. (Policewoman(x) & SingingAtKaraoke(x))	n	False	False
2123	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	An animal is being ridden by a woman	exists x.exists y. (Animal(x) & Woman(y) & Riding(y, x))	e	True	False
2124	An animal is being ridden by a woman	exists x.exists y. (Animal(x) & Woman(y) & Riding(y, x))	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	n	False	False
2125	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	A horse is being ridden by a woman	exists x.exists y. (Horse(x) & Woman(y) & Riding(y, x))	e	True	False
2126	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	A woman is not riding a horse	exists x. (Woman(x) & not RidingHorse(x))	c	False	False
2127	A hamster is singing	exists x. (Hamster(x) & Singing(x))	A small animal is singing	exists x. (SmallAnimal(x) & Singing(x))	e	False	False
2128	Some onions are being cut by a person	exists x.exists y. (Onion(x) & Person(y) & Cutting(y, x))	A person is slicing some onions	exists x. (Person(x) & Slicing(x, Onions))	e	False	False
2129	A person is slicing some onions	exists x. (Person(x) & Slicing(x, Onions))	A person is not slicing some onions	exists x. (Person(x) & not SlicingOnions(x))	c	False	False
2130	Some onions are being cut by a person	exists x.exists y. (Onion(x) & Person(y) & Cutting(y, x))	A hamster is singing	exists x. (Hamster(x) & Singing(x))	n	False	False
2131	A person is not slicing some onions	exists x. (Person(x) & not SlicingOnions(x))	A hamster is singing	exists x. (Hamster(x) & Singing(x))	n	False	False
2132	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	e	False	False
2133	There is no man playing a guitar	not exists x. (Man(x) & PlaysGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	c	False	False
2134	A man is singing and playing a guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is performing with a guitar	exists x. (Man(x) & PerformingWithGuitar(x))	e	False	False
2135	A man is performing with a guitar	exists x. (Man(x) & PerformingWithGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
2136	There is no man singing and playing a guitar	not exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2137	A man is singing and playing a guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	A guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	e	False	False
2138	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	A car is being driven by a man	exists x.exists y. (Car(x) & Man(y) & Driving(y, x))	e	True	False
2139	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	There is no man driving a car	not exists x. (Man(x) & DrivingCar(x))	c	False	False
2140	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	A man is driving a vehicle	exists x. exists y. (Man(x) & Vehicle(y) & Driving(x, y))	e	True	False
2141	A car is being driven by a man	exists x.exists y. (Car(x) & Man(y) & Driving(y, x))	A man is driving a car	exists x. exists y. (Man(x) & Car(y) & Driving(x, y))	e	True	False
2142	The boy is cutting the grass by the curb with scissors	Boy(x) & CuttingGrass(x) & ByCurb(x) & WithScissors(x)	The boy is shortening the grass by the curb with scissors	exists x.exists y.exists z. (Boy(x) & Grass(y) & Curb(z) & Scissors(x) -> Shortens(x, y, z))	e	False	False
2143	The boy is shortening the grass by the curb with scissors	exists x.exists y.exists z. (Boy(x) & Grass(y) & Curb(z) & Scissors(x) -> Shortens(x, y, z))	A boy is cutting grass with scissors	exists x. (Boy(x) & CuttingGrass(x, scissors))	e	False	False
2144	The boy is cutting the grass by the curb with scissors	Boy(x) & CuttingGrass(x) & ByCurb(x) & WithScissors(x)	A kid is cutting grass with scissors	exists x. (Kid(x) & CuttingGrass(x))	e	False	False
2145	The boy is cutting the grass by the curb with scissors	Boy(x) & CuttingGrass(x) & ByCurb(x) & WithScissors(x)	There is no boy cutting grass with scissors	not exists x. (Boy(x) & CuttingGrass(x) & WithScissors(x))	c	False	True
2146	A violin is being played by a man	exists x. exists y. (Violin(x) & Man(y) & Playing(y, x))	A man is playing a violin	exists x. (Man(x) & PlayingViolin(x))	e	False	False
2147	The baby is laughing and crawling	exists x. (Baby(x) & Laughing(x) & Crawling(x))	The baby is laughing and toddling	exists x. (Baby(x) -> (Laughing(x) & Toddling(x)))	n	False	False
2148	The baby is not laughing and crawling	not (Baby(x) & Laughing(x) & Crawling(x))	The baby is laughing and crawling	exists x. (Baby(x) & Laughing(x) & Crawling(x))	c	False	True
2149	A man is playing a violin	exists x. (Man(x) & PlayingViolin(x))	The baby is laughing and toddling	exists x. (Baby(x) -> (Laughing(x) & Toddling(x)))	n	False	False
2150	The baby is laughing and crawling	exists x. (Baby(x) & Laughing(x) & Crawling(x))	A violin is being played by a man	exists x. exists y. (Violin(x) & Man(y) & Playing(y, x))	n	False	False
2151	There is no man playing a keyboard	not exists x. (Man(x) & PlaysKeyboard(x))	A man is playing a harp	exists x. (Man(x) & PlayingHarp(x))	n	False	False
2152	A harp is being played by a man	exists x. exists y. (Harp(x) & Man(y) & Playing(y, x))	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	n	False	False
2153	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	There is no man playing a harp	not exists x. (Man(x) & PlaysHarp(x))	n	False	False
2154	A man is playing a harp	exists x. (Man(x) & PlayingHarp(x))	A man is playing a keyboard	exists x. (Man(x) & PlayingKeyboard(x))	n	False	False
2155	A man is cutting a big rope with a sword	exists x. exists y. exists z. (Man(x) & Rope(y) & Sword(z) & Cutting(x, y, z))	A man is cutting a thick rope with a sword	exists x. exists y. exists z. (Man(x) & ThickRope(y) & Sword(z) & Cutting(x, y, z))	n	False	False
2156	A man is cutting a big rope with a sword	exists x. exists y. exists z. (Man(x) & Rope(y) & Sword(z) & Cutting(x, y, z))	A man is cutting a rope with a sword	exists x. exists y. exists z. (Man(x) & Rope(y) & Sword(z) & Cutting(x, y, z))	e	True	False
2157	A man is cutting a thick rope with a sword	exists x. exists y. exists z. (Man(x) & ThickRope(y) & Sword(z) & Cutting(x, y, z))	A man is cutting a cord with a sword	exists x. exists y. exists z. (Man(x) & Cord(y) & Sword(z) & Cutting(x, y, z))	e	False	False
2158	A man is walking along a path through a wilderness	exists x. exists y. exists z. (Man(x) & Path(y) & Wilderness(z) & WalkingAlong(x, y) & LocatedIn(y, z))	A man is walking along a track through a wilderness	exists x. exists y. exists z. (Man(x) & Track(y) & Wilderness(z) & WalkingAlong(x, y) & In(x, z))	e	False	False
2159	There is no man walking along a path through a wilderness	not exists x. (Man(x) & Walking(x) & Path(x) & Through(x) & Wilderness(x))	A man is walking along a path through a wilderness	exists x. exists y. exists z. (Man(x) & Path(y) & Wilderness(z) & WalkingAlong(x, y) & LocatedIn(y, z))	c	False	False
2160	There is no man walking along a path through a wilderness	not exists x. (Man(x) & Walking(x) & Path(x) & Through(x) & Wilderness(x))	A man is peeling an onion	exists x. (Man(x) & PeelingOnion(x))	n	False	False
2161	A man is removing the peel of an onion	exists x. exists y. (Man(x) & Onion(y) -> RemovingPeel(x, y))	A man is walking along a path through a wilderness	exists x. exists y. exists z. (Man(x) & Path(y) & Wilderness(z) & WalkingAlong(x, y) & LocatedIn(y, z))	n	False	False
2162	A woman is slicing an onion	exists x. (Woman(x) & SlicingOnion(x))	A woman is slicing a potato	exists x. (Woman(x) & Slicing(x, potato))	n	False	False
2163	A man is carving a hole in a piece of wood	exists x. exists y. exists z. (Man(x) & Wood(y) & Hole(z) & Carving(x, y, z))	A man is drilling a hole in a piece of wood	exists x. exists y. exists z. (Man(x) & Wood(y) & Hole(z) & Drilling(x, y, z))	n	False	False
2164	A man is drilling a hole in a piece of wood	exists x. exists y. exists z. (Man(x) & Wood(y) & Hole(z) & Drilling(x, y, z))	A man is drilling a hole with a piece of wood	exists x. exists y. exists z. (Man(x) & Wood(y) & Hole(z) & Drilling(x, y, z))	n	True	False
2165	A man is drilling a hole in a piece of wood	exists x. exists y. exists z. (Man(x) & Wood(y) & Hole(z) & Drilling(x, y, z))	Someone is making a hole in a strip of wood with a drill	exists x. exists y. exists z. (Person(x) & Wood(y) & Drill(z) & MakesHoleIn(x, y, z))	e	False	False
2166	Nobody is drilling a hole in a strip of wood with a power drill	not exists x. (DrillingHole(x) & StripOfWood(x) & PowerDrill(x))	A man is drilling a hole in a piece of wood	exists x. exists y. exists z. (Man(x) & Wood(y) & Hole(z) & Drilling(x, y, z))	n	False	False
2167	A man is carving a hole in a piece of wood	exists x. exists y. exists z. (Man(x) & Wood(y) & Hole(z) & Carving(x, y, z))	Someone is drilling a hole in a strip of wood with a power drill	exists x.exists y.exists z. (Person(x) & Wood(y) & PowerDrill(z) & DrillingHoleIn(x, y, z))	n	False	False
2168	Someone is drilling a hole in a strip of wood with a power drill	exists x.exists y.exists z. (Person(x) & Wood(y) & PowerDrill(z) & DrillingHoleIn(x, y, z))	A man is closing a hole in a piece of wood	exists x. exists y. exists z. (Man(x) & Hole(y) & Wood(z) & Closing(x, y, z))	n	False	False
2169	A woman is not slicing an onion	exists x. (Woman(x) & not SlicingOnion(x))	A woman is slicing an onion	exists x. (Woman(x) & SlicingOnion(x))	c	False	False
2170	A woman is slicing garlic	exists x. (Woman(x) & SlicingGarlic(x))	A woman is not slicing garlic	not exists x. (Woman(x) & SlicingGarlic(x))	c	False	True
2171	A man is holding a small animal in one hand	exists x. exists y. (Man(x) & SmallAnimal(y) & Holding(x, y))	A man is holding an animal, which is small, in one hand	exists x. exists y. (Man(x) & Animal(y) & Small(y) & Holding(x, y))	e	False	False
2172	A man is holding a small animal in one hand	exists x. exists y. (Man(x) & SmallAnimal(y) & Holding(x, y))	A man is holding a big animal in one hand	exists x. exists y. (Man(x) & Animal(y) & Big(y) & Holding(x, y))	n	False	False
2173	A man is showing off a small monkey	exists x. exists y. (Man(x) & Monkey(y) & Small(y) & ShowsOff(x, y))	A man is exhibiting a small monkey	exists x. (Man(x) & SmallMonkey(x))	e	False	False
2174	A man is hiding a small monkey	exists x. exists y. (Man(x) & Monkey(y) & Hiding(x, y))	A man is showing off a small monkey	exists x. exists y. (Man(x) & Monkey(y) & Small(y) & ShowsOff(x, y))	n	False	False
2175	A man is holding a small animal in one hand	exists x. exists y. (Man(x) & SmallAnimal(y) & Holding(x, y))	A man is exhibiting a small monkey	exists x. (Man(x) & SmallMonkey(x))	n	False	False
2176	A man is holding a small animal in one hand	exists x. exists y. (Man(x) & SmallAnimal(y) & Holding(x, y))	A man is hiding a small monkey	exists x. exists y. (Man(x) & Monkey(y) & Hiding(x, y))	n	False	False
2177	A man is holding a small animal in one hand	exists x. exists y. (Man(x) & SmallAnimal(y) & Holding(x, y))	A man is showing off a small monkey	exists x. exists y. (Man(x) & Monkey(y) & Small(y) & ShowsOff(x, y))	n	False	False
2178	A group of boys is playing soccer on the beach	exists x.exists y.exists z. (Boy(x) & Boy(y) & Beach(z) & PlayingSoccer(x, y, z))	A group of men is playing with a ball on the beach	exists x. exists y. exists z. (Group(x) & Man(y) & Ball(z) & PlayingWith(y, z, x))	n	False	False
2179	A group of women is playing with a ball on the beach	exists x. exists y. exists z. (Woman(x) & Woman(y) & Ball(z) & PlayingWith(x, y, z) & OnBeach(z))	A group of boys is playing soccer on the beach	exists x.exists y.exists z. (Boy(x) & Boy(y) & Beach(z) & PlayingSoccer(x, y, z))	n	False	False
2180	A group of men is playing soccer on the beach	exists x. (Group(x) & Men(x) & PlayingSoccer(x) & OnBeach(x))	A group of boys is playing soccer on the seashore	exists x. (Group(x) & Boys(x) & PlayingSoccer(x) & On(x, seashore))	n	False	False
2181	A group of men is playing soccer on the beach	exists x. (Group(x) & Men(x) & PlayingSoccer(x) & OnBeach(x))	A group of boys is not playing soccer on the beach	not exists x. (Group(x) & Boys(x) & PlayingSoccer(x) & OnBeach(x))	n	False	False
2182	A man is cutting pieces of butter into a mixing bowl	exists x. exists y. exists z. (Man(x) & Butter(y) & MixingBowl(z) & CuttingInto(x, y, z))	A man is adding pieces of butter to a mixing bowl	exists x.exists y. (Man(x) & Butter(y) -> AddsToMixingBowl(x, y))	e	False	False
2183	A man is cutting pieces of butter into a mixing bowl	exists x. exists y. exists z. (Man(x) & Butter(y) & MixingBowl(z) & CuttingInto(x, y, z))	There is no man cutting pieces of butter into a mixing bowl	not exists x. (Man(x) & Cutting(x) & Butter(x) & MixingBowl(x))	c	False	False
2184	A man is adding pieces of butter to a mixing bowl	exists x.exists y. (Man(x) & Butter(y) -> AddsToMixingBowl(x, y))	Pieces of butter are being added to the stand mixer	exists x.exists y. (Butter(x) & StandMixer(y) -> BeingAddedTo(x, y))	n	False	False
2185	Pieces of butter are being added to the stand mixer	exists x.exists y. (Butter(x) & StandMixer(y) -> BeingAddedTo(x, y))	There is no man cutting pieces of butter into a mixing bowl	not exists x. (Man(x) & Cutting(x) & Butter(x) & MixingBowl(x))	n	False	False
2186	A person is kicking a monkey	exists x. exists y. (Person(x) & Monkey(y) & Kicking(x, y))	A monkey is kicking a person	exists x. exists y. (Monkey(x) & Person(y) & Kicks(x, y))	n	False	False
2187	A monkey is practicing martial arts	exists x. (Monkey(x) -> PracticingMartialArts(x))	There is no monkey practicing martial arts	not exists x. (Monkey(x) & PracticesMartialArts(x))	c	False	False
2188	A chimp is practicing martial arts	exists x. (Chimp(x) -> PracticingMartialArts(x))	A monkey is kicking a person	exists x. exists y. (Monkey(x) & Person(y) & Kicks(x, y))	n	False	False
2189	There is no monkey practicing martial arts	not exists x. (Monkey(x) & PracticesMartialArts(x))	A monkey is kicking a person	exists x. exists y. (Monkey(x) & Person(y) & Kicks(x, y))	n	False	False
2190	A monkey is practicing martial arts	exists x. (Monkey(x) -> PracticingMartialArts(x))	A person is kicking a monkey	exists x. exists y. (Person(x) & Monkey(y) & Kicking(x, y))	n	False	False
2191	A monkey is kicking a person	exists x. exists y. (Monkey(x) & Person(y) & Kicks(x, y))	A monkey is practicing martial arts	exists x. (Monkey(x) -> PracticingMartialArts(x))	n	False	False
2192	A man is fitting a silencer to a pistol	exists x. exists y. exists z. (Man(x) & Pistol(y) & Silencer(z) & Fits(x, z, y))	A man is fitting a silencer to a weapon	exists x. exists y. exists z. (Man(x) & Weapon(y) & Silencer(z) & Fits(x, z, y))	e	True	False
2193	A man is fixing a silencer to a gun	exists x. exists y. exists z. (Man(x) & Gun(y) & Silencer(z) & Fixing(x, z, y))	A man is fitting a silencer to a weapon	exists x. exists y. exists z. (Man(x) & Weapon(y) & Silencer(z) & Fits(x, z, y))	e	False	False
2194	There is no man fitting a silencer to a pistol	not exists x. (Man(x) & FitsSilencer(x, pistol))	A man is fixing a silencer to a gun	exists x. exists y. exists z. (Man(x) & Gun(y) & Silencer(z) & Fixing(x, z, y))	c	False	False
2195	A man is fitting a silencer to a pistol	exists x. exists y. exists z. (Man(x) & Pistol(y) & Silencer(z) & Fits(x, z, y))	A man is fixing a silencer to a gun	exists x. exists y. exists z. (Man(x) & Gun(y) & Silencer(z) & Fixing(x, z, y))	e	False	False
2196	A man on a motorcycle is riding on one wheel	exists x.exists y. (Man(x) & Motorcycle(y) & RidingOn(x, y) -> RidingOnOneWheel(x, y))	A man on a motorcycle is doing a trick	exists x.exists y. (Man(x) & Motorcycle(y) & Riding(x, y) -> DoingTrick(x))	e	False	False
2197	A person is performing acrobatics on a motorcycle	exists x. (Person(x) & PerformsAcrobatics(x) & On(x, motorcycle))	A person is performing tricks on a motorcycle	exists x.exists y. (Person(x) & Motorcycle(y) -> PerformsTricksOn(x, y))	e	False	False
2198	A person is performing tricks on a motorcycle	exists x.exists y. (Person(x) & Motorcycle(y) -> PerformsTricksOn(x, y))	The performer is tricking a person on a motorcycle	exists x.exists y.exists z. (Performer(x) & Person(y) & Motorcycle(z) -> TricksOn(x, y, z))	n	False	False
2199	A man on a motorcycle is riding on one wheel	exists x.exists y. (Man(x) & Motorcycle(y) & RidingOn(x, y) -> RidingOnOneWheel(x, y))	The performer is tricking a person on a motorcycle	exists x.exists y.exists z. (Performer(x) & Person(y) & Motorcycle(z) -> TricksOn(x, y, z))	n	False	False
2200	A man on a motorcycle is riding on one wheel	exists x.exists y. (Man(x) & Motorcycle(y) & RidingOn(x, y) -> RidingOnOneWheel(x, y))	A person is performing tricks on a motorcycle	exists x.exists y. (Person(x) & Motorcycle(y) -> PerformsTricksOn(x, y))	e	False	False
2201	A little girl is playing the violin on a beach	exists x. (LittleGirl(x) & Violin(x) & Playing(x) & On(x, beach))	There is no girl playing the violin on a beach	not exists x. (Girl(x) & ViolinPlayer(x) & Beach(x))	c	False	False
2202	The girl is sitting on the couch and is crocheting	exists x. (Girl(x) & SittingOnCouch(x) & Crocheting(x))	The girl is sitting on the sofa and crocheting	exists x. (Girl(x) & SittingOn(x, sofa) & Crocheting(x))	e	False	False
2203	The girl is standing on the couch and crocheting	exists x. (Girl(x) & StandingOnCouch(x) & Crocheting(x))	The girl is sitting on the couch and is crocheting	exists x. (Girl(x) & SittingOnCouch(x) & Crocheting(x))	n	False	False
2204	The violin is being played by a little girl on a beach	exists x. exists y. exists z. (Violin(x) & LittleGirl(y) & Beach(z) & Playing(y, x, z))	The girl is sitting on the couch and is crocheting	exists x. (Girl(x) & SittingOnCouch(x) & Crocheting(x))	n	False	False
2205	A man is dancing in the rain	exists x. (Man(x) & Dancing(x) & In(x, Rain))	A person is dancing in the rain	exists x. (Dancer(x) & DancingInRain(x))	e	False	False
2206	A man is sitting in the rain	exists x. (Man(x) & SittingInRain(x))	A man is dancing in the rain	exists x. (Man(x) & Dancing(x) & In(x, Rain))	n	False	False
2207	A man is singing into a microphone	exists x. exists y. (Man(x) & Microphone(y) & SingingInto(x, y))	A man is dancing in the rain	exists x. (Man(x) & Dancing(x) & In(x, Rain))	n	False	False
2208	The man is dropping sliced cucumbers into cold water	exists x. (Man(x) -> (DropsSlicedCucumbers(x) & IntoColdWater(x)))	The man is dropping sliced cucumbers into water	exists x. (Man(x) -> DropsSlicedCucumbersIntoWater(x))	e	False	False
2209	A man is cooking a snake	exists x. exists y. (Man(x) & Snake(y) & Cooking(x, y))	The man is dropping sliced cucumbers into cold water	exists x. (Man(x) -> (DropsSlicedCucumbers(x) & IntoColdWater(x)))	n	False	False
2210	A man is roasting a snake	exists x. exists y. (Man(x) & Snake(y) & Roasting(x, y))	The man is dropping sliced cucumbers into water	exists x. (Man(x) -> DropsSlicedCucumbersIntoWater(x))	n	False	False
2211	The man is dropping sliced cucumbers into water	exists x. (Man(x) -> DropsSlicedCucumbersIntoWater(x))	There is no man cooking a snake	not exists x. (Man(x) & Cooking(x, snake))	n	False	False
2212	A boy is playing guitar	exists x. (Boy(x) & PlayingGuitar(x))	A guitar is being played by a boy	exists x. exists y. (Guitar(x) & Boy(y) & Playing(y, x))	e	False	False
2213	A little girl is playing a guitar	exists x. (LittleGirl(x) & PlayingGuitar(x))	A little boy is playing a guitar	exists x. (LittleBoy(x) & PlayingGuitar(x))	n	False	False
2214	A young boy is playing a guitar	exists x. (YoungBoy(x) & PlayingGuitar(x))	A boy is playing guitar	exists x. (Boy(x) & PlayingGuitar(x))	e	False	False
2215	A little boy is playing a guitar	exists x. (LittleBoy(x) & PlayingGuitar(x))	A guitar is being played by a boy	exists x. exists y. (Guitar(x) & Boy(y) & Playing(y, x))	e	False	False
2216	A little boy is playing a guitar	exists x. (LittleBoy(x) & PlayingGuitar(x))	A boy is playing guitar	exists x. (Boy(x) & PlayingGuitar(x))	e	False	False
2217	A soda is being opened and drunk by a woman	exists x.exists y. (Soda(x) & Woman(y) & Opening(y, x) & Drinking(y, x))	A woman is opening a soda and drinking it	exists x. (Woman(x) & OpeningSoda(x) & DrinkingSoda(x))	e	False	False
2218	A woman is opening a soda and drinking it	exists x. (Woman(x) & OpeningSoda(x) & DrinkingSoda(x))	A man is opening a soda and drinking it	exists x. (Man(x) & OpeningSoda(x) & DrinkingSoda(x))	n	False	False
2219	A woman is riding on an elephant	exists x. exists y. (Woman(x) & Elephant(y) & RidingOn(x, y))	An elephant is being ridden by a woman	exists x. exists y. (Elephant(x) & Woman(y) & Riding(y, x))	e	False	False
2220	There is no woman riding on an elephant	not exists x. (Woman(x) & RidingOnElephant(x))	A woman is riding on an elephant	exists x. exists y. (Woman(x) & Elephant(y) & RidingOn(x, y))	c	False	False
2221	There is no woman riding on an elephant	not exists x. (Woman(x) & RidingOnElephant(x))	A woman is opening a soda and drinking it	exists x. (Woman(x) & OpeningSoda(x) & DrinkingSoda(x))	n	False	False
2222	A woman is riding on an elephant	exists x. exists y. (Woman(x) & Elephant(y) & RidingOn(x, y))	A man is opening a soda and drinking it	exists x. (Man(x) & OpeningSoda(x) & DrinkingSoda(x))	n	False	False
2223	A woman is opening a soda and drinking it	exists x. (Woman(x) & OpeningSoda(x) & DrinkingSoda(x))	A woman is riding on an elephant	exists x. exists y. (Woman(x) & Elephant(y) & RidingOn(x, y))	n	False	False
2224	A boy is playing a guitar	exists x. (Boy(x) & PlayingGuitar(x))	A kid is playing guitar	exists x. (Kid(x) & PlayingGuitar(x))	e	False	False
2225	There is no monkey pulling a dog's tail	not exists x. (Monkey(x) & PullingDogTail(x))	A monkey is teasing a dog at the zoo	exists x. exists y. (Monkey(x) & Dog(y) & Teasing(x, y) & AtZoo(x, y))	n	False	False
2226	There is no person slicing an onion	not exists x. (Person(x) & SlicingOnion(x))	A person is slicing an onion	exists x. (Person(x) & Slicing(x, Onion))	c	False	False
2227	A man is slicing a potato into pieces	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	There is no man slicing a potato into pieces	not exists x. (Man(x) & SlicingPotato(x))	c	False	False
2228	A man is cutting a potato into pieces	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	e	True	False
2229	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	There is no man slicing a potato into pieces	not exists x. (Man(x) & SlicingPotato(x))	c	False	False
2230	A man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	A man is slicing a potato into pieces	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	e	True	False
2231	A girl is filing her nails	exists x. (Girl(x) & FilingNails(x))	A girl is doing a manicure	exists x. (Girl(x) & DoingManicure(x))	n	False	False
2232	There is no girl filing her nails	not exists x. (Girl(x) & FilingNails(x))	A girl is filing her nails	exists x. (Girl(x) & FilingNails(x))	c	False	True
2233	A girl is styling her hair	exists x. (Girl(x) & StylingHair(x))	A girl is combing her hair	exists x. (Girl(x) & CombingHair(x))	n	False	False
2234	A girl is filing her nails	exists x. (Girl(x) & FilingNails(x))	A girl is combing her hair	exists x. (Girl(x) & CombingHair(x))	n	False	False
2235	A girl is messing up her hair	exists x. (Girl(x) & MessingUpHair(x))	A girl is filing her nails	exists x. (Girl(x) & FilingNails(x))	n	False	False
2236	There is no girl filing her nails	not exists x. (Girl(x) & FilingNails(x))	A girl is styling her hair	exists x. (Girl(x) & StylingHair(x))	n	False	False
2237	A girl is filing her nails	exists x. (Girl(x) & FilingNails(x))	A girl is styling her hair	exists x. (Girl(x) & StylingHair(x))	n	False	False
2238	A guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	A man is opening a box with a knife	exists x. exists y. exists z. (Man(x) & Box(y) & Knife(z) & OpensWith(x, y, z))	n	False	False
2239	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is opening a box with a knife	exists x. exists y. exists z. (Man(x) & Box(y) & Knife(z) & OpensWith(x, y, z))	n	False	False
2240	A man is playing an electronic keyboard	exists x. (Man(x) & PlayingElectronicKeyboard(x))	There is no man playing an electronic keyboard	not exists x. (Man(x) & PlaysElectronicKeyboard(x))	c	False	False
2241	A band is playing some instruments	exists x.exists y. (Band(x) & Instrument(y) & Playing(x, y))	There is no man playing an electronic keyboard	not exists x. (Man(x) & PlaysElectronicKeyboard(x))	n	False	False
2242	A man is not dancing	exists x. (Man(x) & not Dancing(x))	A man is dancing	exists x. (Dancer(x) & Man(x))	c	False	False
2243	A woman is exercising	exists x. (Woman(x) & Exercising(x))	A person is exercising	exists x. (Person(x) & Exercising(x))	e	True	False
2244	A person is exercising	exists x. (Person(x) & Exercising(x))	A man is dancing	exists x. (Dancer(x) & Man(x))	n	False	False
2245	A man is dancing	exists x. (Dancer(x) & Man(x))	There is no woman exercising	not exists x. (Woman(x) & Exercising(x))	n	False	False
2246	A woman is exercising	exists x. (Woman(x) & Exercising(x))	A man is dancing	exists x. (Dancer(x) & Man(x))	n	False	False
2247	A woman is cutting potatoes	exists x. (Woman(x) & CuttingPotatoes(x))	There is no woman cutting potatoes	not exists x. (Woman(x) & CuttingPotatoes(x))	c	False	True
2248	Carrots are being sliced by a woman	exists x. exists y. (Carrot(x) & Woman(y) & Slicing(y, x))	A woman is slicing carrots	exists x. (Woman(x) & SlicingCarrots(x))	e	False	False
2249	Carrots are being sliced by a woman	exists x. exists y. (Carrot(x) & Woman(y) & Slicing(y, x))	A woman is cutting potatoes	exists x. (Woman(x) & CuttingPotatoes(x))	n	False	False
2250	A woman is slicing potatoes	exists x. (Woman(x) & SlicingPotatoes(x))	A woman is slicing carrots	exists x. (Woman(x) & SlicingCarrots(x))	n	False	False
2251	A woman is slicing carrots	exists x. (Woman(x) & SlicingCarrots(x))	There is no woman cutting potatoes	not exists x. (Woman(x) & CuttingPotatoes(x))	n	False	False
2252	A man is mixing vegetables in a pot	exists x. exists y. exists z. (Man(x) & Pot(y) & Vegetables(z) & MixingIn(x, y, z))	Vegetables are being mixed in a pot by a man	exists x.exists y.exists z. (Vegetable(x) & Pot(y) & Man(z) -> MixedIn(x, y, z))	e	False	False
2253	Vegetables are being mixed in a pot by a man	exists x.exists y.exists z. (Vegetable(x) & Pot(y) & Man(z) -> MixedIn(x, y, z))	A person is stirring vegetables in a pot	exists x. (Person(x) & StirringVegetables(x))	e	False	False
2254	A man is doing pull-ups	exists x. (Man(x) & DoingPullUps(x))	A man is doing exercises	exists x. (Man(x) & DoingExercises(x))	e	False	False
2255	The man is doing exercises in a gym	exists x. exists y. (Man(x) & Gym(y) & ExercisingIn(x, y))	The man is exercising	exists x. (Man(x) & Exercising(x))	e	False	False
2256	The man is not exercising	not exists x. (Man(x) & Exercising(x))	The man is exercising	exists x. (Man(x) & Exercising(x))	c	False	True
2257	The man is not exercising	not exists x. (Man(x) & Exercising(x))	A man is doing pull-ups	exists x. (Man(x) & DoingPullUps(x))	c	False	False
2258	The man is exercising	exists x. (Man(x) & Exercising(x))	A man is doing exercises	exists x. (Man(x) & DoingExercises(x))	e	False	False
2259	The man is exercising	exists x. (Man(x) & Exercising(x))	There is no man doing pull-ups	not exists x. (Man(x) & DoingPullUps(x))	n	False	False
2260	A man is doing pull-ups	exists x. (Man(x) & DoingPullUps(x))	The man is exercising	exists x. (Man(x) & Exercising(x))	e	False	False
2261	A woman is being carried by a man	exists x. exists y. (Woman(x) & Man(y) & Carrying(y, x))	A man is carrying a woman	exists x. exists y. (Man(x) & Woman(y) & Carrying(x, y))	e	True	False
2262	There is no man sharpening a knife	not exists x. (Man(x) & Sharpening(x, y) & Knife(y))	A man is sharpening a knife	exists x. exists y. (Man(x) & Knife(y) & Sharpening(x, y))	c	False	True
2263	A woman is being carried by a man	exists x. exists y. (Woman(x) & Man(y) & Carrying(y, x))	A man is sharpening a knife	exists x. exists y. (Man(x) & Knife(y) & Sharpening(x, y))	n	False	False
2264	A man is sharpening a knife	exists x. exists y. (Man(x) & Knife(y) & Sharpening(x, y))	A man is carrying a woman	exists x. exists y. (Man(x) & Woman(y) & Carrying(x, y))	n	False	False
2265	A baby is not crawling happily	exists x. (Baby(x) & not CrawlingHappily(x))	A baby is crawling happily	exists x. (Baby(x) & Crawling(x) & Happy(x))	c	False	False
2266	A cat is walking on the parquet	exists x. (Cat(x) & WalkingOn(x, parquet))	A cat is walking on a hardwood floor	exists x. exists y. (Cat(x) & HardwoodFloor(y) & WalkingOn(x, y))	e	False	False
2267	A cat is walking on a hardwood floor	exists x. exists y. (Cat(x) & HardwoodFloor(y) & WalkingOn(x, y))	There is no cat walking on a hardwood floor	not exists x. (Cat(x) & WalkingOn(x, hardwood_floor))	c	False	False
2268	A baby is crawling happily	exists x. (Baby(x) & Crawling(x) & Happy(x))	A cat is walking on the parquet	exists x. (Cat(x) & WalkingOn(x, parquet))	n	False	False
2269	There is no cat walking on a hardwood floor	not exists x. (Cat(x) & WalkingOn(x, hardwood_floor))	A baby is crawling happily	exists x. (Baby(x) & Crawling(x) & Happy(x))	n	False	False
2270	A guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	e	False	False
2271	A man is singing and playing a guitar	exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	There is no man singing and playing a guitar	not exists x. (Man(x) & Singing(x) & PlayingGuitar(x))	c	False	True
2272	A person is cutting garlic into pieces with a knife	exists x. exists y. exists z. (Person(x) & Garlic(y) & Knife(z) -> Cutting(x, y, z))	A person is slicing garlic into pieces with a knife	exists x. (Person(x) & SlicingGarlic(x))	e	False	False
2273	A person is not cutting garlic into pieces with a knife	exists x. (Person(x) & not CuttingGarlicIntoPiecesWithKnife(x))	A person is cutting garlic into pieces with a knife	exists x. exists y. exists z. (Person(x) & Garlic(y) & Knife(z) -> Cutting(x, y, z))	c	False	False
2274	Someone is putting ingredients into a wok	exists x. (Person(x) & PuttingIngredientsIntoWok(x))	Someone is putting ingredients into a pan	exists x. (Person(x) & PuttingIngredientsIntoPan(x))	e	False	False
2275	Someone is putting ingredients into a pan	exists x. (Person(x) & PuttingIngredientsIntoPan(x))	A person is cutting garlic into pieces with a knife	exists x. exists y. exists z. (Person(x) & Garlic(y) & Knife(z) -> Cutting(x, y, z))	n	False	False
2276	A person is not cutting garlic into pieces with a knife	exists x. (Person(x) & not CuttingGarlicIntoPiecesWithKnife(x))	Someone is putting ingredients into a wok	exists x. (Person(x) & PuttingIngredientsIntoWok(x))	n	False	False
2277	A person is cutting garlic into pieces with a knife	exists x. exists y. exists z. (Person(x) & Garlic(y) & Knife(z) -> Cutting(x, y, z))	Someone is putting ingredients into a wok	exists x. (Person(x) & PuttingIngredientsIntoWok(x))	n	False	False
2278	The military officer is shouting at the recruits	exists x.exists y.exists z. (MilitaryOfficer(x) & Recruit(y) & Shouting(z) -> ShoutsAt(x, y, z))	The military officer is barking at the recruits	exists x.exists y. (MilitaryOfficer(x) & Recruit(y) -> BarksAt(x, y))	e	False	False
2279	The military officer is barking at the recruits	exists x.exists y. (MilitaryOfficer(x) & Recruit(y) -> BarksAt(x, y))	The military officer is not barking at the recruits	exists x.exists y. (MilitaryOfficer(x) & Recruit(y) -> not BarkingAt(x, y))	c	False	False
2280	An officer is talking to the recruits	exists x. exists y. (Officer(x) & Recruit(y) & TalkingTo(x, y))	The military officer is not barking at the recruits	exists x.exists y. (MilitaryOfficer(x) & Recruit(y) -> not BarkingAt(x, y))	n	False	False
2281	Recruits are talking to an officer	exists x.exists y. (Recruit(x) & Officer(y) -> TalkingTo(x, y))	The military officer is barking at the recruits	exists x.exists y. (MilitaryOfficer(x) & Recruit(y) -> BarksAt(x, y))	n	False	False
2282	A small tree is being eaten by a baby elephant	exists x.exists y. (SmallTree(x) & BabyElephant(y) & Eating(y, x))	A baby elephant is eating a small tree	exists x.exists y. (BabyElephant(x) & SmallTree(y) -> Eating(x, y))	e	True	False
2283	A baby elephant is not eating a small tree	exists x. exists y. (BabyElephant(x) & SmallTree(y) -> not Eating(x, y))	A little girl is peddling a scooter	exists x. exists y. (LittleGirl(x) & Scooter(y) & Peddling(x, y))	n	False	False
2284	A child is walking down the street and a jeep is pulling up	exists x. exists y. (Child(x) & Jeep(y) -> (WalkingDownStreet(x) & PullingUp(y)))	A man in a car is pulling up beside a woman who is walking along the street	exists x.exists y. (Man(x) & Car(x) & Woman(y) & Walking(y) -> PullsUpBeside(x, y))	n	False	False
2285	A child is walking down the street and a jeep is pulling up	exists x. exists y. (Child(x) & Jeep(y) -> (WalkingDownStreet(x) & PullingUp(y)))	A man in a car is pulling up beside a woman that is who along a road	exists x.exists y.exists z. (Man(x) & Car(x) & Woman(y) & Road(z) -> PullsUpBeside(x, y, z))	n	False	False
2286	A woman is slicing a fish	exists x. exists y. (Woman(x) & Fish(y) & Slicing(x, y))	Garlic is being chopped by a woman	exists x. exists y. (Garlic(x) & Woman(y) & Chopping(y, x))	n	False	False
2287	An onion is being chopped	exists x. (Onion(x) & BeingChopped(x))	An onion is being sliced	exists x. (Onion(x) & BeingSliced(x))	e	False	False
2288	An onion is being sliced	exists x. (Onion(x) & BeingSliced(x))	An onion is not being sliced	exists x. (Onion(x) -> not BeingSliced(x))	c	False	False
2289	An onion is being sliced	exists x. (Onion(x) & BeingSliced(x))	Someone is holding a small animal	exists x. (Person(x) & exists y. (SmallAnimal(y) & Holding(x, y)))	n	False	False
2290	An onion is not being sliced	exists x. (Onion(x) -> not BeingSliced(x))	Someone is holding a hedgehog	exists x. (Hedgehog(x) & HeldBy(x))	n	False	False
2291	An onion is being sliced	exists x. (Onion(x) & BeingSliced(x))	Someone is holding a hedgehog	exists x. (Hedgehog(x) & HeldBy(x))	n	False	False
2292	A woman is falling off a horse	exists x. (Woman(x) & FallingOffHorse(x))	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	n	False	False
2293	A woman is falling off a horse	exists x. (Woman(x) & FallingOffHorse(x))	A woman is frying something	exists x. (Woman(x) & Frying(x))	n	False	False
2294	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	Something is being fried by a woman	exists x.exists y. (Woman(y) & BeingFried(x, y))	n	False	False
2295	There is no woman frying something	not exists x. (Woman(x) & Frying(x))	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	n	False	False
2296	A person is peeling a banana	exists x. (Person(x) & PeelingBanana(x))	A person is not peeling a banana	not exists x. (Person(x) & PeelingBanana(x))	c	False	True
2297	A banana is being peeled by a person	exists x. exists y. (Banana(x) & Person(y) & Peeling(y, x))	A man is reading an email	exists x. exists y. (Man(x) & Email(y) & Reading(x, y))	n	False	False
2298	A person is not peeling a banana	not exists x. (Person(x) & PeelingBanana(x))	A man is reading an email	exists x. exists y. (Man(x) & Email(y) & Reading(x, y))	n	False	False
2299	A big cat is opening a drawer made of plastic with its paws and is jumping inside	exists x.exists y.exists z. (BigCat(x) & Drawer(y) & Plastic(z) & MadeOf(y, z) & OpensWithPaws(x, y) -> JumpsInside(x, y))	A big cat is opening a plastic drawer with its paws and is jumping inside	exists x.exists y.exists z. (BigCat(x) & PlasticDrawer(y) & Paws(x) & JumpingInside(z) -> OpensWithPawsAndJumps(x, y, z))	e	False	False
2300	A dog is opening a drawer and climbing inside	exists x. (Dog(x) -> (OpeningDrawer(x) & ClimbingInside(x)))	A big cat is opening a plastic drawer with its paws and is jumping inside	exists x.exists y.exists z. (BigCat(x) & PlasticDrawer(y) & Paws(x) & JumpingInside(z) -> OpensWithPawsAndJumps(x, y, z))	n	False	False
2301	A small cat is opening a plastic drawer with its paws and jumping inside	exists x.exists y.exists z. (SmallCat(x) & PlasticDrawer(y) & JumpingInside(z) -> (OpeningWithPaws(x, y) & JumpingInside(z)))	A cat is opening a drawer and climbing inside	exists x.exists y. (Cat(x) & Drawer(y) -> (Opening(x, y) & ClimbingInside(x, y)))	e	False	False
2302	A man is cutting an onion	exists x. exists y. (Man(x) & Onion(y) & Cutting(x, y))	A man is chopping an onion	exists x. exists y. (Man(x) & Onion(y) & Chopping(x, y))	e	False	False
2303	There is no man cutting an onion	not exists x. (Man(x) & CuttingOnion(x))	A man is cutting an onion	exists x. exists y. (Man(x) & Onion(y) & Cutting(x, y))	c	False	False
2304	A man is cutting an onion	exists x. exists y. (Man(x) & Onion(y) & Cutting(x, y))	There is no woman slicing an onion	not exists x. (Woman(x) & SlicingOnion(x))	n	False	False
2305	A woman is slicing an onion	exists x. (Woman(x) & SlicingOnion(x))	A man is cutting an onion	exists x. exists y. (Man(x) & Onion(y) & Cutting(x, y))	n	False	False
2306	A woman is painting a man's face	exists x. exists y. (Woman(x) & Man(y) & Painting(x, y))	A man is painting a woman's face	exists x. exists y. (Man(x) & Woman(y) & Painting(x, y))	n	False	False
2307	Makeup is being put on the man by the woman	exists x.exists y.exists z. (Makeup(x) & Man(y) & Woman(z) -> PutOn(y, x, z))	The woman is putting makeup on the man	exists x.exists y. (Woman(x) & Man(y) -> PuttingMakeupOn(x, y))	e	False	False
2308	The woman is not putting makeup on the man	not exists x. (Woman(x) & Man(y) & Makeup(z) & Putting(x, z, y))	The woman is putting makeup on the man	exists x.exists y. (Woman(x) & Man(y) -> PuttingMakeupOn(x, y))	c	False	False
2309	The man is speaking on the phone	exists x. (Man(x) & SpeakingOnPhone(x))	The man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	e	False	False
2310	The man is not talking on the phone	not TalkingOnPhone(man)	The man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	c	False	False
2311	The man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	The man isn't talking on the telephone	not exists x. (Man(x) & TalkingOnTelephone(x))	c	False	False
2312	The man is talking about the telephone	exists x. (Man(x) -> exists y. (Telephone(y) & TalkingAbout(x, y)))	The man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	n	False	False
2313	The man is talking on the telephone	exists x. (Man(x) & TalkingOnTelephone(x))	The man is speaking on the phone	exists x. (Man(x) & SpeakingOnPhone(x))	e	False	False
2314	The man is talking on the telephone	exists x. (Man(x) & TalkingOnTelephone(x))	The man is talking on the phone	exists x. (Man(x) & TalkingOnPhone(x))	e	False	False
2315	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	An onion is being cut by a woman	exists x. exists y. (Onion(x) & Woman(y) & Cutting(y, x))	e	False	False
2316	A woman is cutting an onion	exists x. (Woman(x) & CuttingOnion(x))	There is no woman cutting an onion	not exists x. (Woman(x) & CuttingOnion(x))	c	False	True
2317	A man is cutting onions	exists x. (Man(x) & CuttingOnions(x))	An onion is being cut by a woman	exists x. exists y. (Onion(x) & Woman(y) & Cutting(y, x))	n	False	False
2318	There is no woman cutting an onion	not exists x. (Woman(x) & CuttingOnion(x))	A man is cutting onions	exists x. (Man(x) & CuttingOnions(x))	n	False	False
2319	An onion is being cut by a man	exists x.exists y. (Onion(x) & Man(y) & Cutting(y, x))	A man is opening a door	exists x. (Man(x) & OpeningDoor(x))	n	False	False
2320	A man is not cutting an onion	exists x. (Man(x) & not CuttingOnion(x))	A man is opening a door	exists x. (Man(x) & OpeningDoor(x))	n	False	False
2321	A potato is being cut by a man	exists x.exists y. (Potato(x) & Man(y) & Cutting(y, x))	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	e	True	False
2322	A man is chopping a potato	exists x. exists y. (Man(x) & Potato(y) & Chopping(x, y))	A man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	e	False	False
2323	A man is chopping a potato	exists x. exists y. (Man(x) & Potato(y) & Chopping(x, y))	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	e	False	False
2324	There is no man slicing a potato	not exists x. (Man(x) & Slicing(x, potato))	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	c	False	False
2325	A potato is being cut by a man	exists x.exists y. (Potato(x) & Man(y) & Cutting(y, x))	A man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	e	False	False
2326	A man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	A man is cutting a potato	exists x. exists y. (Man(x) & Potato(y) & Cutting(x, y))	e	False	False
2327	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	The guitar is being played by a man	exists x. exists y. (Guitar(x) & Man(y) & Playing(y, x))	e	False	False
2328	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is not playing the guitar	exists x. (Man(x) -> not PlayingGuitar(x))	c	False	False
2329	A woman is frying something in a pan	exists x. (Woman(x) & Frying(x, pan))	A woman is cooking something in a pan	exists x. exists y. (Woman(x) & Pan(y) & CookingIn(x, y))	e	False	False
2330	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	A woman is cooking something in a pan	exists x. exists y. (Woman(x) & Pan(y) & CookingIn(x, y))	n	False	False
2331	There is no woman frying something in a pan	not exists x. (Woman(x) & Frying(x, y) & Pan(y))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2332	A man is playing the piano	exists x. (Man(x) & PlayingPiano(x))	The piano is being played by a man	exists x. exists y. (Piano(x) & Man(y) & Playing(y, x))	e	False	False
2333	A man is playing the piano	exists x. (Man(x) & PlayingPiano(x))	There is no man playing the piano	not exists x. (Man(x) & PlaysPiano(x))	c	False	False
2334	A woman is playing the violin	exists x. (Woman(x) & PlayingViolin(x))	The violin is being played by a woman	exists x. exists y. (Violin(x) & Woman(y) & Playing(y, x))	e	False	False
2335	A man is fishing in the river	exists x. (Man(x) & Fishing(x) & In(x, river))	A man is fishing in the stream	exists x. (Man(x) & Fishing(x) & InStream(x))	n	False	False
2336	A man is singing and standing on the sidewalk	exists x. (Man(x) & Singing(x) & StandingOnSidewalk(x))	A man is singing and walking down the sidewalk	exists x. (Man(x) & Singing(x) & Walking(x) & DownSidewalk(x))	n	False	False
2337	A man is singing and walking down the road	exists x. (Man(x) & Singing(x) & WalkingDownRoad(x))	A man is fishing in the river	exists x. (Man(x) & Fishing(x) & In(x, river))	n	False	False
2338	A man is singing and walking down the sidewalk	exists x. (Man(x) & Singing(x) & Walking(x) & DownSidewalk(x))	A man is fishing in the stream	exists x. (Man(x) & Fishing(x) & InStream(x))	n	False	False
2339	A man is loading a rifle with bullets	exists x.exists y.exists z. (Man(x) & Rifle(y) & Bullet(z) -> LoadsWith(x, y, z))	A man is loading a weapon with bullets	exists x.exists y.exists z. (Man(x) & Weapon(y) & Bullets(z) -> LoadsWith(x, y, z))	e	False	False
2340	A man is loading a rifle with bullets	exists x.exists y.exists z. (Man(x) & Rifle(y) & Bullet(z) -> LoadsWith(x, y, z))	There is no man loading a rifle with bullets	not exists x. (Man(x) & LoadingRifle(x) & WithBullets(x))	c	False	False
2341	A woman is eating a piece of meat	exists x. exists y. (Woman(x) & Meat(y) & Eating(x, y))	A man is loading a rifle with bullets	exists x.exists y.exists z. (Man(x) & Rifle(y) & Bullet(z) -> LoadsWith(x, y, z))	n	False	False
2342	A man is loading a weapon with bullets	exists x.exists y.exists z. (Man(x) & Weapon(y) & Bullets(z) -> LoadsWith(x, y, z))	A woman is seasoning a piece of meat	exists x. exists y. (Woman(x) & Meat(y) & Seasoning(x, y))	n	False	False
2343	A man is loading a rifle with bullets	exists x.exists y.exists z. (Man(x) & Rifle(y) & Bullet(z) -> LoadsWith(x, y, z))	A woman is seasoning a piece of meat	exists x. exists y. (Woman(x) & Meat(y) & Seasoning(x, y))	n	False	False
2344	A chef is preparing some food	exists x. exists y. (Chef(x) & Food(y) & Preparing(x, y))	A chef is discarding some food	exists x. (Chef(x) & DiscardingFood(x))	n	False	False
2345	A chef is preparing a meal	exists x. exists y. (Chef(x) & Meal(y) & Preparing(x, y))	A chef is cooking a meal	exists x. exists y. (Chef(x) & Meal(y) & Cooking(x, y))	e	False	False
2346	A chef is cooking a meal	exists x. exists y. (Chef(x) & Meal(y) & Cooking(x, y))	A chef is preparing some food	exists x. exists y. (Chef(x) & Food(y) & Preparing(x, y))	e	False	False
2347	A chef is preparing a meal	exists x. exists y. (Chef(x) & Meal(y) & Preparing(x, y))	Some food is being prepared by a chef	exists x.exists y. (Food(x) & Chef(y) & Preparing(y, x))	e	True	False
2348	A man is riding a water toy in the water	exists x. exists y. (Man(x) & WaterToy(y) & RidingInWater(x, y))	A man is playing with a water toy in the water	exists x.exists y. (Man(x) & WaterToy(y) -> PlayingWithInWater(x, y))	e	False	False
2349	A man is riding a water toy in the water	exists x. exists y. (Man(x) & WaterToy(y) & RidingInWater(x, y))	There is no man riding a water toy in the water	not exists x. (Man(x) & RidingWaterToy(x))	c	False	False
2350	Two sumo ringers are fighting	exists x. exists y. (SumoRinger(x) & SumoRinger(y) & Fighting(x, y))	There is no man riding a water toy in the water	not exists x. (Man(x) & RidingWaterToy(x))	n	False	False
2351	A person is playing a piano	exists x. (Person(x) & PlayingPiano(x))	A piano is being played by a person	exists x.exists y. (Piano(x) & Person(y) -> Playing(y, x))	e	False	False
2352	A piano is being played by a person	exists x.exists y. (Piano(x) & Person(y) -> Playing(y, x))	A person is slicing a potato	exists x. (Person(x) & Slicing(x, potato))	n	False	False
2353	A person is slicing a potato	exists x. (Person(x) & Slicing(x, potato))	A person is playing a piano	exists x. (Person(x) & PlayingPiano(x))	n	False	False
2354	A man is sprinkling shredded cheese on a pizza	exists x. exists y. exists z. (Man(x) & ShreddedCheese(y) & Pizza(z) & Sprinkling(x, y, z))	A man is sprinkling cheese on a pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & SprinklingOn(x, y, z))	e	False	False
2355	A man is putting seasoning on a pizza	exists x. exists y. exists z. (Man(x) & Pizza(y) & Seasoning(z) & PutsOn(x, y, z))	A man is putting some cheese on a pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & PutsOn(x, y, z))	n	False	False
2356	A man is doing a card trick	exists x. (Man(x) & DoingCardTrick(x))	A man is doing a magic trick	exists x. (Man(x) & DoingMagicTrick(x))	n	False	False
2357	A man is having fun with water	exists x. (Man(x) & HavingFunWithWater(x))	A man is playing with water	exists x. (Man(x) & PlayingWithWater(x))	e	False	False
2358	A man is not playing with water	exists x. (Man(x) -> not PlayingWithWater(x))	A man is doing a card trick	exists x. (Man(x) & DoingCardTrick(x))	n	False	False
2359	A man is playing with water	exists x. (Man(x) & PlayingWithWater(x))	A man is doing a magic trick	exists x. (Man(x) & DoingMagicTrick(x))	n	False	False
2360	A man is doing a card trick	exists x. (Man(x) & DoingCardTrick(x))	A man is playing with water	exists x. (Man(x) & PlayingWithWater(x))	n	False	False
2361	A lemur is hanging on a cord	exists x. exists y. (Lemur(x) & Cord(y) -> HangingOn(x, y))	There is no lemur hanging on a cord	not exists x. (Lemur(x) & HangingOnCord(x))	c	False	False
2362	A lemur is hanging on a rope	exists x. exists y. (Lemur(x) & Rope(y) & HangingOn(x, y))	A man is buttering a piece of bread	exists x. exists y. (Man(x) & Bread(y) & Buttering(x, y))	n	False	False
2363	There is no lemur hanging on a cord	not exists x. (Lemur(x) & HangingOnCord(x))	A man is buttering a piece of bread	exists x. exists y. (Man(x) & Bread(y) & Buttering(x, y))	n	False	False
2364	A woman is putting a baby in a waste bin	exists x. exists y. exists z. (Woman(x) & Baby(y) & WasteBin(z) & PutsIn(x, y, z))	A woman is putting a child in a waste bin	exists x. exists y. (Woman(x) & Child(y) & WasteBin(z) & PutsIn(x, y, z))	e	False	False
2365	There is no woman putting a child in a waste bin	not exists x. (Woman(x) & PuttingChildInWasteBin(x))	A woman is putting a baby in a waste bin	exists x. exists y. exists z. (Woman(x) & Baby(y) & WasteBin(z) & PutsIn(x, y, z))	c	False	False
2366	The woman is poking holes in the potato	exists x. (Woman(x) & PokingHolesIn(x, potato))	The woman is poking a potato	exists x. (Woman(x) & Poking(x, potato))	e	False	False
2367	The woman is poking a potato	exists x. (Woman(x) & Poking(x, potato))	The woman is not poking holes in the potato	not exists x. (Woman(x) & PokingHolesInPotato(x))	c	False	False
2368	The woman is poking a potato	exists x. (Woman(x) & Poking(x, potato))	A woman is putting a child in a waste bin	exists x. exists y. (Woman(x) & Child(y) & WasteBin(z) & PutsIn(x, y, z))	n	False	False
2369	The woman is poking a potato	exists x. (Woman(x) & Poking(x, potato))	A woman is putting a baby in a waste bin	exists x. exists y. exists z. (Woman(x) & Baby(y) & WasteBin(z) & PutsIn(x, y, z))	n	False	False
2370	A man is pouring cleaner into the sink	exists x. (Man(x) & PouringCleanerIntoSink(x))	A man is cleaning the sink	exists x. (Man(x) & CleaningSink(x))	e	False	False
2371	The man is not playing the drums	not exists x. (Man(x) & Drums(x))	The man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	c	False	False
2372	The man is not playing the drums	not exists x. (Man(x) & Drums(x))	A man is pouring cleaner into the sink	exists x. (Man(x) & PouringCleanerIntoSink(x))	n	False	False
2373	There is no man pouring cleaner into the sink	not exists x. (Man(x) & PouringCleaner(x, sink))	The man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	n	False	False
2374	The man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	A man is pouring cleaner into the sink	exists x. (Man(x) & PouringCleanerIntoSink(x))	n	False	False
2375	A woman is deep frying food	exists x. (Woman(x) & DeepFryingFood(x))	Food is being deep fried by a woman	exists x. exists y. (Food(x) & Woman(y) & DeepFrying(y, x))	e	False	False
2376	A woman is not frying some food	exists x. (Woman(x) & not FryingFood(x))	A woman is deep frying food	exists x. (Woman(x) & DeepFryingFood(x))	c	False	False
2377	Food is being deep fried by a woman	exists x. exists y. (Food(x) & Woman(y) & DeepFrying(y, x))	A woman is frying some food	exists x. (Woman(x) & FryingFood(x))	e	False	False
2378	A woman is frying some food	exists x. (Woman(x) & FryingFood(x))	There is no woman deep frying food	not exists x. (Woman(x) & DeepFrying(x))	c	False	False
2379	A woman is deep frying food	exists x. (Woman(x) & DeepFryingFood(x))	A woman is frying some food	exists x. (Woman(x) & FryingFood(x))	e	False	False
2380	A man is petting two dogs	exists x. exists y. exists z. (Man(x) & Dog(y) & Dog(z) & Petting(x, y) & Petting(x, z))	Two dogs are being petted by a man	exists x.exists y.exists z. (Dog(x) & Dog(y) & Man(z) & Pets(z, x) & Pets(z, y))	e	False	False
2381	A man is petting two cats	exists x. exists y. exists z. (Man(x) & Cat(y) & Cat(z) & Pets(x, y) & Pets(x, z))	A man is petting two dogs	exists x. exists y. exists z. (Man(x) & Dog(y) & Dog(z) & Petting(x, y) & Petting(x, z))	n	False	False
2382	A woman is pouring eggs into a frying pan	exists x. (Woman(x) & PouringEggs(x))	A woman is pouring eggs into a pan	exists x. exists y. exists z. (Woman(x) & Egg(y) & Pan(z) & PouringInto(x, y, z))	e	False	False
2383	A man is petting two dogs	exists x. exists y. exists z. (Man(x) & Dog(y) & Dog(z) & Petting(x, y) & Petting(x, z))	A woman is removing eggs from a frying pan	exists x. (Woman(x) -> RemovingEggsFromFryingPan(x))	n	False	False
2384	A woman is pouring eggs into a frying pan	exists x. (Woman(x) & PouringEggs(x))	A man is petting two cats	exists x. exists y. exists z. (Man(x) & Cat(y) & Cat(z) & Pets(x, y) & Pets(x, z))	n	False	False
2385	A baby is talking	exists x. (Baby(x) & Talking(x))	A child is talking	exists x. (Child(x) & Talking(x))	e	False	False
2386	There is no baby talking	not exists x. (Baby(x) & Talking(x))	A baby is talking	exists x. (Baby(x) & Talking(x))	c	False	True
2387	A boy is saying a word	exists x. exists y. (Boy(x) & Word(y) & Says(x, y))	A boy is saying something	exists x. (Boy(x) & SaysSomething(x))	e	False	False
2388	A baby is talking	exists x. (Baby(x) & Talking(x))	A boy is saying something	exists x. (Boy(x) & SaysSomething(x))	n	False	False
2389	A boy is saying a word	exists x. exists y. (Boy(x) & Word(y) & Says(x, y))	A baby is talking	exists x. (Baby(x) & Talking(x))	n	False	False
2390	A woman is pulling some sticky goo out of a bowl	exists x. exists y. exists z. (Woman(x) & StickyGoo(y) & Bowl(z) & PullingOutOf(x, y, z))	A woman is putting some sticky goo in a bowl	exists x. exists y. exists z. (Woman(x) & StickyGoo(y) & Bowl(z) & PuttingIn(x, y, z))	n	False	False
2391	A woman is pulling some sticky goo out of a bowl	exists x. exists y. exists z. (Woman(x) & StickyGoo(y) & Bowl(z) & PullingOutOf(x, y, z))	Pasta is being put into a dish by a woman	exists x.exists y.exists z. (Pasta(x) & Dish(y) & Woman(z) -> PuttingInto(z, x, y))	n	False	False
2392	The woman is putting pasta into a dish	exists x.exists y. (Woman(x) & Pasta(y) -> PuttingIntoDish(x, y))	Some sticky goo is being pulled out of a bowl by a woman	exists x.exists y.exists z. (StickyGoo(x) & Woman(y) & Bowl(z) & PullingOutOf(x, y, z))	n	False	False
2393	The woman is putting pasta into a dish	exists x.exists y. (Woman(x) & Pasta(y) -> PuttingIntoDish(x, y))	A woman is pulling some sticky goo out of a bowl	exists x. exists y. exists z. (Woman(x) & StickyGoo(y) & Bowl(z) & PullingOutOf(x, y, z))	n	False	False
2394	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	A man is riding a motorbike	exists x. exists y. (Man(x) & Motorbike(y) & Riding(x, y))	e	False	False
2395	There is no man riding a motorcycle	not exists x. (Man(x) & RidingMotorcycle(x))	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	c	False	False
2396	The men are not playing soccer	not exists x. (Man(x) & PlayingSoccer(x))	The men are playing soccer	exists x. (Man(x) -> PlayingSoccer(x))	c	False	False
2397	The men are playing with a ball	exists x.exists y. (Man(x) & Ball(y) -> PlayingWith(x, y))	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	n	False	False
2398	There is no man riding a motorcycle	not exists x. (Man(x) & RidingMotorcycle(x))	The men are playing soccer	exists x. (Man(x) -> PlayingSoccer(x))	n	False	False
2399	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	The men are playing soccer	exists x. (Man(x) -> PlayingSoccer(x))	n	False	False
2400	A cat is looking at a store counter	exists x. exists y. (Cat(x) & StoreCounter(y) & LookingAt(x, y))	A dog is looking at a store counter	exists x. exists y. (Dog(x) & StoreCounter(y) & LookingAt(x, y))	n	False	False
2401	A cat is looking at a store counter	exists x. exists y. (Cat(x) & StoreCounter(y) & LookingAt(x, y))	A dog is looking around	exists x. (Dog(x) & LookingAround(x))	n	False	False
2402	A tiger cub is roaring	exists x. (TigerCub(x) -> Roaring(x))	A tiger cub is making a sound	exists x. (TigerCub(x) & MakingSound(x))	e	False	False
2403	A tiger cub is making a sound	exists x. (TigerCub(x) & MakingSound(x))	There is no tiger cub making a sound	not exists x. (TigerCub(x) & MakesSound(x))	c	False	False
2404	A tiger is walking around	exists x. (Tiger(x) & Walking(x))	A tiger is strolling around	exists x. (Tiger(x) & Strolling(x))	e	False	False
2405	A tiger cub is making a sound	exists x. (TigerCub(x) & MakingSound(x))	A tiger is not walking around	exists x. (Tiger(x) -> not WalkingAround(x))	n	False	False
2406	There is no tiger cub making a sound	not exists x. (TigerCub(x) & MakesSound(x))	A tiger is walking around	exists x. (Tiger(x) & Walking(x))	n	False	False
2407	A woman is frying meat	exists x. (Woman(x) & FryingMeat(x))	A woman is frying food	exists x. (Woman(x) & FryingFood(x))	e	False	False
2408	A woman is placing food in a pot of hot water	exists x. (Woman(x) -> PlacesFoodInHotWater(x))	A woman is placing food in a pot of cold water	exists x. (Woman(x) -> PlacesFoodInColdWater(x))	c	False	False
2409	A woman is frying meat	exists x. (Woman(x) & FryingMeat(x))	A woman is cooking food in a pot of hot water	exists x. exists y. exists z. (Woman(x) & Pot(y) & HotWater(z) & CookingIn(x, y, z))	n	False	False
2410	A woman is frying food	exists x. (Woman(x) & FryingFood(x))	A woman is placing food in a pot of hot water	exists x. (Woman(x) -> PlacesFoodInHotWater(x))	n	False	False
2411	A woman is frying meat	exists x. (Woman(x) & FryingMeat(x))	A woman is placing food in a pot of hot water	exists x. (Woman(x) -> PlacesFoodInHotWater(x))	n	False	False
2412	Someone is playing with a frog	exists x.exists y. (Person(x) & Frog(y) & PlayingWith(x, y))	A man is playing the trumpet	exists x. (Man(x) & PlayingTrumpet(x))	n	False	False
2413	Someone is playing with a toad	exists x.exists y. (Person(x) & Toad(y) & PlayingWith(x, y))	The trumpet is being played by a man	exists x. (Trumpet(x) & Man(y) & Playing(y, x))	n	False	False
2414	A horse is being ridden by a man	exists x.exists y. (Horse(x) & Man(y) & Riding(y, x))	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	e	True	False
2415	The person is riding the horse	exists x. exists y. (Person(x) & Horse(y) & Riding(x, y))	The person is riding the animal	exists x. exists y. (Person(x) & Animal(y) & Riding(x, y))	e	True	False
2416	A man is riding a horse	exists x. exists y. (Man(x) & Horse(y) & Riding(x, y))	The person is riding the animal	exists x. exists y. (Person(x) & Animal(y) & Riding(x, y))	e	True	False
2417	A person is not folding a piece of paper	not exists x. (Person(x) & FoldingPaper(x))	A person is folding a piece of paper	exists x. (Person(x) & FoldingPaper(x))	c	False	True
2418	Somebody is folding a piece of paper	exists x. (Folding(x, Paper))	A person is folding a piece of paper	exists x. (Person(x) & FoldingPaper(x))	e	False	False
2419	Someone is folding a piece of paper	exists x. (Folding(x, Paper))	A person is folding a sheet	exists x. (Person(x) & FoldingSheet(x))	n	False	False
2420	Someone is folding a piece of paper	exists x. (Folding(x, Paper))	A person is not folding a piece of paper	not exists x. (Person(x) & FoldingPaper(x))	c	False	False
2421	A person is folding a piece of paper	exists x. (Person(x) & FoldingPaper(x))	Someone is folding a piece of paper	exists x. (Folding(x, Paper))	e	False	False
2422	A girl is using sign language	exists x. (Girl(x) & UsingSignLanguage(x))	A girl is communicating with sign language	exists x. (Girl(x) -> CommunicatingWithSignLanguage(x))	e	False	False
2423	There is no girl communicating with sign language	not exists x. (Girl(x) & CommunicatesWithSignLanguage(x))	A girl is communicating with sign language	exists x. (Girl(x) -> CommunicatingWithSignLanguage(x))	c	False	False
2424	A young girl is using sign language	exists x. (YoungGirl(x) & UsingSignLanguage(x))	Sign language is being used by a young girl	exists x. (SignLanguage(x) & YoungGirl(x) & Uses(x))	e	False	False
2425	A young girl is using sign language	exists x. (YoungGirl(x) & UsingSignLanguage(x))	A girl is using sign language	exists x. (Girl(x) & UsingSignLanguage(x))	e	False	False
2426	A young girl is using sign language	exists x. (YoungGirl(x) & UsingSignLanguage(x))	There is no girl communicating with sign language	not exists x. (Girl(x) & CommunicatesWithSignLanguage(x))	c	False	False
2427	A girl is communicating with sign language	exists x. (Girl(x) -> CommunicatingWithSignLanguage(x))	A young girl is using sign language	exists x. (YoungGirl(x) & UsingSignLanguage(x))	e	False	False
2428	A rabbit is playing with a toy rabbit	exists x.exists y. (Rabbit(x) & ToyRabbit(y) -> PlayingWith(x, y))	A rabbit is playing with a toy	exists x. exists y. (Rabbit(x) & Toy(y) & PlayingWith(x, y))	e	False	False
2429	There is no rabbit playing with a toy rabbit	not exists x. (Rabbit(x) & ToyRabbit(y) & PlaysWith(x, y))	A rabbit is playing with a toy rabbit	exists x.exists y. (Rabbit(x) & ToyRabbit(y) -> PlayingWith(x, y))	c	False	False
2430	A bunny is playing with a stuffed bunny	exists x.exists y. (Bunny(x) & StuffedBunny(y) -> PlaysWith(x, y))	A rabbit is playing with a toy	exists x. exists y. (Rabbit(x) & Toy(y) & PlayingWith(x, y))	e	False	False
2431	There is no rabbit playing with a toy rabbit	not exists x. (Rabbit(x) & ToyRabbit(y) & PlaysWith(x, y))	A bunny is playing with a stuffed bunny	exists x.exists y. (Bunny(x) & StuffedBunny(y) -> PlaysWith(x, y))	c	False	False
2432	A rabbit is playing with a toy rabbit	exists x.exists y. (Rabbit(x) & ToyRabbit(y) -> PlayingWith(x, y))	There is no bunny playing with a stuffed bunny	not exists x. (Bunny(x) & PlayingWith(x, StuffedBunny))	c	False	False
2433	A bunny is playing with a stuffed bunny	exists x.exists y. (Bunny(x) & StuffedBunny(y) -> PlaysWith(x, y))	A rabbit is playing with a toy rabbit	exists x.exists y. (Rabbit(x) & ToyRabbit(y) -> PlayingWith(x, y))	e	False	False
2434	A man is jumping rope outside	exists x. (Man(x) & JumpingRope(x))	A woman is jumping rope outside	exists x. (Woman(x) & JumpingRope(x) & Outside(x))	n	False	False
2435	A woman is slicing a cucumber	exists x. exists y. (Woman(x) & Cucumber(y) & Slicing(x, y))	A person is slicing a cucumber	exists x. (Person(x) & Slicing(x, cucumber))	e	False	False
2436	A man is jumping rope outside	exists x. (Man(x) & JumpingRope(x))	A person is slicing a cucumber	exists x. (Person(x) & Slicing(x, cucumber))	n	False	False
2437	A man is jumping rope in a field	exists x. exists y. exists z. (Man(x) & Field(y) & JumpingRope(x, y) & In(x, z) & Field(z))	A woman is slicing a cucumber	exists x. exists y. (Woman(x) & Cucumber(y) & Slicing(x, y))	n	False	False
2438	A man is jumping rope outside	exists x. (Man(x) & JumpingRope(x))	A woman is slicing a cucumber	exists x. exists y. (Woman(x) & Cucumber(y) & Slicing(x, y))	n	False	False
2439	Potatoes are being sliced by a man	exists x.exists y. (Potato(x) & Man(y) & Slicing(y, x))	A man is slicing potatoes	exists x. (Man(x) & SlicingPotatoes(x))	e	False	False
2440	There is no man slicing potatoes	not exists x. (Man(x) & SlicingPotatoes(x))	A man is slicing potatoes	exists x. (Man(x) & SlicingPotatoes(x))	c	False	True
2441	The man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	A potato is being sliced by the man	exists x.exists y. (Potato(x) & Man(y) & Slicing(y, x))	e	True	False
2442	A man is slicing potatoes	exists x. (Man(x) & SlicingPotatoes(x))	The man is not slicing a potato	not exists x. (Man(x) & SlicingPotato(x))	c	False	False
2443	The man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	There is no man slicing potatoes	not exists x. (Man(x) & SlicingPotatoes(x))	c	False	False
2444	A man is slicing potatoes	exists x. (Man(x) & SlicingPotatoes(x))	The man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	e	False	False
2445	A flute is being played by a girl	exists x. exists y. (Flute(x) & Girl(y) & Playing(y, x))	A girl is playing a flute	exists x. (Girl(x) & PlayingFlute(x))	e	False	False
2446	A girl is playing a wind instrument	exists x. (Girl(x) & PlayingWindInstrument(x))	A boy is playing a wind instrument	exists x. (Boy(x) & PlayingWindInstrument(x))	n	False	False
2447	A flute is being played by a girl	exists x. exists y. (Flute(x) & Girl(y) & Playing(y, x))	A girl is playing a wind instrument	exists x. (Girl(x) & PlayingWindInstrument(x))	e	False	False
2448	There is no girl playing a flute	not exists x. (Girl(x) & PlaysFlute(x))	A girl is playing a wind instrument	exists x. (Girl(x) & PlayingWindInstrument(x))	n	False	False
2449	The piano is being played by someone	exists x. exists y. (Piano(x) & Person(y) & Playing(y, x))	Someone is playing piano	exists x. (Person(x) & PlayingPiano(x))	e	False	False
2450	The piano is being played by someone	exists x. exists y. (Piano(x) & Person(y) & Playing(y, x))	A person is playing a keyboard	exists x. (Person(x) & PlayingKeyboard(x))	n	False	False
2451	Someone is not playing piano	exists x. (Person(x) & not PlayingPiano(x))	A person is playing a keyboard	exists x. (Person(x) & PlayingKeyboard(x))	n	False	False
2452	Someone is playing piano	exists x. (Person(x) & PlayingPiano(x))	A person is playing a keyboard	exists x. (Person(x) & PlayingKeyboard(x))	e	False	False
2453	A man is diving into a pool	exists x. exists y. (Man(x) & Pool(y) & DivingInto(x, y))	A woman is diving into a pool	exists x. (Woman(x) & DivingIntoPool(x))	n	False	False
2454	A man is jumping out of a pool	exists x. (Man(x) & JumpingOutOfPool(x))	A man is diving into a pool	exists x. exists y. (Man(x) & Pool(y) & DivingInto(x, y))	n	False	False
2455	A man is diving into a pool	exists x. exists y. (Man(x) & Pool(y) & DivingInto(x, y))	A man is diving into the water	exists x. (Man(x) & Diving(x))	e	False	False
2456	A man is diving into a pool	exists x. exists y. (Man(x) & Pool(y) & DivingInto(x, y))	A man is jumping out of a pool	exists x. (Man(x) & JumpingOutOfPool(x))	n	False	False
2457	The man is adding seasoning to the water in a bowl	exists x.exists y. (Man(x) & Water(y) & Bowl(y) -> AddsSeasoning(x, y))	Seasoning is being added to the water by the man	exists x.exists y. (Seasoning(x) & Man(y) -> AddsToWater(y, x))	e	False	False
2458	The man is adding seasoning to the water in a bowl	exists x.exists y. (Man(x) & Water(y) & Bowl(y) -> AddsSeasoning(x, y))	The man is not adding seasoning to the/some water in a bowl	not exists x. (Man(x) & Water(y) & Bowl(z) & Seasoning(s) & Adds(x, y, z, s))	c	False	False
2459	The man is adding seasoning to the water in a bowl	exists x.exists y. (Man(x) & Water(y) & Bowl(y) -> AddsSeasoning(x, y))	The man is seasoning the sausages	exists x. (Man(x) & Seasoning(x, Sausages))	n	False	False
2460	A man is playing a large flute	exists x. (Man(x) & Playing(x, LargeFlute))	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	e	False	False
2461	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	A potato is being peeled by a woman	exists x. exists y. (Potato(x) & Woman(y) & Peeling(y, x))	e	False	False
2462	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	A woman is not peeling a potato	not exists x. (Woman(x) & PeelingPotato(x))	c	False	True
2463	The lady is peeling the potato	exists x. exists y. (Lady(x) & Potato(y) & Peeling(x, y))	A potato is being peeled by a woman	exists x. exists y. (Potato(x) & Woman(y) & Peeling(y, x))	e	True	False
2464	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	There is no man playing a flute	not exists x. (Man(x) & PlaysFlute(x))	c	False	False
2465	A man is riding a motorbike	exists x. exists y. (Man(x) & Motorbike(y) & Riding(x, y))	A man is riding a scooter	exists x. exists y. (Man(x) & Scooter(y) & Riding(x, y))	n	False	False
2466	A man is riding a scooter	exists x. exists y. (Man(x) & Scooter(y) & Riding(x, y))	A man is not riding a scooter	exists x. (Man(x) & not RidingScooter(x))	c	False	False
2467	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	A man is riding a motorbike	exists x. exists y. (Man(x) & Motorbike(y) & Riding(x, y))	n	False	False
2468	A man is not riding a scooter	exists x. (Man(x) & not RidingScooter(x))	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	n	False	False
2469	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	A man is riding a scooter	exists x. exists y. (Man(x) & Scooter(y) & Riding(x, y))	n	False	False
2470	A woman is not slicing an octopus	not exists x. (Woman(x) & SlicingOctopus(x))	A woman is slicing an octopus	exists x. (Woman(x) & SlicingOctopus(x))	c	False	True
2471	The drums are being played by a man	exists x. (Drum(x) -> PlayedBy(x, man))	A man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	e	False	False
2472	A man is not playing the drums	exists x. (Man(x) -> not PlayingDrums(x))	A man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	c	False	False
2473	There is no man playing the guitar	not exists x. (Man(x) & PlaysGuitar(x))	A man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	n	False	False
2474	A man is not playing the drums	exists x. (Man(x) -> not PlayingDrums(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2475	A man is putting some food in a box	exists x. exists y. exists z. (Man(x) & Food(y) & Box(z) & PutsIn(x, y, z))	A man is putting some food in a container	exists x. exists y. exists z. (Man(x) & Food(y) & Container(z) & PutsIn(x, y, z))	e	True	False
2476	The man is putting chicken into the box	exists x.exists y.exists z. (Man(x) & Chicken(y) & Box(z) -> PutsInto(x, y, z))	The man is putting chicken into the container	exists x.exists y.exists z. (Man(x) & Chicken(y) & Container(z) -> PutsInto(x, y, z))	e	False	False
2477	The man is putting chicken into the box	exists x.exists y.exists z. (Man(x) & Chicken(y) & Box(z) -> PutsInto(x, y, z))	A man is putting some food in a box	exists x. exists y. exists z. (Man(x) & Food(y) & Box(z) & PutsIn(x, y, z))	e	False	False
2478	The man is putting chicken into the container	exists x.exists y.exists z. (Man(x) & Chicken(y) & Container(z) -> PutsInto(x, y, z))	A man is putting some food in a container	exists x. exists y. exists z. (Man(x) & Food(y) & Container(z) & PutsIn(x, y, z))	e	False	False
2479	A woman is taking eggs out of a bowl	exists x. exists y. (Woman(x) & Egg(y) & TakingOutOf(x, y, Bowl))	A woman is cracking eggs into a bowl	exists x. (Woman(x) & CrackingEggs(x))	n	False	False
2480	A woman is placing skewers onto a rack	exists x.exists y. (Woman(x) & Skewers(y) -> PlacesOntoRack(x, y))	There is no woman placing skewers onto a rack	not exists x. (Woman(x) & PlacingSkewersOntoRack(x))	c	False	False
2481	A woman is cracking eggs into a bowl	exists x. (Woman(x) & CrackingEggs(x))	Skewers are being placed onto a rack by a woman	exists x.exists y.exists z. (Skewer(x) & Rack(y) & Woman(z) -> PlacingOnto(x, y, z))	n	False	False
2482	A baby is playing a guitar	exists x. (Baby(x) & PlayingGuitar(x))	A guitar is being played by a baby	exists x. exists y. (Guitar(x) & Baby(y) & Playing(y, x))	e	False	False
2483	The little boy is singing and playing the guitar	exists x. (LittleBoy(x) & Singing(x) & PlayingGuitar(x))	The little kid is singing and playing the guitar	exists x. (LittleKid(x) & Singing(x) & PlayingGuitar(x))	e	False	False
2484	The little kid is singing and playing the guitar	exists x. (LittleKid(x) & Singing(x) & PlayingGuitar(x))	A baby is playing a guitar	exists x. (Baby(x) & PlayingGuitar(x))	e	False	False
2485	The little boy is not singing and playing the guitar	not (exists x. (LittleBoy(x) & Singing(x) & PlayingGuitar(x)))	A baby is playing a guitar	exists x. (Baby(x) & PlayingGuitar(x))	n	False	False
2486	A baby is playing a guitar	exists x. (Baby(x) & PlayingGuitar(x))	The little boy is singing and playing the guitar	exists x. (LittleBoy(x) & Singing(x) & PlayingGuitar(x))	n	False	False
2487	A man is passionately playing a guitar in front of an audience	exists x. exists y. exists z. (Man(x) & Guitar(y) & Audience(z) & PassionatelyPlaying(x, y) & InFrontOf(x, z))	A person is passionately playing a guitar in front of an audience	exists x. exists y. exists z. (Person(x) & Guitar(y) & Audience(z) & Playing(x, y) -> InFrontOf(x, z))	e	True	False
2488	A man is passionately playing a guitar in front of an audience	exists x. exists y. exists z. (Man(x) & Guitar(y) & Audience(z) & PassionatelyPlaying(x, y) & InFrontOf(x, z))	A woman is passionately playing a guitar in front of an audience	exists x. (Woman(x) & PassionatelyPlayingGuitar(x))	n	False	False
2489	A woman is peeling food	exists x. (Woman(x) & PeelingFood(x))	A man is passionately playing a guitar in front of an audience	exists x. exists y. exists z. (Man(x) & Guitar(y) & Audience(z) & PassionatelyPlaying(x, y) & InFrontOf(x, z))	n	False	False
2490	There is no woman peeling a potato	not exists x. (Woman(x) & PeelingPotato(x))	A man is passionately playing a guitar in front of an audience	exists x. exists y. exists z. (Man(x) & Guitar(y) & Audience(z) & PassionatelyPlaying(x, y) & InFrontOf(x, z))	n	False	False
2491	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	A woman is passionately playing a guitar in front of an audience	exists x. (Woman(x) & PassionatelyPlayingGuitar(x))	n	False	False
2492	A man is passionately playing a guitar in front of an audience	exists x. exists y. exists z. (Man(x) & Guitar(y) & Audience(z) & PassionatelyPlaying(x, y) & InFrontOf(x, z))	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	n	False	False
2493	Someone is checking the email	exists x. (ChecksEmail(x))	Someone is reading the email	exists x. (ReadingEmail(x))	e	False	False
2494	A man is reading the email	exists x. (Man(x) & Reading(x, email))	Someone is checking the email	exists x. (ChecksEmail(x))	e	False	False
2495	Someone is not reading the email	exists x. (Person(x) & not ReadingEmail(x))	A man is reading the email	exists x. (Man(x) & Reading(x, email))	c	False	False
2496	There is no man reading the email	not exists x. (Man(x) & Reading(x, email))	Someone is reading the email	exists x. (ReadingEmail(x))	n	False	False
2497	Two pandas are not lying together	not (Panda(x) & Panda(y) & LyingTogether(x, y))	Two pandas are lying together	exists x. exists y. (Panda(x) & Panda(y) & LyingTogether(x, y))	c	False	True
2498	Two cubs are playing	exists x. exists y. (Cub(x) & Cub(y) & Playing(x, y))	Two pandas are lying together	exists x. exists y. (Panda(x) & Panda(y) & LyingTogether(x, y))	n	False	False
2499	Two pandas are lying together	exists x. exists y. (Panda(x) & Panda(y) & LyingTogether(x, y))	Two baby pandas are sleeping	exists x. exists y. (BabyPanda(x) & BabyPanda(y) & Sleeping(x) & Sleeping(y))	n	False	False
2500	A woman is frying fish	exists x. (Woman(x) & FryingFish(x))	Fish is being cooked by a woman	exists x.exists y. (Fish(x) & Woman(y) & Cooking(y, x))	e	False	False
2501	A woman is frying fish	exists x. (Woman(x) & FryingFish(x))	There is no woman cooking fish	not exists x. (Woman(x) & Cooking(x, Fish))	c	False	False
2502	A woman is frying fish	exists x. (Woman(x) & FryingFish(x))	A woman is cooking fish	exists x. (Woman(x) & Cooking(x, Fish))	e	False	False
2503	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	A man is playing an instrument	exists x. exists y. (Man(x) & Instrument(y) & Playing(x, y))	e	False	False
2504	There is no man mowing grass	not exists x. (Man(x) & MowingGrass(x))	A man is mowing grass	exists x. (Man(x) & MowingGrass(x))	c	False	True
2505	A man is mowing grass	exists x. (Man(x) & MowingGrass(x))	There is no guy mowing the lawn	not exists x. (Guy(x) & MowingLawn(x))	c	False	False
2506	A guy is mowing the lawn	exists x. (Guy(x) & MowingLawn(x))	A man is mowing grass	exists x. (Man(x) & MowingGrass(x))	e	False	False
2507	A person is frying meat in a pan	exists x. (Person(x) & FryingMeat(x))	A person is not frying meat in a pan	exists x. (Person(x) & FryingMeat(x))	c	True	False
2508	A skunk is being held by a person	exists x. exists y. (Skunk(x) & Person(y) & Holds(y, x))	A person is holding a skunk	exists x. (Person(x) & exists y. (Skunk(y) & Holding(x, y)))	e	False	False
2509	A person is frying meat in a pan	exists x. (Person(x) & FryingMeat(x))	A skunk is being held by a person	exists x. exists y. (Skunk(x) & Person(y) & Holds(y, x))	n	False	False
2510	A person is holding a skunk	exists x. (Person(x) & exists y. (Skunk(y) & Holding(x, y)))	A person is frying meat in a pan	exists x. (Person(x) & FryingMeat(x))	n	False	False
2511	The lady is cracking an egg into a bowl	exists x. exists y. exists z. (Lady(x) & Egg(y) & Bowl(z) & CracksInto(y, z))	The lady is taking an egg out of a bowl	exists x. exists y. exists z. (Lady(x) & Egg(y) & Bowl(z) & TakingOutOf(x, y, z))	n	False	False
2512	The man is cracking eggs into a bowl	exists x. exists y. exists z. (Man(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	The person is cracking eggs into a bowl	exists x. (Person(x) & CracksEggs(x))	e	False	False
2513	The lady is cracking an egg into a bowl	exists x. exists y. exists z. (Lady(x) & Egg(y) & Bowl(z) & CracksInto(y, z))	The person is cracking eggs into a bowl	exists x. (Person(x) & CracksEggs(x))	e	False	False
2514	The woman is cracking eggs into a bowl	exists x. (Woman(x) & CracksEggs(x))	The lady is cracking an egg into a bowl	exists x. exists y. exists z. (Lady(x) & Egg(y) & Bowl(z) & CracksInto(y, z))	e	False	False
2515	Broccoli are being cut by a woman	exists x. exists y. (Broccoli(x) & Woman(y) & Cutting(y, x))	A man is cutting tomatoes	exists x. (Man(x) & Cutting(x, tomatoes))	n	False	False
2516	A woman is not cutting broccoli	exists x. (Woman(x) & not CuttingBroccoli(x))	A man is cutting tomatoes	exists x. (Man(x) & Cutting(x, tomatoes))	n	False	False
2517	A woman is cutting a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Cutting(x, y))	A man is cutting a lemon	exists x. exists y. (Man(x) & Lemon(y) & Cutting(x, y))	n	False	False
2518	A woman is cutting a lemon	exists x. exists y. (Woman(x) & Lemon(y) & Cutting(x, y))	A woman is firing a rifle	exists x. (Woman(x) & FiringRifle(x))	n	False	False
2519	There is no man playing guitar	not exists x. (Man(x) & PlaysGuitar(x))	A man is playing guitar	exists x. (Man(x) & PlayingGuitar(x))	c	False	False
2520	A man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	A man is playing the instrument	exists x. (Man(x) & PlayingInstrument(x))	e	False	False
2521	A man is playing guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is playing the instrument	exists x. (Man(x) & PlayingInstrument(x))	e	False	False
2522	A man is playing the drums	exists x. (Man(x) & PlayingDrums(x))	A man is playing guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2523	A man is drawing on a digital dry erase board	exists x. (Man(x) & DrawingOnDigitalDryEraseBoard(x))	A man is drawing on a board	exists x. exists y. (Man(x) & Board(y) & DrawingOn(x, y))	e	False	False
2524	A man is not drawing on a digital dry erase board	exists x. (Man(x) -> not DrawingOnDigitalDryEraseBoard(x))	A man is drawing on a digital dry erase board	exists x. (Man(x) & DrawingOnDigitalDryEraseBoard(x))	c	False	False
2525	A man is drawing some figures	exists x. (Man(x) & DrawingFigures(x))	A man is erasing some figures	exists x. (Man(x) & ErasingFigures(x))	n	False	False
2526	A man is drawing some figures	exists x. (Man(x) & DrawingFigures(x))	A man is drawing on a digital dry erase board	exists x. (Man(x) & DrawingOnDigitalDryEraseBoard(x))	n	False	False
2527	A woman is slicing tofu	exists x. (Woman(x) & Slicing(x, tofu))	A woman is cutting tofu	exists x. (Woman(x) & Cutting(x, tofu))	e	False	False
2528	A woman is cutting tofu	exists x. (Woman(x) & Cutting(x, tofu))	A woman is not cutting tofu	exists x. (Woman(x) & not CuttingTofu(x))	c	False	False
2529	A woman is slicing tofu	exists x. (Woman(x) & Slicing(x, tofu))	A woman is cutting onions	exists x. (Woman(x) & CuttingOnions(x))	n	False	False
2530	A group of people are marching	exists x. (Group(x) & People(x) & Marching(x))	A group of people are walking	exists x. (Group(x) & People(x) & Walking(x))	e	True	False
2531	A group of people are dancing at a concert	exists x. exists y. (Group(x) & People(y) & DancingAtConcert(x, y))	A group of people are standing	exists x. (Group(x) & People(x) & Standing(x))	n	False	False
2532	A group of people are not dancing at a concert	exists x. (Group(x) & People(y) & Concert(z) & not DancingAt(y, z))	A group of people are marching	exists x. (Group(x) & People(x) & Marching(x))	n	False	False
2533	A group of people are dancing at a concert	exists x. exists y. (Group(x) & People(y) & DancingAtConcert(x, y))	A group of people are marching	exists x. (Group(x) & People(x) & Marching(x))	n	False	False
2534	A man is working on the laptop	exists x. (Man(x) & WorkingOnLaptop(x))	A man is working on the computer	exists x. (Man(x) & WorkingOnComputer(x))	e	False	False
2535	There is no man working on the laptop	not exists x. (Man(x) & WorkingOnLaptop(x))	A man is working on the laptop	exists x. (Man(x) & WorkingOnLaptop(x))	c	False	True
2536	A man is working on the laptop	exists x. (Man(x) & WorkingOnLaptop(x))	The man is feeding the snake with an animal	exists x.exists y.exists z. (Man(x) & Snake(y) & Animal(z) -> FeedsWith(x, y, z))	n	False	False
2537	The man is feeding the snake with a mouse	exists x. exists y. exists z. (Man(x) & Snake(y) & Mouse(z) & Feeds(x, y, z))	There is no man working on the laptop	not exists x. (Man(x) & WorkingOnLaptop(x))	n	False	False
2538	The man is feeding the snake with a mouse	exists x. exists y. exists z. (Man(x) & Snake(y) & Mouse(z) & Feeds(x, y, z))	A man is working on the laptop	exists x. (Man(x) & WorkingOnLaptop(x))	n	False	False
2539	A boy is playing on a toy phone	exists x. exists y. (Boy(x) & ToyPhone(y) & PlayingOn(x, y))	The man is drawing a gun	exists x. (Man(x) & Drawing(x, Gun))	n	False	False
2540	The man is aiming a gun	exists x. (Man(x) & AimingGun(x))	A girl is playing on a toy phone	exists x. (Girl(x) & PlayingOnToyPhone(x))	n	False	False
2541	There is no girl riding a horse	not exists x. (Girl(x) & RidingHorse(x))	A girl is riding a horse	exists x. exists y. (Girl(x) & Horse(y) & Riding(x, y))	c	False	False
2542	The boy is trotting on the horse	exists x.exists y. (Boy(x) & Horse(y) -> TrottingOn(x, y))	The girl is trotting on the horse	exists x.exists y. (Girl(x) & Horse(y) & Trotting(x, y))	n	False	False
2543	A girl is riding a horse	exists x. exists y. (Girl(x) & Horse(y) & Riding(x, y))	The boy is trotting on the horse	exists x.exists y. (Boy(x) & Horse(y) -> TrottingOn(x, y))	n	False	False
2544	The girl is trotting on the horse	exists x.exists y. (Girl(x) & Horse(y) & Trotting(x, y))	A horse is being ridden by a girl	exists x.exists y. (Horse(x) & Girl(y) & Riding(y, x))	e	False	False
2545	A man is breaking a slab of concrete with a sledge hammer	exists x. exists y. exists z. (Man(x) & SlabOfConcrete(y) & SledgeHammer(z) & Breaking(x, y, z))	A man is breaking a block of concrete with a sledge hammer	exists x. exists y. exists z. (Man(x) & BlockOfConcrete(y) & SledgeHammer(z) & Breaking(x, y, z))	e	False	False
2546	A man is breaking a slab of concrete with a sledge hammer	exists x. exists y. exists z. (Man(x) & SlabOfConcrete(y) & SledgeHammer(z) & Breaking(x, y, z))	There is no man breaking a slab of concrete with a sledge hammer	not exists x. (Man(x) & BreakingConcrete(x) & UsingSledgeHammer(x))	c	False	False
2547	The man is using a sledgehammer to break a concrete block that is on another man	exists x. exists y. exists z. (Man(x) & Sledgehammer(y) & ConcreteBlock(z) & Uses(x, y) & On(z, x) -> Breaks(x, z))	The man is using a sledgehammer to break a concrete block that is on another person	exists x.exists y.exists z. (Man(x) & Sledgehammer(y) & ConcreteBlock(z) & Uses(x, y) & Breaks(x, z) -> OnAnotherPerson(z))	e	False	False
2548	The woman is using a sledgehammer to break a concrete block that is on another man	exists x.exists y.exists z. (Woman(x) & Sledgehammer(y) & ConcreteBlock(z) & Breaking(x, y, z) -> OnAnotherMan(x))	The man is using a sledgehammer to break a concrete block that is on another man	exists x. exists y. exists z. (Man(x) & Sledgehammer(y) & ConcreteBlock(z) & Uses(x, y) & On(z, x) -> Breaks(x, z))	n	False	False
2549	The man is using a sledgehammer to break a concrete block that is on another person	exists x.exists y.exists z. (Man(x) & Sledgehammer(y) & ConcreteBlock(z) & Uses(x, y) & Breaks(x, z) -> OnAnotherPerson(z))	A man is breaking a slab of concrete with a sledge hammer	exists x. exists y. exists z. (Man(x) & SlabOfConcrete(y) & SledgeHammer(z) & Breaking(x, y, z))	e	False	False
2550	The man is using a sledgehammer to break a concrete block that is on another man	exists x. exists y. exists z. (Man(x) & Sledgehammer(y) & ConcreteBlock(z) & Uses(x, y) & On(z, x) -> Breaks(x, z))	A man is breaking a block of concrete with a sledge hammer	exists x. exists y. exists z. (Man(x) & BlockOfConcrete(y) & SledgeHammer(z) & Breaking(x, y, z))	e	False	False
2551	There is no man breaking a slab of concrete with a sledge hammer	not exists x. (Man(x) & BreakingConcrete(x) & UsingSledgeHammer(x))	The man is using a sledgehammer to break a concrete block that is on another man	exists x. exists y. exists z. (Man(x) & Sledgehammer(y) & ConcreteBlock(z) & Uses(x, y) & On(z, x) -> Breaks(x, z))	c	False	False
2552	The man is using a sledgehammer to break a concrete block that is on another man	exists x. exists y. exists z. (Man(x) & Sledgehammer(y) & ConcreteBlock(z) & Uses(x, y) & On(z, x) -> Breaks(x, z))	A man is breaking a slab of concrete with a sledge hammer	exists x. exists y. exists z. (Man(x) & SlabOfConcrete(y) & SledgeHammer(z) & Breaking(x, y, z))	e	False	False
2553	A dog is barking at a ball	exists x. exists y. (Dog(x) & Ball(y) & BarkingAt(x, y))	An animal is barking at a ball	exists x. exists y. exists z. (Animal(x) & Ball(y) & Barking(x, y) & At(x, z) & Ball(z))	e	False	False
2554	A dog is swimming after a tennis ball	exists x. exists y. (Dog(x) & TennisBall(y) & Swimming(x, y))	A dog is swimming after a ball	exists x.exists y. (Dog(x) & Ball(y) -> SwimmingAfter(x, y))	e	False	False
2555	A dog is swimming after a ball	exists x.exists y. (Dog(x) & Ball(y) -> SwimmingAfter(x, y))	A dog is barking at a ball	exists x. exists y. (Dog(x) & Ball(y) & BarkingAt(x, y))	n	False	False
2556	A dog is swimming after a tennis ball	exists x. exists y. (Dog(x) & TennisBall(y) & Swimming(x, y))	An animal is barking at a ball	exists x. exists y. exists z. (Animal(x) & Ball(y) & Barking(x, y) & At(x, z) & Ball(z))	n	False	False
2557	A girl is eating a cupcake	exists x. exists y. (Girl(x) & Cupcake(y) & Eating(x, y))	A boy is eating a cupcake	exists x. exists y. (Boy(x) & Cupcake(y) & Eating(x, y))	n	False	False
2558	A woman is eating a cupcake	exists x. exists y. (Woman(x) & Cupcake(y) & Eating(x, y))	A woman is eating a cake	exists x. (Woman(x) & Eating(x, cake))	n	False	False
2559	A girl is eating a cupcake	exists x. exists y. (Girl(x) & Cupcake(y) & Eating(x, y))	A woman is eating a cake	exists x. (Woman(x) & Eating(x, cake))	n	False	False
2560	A cupcake is being eaten by a girl	exists x.exists y. (Cupcake(x) & Girl(y) & Eating(y, x))	A woman is eating a cupcake	exists x. exists y. (Woman(x) & Cupcake(y) & Eating(x, y))	n	True	False
2561	A girl is eating a cupcake	exists x. exists y. (Girl(x) & Cupcake(y) & Eating(x, y))	A woman is eating a cupcake	exists x. exists y. (Woman(x) & Cupcake(y) & Eating(x, y))	n	True	False
2562	A man is talking	exists x. (Man(x) & Talking(x))	A man is speaking	exists x. (Man(x) & Speaking(x))	e	False	False
2563	A man is speaking	exists x. (Man(x) & Speaking(x))	There is no man speaking	not exists x. (Man(x) & Speaking(x))	c	False	True
2564	A man is spitting	exists x. (Man(x) & Spitting(x))	A person is spitting	exists x. (Person(x) & Spitting(x))	e	True	False
2565	There is no man spitting	not exists x. (Man(x) & Spitting(x))	A man is spitting	exists x. (Man(x) & Spitting(x))	c	False	True
2566	A man is speaking	exists x. (Man(x) & Speaking(x))	A person is spitting	exists x. (Person(x) & Spitting(x))	n	False	False
2567	A man is spitting	exists x. (Man(x) & Spitting(x))	A man is speaking	exists x. (Man(x) & Speaking(x))	n	False	False
2568	A man is playing keyboards	exists x. (Man(x) & PlayingKeyboards(x))	A man is playing an instrument	exists x. exists y. (Man(x) & Instrument(y) & Playing(x, y))	e	False	False
2569	A man is playing keyboards	exists x. (Man(x) & PlayingKeyboards(x))	A man is falling off a mechanical bull	exists x. (Man(x) & FallingOffMechanicalBull(x))	n	False	False
2570	A man is cutting a boot with a sword	exists x. exists y. exists z. (Man(x) & Boot(y) & Sword(z) & Cutting(x, y, z))	There is no man cutting a boot with a sword	not exists x. (Man(x) & CuttingBoot(x) & WithSword(x))	c	False	False
2571	There is no man cutting a boot with a sword	not exists x. (Man(x) & CuttingBoot(x) & WithSword(x))	A man is severing the toe of an empty leather boot with a sword	exists x. exists y. exists z. (Man(x) & Toe(y) & LeatherBoot(z) & Severing(x, y, z) & Empty(z))	c	False	False
2572	A chef is cleaning a bowl of soup	exists x. exists y. (Chef(x) & Bowl(y) & Soup(s) & Cleaning(x, y, s))	A chef is getting a bowl of soup dirty	exists x. (Chef(x) & BowlOfSoup(x) & Dirty(x))	n	False	False
2573	A man is wiping the edge of a bowl	exists x. (Man(x) & WipingEdgeOfBowl(x))	A man is cleaning the edge of a bowl	exists x. (Man(x) & Cleaning(x, BowlEdge))	e	False	False
2574	There is no man wiping the edge of a bowl	not exists x. (Man(x) & WipingEdgeOfBowl(x))	A chef is cleaning a bowl of soup	exists x. exists y. (Chef(x) & Bowl(y) & Soup(s) & Cleaning(x, y, s))	n	False	False
2575	A bowl of soup is being cleaned by a chef	exists x.exists y. (BowlOfSoup(x) & Chef(y) -> Cleaning(y, x))	A man is wiping the edge of a bowl	exists x. (Man(x) & WipingEdgeOfBowl(x))	n	False	False
2576	A chef is getting a bowl of soup dirty	exists x. (Chef(x) & BowlOfSoup(x) & Dirty(x))	A man is wiping the edge of a bowl	exists x. (Man(x) & WipingEdgeOfBowl(x))	n	False	False
2577	A young boy is singing and playing a guitar	exists x. (YoungBoy(x) & Singing(x) & PlayingGuitar(x))	A kid is singing and playing a guitar	exists x. (Kid(x) & Singing(x) & PlayingGuitar(x))	e	False	False
2578	A young boy is singing and playing a guitar	exists x. (YoungBoy(x) & Singing(x) & PlayingGuitar(x))	There is no young boy singing and playing a guitar	not exists x. (YoungBoy(x) & Singing(x) & PlayingGuitar(x))	c	False	True
2579	A kid is playing the guitar	exists x. (Kid(x) & PlayingGuitar(x))	There is no young boy singing and playing a guitar	not exists x. (YoungBoy(x) & Singing(x) & PlayingGuitar(x))	n	False	False
2580	A young boy is singing and playing a guitar	exists x. (YoungBoy(x) & Singing(x) & PlayingGuitar(x))	The guitar is being played by a kid	exists x. exists y. (Guitar(x) & Kid(y) & Playing(y, x))	e	False	False
2581	Someone is stirring chili in a kettle	exists x. (Person(x) & StirringChili(x))	Someone is stirring chili in a pot	exists x. (Person(x) & StirringChili(x))	e	True	False
2582	Someone is stirring chili in a kettle	exists x. (Person(x) & StirringChili(x))	A pot of chili is being stirred by someone with a spoon	exists x.exists y. (PotOfChili(x) & Person(y) & UsesSpoon(y) -> Stirring(y, x))	e	False	False
2583	Nobody is stirring a pot of chili with a spoon	not exists x. (Person(x) & Stirring(x, PotOfChili) & UsingSpoon(x))	Someone is stirring chili in a kettle	exists x. (Person(x) & StirringChili(x))	n	False	False
2584	Someone is stirring chili in a kettle	exists x. (Person(x) & StirringChili(x))	Someone is stirring a pot of chili with a spoon	exists x.exists y.exists z. (Person(x) & Pot(y) & Chili(z) & Stirring(x, y, z))	n	False	False
2585	A person is eating at a table	exists x. exists y. (Person(x) & Table(y) & EatingAt(x, y))	A person is not eating at a table	exists x. (Person(x) & not EatingAtTable(x))	c	False	False
2586	A person is not making a bed	not exists x. (Person(x) & MakingBed(x))	A person is making a bed	exists x. (Person(x) & MakingBed(x))	c	False	True
2587	A man is making a bed	exists x. (Man(x) & MakingBed(x))	A person is eating at a table	exists x. exists y. (Person(x) & Table(y) & EatingAt(x, y))	n	False	False
2588	A person is not eating at a table	exists x. (Person(x) & not EatingAtTable(x))	A person is making a bed	exists x. (Person(x) & MakingBed(x))	n	False	False
2589	A cat is playing with a small bottle	exists x.exists y. (Cat(x) & SmallBottle(y) & PlayingWith(x, y))	An animal is playing with a small bottle	exists x. exists y. (Animal(x) & SmallBottle(y) & PlayingWith(x, y))	e	True	False
2590	A cat is playing with a small bottle	exists x.exists y. (Cat(x) & SmallBottle(y) & PlayingWith(x, y))	A cat is playing with a big bottle	exists x. exists y. (Cat(x) & Bottle(y) & PlayingWith(x, y))	n	False	False
2591	A bottle is being licked by the cat	exists x.exists y. (Bottle(x) & Cat(y) & Licking(y, x))	The cat is licking a bottle	exists x. exists y. (Cat(x) & Bottle(y) & Licking(x, y))	e	True	False
2592	A cat is playing with a small bottle	exists x.exists y. (Cat(x) & SmallBottle(y) & PlayingWith(x, y))	The dog is licking a bottle	exists x. exists y. (Dog(x) & Bottle(y) & Licking(x, y))	n	False	False
2593	The cat is licking a bottle	exists x. exists y. (Cat(x) & Bottle(y) & Licking(x, y))	An animal is playing with a small bottle	exists x. exists y. (Animal(x) & SmallBottle(y) & PlayingWith(x, y))	n	False	False
2594	The cat is licking a bottle	exists x. exists y. (Cat(x) & Bottle(y) & Licking(x, y))	A cat is playing with a big bottle	exists x. exists y. (Cat(x) & Bottle(y) & PlayingWith(x, y))	n	False	False
2595	A small dog is lying on the bed	exists x. (Dog(x) & Small(x) & LyingOn(x, bed))	A small dog is lying on a bed	exists x. (Dog(x) & Small(x) & LyingOn(x, bed))	e	True	False
2596	A small dog is lying on a bed	exists x. (Dog(x) & Small(x) & LyingOn(x, bed))	A small cat is lying on a bed	exists x. (SmallCat(x) & LyingOnBed(x))	n	False	False
2597	A small dog is lying on the bed	exists x. (Dog(x) & Small(x) & LyingOn(x, bed))	A small dog is lying under the bed	exists x. (Dog(x) & Small(x) & LyingUnder(x, bed))	n	False	False
2598	A small dog is lying on a bed	exists x. (Dog(x) & Small(x) & LyingOn(x, bed))	A small animal is lying on the bed	exists x. (SmallAnimal(x) & LyingOnBed(x))	e	False	False
2599	A small dog is lying on a bed	exists x. (Dog(x) & Small(x) & LyingOn(x, bed))	A small dog is lying under the bed	exists x. (Dog(x) & Small(x) & LyingUnder(x, bed))	n	False	False
2600	There is no woman slicing tofu	not exists x. (Woman(x) & SlicingTofu(x))	A woman is slicing tofu	exists x. (Woman(x) & Slicing(x, tofu))	c	False	False
2601	A woman is slicing tofu	exists x. (Woman(x) & Slicing(x, tofu))	A woman is cutting butter	exists x. (Woman(x) & Cutting(x, butter))	n	False	False
2602	The man is not playing the guitar	not exists x. (Man(x) & PlaysGuitar(x))	The man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	c	False	False
2603	The man is playing with a skull	exists x. exists y. (Man(x) & Skull(y) & PlayingWith(x, y))	The person is playing with a skull	exists x. exists y. (Person(x) & Skull(y) & PlayingWith(x, y))	e	True	False
2604	There is no man playing with a skull	not exists x. (Man(x) & PlayingWithSkull(x))	The man is playing with a skull	exists x. exists y. (Man(x) & Skull(y) & PlayingWith(x, y))	c	False	False
2605	The man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	There is no man playing with a skull	not exists x. (Man(x) & PlayingWithSkull(x))	n	False	False
2606	The man is sprinkling cheese on the pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & SprinklesOn(x, y, z))	There is no man sprinkling cheese on the pizza	not exists x. (Man(x) & SprinklingCheese(x))	c	False	False
2607	The cook is sprinkling cheese on the pizza	exists x.exists y. (Cook(x) & Pizza(y) -> SprinklesCheese(x, y))	A man is putting some cheese on a pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & PutsOn(x, y, z))	n	False	False
2608	Some cheese is being put on a pizza by a man	exists x.exists y.exists z. (Cheese(x) & Pizza(y) & Man(z) & PutsOn(z, x, y))	The man is sprinkling cheese on the pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & SprinklesOn(x, y, z))	e	False	False
2609	There is no man putting some cheese on a pizza	not exists x. (Man(x) & PuttingCheeseOnPizza(x))	The man is sprinkling cheese on the pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & SprinklesOn(x, y, z))	c	False	False
2610	The man is sprinkling cheese on the pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & SprinklesOn(x, y, z))	A man is putting some cheese on a pizza	exists x. exists y. exists z. (Man(x) & Cheese(y) & Pizza(z) & PutsOn(x, y, z))	e	False	False
2611	A man is firing a shotgun	exists x. (Man(x) & FiringShotgun(x))	A man is firing a gun	exists x. (Man(x) & FiringGun(x))	e	False	False
2612	A man is shooting a shotgun	exists x. exists y. (Man(x) & Shotgun(y) & Shooting(x, y))	A man is shooting a weapon	exists x. exists y. (Man(x) & Weapon(y) & Shooting(x, y))	e	True	False
2613	A man is shooting a shotgun	exists x. exists y. (Man(x) & Shotgun(y) & Shooting(x, y))	There is no man shooting a shotgun	not exists x. (Man(x) & ShootingShotgun(x))	c	False	False
2614	A man is firing a shotgun	exists x. (Man(x) & FiringShotgun(x))	A man is shooting a weapon	exists x. exists y. (Man(x) & Weapon(y) & Shooting(x, y))	e	False	False
2615	A man is shooting a shotgun	exists x. exists y. (Man(x) & Shotgun(y) & Shooting(x, y))	A man is firing a gun	exists x. (Man(x) & FiringGun(x))	e	False	False
2616	A man is shooting a shotgun	exists x. exists y. (Man(x) & Shotgun(y) & Shooting(x, y))	A man is firing a shotgun	exists x. (Man(x) & FiringShotgun(x))	e	False	False
2617	A famous singer is dancing on the ceiling	exists x. (Singer(x) & Famous(x) & DancingOnCeiling(x))	A great singer is dancing on the ceiling	exists x. (GreatSinger(x) -> DancingOnCeiling(x))	e	True	False
2618	There is no famous singer dancing on the ceiling	not exists x. (Singer(x) & Famous(x) & DancingOnCeiling(x))	A famous singer is dancing on the ceiling	exists x. (Singer(x) & Famous(x) & DancingOnCeiling(x))	c	False	True
2619	A man is dancing on the ceiling	exists x. (Man(x) & DancingOnCeiling(x))	A person is dancing on the ceiling	exists x. (Person(x) & DancingOnCeiling(x))	e	True	False
2620	A man is dancing on the floor	exists x. (Dancer(x) & Man(x) & DancingOnFloor(x))	A famous singer is dancing on the ceiling	exists x. (Singer(x) & Famous(x) & DancingOnCeiling(x))	n	False	False
2621	A man is dancing on the ceiling	exists x. (Man(x) & DancingOnCeiling(x))	A great singer is dancing on the ceiling	exists x. (GreatSinger(x) -> DancingOnCeiling(x))	n	True	False
2622	A man is dancing on the ceiling	exists x. (Man(x) & DancingOnCeiling(x))	There is no famous singer dancing on the ceiling	not exists x. (Singer(x) & Famous(x) & DancingOnCeiling(x))	n	False	False
2623	A cow is eating grass	exists x. (Cow(x) & EatingGrass(x))	A cow is grazing	exists x. (Cow(x) & Grazing(x))	e	False	False
2624	A cow is eating grass	exists x. (Cow(x) & EatingGrass(x))	A cow is not eating grass	exists x. (Cow(x) -> not EatingGrass(x))	c	False	False
2625	A cow is not eating hay	exists x. (Cow(x) -> not EatingHay(x))	A cow is eating hay	exists x. (Cow(x) & EatingHay(x))	c	False	False
2626	Hay is being eaten by a cow	exists x. exists y. (Hay(x) & Cow(y) & Eating(y, x))	A cow is eating grass	exists x. (Cow(x) & EatingGrass(x))	e	False	False
2627	A cow is eating hay	exists x. (Cow(x) & EatingHay(x))	A cow is grazing	exists x. (Cow(x) & Grazing(x))	e	False	False
2628	A cow is eating hay	exists x. (Cow(x) & EatingHay(x))	A cow is not eating grass	exists x. (Cow(x) -> not EatingGrass(x))	n	False	False
2629	A cow is eating grass	exists x. (Cow(x) & EatingGrass(x))	A cow is eating hay	exists x. (Cow(x) & EatingHay(x))	e	False	False
2630	A woman is dancing gracefully	exists x. (Woman(x) & Dancing(x) & Graceful(x))	A woman is dancing	exists x. (Dancer(x) & Woman(x))	e	False	False
2631	A woman is dancing	exists x. (Dancer(x) & Woman(x))	A woman is sleeping	exists x. (Woman(x) & Sleeping(x))	n	False	False
2632	A man is having lunch	exists x. (Man(x) & Lunch(x))	A woman is dancing	exists x. (Dancer(x) & Woman(x))	n	False	False
2633	A tiger cub is playing with a ball	exists x.exists y. (TigerCub(x) & Ball(y) -> PlaysWith(x, y))	A baby tiger is playing with a ball	exists x.exists y. (BabyTiger(x) & Ball(y) -> PlayingWith(x, y))	e	False	False
2634	A baby is playing with a doll	exists x.exists y. (Baby(x) & Doll(y) -> PlayingWith(x, y))	There is no baby tiger playing with a ball	not exists x. (BabyTiger(x) & PlayingWithBall(x))	n	False	False
2635	A baby tiger is playing with a ball	exists x.exists y. (BabyTiger(x) & Ball(y) -> PlayingWith(x, y))	A baby is not playing with a doll	exists x. (Baby(x) -> not PlayingWithDoll(x))	n	False	False
2636	The man is playing a game on the grass	exists x. exists y. exists z. (Man(x) & Game(y) & Grass(z) & PlaysOn(x, y, z))	The animal is grazing on the grass	exists x. exists y. (Animal(x) & Grass(y) -> GrazingOn(x, y))	n	False	False
2637	The rhino is grazing on the grass	exists x.exists y. (Rhino(x) & Grass(y) -> GrazingOn(x, y))	There is no man playing a game on the grass	not exists x. (Man(x) & PlayingGame(x) & OnGrass(x))	n	False	False
2638	A man is talking to a woman	exists x. exists y. (Man(x) & Woman(y) & TalkingTo(x, y))	A man and a woman are speaking	exists x. exists y. (Man(x) & Woman(y) & Speaking(x, y))	e	False	False
2639	A man is talking to a boy	exists x. exists y. (Man(x) & Boy(y) & TalkingTo(x, y))	A man is talking to a woman	exists x. exists y. (Man(x) & Woman(y) & TalkingTo(x, y))	n	False	False
2640	A man is cracking eggs	exists x. (Man(x) & CrackingEggs(x))	A woman is cracking eggs	exists x. (Woman(x) & CrackingEggs(x))	n	False	False
2641	A man and a woman are speaking	exists x. exists y. (Man(x) & Woman(y) & Speaking(x, y))	A woman is cracking eggs	exists x. (Woman(x) & CrackingEggs(x))	n	False	False
2642	A woman is cracking eggs	exists x. (Woman(x) & CrackingEggs(x))	A man is talking to a boy	exists x. exists y. (Man(x) & Boy(y) & TalkingTo(x, y))	n	False	False
2643	A man is talking to a woman	exists x. exists y. (Man(x) & Woman(y) & TalkingTo(x, y))	A woman is cracking eggs	exists x. (Woman(x) & CrackingEggs(x))	n	False	False
2644	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	A man is not riding a bicycle	exists x. (Man(x) & not RidingBicycle(x))	c	False	False
2645	A person is riding an electric bicycle	exists x. exists y. (Person(x) & ElectricBicycle(y) & Riding(x, y))	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	n	False	False
2646	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	There is no man riding an electric bicycle	not exists x. (Man(x) & Riding(x, ElectricBicycle))	n	False	False
2647	A man is riding an electric bicycle	exists x. exists y. (Man(x) & ElectricBicycle(y) & Riding(x, y))	A man is riding a bicycle	exists x. exists y. (Man(x) & Bicycle(y) & Riding(x, y))	e	False	False
2648	A dog is jumping into a box	exists x. exists y. (Dog(x) & Box(y) & JumpsInto(x, y))	A cat is jumping into a box	exists x. exists y. (Cat(x) & Box(y) & JumpsInto(x, y))	n	False	False
2649	An old man is talking to a leaf	exists x. exists y. (OldMan(x) & Leaf(y) & TalkingTo(x, y))	A young man is talking to a leaf	exists x. exists y. (YoungMan(x) & Leaf(y) & TalkingTo(x, y))	n	False	False
2650	A boy is talking to a leaf	exists x. exists y. (Boy(x) & Leaf(y) & TalkingTo(x, y))	A cat is jumping into a box	exists x. exists y. (Cat(x) & Box(y) & JumpsInto(x, y))	n	False	False
2651	An old man is talking to a leaf	exists x. exists y. (OldMan(x) & Leaf(y) & TalkingTo(x, y))	A cat is jumping into a box	exists x. exists y. (Cat(x) & Box(y) & JumpsInto(x, y))	n	False	False
2652	A cat is jumping into a container	exists x.exists y. (Cat(x) & Container(y) -> JumpsInto(x, y))	A young man is talking to a leaf	exists x. exists y. (YoungMan(x) & Leaf(y) & TalkingTo(x, y))	n	False	False
2653	A young man is talking to a leaf	exists x. exists y. (YoungMan(x) & Leaf(y) & TalkingTo(x, y))	A dog is jumping into a box	exists x. exists y. (Dog(x) & Box(y) & JumpsInto(x, y))	n	False	False
2654	A man is slicing a fish	exists x. exists y. (Man(x) & Fish(y) & Slicing(x, y))	A fish is being sliced by a man	exists x.exists y. (Fish(x) & Man(y) & Slicing(y, x))	e	True	False
2655	A man is cutting a fish	exists x. exists y. (Man(x) & Fish(y) & Cutting(x, y))	A woman is slicing a fish	exists x. exists y. (Woman(x) & Fish(y) & Slicing(x, y))	n	False	False
2656	A man is slicing a fish	exists x. exists y. (Man(x) & Fish(y) & Slicing(x, y))	A man is cutting a fish	exists x. exists y. (Man(x) & Fish(y) & Cutting(x, y))	e	False	False
2657	A person is not frying	not exists x. (Person(x) & Frying(x))	A person is frying some food	exists x. (Person(x) & FryingFood(x))	c	False	False
2658	A person is peeling a potato	exists x. (Person(x) & PeelingPotato(x))	There is no person peeling a potato	not exists x. (Person(x) & PeelingPotato(x))	c	False	True
2659	There is no person peeling a potato	not exists x. (Person(x) & PeelingPotato(x))	A person is frying some food	exists x. (Person(x) & FryingFood(x))	n	False	False
2660	A person is cooking some food	exists x. (Person(x) & Cooking(x, y) & Food(y))	A person is peeling a potato	exists x. (Person(x) & PeelingPotato(x))	n	False	False
2661	A person is not frying	not exists x. (Person(x) & Frying(x))	A person is peeling a potato	exists x. (Person(x) & PeelingPotato(x))	n	False	False
2662	A person is frying some food	exists x. (Person(x) & FryingFood(x))	A person is peeling a potato	exists x. (Person(x) & PeelingPotato(x))	n	False	False
2663	A man is rowing a boat	exists x. exists y. (Man(x) & Boat(y) & Rowing(x, y))	A woman is rowing a boat	exists x. exists y. (Woman(x) & Boat(y) & Rowing(x, y))	n	False	False
2664	A man is shooting with a gun	exists x. exists y. (Man(x) & Gun(y) & Shooting(x, y))	A man is shooting with a weapon	exists x. exists y. (Man(x) & Weapon(y) & Shooting(x, y))	e	True	False
2665	A man is shooting with a bow	exists x. (Man(x) & ShootingWithBow(x))	A man is shooting with a gun	exists x. exists y. (Man(x) & Gun(y) & Shooting(x, y))	c	False	False
2666	A man is rowing a boat	exists x. exists y. (Man(x) & Boat(y) & Rowing(x, y))	A man is shooting with a gun	exists x. exists y. (Man(x) & Gun(y) & Shooting(x, y))	n	False	False
2667	A woman is dancing near a fire	exists x. exists y. (Woman(x) & Fire(y) & DancingNear(x, y))	A woman is dancing near a fireplace	exists x. exists y. (Woman(x) & Fireplace(y) & DancingNear(x, y))	n	False	False
2668	A woman is dancing near a fire	exists x. exists y. (Woman(x) & Fire(y) & DancingNear(x, y))	There is no woman dancing near a fire	not exists x. (Woman(x) & Dancing(x) & NearFire(x))	c	False	False
2669	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A man is not playing a guitar	exists x. (Man(x) -> not PlayingGuitar(x))	c	False	False
2670	A guitar is being played by a girl	exists x.exists y. (Guitar(x) & Girl(y) & Playing(y, x))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2671	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A boy is playing a guitar	exists x. (Boy(x) & PlayingGuitar(x))	n	False	False
2672	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	A girl is playing a guitar	exists x. (Girl(x) & PlayingGuitar(x))	n	False	False
2673	A man is diving off a rock	exists x. (Man(x) & Diving(x) & OffRock(x))	A man is diving off a cliff	exists x. (Man(x) & Diving(x))	n	True	False
2674	A motorcycle is being ridden by a man	exists x. exists y. (Motorcycle(x) & Man(y) & Riding(y, x))	A man is diving off a cliff	exists x. (Man(x) & Diving(x))	n	False	False
2675	A man is diving off a cliff	exists x. (Man(x) & Diving(x))	There is no man riding a motorcycle	not exists x. (Man(x) & RidingMotorcycle(x))	n	False	False
2676	A man is riding a motorcycle	exists x. exists y. (Man(x) & Motorcycle(y) & Riding(x, y))	There is no man diving off a cliff	not exists x. (Man(x) & Diving(x) & Cliff(x))	n	False	False
2677	The woman is playing the guitar	exists x. (Woman(x) & PlayingGuitar(x))	The man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
2678	The man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	The person is playing the guitar	exists x. (Person(x) & PlayingGuitar(x))	e	True	False
2679	The man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	The woman is playing the guitar	exists x. (Woman(x) & PlayingGuitar(x))	n	False	False
2680	Someone is stirring noodles in the water	exists x. (Person(x) & StirringNoodles(x))	Nobody is stirring noodles in the water	not exists x. (Person(x) & StirringNoodles(x))	c	False	True
2681	A woman is boiling noodles in water	exists x. (Woman(x) & BoilingNoodles(x))	Nobody is stirring noodles in the water	not exists x. (Person(x) & StirringNoodles(x))	n	False	False
2682	Someone is stirring noodles in the water	exists x. (Person(x) & StirringNoodles(x))	A man is boiling noodles in water	exists x. (Man(x) & BoilingNoodles(x))	n	False	False
2683	Two women are dancing and singing in front of a crowd	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y) & Singing(x) & Singing(y) & Crowd(z) & InFrontOf(x, y, z))	Two women are dancing and singing in front of many people	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y) & Singing(x) & Singing(y) & InFrontOfManyPeople(x) & InFrontOfManyPeople(y))	e	False	False
2684	Two women are dancing and singing in front of a crowd	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y) & Singing(x) & Singing(y) & Crowd(z) & InFrontOf(x, y, z))	Two men are dancing and singing in front of a crowd	exists x. exists y. (Man(x) & Man(y) & Dancing(x) & Dancing(y) & Singing(x) & Singing(y) & Crowd(z) & InFrontOf(x, y, z))	n	False	False
2685	Two women are dancing and singing in front of a crowd	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y) & Singing(x) & Singing(y) & Crowd(z) & InFrontOf(x, y, z))	The persons are singing and dancing	exists x. (Person(x) -> (Singing(x) & Dancing(x)))	e	True	False
2686	Two women are dancing and singing in front of a crowd	exists x. exists y. (Woman(x) & Woman(y) & Dancing(x) & Dancing(y) & Singing(x) & Singing(y) & Crowd(z) & InFrontOf(x, y, z))	The women are singing and dancing	exists x. (Woman(x) -> (Singing(x) & Dancing(x)))	e	True	False
2687	A lemur is biting a person's finger	exists x. exists y. exists z. (Lemur(x) & Person(y) & Finger(z) & Biting(x, z, y))	An animal is biting a person's finger	exists x. exists y. exists z. (Animal(x) & Person(y) & Finger(z) & Biting(x, z, y))	e	True	False
2688	A lemur is licking a person's finger	exists x.exists y. (Lemur(x) & Person(y) -> LickingFinger(x, y))	A lemur is biting a person's finger	exists x. exists y. exists z. (Lemur(x) & Person(y) & Finger(z) & Biting(x, z, y))	n	False	False
2689	An animal is biting someone's finger	exists x.exists y.exists z. (Animal(x) & Finger(y) & Person(z) & Biting(x, y, z))	An animal is biting somebody's hand	exists x.exists y.exists z. (Animal(x) & Hand(y) & Person(z) & Biting(x, y, z))	e	False	False
2690	A lemur is biting a person's finger	exists x. exists y. exists z. (Lemur(x) & Person(y) & Finger(z) & Biting(x, z, y))	An animal is biting somebody's hand	exists x.exists y.exists z. (Animal(x) & Hand(y) & Person(z) & Biting(x, y, z))	n	False	False
2691	A lemur is biting a person's finger	exists x. exists y. exists z. (Lemur(x) & Person(y) & Finger(z) & Biting(x, z, y))	An animal is biting someone's finger	exists x.exists y.exists z. (Animal(x) & Finger(y) & Person(z) & Biting(x, y, z))	e	True	False
2692	A boy is skateboarding on a half pipe	exists x. exists y. (Boy(x) & HalfPipe(y) & SkateboardingOn(x, y))	A man is skateboarding on a half pipe	exists x. exists y. (Man(x) & HalfPipe(y) & SkateboardingOn(x, y))	n	False	False
2693	A skateboarder is doing acrobatics on a half pipe	exists x.exists y. (Skateboarder(x) & HalfPipe(y) -> DoingAcrobatics(x, y))	A skateboarder is doing tricks on a half pipe	exists x.exists y. (Skateboarder(x) & HalfPipe(y) -> DoingTricksOn(x, y))	e	False	False
2694	A skateboarder is falling off a half pipe	exists x. (Skateboarder(x) -> FallingOffHalfPipe(x))	A skateboarder is doing tricks on a half pipe	exists x.exists y. (Skateboarder(x) & HalfPipe(y) -> DoingTricksOn(x, y))	n	False	False
2695	A skateboarder is doing tricks on a half pipe	exists x.exists y. (Skateboarder(x) & HalfPipe(y) -> DoingTricksOn(x, y))	A boy is skateboarding on a half pipe	exists x. exists y. (Boy(x) & HalfPipe(y) & SkateboardingOn(x, y))	n	False	False
2696	A dog is sitting on the ground	exists x. (Dog(x) & SittingOnGround(x))	A dog is running on the ground	exists x. (Dog(x) -> RunsOnGround(x))	n	False	False
2697	The girl is tapping her fingernails	exists x. (Girl(x) & TappingFingernails(x))	A girl is tapping her fingernails	exists x. (Girl(x) & TappingFingernails(x))	e	True	False
2698	A dog is running on the ground	exists x. (Dog(x) -> RunsOnGround(x))	The girl is tapping her fingernails	exists x. (Girl(x) & TappingFingernails(x))	n	False	False
2699	A boy is tapping his fingernails	exists x. (Boy(x) & TappingFingernails(x))	A dog is running on the ground	exists x. (Dog(x) -> RunsOnGround(x))	n	False	False
2700	A girl is tapping her fingernails	exists x. (Girl(x) & TappingFingernails(x))	A big dog is running on the ground	exists x. (BigDog(x) -> RunsOnGround(x))	n	False	False
2701	A man and a woman are driving down the road in a car	exists x. exists y. (Man(x) & Woman(y) & DrivingInCar(x, y))	A man and a woman are driving down the road in an open-air vehicle	exists x. exists y. (Man(x) & Woman(y) & Driving(x, y) & OpenAirVehicle(x, y))	n	False	False
2702	A man and a woman are driving down the road in an open-air vehicle	exists x. exists y. (Man(x) & Woman(y) & Driving(x, y) & OpenAirVehicle(x, y))	Two men are driving down the road in an open-air vehicle	exists x. exists y. (Man(x) & Man(y) & DrivingInOpenAirVehicle(x, y))	n	False	False
2703	Two men are driving down the road in an open-air vehicle	exists x. exists y. (Man(x) & Man(y) & DrivingInOpenAirVehicle(x, y))	A man and a woman are driving down the street in a jeep	exists x. exists y. (Man(x) & Woman(y) & Jeep(z) & Driving(x, z) & Driving(y, z))	n	False	False
2704	The woman is not seasoning the oil	not exists x. (Woman(x) & Seasoning(x, Oil))	A woman is pouring ingredients into a bowl	exists x. exists y. exists z. (Woman(x) & Bowl(y) & Ingredients(z) & PouringInto(x, y, z))	n	False	False
2705	The woman is seasoning the oil	Seasoning(woman, oil)	There is no woman pouring ingredients into a bowl	not exists x. (Woman(x) & PouringIngredients(x))	n	False	False
2706	A woman is pouring ingredients into a bowl	exists x. exists y. exists z. (Woman(x) & Bowl(y) & Ingredients(z) & PouringInto(x, y, z))	The woman is seasoning the oil	Seasoning(woman, oil)	n	False	False
2707	A person is riding a horse	exists x. exists y. (Person(x) & Horse(y) & Riding(x, y))	A person is riding a motorbike	exists x. exists y. (Person(x) & Motorbike(y) & Riding(x, y))	n	False	False
2708	Potatoes are being sliced by a woman	exists x. exists y. (Potato(x) & Woman(y) & Slicing(y, x))	A woman is slicing potatoes	exists x. (Woman(x) & SlicingPotatoes(x))	e	False	False
2709	There is no woman slicing potatoes	not exists x. (Woman(x) & SlicingPotatoes(x))	A woman is slicing potatoes	exists x. (Woman(x) & SlicingPotatoes(x))	c	False	True
2710	A person is riding a motorbike	exists x. exists y. (Person(x) & Motorbike(y) & Riding(x, y))	A woman is slicing potatoes	exists x. (Woman(x) & SlicingPotatoes(x))	n	False	False
2711	Two men are boxing	exists x. exists y. (Man(x) & Man(y) & Boxing(x, y))	Two men are fighting	exists x. exists y. (Man(x) & Man(y) & Fighting(x, y))	e	False	False
2712	Two men are hugging	exists x. exists y. (Man(x) & Man(y) & Hugging(x, y))	Two men are fighting	exists x. exists y. (Man(x) & Man(y) & Fighting(x, y))	n	False	False
2713	The man is doing exercises	exists x. (Man(x) & DoingExercises(x))	Two men are boxing	exists x. exists y. (Man(x) & Man(y) & Boxing(x, y))	n	False	False
2714	The man is training	exists x. (Man(x) & Training(x))	Two men are fighting	exists x. exists y. (Man(x) & Man(y) & Fighting(x, y))	n	False	False
2715	A man is putting vegetables into a pot	exists x.exists y. (Man(x) & Pot(y) -> PuttingVegetablesInto(x, y))	Vegetables are being put into a pot by a man	exists x.exists y.exists z. (Vegetable(x) & Pot(y) & Man(z) -> PutInto(x, y, z))	e	False	False
2716	A man is removing vegetables from a pot	exists x.exists y. (Man(x) & Pot(y) -> RemovingVegetablesFrom(x, y))	A man is putting vegetables into a pot	exists x.exists y. (Man(x) & Pot(y) -> PuttingVegetablesInto(x, y))	n	False	False
2717	Someone is pouring ingredients into a pot	exists x. (PouringIntoPot(x))	Someone is adding ingredients to a pot	exists x. (Person(x) & AddingIngredients(x))	e	False	False
2718	Nobody is pouring ingredients into a pot	not exists x. (PouringIntoPot(x))	Someone is pouring ingredients into a pot	exists x. (PouringIntoPot(x))	c	False	True
2719	Someone is pouring ingredients into a pot	exists x. (PouringIntoPot(x))	A man is removing vegetables from a pot	exists x.exists y. (Man(x) & Pot(y) -> RemovingVegetablesFrom(x, y))	n	False	False
2720	A man is putting vegetables into a pot	exists x.exists y. (Man(x) & Pot(y) -> PuttingVegetablesInto(x, y))	Someone is pouring ingredients into a pot	exists x. (PouringIntoPot(x))	e	False	False
2721	The man is standing on a rocky mountain and gray clouds are in the background	exists x. exists y. (Man(x) & RockyMountain(y) & StandingOn(x, y) & GrayClouds(z) & Background(z, x))	The man is not standing on a rocky mountain and gray clouds are not in the background	not (Man(x) & StandingOnRockyMountain(x)) & not (GrayClouds(y) & InBackground(y))	c	False	False
2722	A black topless person is packing a pile of rocks and a front of clouds are in the background	exists x. (BlackToplessPerson(x) -> (PackingPileOfRocks(x) & FrontOfCloudsInBackground(x)))	A topless person with a back pack is in front of a pile of rocks and clouds are in the background	exists x. (ToplessPerson(x) & HasBackPack(x) -> InFrontOfPileOfRocks(x)) & exists y. (Cloud(y) -> InBackground(y))	n	False	False
2723	A person with a back pack, who is topless, is in front of a pile of rocks and clouds are in the background	exists x. (Person(x) & HasBackPack(x) & Topless(x) -> (exists y. (PileOfRocks(y) & InFrontOf(x, y)) & exists z. (Clouds(z) & InBackground(x, z))))	The man is standing on a rocky mountain and gray clouds are in the background	exists x. exists y. (Man(x) & RockyMountain(y) & StandingOn(x, y) & GrayClouds(z) & Background(z, x))	n	False	False
2724	A topless person with a back pack is in front of a pile of rocks and clouds are in the background	exists x. (ToplessPerson(x) & HasBackPack(x) -> InFrontOfPileOfRocks(x)) & exists y. (Cloud(y) -> InBackground(y))	The man is standing on a mountain, which is rocky, and gray clouds are in the background	exists x.exists y. (Man(x) & Mountain(y) & StandingOn(x, y) -> (Rocky(y) & GrayCloudsInBackground(y)))	n	False	False
2725	The man is not standing on a rocky mountain and gray clouds are not in the background	not (Man(x) & StandingOnRockyMountain(x)) & not (GrayClouds(y) & InBackground(y))	A topless person with a back pack is in front of a pile of rocks and clouds are in the background	exists x. (ToplessPerson(x) & HasBackPack(x) -> InFrontOfPileOfRocks(x)) & exists y. (Cloud(y) -> InBackground(y))	n	False	False
2726	A topless person with a back pack is in front of a pile of rocks and clouds are in the background	exists x. (ToplessPerson(x) & HasBackPack(x) -> InFrontOfPileOfRocks(x)) & exists y. (Cloud(y) -> InBackground(y))	The man is standing on a rocky mountain and gray clouds are in the background	exists x. exists y. (Man(x) & RockyMountain(y) & StandingOn(x, y) & GrayClouds(z) & Background(z, x))	n	False	False
2727	A dog is catching a ball	exists x. exists y. (Dog(x) & Ball(y) & Catching(x, y))	There is no dog catching a ball	not exists x. (Dog(x) & CatchingBall(x))	c	False	False
2728	A dog is furiously chasing a ball through dirt	exists x. exists y. exists z. (Dog(x) & Ball(y) & Dirt(z) & Chasing(x, y, z))	A dog is chasing a ball through dirt	exists x. exists y. exists z. (Dog(x) & Ball(y) & Dirt(z) & Chasing(x, y, z))	e	True	False
2729	A dog is catching a ball	exists x. exists y. (Dog(x) & Ball(y) & Catching(x, y))	A dog is leaving a ball in the dirt	exists x. exists y. exists z. (Dog(x) & Ball(y) & Dirt(z) & Leaving(x, y, z))	n	False	False
2730	A dog is chasing a ball through dirt	exists x. exists y. exists z. (Dog(x) & Ball(y) & Dirt(z) & Chasing(x, y, z))	The dog is catching a ball	exists x. exists y. (Dog(x) & Ball(y) & Catching(x, y))	n	False	False
2731	A dog is chasing a ball through dirt	exists x. exists y. exists z. (Dog(x) & Ball(y) & Dirt(z) & Chasing(x, y, z))	There is no dog catching a ball	not exists x. (Dog(x) & CatchingBall(x))	n	False	False
2732	A boy in a blue shirt has dirt on his face	exists x. (Boy(x) & WearsBlueShirt(x) -> HasDirtOnFace(x))	A boy in a blue dyed shirt has dirt on his face	exists x. (Boy(x) & BlueDyedShirt(x) -> HasDirtOnFace(x))	e	False	False
2733	A topless boy has a clean face	exists x. (Boy(x) & Topless(x) -> CleanFace(x))	A boy in a blue shirt has dirt on his face	exists x. (Boy(x) & WearsBlueShirt(x) -> HasDirtOnFace(x))	n	False	False
2734	A boy has a blue face and dirt on the shirt	exists x. (Boy(x) & BlueFace(x) & DirtOnShirt(x))	A boy in a blue shirt has dirt on his face	exists x. (Boy(x) & WearsBlueShirt(x) -> HasDirtOnFace(x))	n	False	False
2735	A boy in a blue shirt has dirt on his face	exists x. (Boy(x) & WearsBlueShirt(x) -> HasDirtOnFace(x))	There is no blond child holding a yellow bottle	not exists x. (Child(x) & Blond(x) & exists y. (Bottle(y) & Yellow(y) & Holds(x, y)))	n	False	False
2736	A topless boy has a clean face	exists x. (Boy(x) & Topless(x) -> CleanFace(x))	A blond child is holding a yellow bottle	exists x. exists y. (BlondChild(x) & YellowBottle(y) -> Holds(x, y))	n	False	False
2737	A boy in a blue shirt has dirt on his face	exists x. (Boy(x) & WearsBlueShirt(x) -> HasDirtOnFace(x))	A blond child is holding a yellow bottle	exists x. exists y. (BlondChild(x) & YellowBottle(y) -> Holds(x, y))	n	False	False
2738	A man in a hat is pacing through a store	exists x.exists y. (Man(x) & Hat(x) & Store(y) -> PacingThrough(x, y))	A man in a hat is walking through a store	exists x.exists y.exists z. (Man(x) & Hat(x) & Store(y) & WalkingThrough(x, y) -> Walking(z))	e	False	False
2739	A man in a hat is walking through a store	exists x.exists y.exists z. (Man(x) & Hat(x) & Store(y) & WalkingThrough(x, y) -> Walking(z))	A man in a hat is walking past a store	exists x.exists y. (Man(x) & Hat(x) & Store(y) -> WalkingPast(x, y))	n	False	False
2740	A walker is in a hat store for men	exists x. exists y. (Walker(x) & HatStore(y) & In(x, y))	A man in a hat is walking through a store	exists x.exists y.exists z. (Man(x) & Hat(x) & Store(y) & WalkingThrough(x, y) -> Walking(z))	n	False	False
2741	The man in a cowboy hat is walking through a market and is putting a hand in his pocket	exists x.exists y.exists z. (Man(x) & CowboyHat(x) & Market(y) & Pocket(z) -> (WalksThrough(x, y) & PutsHandIn(x, z)))	A man in a hat is walking past a store	exists x.exists y. (Man(x) & Hat(x) & Store(y) -> WalkingPast(x, y))	n	False	False
2742	The man in a cowboy hat is walking through a market and is putting a hand in his pocket	exists x.exists y.exists z. (Man(x) & CowboyHat(x) & Market(y) & Pocket(z) -> (WalksThrough(x, y) & PutsHandIn(x, z)))	A walker is in a hat store for men	exists x. exists y. (Walker(x) & HatStore(y) & In(x, y))	n	False	False
2743	A large white crane is flying far above the water	exists x. (LargeWhiteCrane(x) -> FlyingFarAboveWater(x))	A large white crane is flying near the water	exists x. (LargeWhiteCrane(x) & FlyingNearWater(x))	n	False	False
2744	A white bird is landing swiftly in the water	exists x. (WhiteBird(x) -> LandingSwiftlyInWater(x))	The white bird is landing swiftly in the water	exists x. (WhiteBird(x) -> LandingSwiftlyInWater(x))	e	True	False
2745	A white bird is landing swiftly in the water	exists x. (WhiteBird(x) -> LandingSwiftlyInWater(x))	A large white crane is flying near the water	exists x. (LargeWhiteCrane(x) & FlyingNearWater(x))	n	False	False
2746	A brown dog is calmly standing in the water	exists x. (Dog(x) & Brown(x) & CalmlyStandingInWater(x))	A brown dog is standing in the water	exists x. (Dog(x) & Brown(x) & StandingInWater(x))	e	False	False
2747	There is no brown dog standing in the water	not exists x. (Dog(x) & Brown(x) & StandingInWater(x))	A brown dog is standing in the water	exists x. (Dog(x) & Brown(x) & StandingInWater(x))	c	False	True
2748	A dog with golden fur is in the water	exists x. (Dog(x) & GoldenFur(x) -> InWater(x))	A dog with golden fur is out of the water	exists x. (Dog(x) & GoldenFur(x) -> not InWater(x))	c	False	False
2749	A dog with a golden coat is in the water	exists x. (Dog(x) & GoldenCoat(x) -> InWater(x))	A brown dog is standing in the water	exists x. (Dog(x) & Brown(x) & StandingInWater(x))	n	False	False
2750	A dog with golden fur is out of the water	exists x. (Dog(x) & GoldenFur(x) -> not InWater(x))	A brown dog is standing in the water	exists x. (Dog(x) & Brown(x) & StandingInWater(x))	n	False	False
2751	A dog with golden fur is in the water	exists x. (Dog(x) & GoldenFur(x) -> InWater(x))	A brown dog is standing in the water	exists x. (Dog(x) & Brown(x) & StandingInWater(x))	n	False	False
2752	A girl in a blue shirt, who looks young, is walking on the sidewalk and holding up a pink sign	exists x. (Girl(x) & WearsBlueShirt(x) & LooksYoung(x) -> (WalksOnSidewalk(x) & HoldsPinkSign(x)))	A young girl in a blue shirt is walking on the sidewalk and holding up a pink sign	exists x. (YoungGirl(x) & WearingBlueShirt(x) -> (WalkingOnSidewalk(x) & HoldingPinkSign(x)))	e	False	False
2753	A young girl in a blue shirt is walking on the sidewalk and holding up a pink sign	exists x. (YoungGirl(x) & WearingBlueShirt(x) -> (WalkingOnSidewalk(x) & HoldingPinkSign(x)))	There is no young girl in a blue shirt walking on the sidewalk and holding up a pink sign	not exists x. (YoungGirl(x) & BlueShirt(x) & WalkingOnSidewalk(x) & HoldingPinkSign(x))	c	False	False
2754	A young girl in a blue shirt is walking on the sidewalk and holding up a pink sign	exists x. (YoungGirl(x) & WearingBlueShirt(x) -> (WalkingOnSidewalk(x) & HoldingPinkSign(x)))	The girl is carrying a sign and is being followed by a group of people	exists x. (Girl(x) & CarryingSign(x) & FollowedByGroup(x))	n	False	False
2755	The girl is not carrying a sign and no group of people is following her	not exists x. (Girl(x) & not CarryingSign(x)) & not exists y. (GroupOfPeople(y) & Following(y, x))	A young girl in a blue shirt is walking on the sidewalk and holding up a pink sign	exists x. (YoungGirl(x) & WearingBlueShirt(x) -> (WalkingOnSidewalk(x) & HoldingPinkSign(x)))	c	False	False
2756	The girl is carrying a sign and a group of people is following her	exists x.exists y. (Girl(x) & Sign(y) & Carrying(x, y) -> FollowedByGroup(x))	A girl in a blue shirt, who looks young, is walking on the sidewalk and holding up a pink sign	exists x. (Girl(x) & WearsBlueShirt(x) & LooksYoung(x) -> (WalksOnSidewalk(x) & HoldsPinkSign(x)))	n	False	False
2757	The girl is carrying a sign and a group of people is following her	exists x.exists y. (Girl(x) & Sign(y) & Carrying(x, y) -> FollowedByGroup(x))	There is no young girl in a blue shirt walking on the sidewalk and holding up a pink sign	not exists x. (YoungGirl(x) & BlueShirt(x) & WalkingOnSidewalk(x) & HoldingPinkSign(x))	c	False	False
2758	A young girl by a pink sign is holding up a blue shirt and is walking on the sidewalk	exists x. (YoungGirl(x) & PinkSign(x) -> (HoldingBlueShirt(x) & WalkingOnSidewalk(x)))	The girl is carrying a sign and a group of people is following her	exists x.exists y. (Girl(x) & Sign(y) & Carrying(x, y) -> FollowedByGroup(x))	n	False	False
2759	The girl is carrying a sign and a group of people is following her	exists x.exists y. (Girl(x) & Sign(y) & Carrying(x, y) -> FollowedByGroup(x))	A young girl in a blue shirt is walking on the sidewalk and holding up a pink sign	exists x. (YoungGirl(x) & WearingBlueShirt(x) -> (WalkingOnSidewalk(x) & HoldingPinkSign(x)))	n	False	False
2760	A big city is begging for men and money holders	exists x. (BigCity(x) -> (BeggingForMen(x) & BeggingForMoneyHolders(x)))	A man in a big city is holding a sign and begging for money	exists x.exists y. (Man(x) & BigCity(y) -> (exists z. (Sign(z) & Holding(x, z) & BeggingForMoney(x))))	n	False	False
2761	A homeless man is holding up a sign and is begging for money	exists x. (HomelessMan(x) -> (HoldingUpSign(x) & BeggingForMoney(x)))	A homeless man is putting down a sign and refusing some charity	exists x. (HomelessMan(x) -> (PuttingDownSign(x) & RefusingCharity(x)))	n	False	False
2762	A homeless man is holding up a sign and is pitifully begging for money	exists x. (HomelessMan(x) -> (HoldingUpSign(x) & BeggingForMoney(x)))	A man in a big city is holding a sign and begging for money	exists x.exists y. (Man(x) & BigCity(y) -> (exists z. (Sign(z) & Holding(x, z) & BeggingForMoney(x))))	n	False	False
2763	One man in a big city is holding up a sign and begging for money	exists x. (Man(x) & BigCity(y) & HoldsUpSign(x) & BegsForMoney(x))	A homeless man is holding up a sign and is begging for money	exists x. (HomelessMan(x) -> (HoldingUpSign(x) & BeggingForMoney(x)))	n	False	False
2764	A big city is begging for men and money holders	exists x. (BigCity(x) -> (BeggingForMen(x) & BeggingForMoneyHolders(x)))	A homeless man is holding up a sign and is begging for money	exists x. (HomelessMan(x) -> (HoldingUpSign(x) & BeggingForMoney(x)))	n	False	False
2765	A homeless man is holding up a sign and is begging for money	exists x. (HomelessMan(x) -> (HoldingUpSign(x) & BeggingForMoney(x)))	A man in a big city is holding a sign and begging for money	exists x.exists y. (Man(x) & BigCity(y) -> (exists z. (Sign(z) & Holding(x, z) & BeggingForMoney(x))))	n	False	False
2766	A small dog is chasing a large brown cow	exists x. exists y. (SmallDog(x) & LargeBrownCow(y) & Chasing(x, y))	A dog, which is small, is chasing a large brown cow	exists x.exists y. (Dog(x) & Small(x) & Cow(y) & Large(y) & Brown(y) -> Chasing(x, y))	e	True	False
2767	A dog is chasing the tail of an animal in the grass	exists x.exists y. (Dog(x) & Animal(y) & InGrass(y) -> ChasingTail(x, y))	A dog, which is small, is chasing a large brown cow	exists x.exists y. (Dog(x) & Small(x) & Cow(y) & Large(y) & Brown(y) -> Chasing(x, y))	n	False	False
2768	A dog is chasing the tail of an animal in the grass	exists x.exists y. (Dog(x) & Animal(y) & InGrass(y) -> ChasingTail(x, y))	A small dog is chasing a large brown cow	exists x. exists y. (SmallDog(x) & LargeBrownCow(y) & Chasing(x, y))	n	False	False
2769	The small child is walking through the water and is being guided by another person	exists x.exists y. (SmallChild(x) & Person(y) & WalkingThroughWater(x) & GuidedBy(x, y) -> ChildGuide(x, y))	The small child is wading through the water and is being guided by another person	exists x.exists y. (SmallChild(x) & Person(y) -> (WadingThroughWater(x) & BeingGuidedBy(x, y)))	e	False	False
2770	A young child is splashing in the water	exists x. (YoungChild(x) & SplashingInWater(x))	The young child is splashing in the water	exists x. (YoungChild(x) & SplashingInWater(x))	e	True	False
2771	The young child is splashing in the water	exists x. (YoungChild(x) & SplashingInWater(x))	The small child is wading through the water and is being guided by another person	exists x.exists y. (SmallChild(x) & Person(y) -> (WadingThroughWater(x) & BeingGuidedBy(x, y)))	n	False	False
2772	The small child is wading through the water and is being guided by another person	exists x.exists y. (SmallChild(x) & Person(y) -> (WadingThroughWater(x) & BeingGuidedBy(x, y)))	There is no young child splashing in the water	not exists x. (YoungChild(x) & SplashingInWater(x))	c	False	False
2773	A young child is splashing in the water	exists x. (YoungChild(x) & SplashingInWater(x))	The small child is not wading through the water and is not being guided by another person	exists x. (SmallChild(x) -> not Wading(x) & not GuidedByPerson(x))	n	False	False
2774	A woman is ignoring a man	exists x. exists y. (Woman(x) & Man(y) & Ignoring(x, y))	A woman is looking curiously at a man	exists x. exists y. (Woman(x) & Man(y) & CuriouslyLookingAt(x, y))	n	False	False
2775	A man and a woman are outside and are wearing light colored shirts	exists x. exists y. (Man(x) & Woman(y) & Outside(x) & Outside(y) & WearingLightColoredShirt(x) & WearingLightColoredShirt(y))	A man and a woman are in a beige room, wearing dark colored shirts and a monitor is in the background	exists x. exists y. exists z. (Man(x) & Woman(y) & BeigeRoom(z) -> (InRoom(x, y, z) & WearingDarkShirt(x) & MonitorInBackground(z)))	n	False	False
2776	A woman is looking curiously at a man	exists x. exists y. (Woman(x) & Man(y) & CuriouslyLookingAt(x, y))	A man and a woman are in a room painted beige, wearing dark colored shirts and a monitor is in the background	exists x.exists y.exists z. (Man(x) & Woman(y) & Room(z) & PaintedBeige(z) & WearingDarkShirts(x) & WearingDarkShirts(y) & MonitorInBackground(z) -> InRoom(x, y, z))	n	False	False
2777	The little dog is dropping the bedroom slipper from its mouth	exists x.exists y. (LittleDog(x) & BedroomSlipper(y) -> DroppingFromMouth(x, y))	The little dog is grabbing the bedroom slipper with its mouth	exists x.exists y. (LittleDog(x) & BedroomSlipper(y) -> GrabbingWithMouth(x, y))	n	False	False
2778	A brown dog is staring attentively at a brown and white dog	exists x.exists y. (BrownDog(x) & BrownAndWhiteDog(y) -> StaringAttentively(x, y))	There is no brown dog staring attentively at a brown and white dog	not exists x. (Dog(x) & Brown(x) & StaringAttentively(x, y) & Dog(y) & BrownAndWhite(y))	c	False	False
2779	A brown dog is looking closely at a brown and white dog	exists x. exists y. (BrownDog(x) & BrownAndWhiteDog(y) -> LookingCloselyAt(x, y))	The little dog is grabbing the bedroom slipper with its mouth	exists x.exists y. (LittleDog(x) & BedroomSlipper(y) -> GrabbingWithMouth(x, y))	n	False	False
2780	There is no brown dog staring attentively at a brown and white dog	not exists x. (Dog(x) & Brown(x) & StaringAttentively(x, y) & Dog(y) & BrownAndWhite(y))	The little dog is grabbing the bedroom slipper with its mouth	exists x.exists y. (LittleDog(x) & BedroomSlipper(y) -> GrabbingWithMouth(x, y))	n	False	False
2781	The little dog is grabbing the bedroom slipper with its mouth	exists x.exists y. (LittleDog(x) & BedroomSlipper(y) -> GrabbingWithMouth(x, y))	A brown dog is staring attentively at a brown and white dog	exists x.exists y. (BrownDog(x) & BrownAndWhiteDog(y) -> StaringAttentively(x, y))	n	False	False
2782	The man is performing a large jump	PerformsLargeJump(man)	A large jump is being performed by a man	exists x. (Jump(x) & Large(x) & PerformedBy(x, Man))	e	False	False
2783	The man is performing a large jump	PerformsLargeJump(man)	The man is not performing a large jump	not PerformsLargeJump(man)	c	False	True
2784	A person in a blue jacket is jumping off of a tall cement wall	exists x. (Person(x) & WearsBlueJacket(x) -> JumpsOffTallConcreteWall(x))	A person in a blue jacket is jumping onto a tall cement wall	exists x.exists y.exists z. (Person(x) & BlueJacket(x) & TallCementWall(y) & JumpsOnto(x, y) -> Wall(z))	n	False	False
2785	A person is cementing a jacket in a blue tall wall and jumping	exists x. (Person(x) & CementingJacket(x) & BlueTallWall(x) & Jumping(x))	A person in a blue jacket is jumping off of a tall cement wall	exists x. (Person(x) & WearsBlueJacket(x) -> JumpsOffTallConcreteWall(x))	n	False	False
2786	The man is performing a large jump	PerformsLargeJump(man)	A person in a blue jacket is jumping onto a tall cement wall	exists x.exists y.exists z. (Person(x) & BlueJacket(x) & TallCementWall(y) & JumpsOnto(x, y) -> Wall(z))	n	False	False
2787	A person is cementing a jacket in a blue tall wall and jumping	exists x. (Person(x) & CementingJacket(x) & BlueTallWall(x) & Jumping(x))	The man is performing a large jump	PerformsLargeJump(man)	n	False	False
2788	A person in a blue jacket is jumping off of a tall cement wall	exists x. (Person(x) & WearsBlueJacket(x) -> JumpsOffTallConcreteWall(x))	A large jump is being performed by a man	exists x. (Jump(x) & Large(x) & PerformedBy(x, Man))	n	False	False
2789	A person in a blue jacket is jumping off of a tall cement wall	exists x. (Person(x) & WearsBlueJacket(x) -> JumpsOffTallConcreteWall(x))	The man is performing a large jump	PerformsLargeJump(man)	n	False	False
2790	A woman in jeans is sitting on the saddle of a horse	exists x.exists y. (Woman(x) & Jeans(x) & Horse(y) -> SitsOnSaddle(x, y))	The woman in jeans is sitting on the saddle of a horse	exists x.exists y. (Woman(x) & Jeans(x) & Horse(y) -> SitsOnSaddle(x, y))	e	True	False
2791	A person wearing jeans is sitting happily on the top of a horse saddle	exists x. (Person(x) & WearingJeans(x) -> SittingHappilyOnTopOfHorseSaddle(x))	A person wearing jeans is sitting on top of a horse saddle	exists x.exists y. (Person(x) & WearingJeans(x) & HorseSaddle(y) -> SittingOn(x, y))	e	False	False
2792	A woman in jeans is sitting on the saddle of a horse	exists x.exists y. (Woman(x) & Jeans(x) & Horse(y) -> SitsOnSaddle(x, y))	There is no person wearing jeans sitting on top of a horse saddle	not exists x. (Person(x) & WearingJeans(x) & SittingOnHorseSaddle(x))	c	False	False
2793	A person wearing jeans is sitting on top of a horse saddle	exists x.exists y. (Person(x) & WearingJeans(x) & HorseSaddle(y) -> SittingOn(x, y))	A woman in jeans is standing near a horse with a saddle	exists x.exists y.exists z. (Woman(x) & Jeans(x) & Horse(y) & Saddle(z) -> StandingNear(x, y, z))	n	False	False
2794	The brown dogs are playfully fighting on the sandy shore	exists x.exists y.exists z. (BrownDog(x) & SandyShore(y) & Fighting(z) -> (Dog(x) & On(x, y) & Playful(z) & On(x, z)))	A brown dog and a red dog are frolicking on the beach	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Red(y) & FrolickingOnBeach(x, y))	n	False	False
2795	The brown dogs are playfully fighting on the sandy beach	exists x.exists y.exists z. (BrownDog(x) & SandyBeach(y) & Fighting(z) -> (IsOn(x, y) & Playful(z)))	The brown dog and the red dog are frolicking on the beach	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Red(y) & FrolickingOnBeach(x, y))	n	False	False
2796	The brown dogs are playfully fighting on the sandy beach	exists x.exists y.exists z. (BrownDog(x) & SandyBeach(y) & Fighting(z) -> (IsOn(x, y) & Playful(z)))	A brown dog and a red dog are sitting sadly on the beach	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Red(y) & Sitting(x) & Sitting(y) & Sadly(x) & Sadly(y) & On(x, beach) & On(y, beach))	n	False	False
2797	A brown dog and a red dog are frolicking on the beach	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Red(y) & FrolickingOnBeach(x, y))	The brown dogs are playfully fighting on the sandy beach	exists x.exists y.exists z. (BrownDog(x) & SandyBeach(y) & Fighting(z) -> (IsOn(x, y) & Playful(z)))	n	False	False
2798	A man is standing beside a birdcage which is large and colorful	exists x. exists y. (Man(x) & Birdcage(y) & StandingBeside(x, y) & Large(y) & Colorful(y))	A man is standing beside a large and colorful birdcage	exists x. exists y. (Man(x) & Birdcage(y) & Large(y) & Colorful(y) & StandingBeside(x, y))	e	True	False
2799	There is no man standing beside a large and colorful birdcage	not exists x. (Man(x) & StandingBeside(x, LargeBirdcage) & StandingBeside(x, ColorfulBirdcage))	The man is standing next to a bird cage	exists x. exists y. (Man(x) & BirdCage(y) & StandingNextTo(x, y))	n	False	False
2800	A man is standing beside a large and colorful birdcage	exists x. exists y. (Man(x) & Birdcage(y) & Large(y) & Colorful(y) & StandingBeside(x, y))	The man is standing next to a bird cage	exists x. exists y. (Man(x) & BirdCage(y) & StandingNextTo(x, y))	e	False	False
2801	A brown and black dog is running through the leaves	exists x. (Dog(x) & Brown(x) & Black(x) -> exists y. (Leaves(y) & RunningThrough(x, y)))	A brown and black dog is resting in the leaves	exists x. (Dog(x) & Brown(x) & Black(x) & RestingInLeaves(x))	n	False	False
2802	A brown and black dog is running through the leaves	exists x. (Dog(x) & Brown(x) & Black(x) -> exists y. (Leaves(y) & RunningThrough(x, y)))	A dog in a colored coat is running swiftly across the yard	exists x. (Dog(x) & HasColoredCoat(x) -> RunsSwiftlyAcrossYard(x))	n	False	False
2803	One brown and black dog is running through the leaves	exists x. (Dog(x) & Brown(x) & Black(x) & RunningThroughLeaves(x))	A dog in a colored coat is running across the yard	exists x. (Dog(x) & HasColoredCoat(x) -> RunsAcrossYard(x))	n	False	False
2804	A dog in a colored coat is running across the yard	exists x. (Dog(x) & HasColoredCoat(x) -> RunsAcrossYard(x))	A brown and black dog is resting in the leaves	exists x. (Dog(x) & Brown(x) & Black(x) & RestingInLeaves(x))	n	False	False
2805	A dog in a colored coat is running across the yard	exists x. (Dog(x) & HasColoredCoat(x) -> RunsAcrossYard(x))	A brown and black dog is running through the leaves	exists x. (Dog(x) & Brown(x) & Black(x) -> exists y. (Leaves(y) & RunningThrough(x, y)))	n	False	False
2806	A brown and white dog is holding a baseball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) -> exists y. (Baseball(y) & HoldsInMouth(x, y)))	A dog, which has a brown and white coat, is holding a baseball in its mouth	exists x. (Dog(x) & BrownCoat(x) & WhiteCoat(x) -> exists y. (Baseball(y) & HoldsInMouth(x, y)))	e	False	False
2807	A brown and white dog is putting the baseball in its mouth down	exists x. (Dog(x) & Brown(x) & White(x) -> PutsBaseballInMouth(x))	A brown and white dog is holding a baseball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) -> exists y. (Baseball(y) & HoldsInMouth(x, y)))	n	False	False
2808	A black and white dog is holding a baseball in its mouth	exists x. (Dog(x) & Black(x) & White(x) -> exists y. (Baseball(y) & HoldsInMouth(x, y)))	A baseball is being held in its mouth by a black and white dog	exists x.exists y. (Baseball(x) & Dog(y) & Black(y) & White(y) -> HoldsInMouth(y, x))	e	True	False
2809	A brown and white dog is holding a baseball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) -> exists y. (Baseball(y) & HoldsInMouth(x, y)))	A baseball is being held in its mouth by a black and white dog	exists x.exists y. (Baseball(x) & Dog(y) & Black(y) & White(y) -> HoldsInMouth(y, x))	e	False	False
2810	A black and white dog is holding a baseball in its mouth	exists x. (Dog(x) & Black(x) & White(x) -> exists y. (Baseball(y) & HoldsInMouth(x, y)))	A brown and white dog is putting the baseball in its mouth down	exists x. (Dog(x) & Brown(x) & White(x) -> PutsBaseballInMouth(x))	n	False	False
2811	A boy wearing red shorts is jumping into a paddling pool	exists x.exists y.exists z. (Boy(x) & RedShorts(x) & PaddlingPool(y) & Wearing(x, y) -> JumpingInto(x, z))	There is no boy wearing red shorts jumping into a paddling pool	not exists x. (Boy(x) & WearingRedShorts(x) & JumpingIntoPaddlingPool(x))	c	False	False
2812	A boy, who looks young and is wearing a red swimsuit, is jumping into a blue kiddies pool	exists x. (Boy(x) & YoungLooking(x) & WearingRedSwimsuit(x) -> JumpingIntoBlueKiddiesPool(x))	A young boy wearing a red swimsuit is jumping into a blue kiddies pool	exists x.exists y.exists z. (YoungBoy(x) & RedSwimsuit(x) & BlueKiddiesPool(y) & JumpingInto(x, y) -> Pool(z) & KiddiesPool(z))	e	False	False
2813	A young boy wearing a red swimsuit is jumping into a blue kiddies pool	exists x.exists y.exists z. (YoungBoy(x) & RedSwimsuit(x) & BlueKiddiesPool(y) & JumpingInto(x, y) -> Pool(z) & KiddiesPool(z))	A young boy wearing a red swimsuit is jumping out of a blue kiddies pool	exists x.exists y.exists z. (YoungBoy(x) & RedSwimsuit(x) & BlueKiddiesPool(y) & JumpingOutOf(x, y) -> Swimsuit(x))	c	False	False
2814	A young boy wearing a red swimsuit is jumping into a blue kiddies pool	exists x.exists y.exists z. (YoungBoy(x) & RedSwimsuit(x) & BlueKiddiesPool(y) & JumpingInto(x, y) -> Pool(z) & KiddiesPool(z))	A kid wearing red shorts is jumping into a paddling pool	exists x. (Kid(x) & WearsRedShorts(x) -> JumpsIntoPaddlingPool(x))	n	False	False
2815	There is no boy wearing red shorts jumping into a paddling pool	not exists x. (Boy(x) & WearingRedShorts(x) & JumpingIntoPaddlingPool(x))	A young boy wearing a red swimsuit is jumping into a blue kiddies pool	exists x.exists y.exists z. (YoungBoy(x) & RedSwimsuit(x) & BlueKiddiesPool(y) & JumpingInto(x, y) -> Pool(z) & KiddiesPool(z))	n	False	False
2816	A group of dogs are racing furiously and have muzzles on the noses	exists x. (GroupOfDogs(x) -> (RacingFuriously(x) & HasMuzzlesOnNoses(x)))	A group of dogs are racing and have muzzles on their noses	exists x. (GroupOfDogs(x) -> (Racing(x) & HasMuzzle(x)))	e	False	False
2817	A group of racing dogs are nosing a muzzle	exists x.exists y. (RacingDogGroup(x) & Muzzle(y) -> Noses(x, y))	A group of dogs are racing and have muzzles on their noses	exists x. (GroupOfDogs(x) -> (Racing(x) & HasMuzzle(x)))	n	False	False
2818	There is no group of racing dogs wearing striped uniforms and running down a track	not exists x. (Group(x) & RacingDogs(x) & WearingStripedUniforms(x) & RunningDownTrack(x))	A group of dogs are racing and have muzzles on their noses	exists x. (GroupOfDogs(x) -> (Racing(x) & HasMuzzle(x)))	n	False	False
2819	A group of racing dogs is wearing striped uniforms and is running down a track	exists x. (GroupOfRacingDogs(x) -> (WearingStripedUniforms(x) & RunningDownTrack(x)))	A group of dogs are racing furiously and have muzzles on the noses	exists x. (GroupOfDogs(x) -> (RacingFuriously(x) & HasMuzzlesOnNoses(x)))	n	False	False
2820	A group of dogs are resting without muzzles	exists x. (GroupOfDogs(x) -> not Muzzled(x))	A group of racing dogs is wearing striped uniforms and is running down a track	exists x. (GroupOfRacingDogs(x) -> (WearingStripedUniforms(x) & RunningDownTrack(x)))	n	False	False
2821	A group of racing dogs are nosing a muzzle	exists x.exists y. (RacingDogGroup(x) & Muzzle(y) -> Noses(x, y))	A group of racing dogs is wearing striped uniforms and is running down a track	exists x. (GroupOfRacingDogs(x) -> (WearingStripedUniforms(x) & RunningDownTrack(x)))	n	False	False
2822	A group of racing dogs is wearing striped uniforms and is running down a track	exists x. (GroupOfRacingDogs(x) -> (WearingStripedUniforms(x) & RunningDownTrack(x)))	A group of dogs are racing and have muzzles on their noses	exists x. (GroupOfDogs(x) -> (Racing(x) & HasMuzzle(x)))	n	False	False
2823	Two people are wading through the water	exists x. exists y. (Person(x) & Person(y) & Wading(x) & Wading(y) & Water(x) & Water(y))	A couple or people are wading through the water	exists x. (Couple(x) | People(x) -> WadingThroughWater(x))	e	False	False
2824	Nobody is standing in the ocean and watching the sunset	not exists x. (Person(x) & StandingInOcean(x) & WatchingSunset(x))	Two people are wading through the water	exists x. exists y. (Person(x) & Person(y) & Wading(x) & Wading(y) & Water(x) & Water(y))	n	False	False
2825	Two people are standing in the ocean and watching the sunset	exists x. exists y. (Person(x) & Person(y) & StandingInOcean(x) & StandingInOcean(y) & WatchingSunset(x) & WatchingSunset(y))	A couple or people are wading through the water	exists x. (Couple(x) | People(x) -> WadingThroughWater(x))	n	False	False
2826	Two people are standing in the ocean and watching the sunset	exists x. exists y. (Person(x) & Person(y) & StandingInOcean(x) & StandingInOcean(y) & WatchingSunset(x) & WatchingSunset(y))	Two people are wading through the water	exists x. exists y. (Person(x) & Person(y) & Wading(x) & Wading(y) & Water(x) & Water(y))	n	False	False
2827	A race car driver is standing up and pointing his hand at the sky	exists x. (RaceCarDriver(x) -> (StandingUp(x) & PointingHandAtSky(x)))	A person in a blue jacket is wearing a colorful helmet	exists x. (Person(x) & WearsBlueJacket(x) -> WearsColorfulHelmet(x))	n	False	False
2828	A boy and a girl are naked	exists x. exists y. (Boy(x) & Girl(y) & Naked(x) & Naked(y))	A boy and a girl in swimsuits are wearing arm floats	exists x.exists y.exists z. (Boy(x) & Girl(y) & Swimsuit(z) & Wearing(x, z) & Wearing(y, z) -> WearingArmFloat(x, y))	c	False	False
2829	The boy and the girl are cheerfully playing and wearing arm floats	exists x.exists y. (Boy(x) & Girl(y) -> (CheerfullyPlaying(x) & CheerfullyPlaying(y) & WearingArmFloats(x) & WearingArmFloats(y)))	The boy and the girl are playing and wearing arm floats	exists x.exists y.exists z. (Boy(x) & Girl(y) & ArmFloat(z) -> (Playing(x, z) & Wearing(y, z)))	e	False	False
2830	The boy and the girl are cheerfully playing and wearing arm floats	exists x.exists y. (Boy(x) & Girl(y) -> (CheerfullyPlaying(x) & CheerfullyPlaying(y) & WearingArmFloats(x) & WearingArmFloats(y)))	A boy and a girl in swimsuits are wearing arm floats	exists x.exists y.exists z. (Boy(x) & Girl(y) & Swimsuit(z) & Wearing(x, z) & Wearing(y, z) -> WearingArmFloat(x, y))	n	False	False
2831	A boy and a girl in swimsuits are wearing floats for their arms	exists x.exists y.exists z. (Boy(x) & Girl(y) & Swimsuit(z) & Wearing(x, z) & Wearing(y, z) -> WearingFloat(x, y, z))	The boy and the girl are playing and wearing arm floats	exists x.exists y.exists z. (Boy(x) & Girl(y) & ArmFloat(z) -> (Playing(x, z) & Wearing(y, z)))	n	False	False
2832	The boy and the girl are playing and wearing arm floats	exists x.exists y.exists z. (Boy(x) & Girl(y) & ArmFloat(z) -> (Playing(x, z) & Wearing(y, z)))	A boy and a girl are naked	exists x. exists y. (Boy(x) & Girl(y) & Naked(x) & Naked(y))	n	False	False
2833	A woman in a yellow shirt is surfing on a pink surfboard	exists x.exists y.exists z. (Woman(x) & YellowShirt(x) & PinkSurfboard(y) & Surfing(x, y) -> Surfer(z, x, y))	A woman in a pink shirt is surfing through yellow surfboards	exists x. (Woman(x) & WearsPinkShirt(x) -> SurfsYellowSurfboards(x))	n	False	False
2834	The wave is being ridden by a surfer	exists x.exists y. (Wave(x) & Surfer(y) -> Riding(y, x))	A surfer is riding the wave	exists x.exists y. (Surfer(x) & Wave(y) -> Riding(x, y))	e	True	False
2835	A woman in a pink shirt is surfing through yellow surfboards	exists x. (Woman(x) & WearsPinkShirt(x) -> SurfsYellowSurfboards(x))	A surfer is riding the wave	exists x.exists y. (Surfer(x) & Wave(y) -> Riding(x, y))	n	False	False
2836	Four people are standing on a low cement ledge	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & StandingOnLowCementLedge(x, y, z, w))	Four people are sitting on a low cement ledge	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & SittingOnLowCementLedge(x, y, z, w))	n	False	False
2837	Some people are sitting on a low cement ledge	exists x.exists y. (Person(x) & Person(y) & LowCementLedge(z) & SittingOn(x, z) & SittingOn(y, z))	The group of people is sitting on a rocky ledge and a scenic view is behind them	exists x.exists y. (Group(x) & Person(y) & SittingOn(y, x) & RockyLedge(x) & ScenicView(x) -> Behind(y, x))	n	False	False
2838	Four people are standing on a low cement ledge	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & StandingOnLowCementLedge(x, y, z, w))	The group of people is sitting on a rocky ledge and a scenic view is behind them	exists x.exists y. (Group(x) & Person(y) & SittingOn(y, x) & RockyLedge(x) & ScenicView(x) -> Behind(y, x))	n	False	False
2839	Two girls are laughing and other girls are watching them	exists x.exists y.exists z. (Girl(x) & Girl(y) & Girl(z) & Laughing(x) & Laughing(y) & Watching(z, x, y))	The group of Asian girls are standing together	exists x. (AsianGirl(x) -> exists y. (Group(y) & StandingTogether(y, x)))	n	False	False
2840	A cold cyclist is celebrating	exists x. (ColdCyclist(x) -> Celebrating(x))	Something is being celebrated by a cold cyclist	exists x. (ColdCyclist(x) & Celebrates(x))	e	False	False
2841	A bicyclist is holding a bike over his head in a group of people	exists x.exists y.exists z. (Bicyclist(x) & Bike(y) & GroupOfPeople(z) -> HoldsOverHead(x, y, z))	There is no cold cyclist celebrating	not exists x. (ColdCyclist(x) & Celebrating(x))	n	False	False
2842	A cold cyclist is celebrating	exists x. (ColdCyclist(x) -> Celebrating(x))	A cyclist is being held over the heads of a group of people with the bike	exists x.exists y.exists z. (Cyclist(x) & GroupOfPeople(y) & Bike(z) -> HeldOverHeads(x, y, z))	n	False	False
2843	A man is sitting on a boat in font of the sunset, near a flag	exists x. exists y. exists z. (Man(x) & Boat(y) & Flag(z) & SittingOn(x, y) & InFrontOfSunset(x, y) & Near(x, z))	A man is on a ship in front of the sunset	exists x. exists y. exists z. (Man(x) & Ship(y) & Sunset(z) & On(x, y) & InFrontOf(x, z))	e	False	False
2844	A man is sitting on a boat in font of the sunset, near a flag	exists x. exists y. exists z. (Man(x) & Boat(y) & Flag(z) & SittingOn(x, y) & InFrontOfSunset(x, y) & Near(x, z))	A man is on a boat in front of the sunset	exists x. exists y. exists z. (Man(x) & Boat(y) & Sunset(z) & On(x, y) & InFrontOf(x, z))	e	False	False
2845	Some people at a drag race are looking at the flames that are coming out of the cars	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & DragRace(x) & DragRace(y) & DragRace(z) & Flame(x) & Flame(y) & Flame(z))	People at a drag race are looking at the flames that are coming out of the cars	exists x.exists y.exists z. (DragRace(x) & Person(y) & Car(z) -> LookingAtFlames(y, z))	e	False	False
2846	People at a drag race are looking at the flames that are coming out of the cars	exists x.exists y.exists z. (DragRace(x) & Person(y) & Car(z) -> LookingAtFlames(y, z))	People at a drag race are running away from the flames that are coming out of the cars	exists x.exists y.exists z. (DragRace(x) & Person(y) & Car(z) -> (RunsAwayFromFlames(y, z)))	n	False	False
2847	The crowd is watching two cars designed for racing that are leaving the starting line	exists x.exists y.exists z. (Crowd(x) & Car(y) & Car(z) & DesignedForRacing(y) & DesignedForRacing(z) -> Watching(x, y, z))	The crowd is watching two racing cars that are leaving the starting line	exists x.exists y.exists z. (Crowd(x) & RacingCar(y) & RacingCar(z) & LeavingStartingLine(y, z) -> Watching(x, y, z))	e	False	False
2848	People at a drag race are looking at the flames that are coming out of the cars	exists x.exists y.exists z. (DragRace(x) & Person(y) & Car(z) -> LookingAtFlames(y, z))	The crowd is not watching two racing cars that are leaving the starting line	not exists x. exists y. (Crowd(x) & RacingCar(y) & LeavingStartingLine(y) & Watching(x, y))	n	False	False
2849	The crowd is watching two racing cars that are leaving the starting line	exists x.exists y.exists z. (Crowd(x) & RacingCar(y) & RacingCar(z) & LeavingStartingLine(y, z) -> Watching(x, y, z))	Some people at a drag race are looking at the flames that are coming out of the cars	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & DragRace(x) & DragRace(y) & DragRace(z) & Flame(x) & Flame(y) & Flame(z))	n	False	False
2850	The crowd is watching two racing cars that are leaving the starting line	exists x.exists y.exists z. (Crowd(x) & RacingCar(y) & RacingCar(z) & LeavingStartingLine(y, z) -> Watching(x, y, z))	People at a drag race are looking at the flames that are coming out of the cars	exists x.exists y.exists z. (DragRace(x) & Person(y) & Car(z) -> LookingAtFlames(y, z))	n	False	False
2851	Two dogs are cheerfully playing together on the grass	exists x. exists y. (Dog(x) & Dog(y) & PlayingTogether(x, y) & OnGrass(x, y))	Two dogs are playing together on the grass	exists x. exists y. (Dog(x) & Dog(y) & PlayingTogether(x, y) & OnGrass(x, y))	e	True	False
2852	Two dogs are playing together on the grass	exists x. exists y. (Dog(x) & Dog(y) & PlayingTogether(x, y) & OnGrass(x, y))	A big dog and a small white dog are walking past each other	exists x. exists y. (Dog(x) & Dog(y) & Big(x) & Small(y) & WalkingPast(x, y))	n	False	False
2853	A big dog and a small white dog are playing together	exists x. exists y. (Dog(x) & Dog(y) & Big(x) & Small(y) & PlayingTogether(x, y))	Two dogs are resting together in the grass	exists x. exists y. (Dog(x) & Dog(y) & RestingTogether(x, y) & InGrass(x, y))	n	False	False
2854	A big dog and a small white dog are playing together	exists x. exists y. (Dog(x) & Dog(y) & Big(x) & Small(y) & PlayingTogether(x, y))	Two dogs are playing together on the grass	exists x. exists y. (Dog(x) & Dog(y) & PlayingTogether(x, y) & OnGrass(x, y))	n	False	False
2855	A brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	A brown dog is sitting down	exists x. (Dog(x) & Brown(x) & SittingDown(x))	n	False	False
2856	A brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	A healthy looking dog is lying on the ground	exists x. (HealthyLookingDog(x) -> LyingOnGround(x))	n	False	False
2857	A dog, which is brown, is jumping in the air	exists x. (Dog(x) & Brown(x) -> JumpingInAir(x))	A malnourished looking dog is standing on its hind legs and preparing to jump	exists x. (Dog(x) & MalnourishedLooking(x) -> (StandingOnHindLegs(x) & PreparingToJump(x)))	n	False	False
2858	A brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	A malnourished looking dog is standing on its hind legs and preparing to jump	exists x. (Dog(x) & MalnourishedLooking(x) -> (StandingOnHindLegs(x) & PreparingToJump(x)))	n	False	False
2859	A policeman is sitting on a motorcycle	exists x. exists y. (Policeman(x) & Motorcycle(y) & SittingOn(x, y))	A policeman is getting off of a motorcycle	exists x. (Policeman(x) & Motorcycle(y) & Riding(x, y) & GettingOff(x, y))	c	False	False
2860	A policeman is sitting on a motorcycle	exists x. exists y. (Policeman(x) & Motorcycle(y) & SittingOn(x, y))	A motorcyclist is sitting by a police man	exists x.exists y. (Motorcyclist(x) & PoliceMan(y) -> SittingBy(x, y))	n	False	False
2861	A policeman is getting off of a motorcycle	exists x. (Policeman(x) & Motorcycle(y) & Riding(x, y) & GettingOff(x, y))	The cop is sitting on a police bike	exists x. exists y. (Cop(x) & PoliceBike(y) & SittingOn(x, y))	n	False	False
2862	The cop is sitting on a police bike	exists x. exists y. (Cop(x) & PoliceBike(y) & SittingOn(x, y))	A motorcyclist is sitting by a police man	exists x.exists y. (Motorcyclist(x) & PoliceMan(y) -> SittingBy(x, y))	n	False	False
2863	The cop is sitting on a police bicycle	exists x. exists y. (Cop(x) & PoliceBicycle(y) & SittingOn(x, y))	A policeman is sitting on a motorcycle	exists x. exists y. (Policeman(x) & Motorcycle(y) & SittingOn(x, y))	n	False	False
2864	A policeman is sitting on a motorcycle	exists x. exists y. (Policeman(x) & Motorcycle(y) & SittingOn(x, y))	The cop is not sitting on a police bike	not exists x. (Cop(x) & SittingOnPoliceBike(x))	c	False	False
2865	Two women are wearing bikinis on the sandy beach	exists x. exists y. (Woman(x) & Woman(y) & Bikini(x) & Bikini(y) & WearingOnSandyBeach(x) & WearingOnSandyBeach(y))	There are no women wearing bikinis on the sandy beach	not exists x. (Woman(x) & WearingBikini(x) & OnSandyBeach(x))	c	False	False
2866	Two women are wearing bikinis and walking on the sand	exists x. exists y. (Woman(x) & Woman(y) & WearingBikini(x) & WearingBikini(y) & WalkingOnSand(x) & WalkingOnSand(y))	Two women are wearing bikinis and are walking on the sand	exists x. exists y. (Woman(x) & Woman(y) & WearingBikini(x) & WearingBikini(y) & WalkingOnSand(x) & WalkingOnSand(y))	e	True	False
2867	Two women are naked and are standing on the sand	exists x. exists y. (Woman(x) & Woman(y) & Naked(x) & Naked(y) & StandingOnSand(x) & StandingOnSand(y))	Two women are wearing bikinis and are walking on the sand	exists x. exists y. (Woman(x) & Woman(y) & WearingBikini(x) & WearingBikini(y) & WalkingOnSand(x) & WalkingOnSand(y))	n	False	False
2868	Two women are wearing bikinis on the sandy beach	exists x. exists y. (Woman(x) & Woman(y) & Bikini(x) & Bikini(y) & WearingOnSandyBeach(x) & WearingOnSandyBeach(y))	Two women are naked and are standing on the sand	exists x. exists y. (Woman(x) & Woman(y) & Naked(x) & Naked(y) & StandingOnSand(x) & StandingOnSand(y))	n	False	False
2869	Two women are wearing bikinis and are walking on the sand	exists x. exists y. (Woman(x) & Woman(y) & WearingBikini(x) & WearingBikini(y) & WalkingOnSand(x) & WalkingOnSand(y))	Two women are wearing bikinis on the beach which is sandy	exists x. exists y. exists z. (Woman(x) & Woman(y) & Beach(z) & Bikini(x) & Bikini(y) & Wearing(x, z) & Wearing(y, z))	e	False	False
2870	A dog is swimming in a lake and the sun is shining on him	exists x. exists y. (Dog(x) & Lake(y) & SwimmingIn(x, y) & SunShiningOn(x))	The dog is swimming in a lake and the sun is shining on him	exists x. exists y. (Dog(x) & Lake(y) & SwimmingIn(x, y) & SunShiningOn(x))	e	True	False
2871	A dog is swimming in a lake and the sun is shining on him	exists x. exists y. (Dog(x) & Lake(y) & SwimmingIn(x, y) & SunShiningOn(x))	There is no dog swimming in a lake with sunshine shining on him	exists x. (Dog(x) & SwimmingInLake(x) & SunshineShiningOn(x))	c	False	False
2872	A dog with a golden coat is swimming clumsily through the water	exists x. (Dog(x) & GoldenCoat(x) -> SwimmingClumsily(x))	A dog with a golden coat is swimming through the water	exists x. (Dog(x) & GoldenCoat(x) -> SwimmingThroughWater(x))	e	False	False
2873	A dog with a golden coat is walking out of the water	exists x. (Dog(x) & GoldenCoat(x) -> WalkingOutOfWater(x))	A dog with a golden coat is swimming through the water	exists x. (Dog(x) & GoldenCoat(x) -> SwimmingThroughWater(x))	n	False	False
2874	A dog is swimming in a lake and the sun is shining on him	exists x. exists y. (Dog(x) & Lake(y) & SwimmingIn(x, y) & SunShiningOn(x))	A dog with a golden coat is walking out of the water	exists x. (Dog(x) & GoldenCoat(x) -> WalkingOutOfWater(x))	n	False	False
2875	The dog is swimming in a lake and the sun is shining on him	exists x. exists y. (Dog(x) & Lake(y) & SwimmingIn(x, y) & SunShiningOn(x))	A dog with a golden coat is swimming through the water	exists x. (Dog(x) & GoldenCoat(x) -> SwimmingThroughWater(x))	n	False	False
2876	A dog with a golden coat is swimming through the water	exists x. (Dog(x) & GoldenCoat(x) -> SwimmingThroughWater(x))	There is no dog swimming in a lake with sunshine shining on him	exists x. (Dog(x) & SwimmingInLake(x) & SunshineShiningOn(x))	n	False	False
2877	A dog with a golden coat is swimming through the water	exists x. (Dog(x) & GoldenCoat(x) -> SwimmingThroughWater(x))	A dog is swimming in a lake and the sun is shining on him	exists x. exists y. (Dog(x) & Lake(y) & SwimmingIn(x, y) & SunShiningOn(x))	n	False	False
2878	A dog, which has a black coat, is running in the grass and its tongue is hanging out	exists x. (Dog(x) & BlackCoat(x) & RunningInGrass(x) & TongueHangingOut(x) -> DogWithBlackCoatAndTongueHangingOut(x))	A black dog is running in the grass and its tongue is hanging out	exists x. (BlackDog(x) -> (RunningInGrass(x) & TongueHangingOut(x)))	e	False	False
2879	A black dog is running in the grass and its tongue is hanging out	exists x. (BlackDog(x) -> (RunningInGrass(x) & TongueHangingOut(x)))	A black dog is hanging out in the grass and running with its tongue out	exists x. (BlackDog(x) -> (HangingOutInGrass(x) & RunningWithTongueOut(x)))	e	False	False
2880	A black dog is running in the grass	exists x. (Dog(x) & Black(x) & RunningInGrass(x))	A black dog is lying in the grass	exists x. (Dog(x) & Black(x) & LyingIn(x, Grass))	n	False	False
2881	A black dog is running in the grass and its tongue is hanging out	exists x. (BlackDog(x) -> (RunningInGrass(x) & TongueHangingOut(x)))	A dog, which is black, is running in the grass	exists x. (Dog(x) & Black(x) -> RunningInGrass(x))	e	False	False
2882	A black dog is running in the grass and its tongue is hanging out	exists x. (BlackDog(x) -> (RunningInGrass(x) & TongueHangingOut(x)))	A black dog is lying in the grass	exists x. (Dog(x) & Black(x) & LyingIn(x, Grass))	n	False	False
2883	A dog, which has a black coat, is running in the grass and its tongue is hanging out	exists x. (Dog(x) & BlackCoat(x) & RunningInGrass(x) & TongueHangingOut(x) -> DogWithBlackCoatAndTongueHangingOut(x))	A black dog is running in the grass	exists x. (Dog(x) & Black(x) & RunningInGrass(x))	e	False	False
2884	A black dog is sitting in the grass and keeping its mouth closed	exists x. (BlackDog(x) -> (SittingInGrass(x) & KeepingMouthClosed(x)))	A black dog is running in the grass	exists x. (Dog(x) & Black(x) & RunningInGrass(x))	n	False	False
2885	The cheerleaders are not parading and are not wearing black, pink and white uniforms	exists x. (Cheerleader(x) -> not Parading(x) & not WearingBlackUniform(x) & not WearingPinkUniform(x) & not WearingWhiteUniform(x))	The cheerleaders are parading and wearing black, pink and white uniforms	exists x. (Cheerleader(x) -> (Parades(x) & WearsBlackUniform(x) & WearsPinkUniform(x) & WearsWhiteUniform(x)))	c	False	False
2886	A large group of cheerleaders is walking in a parade	exists x. (Group(x) & Cheerleaders(x) & WalkingInParade(x))	The cheerleaders are parading and wearing uniforms which are black, pink and white	exists x. (Cheerleader(x) -> (Parades(x) & WearsUniform(x) & (Black(x) | Pink(x) | White(x))))	n	False	False
2887	A large group of cheerleaders is walking in a parade	exists x. (Group(x) & Cheerleaders(x) & WalkingInParade(x))	The cheerleaders are parading and wearing black, pink and white uniforms	exists x. (Cheerleader(x) -> (Parades(x) & WearsBlackUniform(x) & WearsPinkUniform(x) & WearsWhiteUniform(x)))	n	False	False
2888	The man is sitting indoors	exists x. (Man(x) & SittingIndoors(x))	The man is sitting outside under a purple umbrella	exists x. (Man(x) & Sitting(x) & Outside(x) & UnderPurpleUmbrella(x))	n	False	False
2889	The man is sitting outdoors under a purple umbrella	exists x. (Man(x) & Sitting(x) & Outdoors(x) & Under(x, purple_umbrella))	A shoeless woman is sitting on a blanket under a lavender umbrella	exists x.exists y.exists z. (ShoelessWoman(x) & Blanket(y) & LavenderUmbrella(z) -> SittingOn(x, y, z))	n	False	False
2890	The man is sitting indoors	exists x. (Man(x) & SittingIndoors(x))	A shoeless woman is sitting on a blanket under a lavender umbrella	exists x.exists y.exists z. (ShoelessWoman(x) & Blanket(y) & LavenderUmbrella(z) -> SittingOn(x, y, z))	n	False	False
2891	The woman is playing with two young boys at a park	exists x. exists y. exists z. (Woman(x) & YoungBoy(y) & YoungBoy(z) & Park(p) & PlayingAt(x, y, z, p))	A woman is standing near three children	exists x. exists y. exists z. (Woman(x) & Child(y) & Child(z) & StandingNear(x, y) & StandingNear(x, z) & StandingNear(x, z))	n	False	False
2892	A woman is standing near three children	exists x. exists y. exists z. (Woman(x) & Child(y) & Child(z) & StandingNear(x, y) & StandingNear(x, z) & StandingNear(x, z))	A woman is playing with two young boys at a park	exists x. exists y. exists z. (Woman(x) & YoungBoy(y) & YoungBoy(z) & Park(p) & PlayingWith(x, y, z, p))	n	False	False
2893	A tan dog is resting in the snow	exists x. (Dog(x) & Tan(x) & RestingIn(x, snow))	A yellow dog is running on white snow on a sunny day	exists x.exists y.exists z. (YellowDog(x) & WhiteSnow(y) & SunnyDay(z) -> RunningOn(x, y, z))	n	False	False
2894	A tan dog is running through the snow	exists x. (Dog(x) & Tan(x) -> exists y. (Snow(y) & RunningThrough(x, y)))	A yellow dog is stopping on white snow on a sunny day	exists x.exists y.exists z. (Dog(x) & Yellow(x) & Snow(y) & White(y) & SunnyDay(z) -> StopsOn(x, y, z))	n	False	False
2895	A tan dog is running through the snow	exists x. (Dog(x) & Tan(x) -> exists y. (Snow(y) & RunningThrough(x, y)))	A yellow dog is running on white snow on a sunny day	exists x.exists y.exists z. (YellowDog(x) & WhiteSnow(y) & SunnyDay(z) -> RunningOn(x, y, z))	n	False	False
2896	A girl is wearing jeans and a pink shirt and is cheerfully running	exists x. (Girl(x) & WearingJeans(x) & WearingPinkShirt(x) & CheerfullyRunning(x))	A girl is wearing jeans and a pink shirt and is running	exists x. (Girl(x) & WearingJeans(x) & WearingPinkShirt(x) & Running(x))	e	False	False
2897	A girl is wearing jeans and a pink shirt and is running	exists x. (Girl(x) & WearingJeans(x) & WearingPinkShirt(x) & Running(x))	There is no girl wearing jeans and a pink shirt and running	not exists x. (Girl(x) & WearingJeans(x) & WearingPinkShirt(x) & Running(x))	c	False	True
2898	A little boy in a pink shirt is running under a tree in the desert	exists x. exists y. exists z. (LittleBoy(x) & PinkShirt(x) & Tree(y) & Desert(z) & RunsUnder(x, y, z))	The little girl in a pink shirt is running under a tree in the desert	exists x. (LittleGirl(x) & PinkShirt(x) & exists y. (Tree(y) & InDesert(y) & RunningUnder(x, y)))	n	False	False
2899	A girl is wearing jeans and a pink shirt and is running	exists x. (Girl(x) & WearingJeans(x) & WearingPinkShirt(x) & Running(x))	A little girl in a pink shirt is running under a tree in the desert	exists x. exists y. exists z. (LittleGirl(x) & PinkShirt(x) & Tree(y) & Desert(z) & RunsUnder(x, y, z))	n	False	False
2900	A girl is wearing jeans and a pink shirt and is cheerfully running	exists x. (Girl(x) & WearingJeans(x) & WearingPinkShirt(x) & CheerfullyRunning(x))	The little girl in a pink shirt is running under a tree in the desert	exists x. (LittleGirl(x) & PinkShirt(x) & exists y. (Tree(y) & InDesert(y) & RunningUnder(x, y)))	n	False	False
2901	The little girl in a pink shirt is running under a tree in the desert	exists x. (LittleGirl(x) & PinkShirt(x) & exists y. (Tree(y) & InDesert(y) & RunningUnder(x, y)))	There is no girl wearing jeans and a pink shirt and running	not exists x. (Girl(x) & WearingJeans(x) & WearingPinkShirt(x) & Running(x))	c	False	False
2902	A white dog is wearing a Christmas reindeer headband and is playing with a brown dog in the grass	exists x.exists y. (WhiteDog(x) & ChristmasReindeerHeadband(x) & BrownDog(y) & PlayingInGrass(x, y) -> DogWearingHeadbandAndPlaying(x, y))	There is no white dog wearing a Christmas reindeer headband and playing with a brown dog in the grass	not exists x. (Dog(x) & White(x) & WearsReindeerHeadband(x) & PlaysWithBrownDog(x) & InGrass(x))	c	False	False
2903	A white dog is wearing a Christmas reindeer headband and is playing with a dog with a brown coat in the grass	exists x.exists y. (WhiteDog(x) & ChristmasReindeerHeadband(x) & BrownDog(y) & PlayingInGrass(x, y) -> DogWearingHeadbandAndPlaying(x, y))	The white dog wearing reindeer ears is near a brown dog	exists x.exists y. (WhiteDog(x) & WearsReindeerEars(x) & BrownDog(y) -> Near(x, y))	e	False	False
2904	There is no white dog wearing a Christmas reindeer headband and playing with a brown dog in the grass	not exists x. (Dog(x) & White(x) & WearsReindeerHeadband(x) & PlaysWithBrownDog(x) & InGrass(x))	The white dog wearing reindeer ears is near a brown dog	exists x.exists y. (WhiteDog(x) & WearsReindeerEars(x) & BrownDog(y) -> Near(x, y))	n	False	False
2905	A white dog is wearing a Christmas reindeer headband and is playing with a brown dog in the grass	exists x.exists y. (WhiteDog(x) & ChristmasReindeerHeadband(x) & BrownDog(y) & PlayingInGrass(x, y) -> DogWearingHeadbandAndPlaying(x, y))	The white dog is not wearing reindeer ears and isn't near a brown dog	exists x. (WhiteDog(x) -> not WearingReindeerEars(x) & not NearBrownDog(x))	c	False	False
2906	There is no young boy riding a dirt bike through the mud	not exists x. (YoungBoy(x) & RidingDirtBike(x) & ThroughMud(x))	A young child is riding a bike on a rough dirt path	exists x. exists y. exists z. (YoungChild(x) & Bike(y) & RoughDirtPath(z) & RidingOn(x, y, z))	n	False	False
2907	A child, who is young, is riding a bike on a rough dirt path	exists x. (Child(x) & Young(x) -> RidingBikeOnRoughDirtPath(x))	A young boy is riding a dirt bike through the mud	exists x. exists y. exists z. (YoungBoy(x) & DirtBike(y) & Mud(z) & Riding(x, y) & Through(x, z))	n	False	False
2908	A young boy is riding a dirt bike through the mud	exists x. exists y. exists z. (YoungBoy(x) & DirtBike(y) & Mud(z) & Riding(x, y) & Through(x, z))	A young child is riding a bike on a rough dirt path	exists x. exists y. exists z. (YoungChild(x) & Bike(y) & RoughDirtPath(z) & RidingOn(x, y, z))	n	False	False
2909	A woman in a red dress is playing an instrument	exists x. (Woman(x) & WearsRedDress(x) -> PlaysInstrument(x))	An instrument is being played by a woman in a red dress	exists x.exists y.exists z. (Instrument(x) & Woman(y) & RedDress(z) & Playing(y, x) & Wearing(y, z))	e	False	False
2910	A woman in a red dress is putting away an instrument	exists x.exists y. (Woman(x) & RedDress(x) & Instrument(y) -> PuttingAway(x, y))	A woman in a red dress is playing an instrument	exists x. (Woman(x) & WearsRedDress(x) -> PlaysInstrument(x))	c	False	False
2911	The woman in a red costume is leaning against a brick wall and playing an instrument	exists x. (Woman(x) & RedCostume(x) -> (LeaningAgainstBrickWall(x) & PlayingInstrument(x)))	An instrument is being played by a woman in a red dress	exists x.exists y.exists z. (Instrument(x) & Woman(y) & RedDress(z) & Playing(y, x) & Wearing(y, z))	n	False	False
2912	The child is delightedly playing with toys outdoors	exists x. (Child(x) & PlayingWithToys(x) & Outdoors(x) -> Delighted(x))	The child is playing with toys outdoors	exists x. (Child(x) -> exists y. (Toy(y) & Outdoors(y) & PlayingWith(x, y)))	e	False	False
2913	The child is playing with toys outdoors	exists x. (Child(x) -> exists y. (Toy(y) & Outdoors(y) & PlayingWith(x, y)))	The child is playing with toys indoors	exists x. (Child(x) -> exists y. (Toy(y) & PlayingWith(x, y) & Indoors(y)))	n	False	False
2914	There is no young child wearing a white coat and playing a game	not exists x. (YoungChild(x) & WearingWhiteCoat(x) & PlayingGame(x))	A young child is wearing a white coat and playing a game	exists x. (YoungChild(x) -> (WearsWhiteCoat(x) & PlaysGame(x)))	c	False	False
2915	The child is playing with toys outdoors	exists x. (Child(x) -> exists y. (Toy(y) & Outdoors(y) & PlayingWith(x, y)))	A child, who is young, is wearing a white coat and playing a game	exists x. (Child(x) & Young(x) -> (WearingWhiteCoat(x) & PlayingGame(x)))	n	False	False
2916	A young child is wearing a white coat and playing a game	exists x. (YoungChild(x) -> (WearsWhiteCoat(x) & PlaysGame(x)))	The child is playing with toys outdoors	exists x. (Child(x) -> exists y. (Toy(y) & Outdoors(y) & PlayingWith(x, y)))	n	False	False
2917	The man is wearing a wetsuit and is riding a surfboard	exists x. (Man(x) & Wetsuit(x) & Surfboard(x))	The man is lying naked near a surfboard	exists x. (Man(x) & LyingNaked(x) & NearSurfboard(x))	n	False	False
2918	A surfer is leaning on a surfboard	exists x.exists y. (Surfer(x) & Surfboard(y) -> LeaningOn(x, y))	There is no surfer leaning on a surfboard	not exists x. (Surfer(x) & LeaningOnSurfboard(x))	c	False	False
2919	A surfer is leaning the surfboard against a wall	exists x.exists y. (Surfer(x) & Surfboard(y) -> LeaningAgainstWall(x, y))	A surfer is leaning on a surfboard	exists x.exists y. (Surfer(x) & Surfboard(y) -> LeaningOn(x, y))	n	False	False
2920	The surfer is leaning on a surfboard	exists x. exists y. (Surfer(x) & Surfboard(y) & LeaningOn(x, y))	The man is wearing a wetsuit and is riding a surfboard	exists x. (Man(x) & Wetsuit(x) & Surfboard(x))	n	False	False
2921	A surfer is leaning on a surfboard	exists x.exists y. (Surfer(x) & Surfboard(y) -> LeaningOn(x, y))	The person is wearing a wetsuit and is riding a surfboard	exists x. (Person(x) & Wetsuit(x) & RidingSurfboard(x))	n	False	False
2922	The man is lying naked near a surfboard	exists x. (Man(x) & LyingNaked(x) & NearSurfboard(x))	A surfer is leaning on a surfboard	exists x.exists y. (Surfer(x) & Surfboard(y) -> LeaningOn(x, y))	n	False	False
2923	The people are walking on the road beside a beautiful waterfall	exists x.exists y. (Person(x) & Road(y) & WalkingOn(x, y) & BeautifulWaterfall(y) -> WalkingByWaterfall(x, y))	The people are walking on the road beside a waterfall, which is beautiful	exists x.exists y. (People(x) & Road(y) & WalkingOn(x, y) & Waterfall(z) & Beside(z, y) -> Beautiful(z))	e	False	False
2924	The people are walking on the road beside a beautiful waterfall	exists x.exists y. (Person(x) & Road(y) & WalkingOn(x, y) & BeautifulWaterfall(y) -> WalkingByWaterfall(x, y))	The people are not walking on the road beside a beautiful waterfall	not exists x. (Person(x) & WalkingOnRoad(x) & BeautifulWaterfall(x))	c	False	False
2925	A waterfall is flowing into a shallow pool	exists x.exists y. (Waterfall(x) & ShallowPool(y) -> FlowsInto(x, y))	The people are not walking on the road beside a beautiful waterfall	not exists x. (Person(x) & WalkingOnRoad(x) & BeautifulWaterfall(x))	n	False	False
2926	A waterfall is flowing out of a shallow pool	exists x.exists y. (Waterfall(x) & ShallowPool(y) -> FlowsOutOf(x, y))	The people are walking on the road beside a beautiful waterfall	exists x.exists y. (Person(x) & Road(y) & WalkingOn(x, y) & BeautifulWaterfall(y) -> WalkingByWaterfall(x, y))	n	False	False
2927	A sheepdog is dispersing a herd of sheep	exists x.exists y. (Sheepdog(x) & Sheep(y) -> DispersingHerd(x, y))	A sheepdog is grouping a herd of sheep	exists x.exists y. (Sheepdog(x) & Sheep(y) -> GroupsHerd(x, y))	n	False	False
2928	The sheepdog is grouping a herd of sheep	exists x.exists y. (Sheepdog(x) & Sheep(y) -> GroupsHerd(x, y))	A dog is herding a pack of white sheep on a dusty farm	exists x. exists y. exists z. (Dog(x) & PackOfWhiteSheep(y) & DustyFarm(z) & Herding(x, y, z))	n	False	False
2929	A dog is herding a pack of white sheep on a dusty farm	exists x. exists y. exists z. (Dog(x) & PackOfWhiteSheep(y) & DustyFarm(z) & Herding(x, y, z))	A sheepdog is dispersing a herd of sheep	exists x.exists y. (Sheepdog(x) & Sheep(y) -> DispersingHerd(x, y))	n	False	False
2930	A sheepdog is grouping a herd of sheep	exists x.exists y. (Sheepdog(x) & Sheep(y) -> GroupsHerd(x, y))	A dog is herding a group of white sheep on a dusty farm	exists x. exists y. exists z. (Dog(x) & GroupOfWhiteSheep(y) & DustyFarm(z) & Herding(x, y, z))	n	False	False
2931	A sheepdog is grouping a herd of sheep	exists x.exists y. (Sheepdog(x) & Sheep(y) -> GroupsHerd(x, y))	A dog is herding a pack of white sheep on a dusty farm	exists x. exists y. exists z. (Dog(x) & PackOfWhiteSheep(y) & DustyFarm(z) & Herding(x, y, z))	n	False	False
2932	A yellow palm is in front of a building and one dark skinned male is standing next to it	exists x.exists y. (YellowPalm(x) & Building(y) -> (InFrontOf(x, y) & exists z. (DarkSkin(z) & Male(z) & StandingNextTo(z, x))))	The dark skinned male is standing on one hand in front of a yellow building	exists x.exists y.exists z. (DarkSkin(x) & Male(x) & YellowBuilding(y) & Hand(z) -> StandingOn(x, y, z))	n	False	False
2933	A black man is break dancing on the pavement	exists x. (BlackMan(x) & BreakDancing(x) & OnPavement(x))	A black man is walking on the pavement	exists x. (BlackMan(x) & WalkingOnPavement(x))	n	False	False
2934	The dark skinned male is standing on one hand in front of a yellow building	exists x.exists y.exists z. (DarkSkin(x) & Male(x) & YellowBuilding(y) & Hand(z) -> StandingOn(x, y, z))	A black man is skillfully break dancing on the pavement	exists x. (BlackMan(x) & BreakDancing(x) & OnPavement(x) -> Skillful(x))	n	False	False
2935	A black man is walking on the pavement	exists x. (BlackMan(x) & WalkingOnPavement(x))	The dark skinned male is standing on one hand in front of a yellow building	exists x.exists y.exists z. (DarkSkin(x) & Male(x) & YellowBuilding(y) & Hand(z) -> StandingOn(x, y, z))	n	False	False
2936	A black man is break dancing on the pavement	exists x. (BlackMan(x) & BreakDancing(x) & OnPavement(x))	A yellow palm is in front of a building and one dark skinned male is standing next to it	exists x.exists y. (YellowPalm(x) & Building(y) -> (InFrontOf(x, y) & exists z. (DarkSkin(z) & Male(z) & StandingNextTo(z, x))))	n	False	False
2937	A black man is break dancing on the pavement	exists x. (BlackMan(x) & BreakDancing(x) & OnPavement(x))	The dark skinned male is standing on one hand in front of a yellow building	exists x.exists y.exists z. (DarkSkin(x) & Male(x) & YellowBuilding(y) & Hand(z) -> StandingOn(x, y, z))	n	False	False
2938	A bike is being ridden by a person	exists x.exists y. (Bike(x) & Person(y) -> Riding(y, x))	A person is riding a bike	exists x. exists y. (Person(x) & Bike(y) & Riding(x, y))	e	False	False
2939	There is no person riding a bike	not exists x. (Person(x) & RidingBike(x))	A person is riding a bike	exists x. exists y. (Person(x) & Bike(y) & Riding(x, y))	c	False	False
2940	A bike rider in a black and red uniform is standing on a dirt bike	exists x.exists y. (BikeRider(x) & BlackAndRedUniform(x) & DirtBike(y) -> StandingOn(x, y))	A bike rider in a black and red uniform is jumping down off a dirt bike	exists x. (BikeRider(x) & BlackUniform(x) & RedUniform(x) -> JumpingDownOffDirtBike(x))	n	False	False
2941	A person is riding a bike	exists x. exists y. (Person(x) & Bike(y) & Riding(x, y))	A black bike rider in a red bike uniform is standing in the dirt	exists x.exists y. (BlackBiker(x) & RedBikeUniform(y) & Wears(x, y) -> StandingInDirt(x))	n	False	False
2942	A person is riding a bike	exists x. exists y. (Person(x) & Bike(y) & Riding(x, y))	A bike rider in a black and red uniform is standing on a dirt bike	exists x.exists y. (BikeRider(x) & BlackAndRedUniform(x) & DirtBike(y) -> StandingOn(x, y))	n	False	False
2943	The guitar is being played by the man, who has the guitar case open for donations	exists x.exists y. (Guitar(x) & Man(y) & Playing(y, x) -> (exists z. (GuitarCase(z) & Open(z) & ForDonations(z))))	The man is playing the guitar and has the guitar case open for donations	exists x. (Man(x) & PlayingGuitar(x) -> exists y. (GuitarCase(y) & OpenForDonations(y)))	e	False	False
2944	The man is playing the guitar and has the guitar case open for donations	exists x. (Man(x) & PlayingGuitar(x) -> exists y. (GuitarCase(y) & OpenForDonations(y)))	The man is opening the guitar for donations and plays with the case	exists x.exists y. (Man(x) & Guitar(y) -> (OpeningForDonations(x, y) & PlaysWithCase(x, y)))	n	False	False
2945	The guitar is being played by the man, who has the guitar case open for donations	exists x.exists y. (Guitar(x) & Man(y) & Playing(y, x) -> (exists z. (GuitarCase(z) & Open(z) & ForDonations(z))))	A man in a purple suit is standing by a purple case and is playing a guitar	exists x.exists y.exists z. (Man(x) & PurpleSuit(x) & PurpleCase(y) & Guitar(z) -> (StandingBy(x, y) & Playing(x, z)))	n	False	False
2946	A man in a purple suit is standing by a purple case and is playing a guitar	exists x.exists y.exists z. (Man(x) & PurpleSuit(x) & PurpleCase(y) & Guitar(z) -> (StandingBy(x, y) & Playing(x, z)))	The man is opening the guitar for donations and plays with the case	exists x.exists y. (Man(x) & Guitar(y) -> (OpeningForDonations(x, y) & PlaysWithCase(x, y)))	n	False	False
2947	The man is playing the guitar and has the guitar case open for donations	exists x. (Man(x) & PlayingGuitar(x) -> exists y. (GuitarCase(y) & OpenForDonations(y)))	There is no man in a purple suit standing by a purple case and playing a guitar	not exists x. (Man(x) & PurpleSuit(x) & StandingBy(x, PurpleCase) & PlayingGuitar(x))	n	False	False
2948	A man in a purple suit is standing by a purple case and is playing a guitar	exists x.exists y.exists z. (Man(x) & PurpleSuit(x) & PurpleCase(y) & Guitar(z) -> (StandingBy(x, y) & Playing(x, z)))	The man is playing the guitar and has the guitar case open for donations	exists x. (Man(x) & PlayingGuitar(x) -> exists y. (GuitarCase(y) & OpenForDonations(y)))	n	False	False
2949	A couple is sitting on a patio and is staring at the ocean	exists x.exists y.exists z. (Couple(x) & Patio(y) & Ocean(z) & SittingOn(x, y) & StaringAt(x, z))	A couple is sitting on a patio and looking at the ocean	exists x.exists y.exists z. (Couple(x) & Patio(y) & Ocean(z) -> SittingOnAndLookingAt(x, y, z))	e	False	False
2950	A couple is standing on a patio and looking at the sky	exists x.exists y.exists z. (Couple(x) & Patio(y) & Sky(z) -> StandingOnAndLookingAt(x, y, z))	A couple is sitting on a patio and looking at the ocean	exists x.exists y.exists z. (Couple(x) & Patio(y) & Ocean(z) -> SittingOnAndLookingAt(x, y, z))	n	False	False
2951	A couple is sitting on a patio and is staring at the ocean	exists x.exists y.exists z. (Couple(x) & Patio(y) & Ocean(z) & SittingOn(x, y) & StaringAt(x, z))	Two adults are sitting in the chairs and are watching the ocean	exists x. exists y. (Adult(x) & Adult(y) & SittingInChairs(x, y) & WatchingOcean(x, y))	n	False	False
2952	A couple is standing on a patio and looking at the sky	exists x.exists y.exists z. (Couple(x) & Patio(y) & Sky(z) -> StandingOnAndLookingAt(x, y, z))	Two adults are sitting in the chairs and are watching the ocean	exists x. exists y. (Adult(x) & Adult(y) & SittingInChairs(x, y) & WatchingOcean(x, y))	n	False	False
2953	A couple is sitting on a patio and looking at the ocean	exists x.exists y.exists z. (Couple(x) & Patio(y) & Ocean(z) -> SittingOnAndLookingAt(x, y, z))	Two adults are sitting in the chairs and are watching the ocean	exists x. exists y. (Adult(x) & Adult(y) & SittingInChairs(x, y) & WatchingOcean(x, y))	n	False	False
2954	A small boy in a shirt, which is yellow, is laughing on the beach	exists x.exists y.exists z. (SmallBoy(x) & Shirt(y) & Yellow(y) & Beach(z) -> LaughingOn(x, y, z))	A small boy in a yellow shirt is laughing on the beach	exists x. (SmallBoy(x) & YellowShirt(x) & LaughingOnBeach(x))	e	False	False
2955	A little boy is wearing a yellow tank top and is laughing	exists x. (LittleBoy(x) & WearingYellowTankTop(x) & Laughing(x))	A little boy is topless and is serious	exists x. (LittleBoy(x) -> (Topless(x) & Serious(x)))	n	False	False
2956	A small boy in a yellow shirt is laughing on the beach	exists x. (SmallBoy(x) & YellowShirt(x) & LaughingOnBeach(x))	The little boy is wearing a yellow tank top and is laughing	exists x. (LittleBoy(x) & WearingYellowTankTop(x) & Laughing(x))	n	False	False
2957	A small boy in a yellow shirt is laughing on the beach	exists x. (SmallBoy(x) & YellowShirt(x) & LaughingOnBeach(x))	A laughing boy is in a yellow tank and is wearing a top	exists x. (LaughingBoy(x) -> (exists y. (YellowTank(y) & In(x, y)) & exists z. (Top(z) & Wearing(x, z))))	n	False	False
2958	A little boy is wearing a yellow tank top and is laughing	exists x. (LittleBoy(x) & WearingYellowTankTop(x) & Laughing(x))	There is no small boy in a yellow shirt laughing on the beach	not exists x. (SmallBoy(x) & WearsYellowShirt(x) & LaughingOnBeach(x))	n	False	False
2959	A little boy is wearing a yellow tank top and is laughing	exists x. (LittleBoy(x) & WearingYellowTankTop(x) & Laughing(x))	A small boy in a yellow shirt is laughing on the beach	exists x. (SmallBoy(x) & YellowShirt(x) & LaughingOnBeach(x))	n	False	False
2960	The orange rescue boat is rushing across the water	RescueBoat(orange) & RushingAcrossWater(orange)	The rescue boat, which is orange, is rushing across the water	exists x. (RescueBoat(x) & Orange(x) -> RushingAcrossWater(x))	e	True	False
2961	Two men are riding an orange raft on the beach	exists x. exists y. exists z. (Man(x) & Man(y) & OrangeRaft(z) & RidingOn(x, z) & RidingOn(y, z))	Two men are riding an orange raft on the shore	exists x. exists y. exists z. (Man(x) & Man(y) & OrangeRaft(z) & RidingOn(x, z) & RidingOn(y, z))	n	True	False
2962	Two men are riding an orange raft on the shore	exists x. exists y. exists z. (Man(x) & Man(y) & OrangeRaft(z) & RidingOn(x, z) & RidingOn(y, z))	Two men are rafting near a rider in orange on the shore	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Rafting(x, y) & Rafting(y, z) & Orange(z) & Shore(z))	n	False	False
2963	The orange rescue boat is rushing across the water	RescueBoat(orange) & RushingAcrossWater(orange)	Two men are riding an orange raft on the beach	exists x. exists y. exists z. (Man(x) & Man(y) & OrangeRaft(z) & RidingOn(x, z) & RidingOn(y, z))	n	False	False
2964	The orange rescue boat is rushing across the water	RescueBoat(orange) & RushingAcrossWater(orange)	Two men are rafting near a rider in orange on the shore	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & Rafting(x, y) & Rafting(y, z) & Orange(z) & Shore(z))	n	False	False
2965	Two men are riding an orange raft on the shore	exists x. exists y. exists z. (Man(x) & Man(y) & OrangeRaft(z) & RidingOn(x, z) & RidingOn(y, z))	The rescue boat, which is orange, is rushing across the water	exists x. (RescueBoat(x) & Orange(x) -> RushingAcrossWater(x))	n	False	False
2966	Two men are riding an orange raft on the shore	exists x. exists y. exists z. (Man(x) & Man(y) & OrangeRaft(z) & RidingOn(x, z) & RidingOn(y, z))	The orange rescue boat is not rushing across the water	RescueBoat(orange) & not RushingAcrossWater(orange)	n	False	False
2967	The dog in the dyed red vest is running in the field	exists x.exists y. (Dog(x) & DyedRedVest(x) & Field(y) -> RunsIn(x, y))	A dog with long hair and a red vest is running in the grass	exists x. (Dog(x) & LongHair(x) & RedVest(x) -> exists y. (Grass(y) & RunningIn(x, y)))	n	False	False
2968	A dog with long hair and a red vest is running in the grass	exists x. (Dog(x) & LongHair(x) & RedVest(x) -> exists y. (Grass(y) & RunningIn(x, y)))	The dog in the red vest is not running in the field	exists x. (Dog(x) & RedVest(x) -> not RunningInField(x))	n	False	False
2969	A dog with really long hair and a red vest is running in the grass	exists x. (Dog(x) & ReallyLongHair(x) & RedVest(x) -> RunningInGrass(x))	The dog in the red vest is running in the field	exists x. (Dog(x) & WearsRedVest(x) -> RunsInField(x))	e	False	False
2970	The dog in the red vest is running in the field	exists x. (Dog(x) & WearsRedVest(x) -> RunsInField(x))	A dog with long hair and a red vest is sitting in the grass	exists x. (Dog(x) & LongHair(x) & RedVest(x) -> SittingInGrass(x))	n	False	False
2971	A dog with long hair and a red vest is running in the grass	exists x. (Dog(x) & LongHair(x) & RedVest(x) -> exists y. (Grass(y) & RunningIn(x, y)))	The dog in the red vest is running in the field	exists x. (Dog(x) & WearsRedVest(x) -> RunsInField(x))	e	False	False
2972	The person is standing dangerously on white ice	exists x. (Person(x) & StandingOn(x, WhiteIce) & Dangerous(x))	The person is standing on white ice	exists x. (Person(x) & StandingOn(x, WhiteIce))	e	True	False
2973	The person is standing dangerously on white ice	exists x. (Person(x) & StandingOn(x, WhiteIce) & Dangerous(x))	A person is standing in a vast field of glacial ice	exists x. (Person(x) & StandingIn(x, VastFieldOfGlacialIce))	n	False	False
2974	One person is standing in a vast field of glacial ice	exists x. (Person(x) & StandingIn(x, GlacialIce))	The person is standing on white ice	exists x. (Person(x) & StandingOn(x, WhiteIce))	n	False	False
2975	The person is standing on white ice	exists x. (Person(x) & StandingOn(x, WhiteIce))	There is no person standing in a vast field of glacial ice	not exists x. (Person(x) & StandingIn(x, VastFieldOfGlacialIce))	n	False	False
2976	A person is standing in a vast field of glacial ice	exists x. (Person(x) & StandingIn(x, VastFieldOfGlacialIce))	The person is standing on white ice	exists x. (Person(x) & StandingOn(x, WhiteIce))	e	False	False
2977	A blond boy is sliding down a dune of sand on a skateboard	exists x.exists y.exists z. (BlondBoy(x) & DuneOfSand(y) & Skateboard(z) -> SlidingDown(x, y, z))	A blond boy is sliding down a sand dune on a skateboard	exists x.exists y.exists z. (BlondBoy(x) & SandDune(y) & Skateboard(z) -> SlidingDown(x, y, z))	e	False	False
2978	A blond boy is walking up a sand dune with a skateboard	exists x.exists y.exists z. (BlondBoy(x) & SandDune(y) & Skateboard(z) -> WalkingUp(x, y, z))	A blond boy is sliding down a sand dune on a skateboard	exists x.exists y.exists z. (BlondBoy(x) & SandDune(y) & Skateboard(z) -> SlidingDown(x, y, z))	n	False	False
2979	A blond boy is sliding down a sand dune on a skateboard	exists x.exists y.exists z. (BlondBoy(x) & SandDune(y) & Skateboard(z) -> SlidingDown(x, y, z))	A woman is swiftly snowboarding down an incline and another woman is standing behind her	exists x. exists y. (Woman(x) & Woman(y) & Snowboarding(x) & Incline(x) & StandingBehind(y, x))	n	False	False
2980	A blond boy is sliding down a dune of sand on a skateboard	exists x.exists y.exists z. (BlondBoy(x) & DuneOfSand(y) & Skateboard(z) -> SlidingDown(x, y, z))	A woman is snowboarding down an incline and another woman is standing behind her	exists x. exists y. (Woman(x) & Woman(y) & Snowboarding(x) & Incline(x) & StandingBehind(y, x))	n	False	False
2981	A woman is snowboarding down an incline and another woman is standing behind her	exists x. exists y. (Woman(x) & Woman(y) & Snowboarding(x) & Incline(x) & StandingBehind(y, x))	A blond boy is walking up a sand dune with a skateboard	exists x.exists y.exists z. (BlondBoy(x) & SandDune(y) & Skateboard(z) -> WalkingUp(x, y, z))	n	False	False
2982	A woman is snowboarding down an incline and another woman is standing behind her	exists x. exists y. (Woman(x) & Woman(y) & Snowboarding(x) & Incline(x) & StandingBehind(y, x))	A blond boy is sliding down a sand dune on a skateboard	exists x.exists y.exists z. (BlondBoy(x) & SandDune(y) & Skateboard(z) -> SlidingDown(x, y, z))	n	False	False
2983	A man is putting down an electronic device	exists x. exists y. (Man(x) & ElectronicDevice(y) & PuttingDown(x, y))	A man is holding up an electronic device	exists x. exists y. (Man(x) & ElectronicDevice(y) & HoldingUp(x, y))	c	False	False
2984	A man is putting down an electronic device	exists x. exists y. (Man(x) & ElectronicDevice(y) & PuttingDown(x, y))	The man is taking a picture of himself and another guy	exists x.exists y. (Man(x) & Man(y) -> TakesPictureOf(x, y))	n	False	False
2985	The man is taking a picture of himself and another guy	exists x.exists y. (Man(x) & Man(y) -> TakesPictureOf(x, y))	An electronic man is held as a device	exists x. (ElectronicMan(x) -> Device(x))	n	False	False
2986	A picture of himself and another guy is being taken by the man	exists x. exists y. exists z. (Picture(x) & Man(z) & Guy(y) & TakesPicture(z, x, y))	A man is holding up an electronic device	exists x. exists y. (Man(x) & ElectronicDevice(y) & HoldingUp(x, y))	n	False	False
2987	A man is holding up an electronic device	exists x. exists y. (Man(x) & ElectronicDevice(y) & HoldingUp(x, y))	The man is not taking a picture of himself and another guy	not (Man(x) & TakingPicture(x) & Of(x, y) & Guy(y))	n	False	False
2988	The man is taking a picture of himself and another guy	exists x.exists y. (Man(x) & Man(y) -> TakesPictureOf(x, y))	A man is holding up an electronic device	exists x. exists y. (Man(x) & ElectronicDevice(y) & HoldingUp(x, y))	e	False	False
2989	A little black dog is chasing a little brown dog	exists x. exists y. (LittleBlackDog(x) & LittleBrownDog(y) & Chasing(x, y))	There is no little black dog chasing a little brown dog	not exists x.exists y. (LittleBlackDog(x) & LittleBrownDog(y) & Chasing(x, y))	c	False	True
2990	A brown dog and a black dog are far from the grass	exists x.exists y. (BrownDog(x) & BlackDog(y) -> FarFromGrass(x, y))	A brown dog and a black dog are in the grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) & InGrass(x) & InGrass(y))	c	False	False
2991	A dog, which is little and black, is chasing a little brown dog	exists x.exists y. (Dog(x) & Dog(y) & Little(x) & Black(x) & Little(y) & Brown(y) -> Chasing(x, y))	A brown dog and a black dog are in the grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) & InGrass(x) & InGrass(y))	n	False	False
2992	A girl in a brown dress is being surrounded by children and is closing her eyes	exists x. (Girl(x) & WearsBrownDress(x) -> (SurroundedByChildren(x) & ClosesEyes(x)))	Children are surrounding a girl in a brown dress who is closing her eyes	exists x.exists y.exists z. (Child(x) & Girl(y) & BrownDress(z) & Surrounding(x, y) & Wearing(y, z) -> ClosingEyes(y))	e	False	False
2993	A girl in a brown dress is being surrounded by children and is closing her eyes	exists x. (Girl(x) & WearsBrownDress(x) -> (SurroundedByChildren(x) & ClosesEyes(x)))	There is no girl in a brown dress being surrounded by children and closing her eyes	not exists x. (Girl(x) & BrownDress(x) & SurroundedByChildren(x) & ClosingEyes(x))	c	False	False
2994	The sun is shining on the face of the girl who is in the dyed yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsDyedYellowDress(y) -> ShiningOnFace(x, y))	The sun is shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> ShiningOnFace(x, y))	e	False	False
2995	The sun is not shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> not ShiningOn(x, y))	The sun is shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> ShiningOnFace(x, y))	c	False	False
2996	A girl in a brown dress is being surrounded by children and is closing her eyes	exists x. (Girl(x) & WearsBrownDress(x) -> (SurroundedByChildren(x) & ClosesEyes(x)))	The sun is shining on the face of the girl who is in the dyed yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsDyedYellowDress(y) -> ShiningOnFace(x, y))	n	False	False
2997	The sun is shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> ShiningOnFace(x, y))	Children are surrounding a girl in a brown dress who is closing her eyes	exists x.exists y.exists z. (Child(x) & Girl(y) & BrownDress(z) & Surrounding(x, y) & Wearing(y, z) -> ClosingEyes(y))	n	False	False
2998	The sun is shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> ShiningOnFace(x, y))	There is no girl in a brown dress being surrounded by children and closing her eyes	not exists x. (Girl(x) & BrownDress(x) & SurroundedByChildren(x) & ClosingEyes(x))	n	False	False
2999	The sun is shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> ShiningOnFace(x, y))	A girl is surrounding brown dressed children who are closing the eyes	exists x.exists y.exists z. (Girl(x) & BrownDressedChild(y) & Eyes(z) & Surrounding(x, y) & Closing(y, z) -> GirlAndBrownDressedChild(x, y))	n	False	False
3000	The sun is shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> ShiningOnFace(x, y))	A girl in a brown dress is being surrounded by children and is closing her eyes	exists x. (Girl(x) & WearsBrownDress(x) -> (SurroundedByChildren(x) & ClosesEyes(x)))	n	False	False
3001	Women are wearing bunny ears and race numbers and are curiously pointing at something in the distance	exists x. (Woman(x) -> (WearsBunnyEars(x) & WearsRaceNumbers(x) & CuriouslyPointsAtSomething(x)))	Women are wearing bunny ears and race numbers and are pointing at something in the distance	exists x. (Woman(x) -> (WearsBunnyEars(x) & WearsRaceNumbers(x) & PointsAtSomethingInDistance(x)))	e	False	False
3002	A group of women are wearing pink bunny ears and are pointing to the right	exists x. (Group(x) & Women(x) & WearingPinkBunnyEars(x) & PointingToRight(x) -> Cute(x))	Several women are wearing pink bunny ears and are pointing to the right	exists x. exists y. (Woman(x) & Woman(y) & PinkBunnyEars(x) & PinkBunnyEars(y) & PointingRight(x) & PointingRight(y))	e	False	False
3003	Several women are wearing pink bunny ears and are pointing to the right	exists x. exists y. (Woman(x) & Woman(y) & PinkBunnyEars(x) & PinkBunnyEars(y) & PointingRight(x) & PointingRight(y))	The women are wearing something right and pointing at several bunny ears	exists x. (Woman(x) -> (WearingSomethingRight(x) & PointingAtBunnyEars(x)))	n	False	False
3004	Women are wearing bunny ears and race numbers and are pointing at something in the distance	exists x. (Woman(x) -> (WearsBunnyEars(x) & WearsRaceNumbers(x) & PointsAtSomethingInDistance(x)))	The women are wearing something right and pointing at several bunny ears	exists x. (Woman(x) -> (WearingSomethingRight(x) & PointingAtBunnyEars(x)))	n	False	False
3005	Women are wearing bunny ears and race numbers and are curiously pointing at something in the distance	exists x. (Woman(x) -> (WearsBunnyEars(x) & WearsRaceNumbers(x) & CuriouslyPointsAtSomething(x)))	Several women are wearing pink bunny ears and are pointing to the right	exists x. exists y. (Woman(x) & Woman(y) & PinkBunnyEars(x) & PinkBunnyEars(y) & PointingRight(x) & PointingRight(y))	e	False	False
3006	The goal is being guarded by a hockey player in a yellow jersey	exists x.exists y. (Goal(x) & HockeyPlayer(y) & WearsYellowJersey(y) -> GuardedBy(x, y))	A hockey player in a yellow jersey is guarding the goal	exists x. (HockeyPlayer(x) & WearsYellowJersey(x) -> GuardsGoal(x))	e	False	False
3007	A hockey player in a yellow jersey is guarding the goal	exists x. (HockeyPlayer(x) & WearsYellowJersey(x) -> GuardsGoal(x))	There is no hockey player in a yellow jersey guarding the goal	not exists x. (HockeyPlayer(x) & YellowJersey(x) & GoalGuard(x))	c	False	False
3008	The ice hockey goalkeeper is wearing a yellow jersey and is defending the goal	exists x. (IceHockeyGoalkeeper(x) -> (WearsYellowJersey(x) & DefendsGoal(x)))	A hockey player in a yellow jersey is guarding the goal	exists x. (HockeyPlayer(x) & WearsYellowJersey(x) -> GuardsGoal(x))	e	False	False
3009	The ice hockey goalkeeper is not wearing a yellow jersey and is not defending the goal	exists x. (IceHockeyGoalkeeper(x) -> not WearingYellowJersey(x) & not DefendingGoal(x))	A hockey player in a yellow jersey is guarding the goal	exists x. (HockeyPlayer(x) & WearsYellowJersey(x) -> GuardsGoal(x))	c	False	False
3010	There is no young child standing in front of some trees	not exists x. (YoungChild(x) & StandingInFrontOf(x, trees))	A young child is standing in front of some trees	exists x. exists y. (YoungChild(x) & Tree(y) & StandingInFrontOf(x, y))	c	False	False
3011	A young child is standing in front of some trees	exists x. exists y. (YoungChild(x) & Tree(y) & StandingInFrontOf(x, y))	A small boy is sitting in the forest	exists x. (SmallBoy(x) & SittingInForest(x))	n	False	False
3012	A small boy is standing in the forest	exists x. (SmallBoy(x) & StandingInForest(x))	There is no young child standing in front of some trees	not exists x. (YoungChild(x) & StandingInFrontOf(x, trees))	n	False	False
3013	Two people are looking at a gold statue	exists x. exists y. exists z. (Person(x) & Person(y) & GoldStatue(z) & LookingAt(x, z) & LookingAt(y, z))	Two people are ignoring the nearby gold statue	exists x. exists y. (Person(x) & Person(y) & GoldStatue(g) & Nearby(g, x) & Nearby(g, y) -> Ignoring(x, y, g))	c	False	False
3014	Two young men are sitting outside near a golden statue	exists x. exists y. (YoungMan(x) & YoungMan(y) & SittingOutside(x) & SittingOutside(y) & NearGoldenStatue(x) & NearGoldenStatue(y))	Two people are looking at a gold statue	exists x. exists y. exists z. (Person(x) & Person(y) & GoldStatue(z) & LookingAt(x, z) & LookingAt(y, z))	n	False	False
3015	Two young men are playing outside near a golden statue	exists x. exists y. (YoungMan(x) & YoungMan(y) & PlayingOutside(x) & PlayingOutside(y) & NearGoldenStatue(x) & NearGoldenStatue(y))	Two people are looking at a statue made of gold	exists x. exists y. exists z. (Person(x) & Person(y) & Statue(z) & Gold(z) & LookingAt(x, z) & LookingAt(y, z))	n	False	False
3016	Two young men are playing outside near a golden statue	exists x. exists y. (YoungMan(x) & YoungMan(y) & PlayingOutside(x) & PlayingOutside(y) & NearGoldenStatue(x) & NearGoldenStatue(y))	Two people are ignoring the nearby gold statue	exists x. exists y. (Person(x) & Person(y) & GoldStatue(g) & Nearby(g, x) & Nearby(g, y) -> Ignoring(x, y, g))	n	False	False
3017	The bicyclist is speeding on a city street	exists x. exists y. (Bicyclist(x) & CityStreet(y) & Speeding(x, y))	The bicyclist is riding on a city street	exists x.exists y. (Bicyclist(x) & CityStreet(y) -> RidingOn(x, y))	e	False	False
3018	There is no woman wearing a blue helmet and riding a bicycle in a parking lot	not exists x. (Woman(x) & WearingBlueHelmet(x) & RidingBicycle(x) & InParkingLot(x))	The bicyclist is riding on a city street	exists x.exists y. (Bicyclist(x) & CityStreet(y) -> RidingOn(x, y))	n	False	False
3019	The bicyclist is riding on a city street	exists x.exists y. (Bicyclist(x) & CityStreet(y) -> RidingOn(x, y))	A woman is parking a blue bicycle and is wearing lots of riding helmets	exists x. (Woman(x) & ParkingBlueBicycle(x) & WearingRidingHelmets(x))	n	False	False
3020	A woman is wearing a blue helmet and is riding a bicycle in a parking lot	exists x. (Woman(x) & exists y. (BlueHelmet(y) & Wearing(x, y)) & exists z. (Bicycle(z) & Riding(x, z) & In(x, parkingLot)))	The bicyclist is not riding on a city street	exists x. (Bicyclist(x) -> not RidingOnCityStreet(x))	e	False	False
3021	A woman is wearing a blue helmet and is riding a bicycle in a parking lot	exists x. (Woman(x) & exists y. (BlueHelmet(y) & Wearing(x, y)) & exists z. (Bicycle(z) & Riding(x, z) & In(x, parkingLot)))	The bicyclist is riding on a city street	exists x.exists y. (Bicyclist(x) & CityStreet(y) -> RidingOn(x, y))	n	False	False
3022	The tan dog is watching a brown dog that is swimming in a pond	exists x.exists y. (TanDog(x) & BrownDog(y) & SwimmingInPond(y) -> Watching(x, y))	A pet dog is standing on the bank and is looking at another dog, which is brown, in the pond	exists x.exists y. (PetDog(x) & PetDog(y) & StandingOnBank(x) & StandingOnBank(y) & BrownDog(y) -> LookingAt(x, y))	n	False	False
3023	A pet dog is standing on the bank and is looking at another brown dog in the pond	exists x.exists y. (PetDog(x) & BrownDog(y) -> (StandingOnBank(x) & LookingAt(x, y)))	The tan dog is watching a brown dog that is swimming in a pond	exists x.exists y. (TanDog(x) & BrownDog(y) & SwimmingInPond(y) -> Watching(x, y))	n	False	False
3024	A young girl is dancing	exists x. (YoungGirl(x) & Dancing(x))	A young girl is standing still	exists x. (YoungGirl(x) & StandingStill(x))	n	False	False
3025	A young girl is standing challengingly on one leg	exists x. (YoungGirl(x) & Standing(x) & OnOneLeg(x))	A young girl is standing on one leg	exists x. (YoungGirl(x) & StandingOnOneLeg(x))	e	False	False
3026	A young girl is standing on one leg	exists x. (YoungGirl(x) & StandingOnOneLeg(x))	A young girl is standing on both legs	exists x. (YoungGirl(x) & StandingOnBothLegs(x))	c	False	False
3027	A bee is taking off from a yellow flower	exists x. exists y. (Bee(x) & YellowFlower(y) & TakingOffFrom(x, y))	A bee is clinging to a yellow flower	exists x. exists y. (Bee(x) & YellowFlower(y) & ClingingTo(x, y))	n	False	False
3028	A small bee is landing on a bunch of yellow flowers	exists x.exists y. (SmallBee(x) & YellowFlowers(y) -> LandingOn(x, y))	There is no small bee landing on a bunch of yellow flowers	exists x. exists y. (Bee(x) & YellowFlowers(y) & not Small(x) & LandsOn(x, y))	c	False	False
3029	A small bee is landing on a bunch of yellow flowers	exists x.exists y. (SmallBee(x) & YellowFlowers(y) -> LandingOn(x, y))	A bee is clinging to a yellow flower	exists x. exists y. (Bee(x) & YellowFlower(y) & ClingingTo(x, y))	n	False	False
3030	Some people are treading through the snow of the landscape which is beautiful and snowy	exists x.exists y. (Person(x) & Person(y) & Snow(z) & Landscape(w) & Beautiful(w) & Snowy(w) & Treading(x, z, w) & Treading(y, z, w))	Some people are treading through the snow of the beautiful snowy landscape	exists x. (Person(x) & TreadingThroughSnow(x))	e	False	False
3031	Four people are walking across thick snow and the sun is setting	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & WalkingAcrossSnow(x, y, z, w) & SunSetting(x, y, z, w))	Some people are treading through the snow of the landscape which is beautiful and snowy	exists x.exists y. (Person(x) & Person(y) & Snow(z) & Landscape(w) & Beautiful(w) & Snowy(w) & Treading(x, z, w) & Treading(y, z, w))	n	False	False
3032	Four people are walking across thick snow and the sun is setting	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & WalkingAcrossSnow(x, y, z, w) & SunSetting(x, y, z, w))	Nobody is treading through the snow of the beautiful snowy landscape	not exists x. (Person(x) & Treading(x) & SnowyLandscape(y) & Beautiful(y) & Snow(z) & In(z, y) & On(x, z))	n	False	False
3033	The young boys are posing with a green soccer ball in a park	exists x.exists y.exists z. (YoungBoy(x) & GreenSoccerBall(y) & Park(z) -> PosingWith(x, y, z))	The young kids are posing with a green soccer ball in a park	exists x.exists y.exists z. (YoungKid(x) & GreenSoccerBall(y) & Park(z) -> PosingWith(x, y, z))	e	False	False
3034	The young boys are not posing with a green soccer ball in a park	not exists x. (YoungBoy(x) & Posing(x) & GreenSoccerBall(x) & Park(x))	The young boys are posing with a green soccer ball in a park	exists x.exists y.exists z. (YoungBoy(x) & GreenSoccerBall(y) & Park(z) -> PosingWith(x, y, z))	c	False	False
3035	There are no boys kneeling next to each other in front of a ball	not exists x. (Boy(x) & Kneeling(x) & NextToEachOther(x) & InFrontOfBall(x))	The young boys are posing with a green soccer ball in a park	exists x.exists y.exists z. (YoungBoy(x) & GreenSoccerBall(y) & Park(z) -> PosingWith(x, y, z))	n	False	False
3036	A tan dog is resting near a brush	exists x.exists y. (TanDog(x) & Brush(y) -> RestingNear(x, y))	A tan dog is running through the brush	exists x. (TanDog(x) -> exists y. (Brush(y) & RunningThrough(x, y)))	n	False	False
3037	A white dog with beige spots is running through a field	exists x. (WhiteDog(x) & HasBeigeSpots(x) -> exists y. (Field(y) & RunningThrough(x, y)))	A white dog with beige spots is speeding through a field	exists x. (WhiteDog(x) & HasBeigeSpots(x) -> SpeedingThroughField(x))	e	False	False
3038	There is no white dog with beige spots running through a field	not exists x. (Dog(x) & White(x) & HasBeigeSpots(x) & RunsThroughField(x))	A white dog with beige spots is running through a field	exists x. (WhiteDog(x) & HasBeigeSpots(x) -> exists y. (Field(y) & RunningThrough(x, y)))	c	False	False
3039	A tan dog is running through the brush	exists x. (TanDog(x) -> exists y. (Brush(y) & RunningThrough(x, y)))	A white dog with beige spots is speeding through a field	exists x. (WhiteDog(x) & HasBeigeSpots(x) -> SpeedingThroughField(x))	n	False	False
3040	A white dog with beige spots is running through a field	exists x. (WhiteDog(x) & HasBeigeSpots(x) -> exists y. (Field(y) & RunningThrough(x, y)))	A tan dog is resting near a brush	exists x.exists y. (TanDog(x) & Brush(y) -> RestingNear(x, y))	n	False	False
3041	A white dog with beige spots is running through a field	exists x. (WhiteDog(x) & HasBeigeSpots(x) -> exists y. (Field(y) & RunningThrough(x, y)))	A tan dog is running through the brush	exists x. (TanDog(x) -> exists y. (Brush(y) & RunningThrough(x, y)))	n	False	False
3042	A horse and its rider are leaping quickly over a barrier	exists x.exists y.exists z. (Horse(x) & Rider(y) & Barrier(z) -> LeapingQuicklyOver(x, y, z))	A horse and its rider are leaping over a barrier	exists x.exists y.exists z. (Horse(x) & Rider(y) & Barrier(z) -> LeapingOver(x, y, z))	e	False	False
3043	A horse and its rider are leaping over a barrier	exists x.exists y.exists z. (Horse(x) & Rider(y) & Barrier(z) -> LeapingOver(x, y, z))	A horse and its rider are not leaping over a barrier	exists x.exists y. (Horse(x) & Rider(y) -> not LeapingOverBarrier(x, y))	c	False	False
3044	A horse is leaping a hurdle and has a rider on its back	exists x.exists y. (Horse(x) & Hurdle(y) & Leaping(x, y) & exists z. (Rider(z) & OnBack(z, x)))	A horse with no rider is falling over a hurdle	exists x. (Horse(x) & not HasRider(x) -> FallingOverHurdle(x))	n	False	False
3045	A horse is leaping a hurdle and has a rider on its back	exists x.exists y. (Horse(x) & Hurdle(y) & Leaping(x, y) & exists z. (Rider(z) & OnBack(z, x)))	A horse and its rider are leaping quickly over a barrier	exists x.exists y.exists z. (Horse(x) & Rider(y) & Barrier(z) -> LeapingQuicklyOver(x, y, z))	n	False	False
3046	A horse and its rider are not leaping over a barrier	exists x.exists y. (Horse(x) & Rider(y) -> not LeapingOverBarrier(x, y))	A horse is leaping a hurdle and has a rider on its back	exists x.exists y. (Horse(x) & Hurdle(y) & Leaping(x, y) & exists z. (Rider(z) & OnBack(z, x)))	c	False	False
3047	A horse is leaping a hurdle and has a rider on its back	exists x.exists y. (Horse(x) & Hurdle(y) & Leaping(x, y) & exists z. (Rider(z) & OnBack(z, x)))	A horse and its rider are leaping over a barrier	exists x.exists y.exists z. (Horse(x) & Rider(y) & Barrier(z) -> LeapingOver(x, y, z))	e	False	False
3048	Football players in red and white are jumping and hugging each other	exists x. (FootballPlayer(x) & WearsRed(x) & WearsWhite(x) -> (Jumps(x) & Hugs(x)))	There are no football players in red and white jumping and hugging each other	exists x. (FootballPlayer(x) & Red(x) & White(x) & Jumping(x) & Hugging(x))	c	False	False
3049	Two teammates are lifting a football player in a red and white uniform	exists x. exists y. exists z. (TeamMember(x) & TeamMember(y) & FootballPlayer(z) & Lifting(x, y, z) & WearsRedAndWhiteUniform(z))	A football player in a red and white uniform is being lifted by two teammates	exists x.exists y.exists z. (FootballPlayer(x) & RedAndWhiteUniform(x) & Teammate(y) & Teammate(z) -> BeingLifted(x, y, z))	e	False	False
3050	Football players in red and white are jumping and hugging each other	exists x. (FootballPlayer(x) & WearsRed(x) & WearsWhite(x) -> (Jumps(x) & Hugs(x)))	A football player in a red and white uniform is being pulled down by two teammates	exists x.exists y.exists z. (FootballPlayer(x) & RedAndWhiteUniform(x) & Team(y) & Teammate(z, y) -> PullingDown(x, z))	n	False	False
3051	Two teenage girls are wearing fancy dresses at an event	exists x. exists y. (TeenageGirl(x) & TeenageGirl(y) & FancyDress(x) & FancyDress(y) & WearingAtEvent(x, y))	Two old ladies are wearing worn dresses at home	exists x. exists y. (OldLady(x) & OldLady(y) & WornDress(x) & WornDress(y) & AtHome(x) & AtHome(y))	n	False	False
3052	A woman in a white dress and a woman in a blue dress are standing beside a stage	exists x.exists y.exists z. (Woman(x) & Woman(y) & Stage(z) -> (WearsWhiteDress(x) & WearsBlueDress(y) & StandingBeside(x, y, z)))	A woman in a white dress and a woman in a blue dress are standing on a stage	exists x.exists y. (Woman(x) & Woman(y) & WhiteDress(x) & BlueDress(y) -> StandingOnStage(x, y))	n	False	False
3053	A white woman is standing on a woman dressed in blue on a stage	exists x. exists y. exists z. (WhiteWoman(x) & Woman(y) & DressedInBlue(y) & Stage(z) & StandingOn(x, y, z))	A woman in a white dress and a woman in a blue dress are standing on a stage	exists x.exists y. (Woman(x) & Woman(y) & WhiteDress(x) & BlueDress(y) -> StandingOnStage(x, y))	n	False	False
3054	Two teenage girls are wearing fancy dresses at an event	exists x. exists y. (TeenageGirl(x) & TeenageGirl(y) & FancyDress(x) & FancyDress(y) & WearingAtEvent(x, y))	A woman in white clothing and a woman in a blue dress are standing on a stage	exists x. exists y. (Woman(x) & Woman(y) & WhiteClothing(x) & BlueDress(y) & StandingOnStage(x) & StandingOnStage(y))	n	False	False
3055	Two teenage girls are wearing fancy dresses at an event	exists x. exists y. (TeenageGirl(x) & TeenageGirl(y) & FancyDress(x) & FancyDress(y) & WearingAtEvent(x, y))	A woman in a white dress and a woman in a blue dress are standing beside a stage	exists x.exists y.exists z. (Woman(x) & Woman(y) & Stage(z) -> (WearsWhiteDress(x) & WearsBlueDress(y) & StandingBeside(x, y, z)))	n	False	False
3056	Two women with black hair are standing steadily in front of a plywood wall	exists x. exists y. (Woman(x) & Woman(y) & BlackHair(x) & BlackHair(y) & StandingInFrontOf(x, y, plywoodWall))	Two women with black hair are standing in front of a plywood wall	exists x. exists y. (Woman(x) & Woman(y) & BlackHair(x) & BlackHair(y) & StandingInFrontOf(x, y, plywoodWall))	e	True	False
3057	Two young women with folded arms are looking away from the screen	exists x.exists y.exists z. (YoungWoman(x) & YoungWoman(y) & Screen(z) & FoldedArms(x) & FoldedArms(y) -> LookingAwayFrom(x, y, z))	Two young women with folded arms are looking at the screen	exists x.exists y.exists z. (YoungWoman(x) & YoungWoman(y) & Screen(z) & FoldedArms(x) & FoldedArms(y) -> LookingAt(x, y, z))	c	False	False
3058	Two women with black hair are standing steadily in front of a plywood wall	exists x. exists y. (Woman(x) & Woman(y) & BlackHair(x) & BlackHair(y) & StandingInFrontOf(x, y, plywoodWall))	Two young women with folded arms are looking at the screen	exists x.exists y.exists z. (YoungWoman(x) & YoungWoman(y) & Screen(z) & FoldedArms(x) & FoldedArms(y) -> LookingAt(x, y, z))	n	False	False
3059	Two young women with folded arms are looking at the screen	exists x.exists y.exists z. (YoungWoman(x) & YoungWoman(y) & Screen(z) & FoldedArms(x) & FoldedArms(y) -> LookingAt(x, y, z))	There is no woman with black hair standing in front of a plywood wall	not exists x. (Woman(x) & BlackHair(x) & StandingInFrontOf(x, plywoodWall))	n	False	False
3060	Two young women with folded arms are looking at the screen	exists x.exists y.exists z. (YoungWoman(x) & YoungWoman(y) & Screen(z) & FoldedArms(x) & FoldedArms(y) -> LookingAt(x, y, z))	Two women with black hair are standing in front of a plywood wall	exists x. exists y. (Woman(x) & Woman(y) & BlackHair(x) & BlackHair(y) & StandingInFrontOf(x, y, plywoodWall))	n	False	False
3061	A group of students in uniforms is ignoring the front of the class	exists x. (GroupOfStudentsInUniforms(x) -> IgnoringFrontOfClass(x))	A classroom full of students is looking in the same direction inside a bamboo structure	exists x. exists y. exists z. (Classroom(x) & Student(y) & BambooStructure(z) & FullOfStudents(x, y) -> LookingInSameDirection(y, z))	n	False	False
3062	A group of students in uniforms is listening attentively at the front of the class	exists x. (GroupOfStudentsInUniforms(x) -> ListeningAttentivelyAtFrontOfClass(x))	A classroom full of students is looking in the same direction inside a bamboo structure	exists x. exists y. exists z. (Classroom(x) & Student(y) & BambooStructure(z) & FullOfStudents(x, y) -> LookingInSameDirection(y, z))	n	False	False
3063	A boy is jumping off a platform and two other boys are standing and watching	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOffPlatform(x) & StandingAndWatching(y) & StandingAndWatching(z))	A boy is jumping on a platform and two other boys are sitting absentmindedly	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & Jumping(x) & OnPlatform(x) & SittingAbsentmindedly(y) & SittingAbsentmindedly(z))	n	False	False
3064	Three boys are jumping off a platform	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOffPlatform(x) & JumpingOffPlatform(y) & JumpingOffPlatform(z))	Some boys are jumping off a platform	exists x.exists y. (Boy(x) & Platform(y) & JumpingOff(x, y))	e	False	False
3065	Three boys are jumping off a platform	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOffPlatform(x) & JumpingOffPlatform(y) & JumpingOffPlatform(z))	Nobody is jumping off a platform	not exists x. (JumpingOffPlatform(x))	c	False	True
3066	Some boys are jumping off a platform	exists x.exists y. (Boy(x) & Platform(y) & JumpingOff(x, y))	A boy is jumping off a platform and two other boys are standing and watching	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOffPlatform(x) & StandingAndWatching(y) & StandingAndWatching(z))	n	False	False
3067	Three boys are jumping off a platform	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOffPlatform(x) & JumpingOffPlatform(y) & JumpingOffPlatform(z))	A boy is jumping on a platform and two other boys are sitting absentmindedly	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & Jumping(x) & OnPlatform(x) & SittingAbsentmindedly(y) & SittingAbsentmindedly(z))	n	False	False
3068	Three boys are jumping off a platform	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOffPlatform(x) & JumpingOffPlatform(y) & JumpingOffPlatform(z))	A boy is jumping off a platform and two other boys are standing and watching	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & JumpingOffPlatform(x) & StandingAndWatching(y) & StandingAndWatching(z))	n	False	False
3069	Four middle eastern children, three girls and one boy, are climbing on the grotto with a pink interior	exists x.exists y.exists z. (MiddleEasternChild(x) & MiddleEasternChild(y) & MiddleEasternChild(z) & Girl(x) & Girl(y) & Boy(z) & Grotto(x) & PinkInterior(x) -> ClimbingOn(x, y, z))	The grotto with a pink interior is being climbed by four middle eastern children, three girls and one boy	exists x.exists y.exists z.exists w. (Grotto(x) & PinkInterior(x) & MiddleEasternChild(y) & Girl(z) & Boy(w) -> Climbing(y, z, w, x))	e	False	False
3070	There is no one climbing on the grotto with a pink interior	not exists x. (Climber(x) & ClimbsOnGrotto(x) & PinkInterior(x))	Four middle eastern children, three girls and one boy, are climbing on the grotto with a pink interior	exists x.exists y.exists z. (MiddleEasternChild(x) & MiddleEasternChild(y) & MiddleEasternChild(z) & Girl(x) & Girl(y) & Boy(z) & Grotto(x) & PinkInterior(x) -> ClimbingOn(x, y, z))	c	False	False
3071	The grotto with a pink interior is being climbed by four middle eastern children, three girls and one boy	exists x.exists y.exists z.exists w. (Grotto(x) & PinkInterior(x) & MiddleEasternChild(y) & Girl(z) & Boy(w) -> Climbing(y, z, w, x))	A group of kids is playing on a colorful structure	exists x.exists y. (Kid(x) & Kid(y) & Group(x) & Group(y) & PlayingOn(x, y) & ColorfulStructure(y))	e	False	False
3072	Four middle eastern children, three girls and one boy, are climbing on the grotto with a pink interior	exists x.exists y.exists z. (MiddleEasternChild(x) & MiddleEasternChild(y) & MiddleEasternChild(z) & Girl(x) & Girl(y) & Boy(z) & Grotto(x) & PinkInterior(x) -> ClimbingOn(x, y, z))	A group of kids is playing on a structure which is colorful	exists x.exists y. (GroupOfKids(x) & Structure(y) & Colorful(y) -> PlayingOn(x, y))	e	False	False
3073	The group of people is sitting on the ground outside a monument	exists x.exists y.exists z. (Group(x) & People(y) & Monument(z) -> SittingOnGroundOutside(x, y, z))	The group of people is not sitting on the ground outside a monument	not exists x. (Group(x) & Person(y) & Monument(z) & SittingOnGround(y, z))	c	False	False
3074	A group of people is sitting relaxed on both sides of a red stone monument	exists x. exists y. (Group(x) & Person(y) & RedStoneMonument(z) & SittingRelaxedOn(x, y, z) & SittingRelaxedOn(y, x, z))	The group of people is sitting on the ground outside a monument	exists x.exists y.exists z. (Group(x) & People(y) & Monument(z) -> SittingOnGroundOutside(x, y, z))	n	False	False
3075	The group of people is sitting on the ground outside a monument	exists x.exists y.exists z. (Group(x) & People(y) & Monument(z) -> SittingOnGroundOutside(x, y, z))	A group of people is standing on both sides of a red stone structure	exists x.exists y.exists z. (Group(x) & Person(y) & RedStoneStructure(z) & StandingOn(y, z) & StandingOn(x, z))	n	False	False
3076	The group of people is sitting on the ground outside a monument	exists x.exists y.exists z. (Group(x) & People(y) & Monument(z) -> SittingOnGroundOutside(x, y, z))	A group of people is sitting on both sides of a red stone structure	exists x.exists y.exists z. (Group(x) & Person(y) & RedStoneStructure(z) & SittingOn(y, z) & SittingOn(x, z))	n	False	False
3077	A small child is lying outdoors in a grassy area	exists x. (Child(x) & Small(x) & LyingOutdoors(x) & InGrassyArea(x))	A small child is outdoors climbing steps in a grassy area	exists x. (Child(x) & Small(x) & Outdoors(x) & ClimbingSteps(x) & GrassyArea(x))	n	False	False
3078	A small child in a pink sweater is climbing a concrete staircase	exists x.exists y.exists z. (SmallChild(x) & PinkSweater(x) & ConcreteStaircase(y) & Climbs(x, y) -> SweaterColor(z) & Color(z, pink))	There is no small child in a pink sweater climbing a concrete staircase	not exists x. (Child(x) & Small(x) & WearsPinkSweater(x) & ClimbsConcreteStaircase(x))	c	False	False
3079	A small child is outdoors climbing steps in a grassy area	exists x. (Child(x) & Small(x) & Outdoors(x) & ClimbingSteps(x) & GrassyArea(x))	There is no small child in a pink sweater climbing a concrete staircase	not exists x. (Child(x) & Small(x) & WearsPinkSweater(x) & ClimbsConcreteStaircase(x))	n	False	False
3080	A small child in a pink sweater is climbing a concrete staircase	exists x.exists y.exists z. (SmallChild(x) & PinkSweater(x) & ConcreteStaircase(y) & Climbs(x, y) -> SweaterColor(z) & Color(z, pink))	A small child is lying outdoors in a grassy area	exists x. (Child(x) & Small(x) & LyingOutdoors(x) & InGrassyArea(x))	n	False	False
3081	A small child in a pink sweater is climbing a concrete staircase	exists x.exists y.exists z. (SmallChild(x) & PinkSweater(x) & ConcreteStaircase(y) & Climbs(x, y) -> SweaterColor(z) & Color(z, pink))	A small child is outdoors climbing steps in a grassy area	exists x. (Child(x) & Small(x) & Outdoors(x) & ClimbingSteps(x) & GrassyArea(x))	n	False	False
3082	A bird, which is black, is sitting on a dead tree	exists x. (Bird(x) & Black(x) -> SittingOnDeadTree(x))	A black bird is sitting on a dead tree	exists x. exists y. (BlackBird(x) & DeadTree(y) & SittingOn(x, y))	e	False	False
3083	A dead bird is near a black man sitting on a tree	exists x.exists y.exists z. (DeadBird(x) & BlackMan(y) & Tree(z) -> Near(x, y, z))	A black bird is sitting on a dead tree	exists x. exists y. (BlackBird(x) & DeadTree(y) & SittingOn(x, y))	n	False	False
3084	The black bird is sitting in a leafless tree	exists x. exists y. (BlackBird(x) & LeaflessTree(y) & SittingIn(x, y))	A bird, which is black, is sitting on a dead tree	exists x. (Bird(x) & Black(x) -> SittingOnDeadTree(x))	n	False	False
3085	A black bird is sitting on a dead tree	exists x. exists y. (BlackBird(x) & DeadTree(y) & SittingOn(x, y))	The black bird is sitting comfortably in a leafless tree	exists x.exists y. (BlackBird(x) & LeaflessTree(y) -> SittingComfortablyIn(x, y))	n	False	False
3086	The black bird is sitting in a leafless tree	exists x. exists y. (BlackBird(x) & LeaflessTree(y) & SittingIn(x, y))	A black bird is sitting on a dead tree	exists x. exists y. (BlackBird(x) & DeadTree(y) & SittingOn(x, y))	n	False	False
3087	There is no kid in orange playing outside with a snowball	not exists x. (Kid(x) & Orange(x) & PlayingOutside(x) & HasSnowball(x))	A kid in orange is playing outside with a snowball	exists x.exists y.exists z. (Kid(x) & Orange(y) & Snowball(z) -> PlayingOutsideWith(x, y, z))	c	False	False
3088	A child is making a snow ball	exists x. (Child(x) & MakingSnowBall(x))	A snow ball is being made by a child	exists x. exists y. (SnowBall(x) & Child(y) & Making(y, x))	e	False	False
3089	A child is smashing a snow ball	exists x. exists y. (Child(x) & SnowBall(y) & Smashing(x, y))	A kid in orange is playing outside with a snowball	exists x.exists y.exists z. (Kid(x) & Orange(y) & Snowball(z) -> PlayingOutsideWith(x, y, z))	n	False	False
3090	A child is making a snow ball	exists x. (Child(x) & MakingSnowBall(x))	There is no kid in orange playing outside with a snowball	not exists x. (Kid(x) & Orange(x) & PlayingOutside(x) & HasSnowball(x))	n	False	False
3091	Three people are sitting on a bench under some palm trees	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & SittingOnBench(x) & SittingOnBench(y) & SittingOnBench(z) & PalmTrees(x) & PalmTrees(y) & PalmTrees(z))	A few people are sitting on a bench under some palm trees	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & Bench(x) & Bench(y) & Bench(z) & PalmTree(x) & PalmTree(y) & PalmTree(z))	e	False	False
3092	The people are not sitting on a bench in front of a restaurant	not exists x. (Person(x) & SittingOnBench(x) & InFrontOfRestaurant(x))	The people are sitting on a bench in front of a restaurant	exists x.exists y.exists z. (Person(x) & Bench(y) & Restaurant(z) -> SittingOn(x, y, z))	c	False	False
3093	Three people are sitting on a bench under some palm trees	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & SittingOnBench(x) & SittingOnBench(y) & SittingOnBench(z) & PalmTrees(x) & PalmTrees(y) & PalmTrees(z))	The people are sitting aimlessly on a bench in front of a restaurant	exists x.exists y.exists z. (Person(x) & Bench(y) & Restaurant(z) -> SittingAimlesslyOn(x, y, z))	n	False	False
3094	Three people are sitting on a bench under some palm trees	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & SittingOnBench(x) & SittingOnBench(y) & SittingOnBench(z) & PalmTrees(x) & PalmTrees(y) & PalmTrees(z))	The people are sitting in a restaurant in front of the beach	exists x.exists y.exists z. (Person(x) & Restaurant(y) & Beach(z) -> SittingInFrontOf(x, y, z))	n	False	False
3095	Three people are standing by a bench under some palm trees	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & StandingByBench(x, y, z) & PalmTrees(x) & PalmTrees(y) & PalmTrees(z))	The people are sitting on a bench in front of a restaurant	exists x.exists y.exists z. (Person(x) & Bench(y) & Restaurant(z) -> SittingOn(x, y, z))	n	False	False
3096	Three people are sitting on a bench under some palm trees	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & SittingOnBench(x) & SittingOnBench(y) & SittingOnBench(z) & PalmTrees(x) & PalmTrees(y) & PalmTrees(z))	The people are sitting on a bench in front of a restaurant	exists x.exists y.exists z. (Person(x) & Bench(y) & Restaurant(z) -> SittingOn(x, y, z))	n	False	False
3097	Two people are sitting in lawn chairs and are reading books	exists x. exists y. (Person(x) & Person(y) & LawnChair(x) & LawnChair(y) & SittingIn(x, y) & ReadingBook(x) & ReadingBook(y))	Two people in two chairs are reading pleasantly	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Chair(z) & Chair(w) & Reading(x, z) & Reading(y, w) & Pleasantly(x, y))	n	False	False
3098	Two people in two chairs are reading	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Chair(z) & Chair(w) & Reading(x, z) & Reading(y, w))	Some people are sitting in lawn chairs and are reading books	exists x. (Person(x) & SittingInLawnChair(x) & ReadingBook(x))	n	False	False
3099	Two people are sitting in lawn chairs and are reading books	exists x. exists y. (Person(x) & Person(y) & LawnChair(x) & LawnChair(y) & SittingIn(x, y) & ReadingBook(x) & ReadingBook(y))	Two people in two chairs are reading	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Chair(z) & Chair(w) & Reading(x, z) & Reading(y, w))	e	False	False
3100	The brown dog is sniffing the back of a small black dog	exists x.exists y. (BrownDog(x) & SmallBlackDog(y) -> Sniffing(x, y))	The brown dog is not sniffing the back of a small black dog	not (BrownDog(b) & SmallBlackDog(s) & SniffingBack(b, s))	c	False	False
3101	The brown dog is sniffing the back of a small black dog	exists x.exists y. (BrownDog(x) & SmallBlackDog(y) -> Sniffing(x, y))	There is no large brown dog and small grey dog standing on a rocky surface	not (exists x. (Dog(x) & Large(x) & Brown(x) & exists y. (Dog(y) & Small(y) & Grey(y) & StandingOn(y, rockySurface))))	n	False	False
3102	Three boys are carefully walking on rocks along a river	exists x. exists y. exists z. (Boy(x) & Boy(y) & Boy(z) & CarefullyWalkingOnRocks(x) & CarefullyWalkingOnRocks(y) & CarefullyWalkingOnRocks(z) & River(x) & River(y) & River(z))	Three boys are walking on rocks along a river	exists x.exists y.exists z. (Boy(x) & Boy(y) & Boy(z) & WalkingOnRocks(x) & WalkingOnRocks(y) & WalkingOnRocks(z) & River(x) & River(y) & River(z))	e	False	False
3103	A black dog in the snow is jumping off the ground and catching a stick	exists x.exists y.exists z. (BlackDog(x) & Snow(y) & Stick(z) -> (JumpsOffGround(x) & Catches(x, z)))	A black dog in the snow is leaping off the ground and catching a stick	exists x. (BlackDog(x) & InSnow(x) -> (LeapsOffGround(x) & CatchesStick(x)))	e	False	False
3104	A dog is jumping for a Frisbee in the snow	exists x. (Dog(x) & Jumping(x) & For(x, frisbee) & In(x, snow))	A black dog in the snow is jumping onto the ground and missing a stick	exists x. (BlackDog(x) & InSnow(x) -> (JumpsOntoGround(x) & MissesStick(x)))	n	False	False
3105	The dog is jumping for a Frisbee in the snow	exists x. (Dog(x) & Jumping(x) & For(x, frisbee) & In(x, snow))	A black dog in the snow is jumping off the ground and catching a stick	exists x.exists y.exists z. (BlackDog(x) & Snow(y) & Stick(z) -> (JumpsOffGround(x) & Catches(x, z)))	n	False	False
3106	A black dog in the snow is jumping off the ground and catching a stick	exists x.exists y.exists z. (BlackDog(x) & Snow(y) & Stick(z) -> (JumpsOffGround(x) & Catches(x, z)))	A dog is jumping for a Frisbee in the snow	exists x. (Dog(x) & Jumping(x) & For(x, frisbee) & In(x, snow))	n	False	False
3107	A man elegantly dressed in black is wearing an elaborate black mask	exists x. (Man(x) & ElegantlyDressedInBlack(x) -> WearingElaborateBlackMask(x))	A man dressed in black is wearing an elaborate black mask	exists x. (Man(x) & DressedInBlack(x) -> WearingElaborateBlackMask(x))	e	False	False
3108	A man is holding a mask in his raised hand	exists x. (Man(x) & HoldingMask(x))	A mask is being held by a man in his raised hand	exists x.exists y. (Mask(x) & Man(y) & RaisedHand(y) -> Holds(y, x))	e	False	False
3109	There is no man holding a mask in his raised hand	not exists x. (Man(x) & HoldsMask(x) & RaisedHand(x))	A man is holding a mask in his raised hand	exists x. (Man(x) & HoldingMask(x))	c	False	False
3110	A man dressed in black is wearing an elaborate black mask	exists x. (Man(x) & DressedInBlack(x) -> WearingElaborateBlackMask(x))	A mask is being held by a man in his raised hand	exists x.exists y. (Mask(x) & Man(y) & RaisedHand(y) -> Holds(y, x))	n	False	False
3111	A man dressed in black is wearing an elaborate black mask	exists x. (Man(x) & DressedInBlack(x) -> WearingElaborateBlackMask(x))	There is no man holding a mask in his raised hand	not exists x. (Man(x) & HoldsMask(x) & RaisedHand(x))	n	False	False
3112	A man is holding a mask in his raised hand	exists x. (Man(x) & HoldingMask(x))	There is no man dressed in black wearing an elaborate black mask	not exists x. (Man(x) & DressedInBlack(x) & WearingElaborateBlackMask(x))	n	False	False
3113	Two children are peering over a ledge, which is rusty	exists x. exists y. (Child(x) & Child(y) & PeeringOverLedge(x, y) & Rusty(x))	Two children are peering over a rusty ledge	exists x. exists y. (Child(x) & Child(y) & PeeringOverLedge(x, y) & Rusty(x) & Rusty(y))	e	False	False
3114	Two children are leaning on a rusty ledge	exists x. exists y. (Child(x) & Child(y) & LeaningOn(x, y, RustyLedge))	Two children are peering over a rusty ledge	exists x. exists y. (Child(x) & Child(y) & PeeringOverLedge(x, y) & Rusty(x) & Rusty(y))	e	False	False
3115	Two children are crouching under some bars made of metal	exists x. exists y. (Child(x) & Child(y) & CrouchingUnderBars(x, y) & MadeOfMetal(x, y))	Two children are crouching under some metal bars	exists x. exists y. (Child(x) & Child(y) & CrouchingUnderMetalBars(x) & CrouchingUnderMetalBars(y))	e	False	False
3116	Two children are crouching under some metal bars	exists x. exists y. (Child(x) & Child(y) & CrouchingUnderMetalBars(x) & CrouchingUnderMetalBars(y))	Two children are stretching over some metal bars	exists x. exists y. (Child(x) & Child(y) & MetalBars(z) & StretchingOver(x, z) & StretchingOver(y, z))	n	False	False
3117	Two children are peering over a rusty ledge	exists x. exists y. (Child(x) & Child(y) & PeeringOverLedge(x, y) & Rusty(x) & Rusty(y))	Two children are crouching under some bars made of metal	exists x. exists y. (Child(x) & Child(y) & CrouchingUnderBars(x, y) & MadeOfMetal(x, y))	n	False	False
3118	Two children are stretching over some metal bars	exists x. exists y. (Child(x) & Child(y) & MetalBars(z) & StretchingOver(x, z) & StretchingOver(y, z))	Two children are peering over a rusty ledge	exists x. exists y. (Child(x) & Child(y) & PeeringOverLedge(x, y) & Rusty(x) & Rusty(y))	n	False	False
3119	Two children are crouching under some metal bars	exists x. exists y. (Child(x) & Child(y) & CrouchingUnderMetalBars(x) & CrouchingUnderMetalBars(y))	Two children are peering over a ledge, which is rusty	exists x. exists y. (Child(x) & Child(y) & PeeringOverLedge(x, y) & Rusty(x))	n	False	False
3120	The player in purple, white and black is playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> PlayingNearEndOfField(x))	A player in purple, white and black is playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> PlayingNearEndOfField(x))	e	True	False
3121	The player in purple, white and black is playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> PlayingNearEndOfField(x))	The black player is making the white player a play near the end of a purple field	exists x. exists y. exists z. (BlackPlayer(x) & WhitePlayer(y) & PurpleField(z) -> MakesPlayNearEnd(x, y, z))	n	False	False
3122	The player in purple, white and black is playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> PlayingNearEndOfField(x))	A sports uniform is being worn by a man who is running down the field	exists x.exists y.exists z. (SportsUniform(x) & Man(y) & Field(z) -> Wearing(y, x, z))	n	False	False
3123	A man is naked and is lying in the field	exists x. (Man(x) & Naked(x) & LyingInField(x))	The player in purple, white and black is playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> PlayingNearEndOfField(x))	n	False	False
3124	A player in purple, white and black is playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> PlayingNearEndOfField(x))	A man is wearing a sports uniform and is running down the field	exists x. (Man(x) & WearingSportsUniform(x) & RunningDownField(x))	n	False	False
3125	The player in purple, white and black is not playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> not PlayingNearEndOfField(x))	A man is wearing a sports uniform and is running down the field	exists x. (Man(x) & WearingSportsUniform(x) & RunningDownField(x))	n	False	False
3126	A man is wearing a sports uniform and is running down the field	exists x. (Man(x) & WearingSportsUniform(x) & RunningDownField(x))	The player in purple, white and black is playing near the end of the field	exists x. (Player(x) & WearingPurple(x) & WearingWhite(x) & WearingBlack(x) -> PlayingNearEndOfField(x))	n	False	False
3127	A person is stopping the bicycle in the sand beside the ocean	exists x. (Person(x) & Bicycle(x) & Sand(x) & Ocean(x) & Stops(x))	A person is riding a bicycle in the sand beside the ocean	exists x. exists y. exists z. (Person(x) & Bicycle(y) & Sand(z) & Riding(x, y, z))	n	False	False
3128	A man on a bicycle is riding on the beach	exists x.exists y.exists z. (Man(x) & Bicycle(y) & Beach(z) -> RidingOn(x, y, z))	A person is stopping the bicycle in the sand beside the ocean	exists x. (Person(x) & Bicycle(x) & Sand(x) & Ocean(x) & Stops(x))	n	False	False
3129	A man on a bike is riding on the shore	exists x.exists y. (Man(x) & Bike(y) & RidingOn(x, y) -> OnShore(x))	A person is riding a bicycle in the sand beside the ocean	exists x. exists y. exists z. (Person(x) & Bicycle(y) & Sand(z) & Riding(x, y, z))	n	False	False
3130	A man on a bicycle is riding on the beach	exists x.exists y.exists z. (Man(x) & Bicycle(y) & Beach(z) -> RidingOn(x, y, z))	A person is riding a bicycle in the sand beside the ocean	exists x. exists y. exists z. (Person(x) & Bicycle(y) & Sand(z) & Riding(x, y, z))	e	False	False
3131	A large duck is flying over a rocky stream	exists x. exists y. (Duck(x) & Large(x) & RockyStream(y) & FlyingOver(x, y))	A duck, which is large, is flying over a rocky stream	exists x. (Duck(x) & Large(x) -> FlyingOverRockyStream(x))	e	False	False
3132	A large duck is flying over a rocky stream	exists x. exists y. (Duck(x) & Large(x) & RockyStream(y) & FlyingOver(x, y))	A large stream is full of rocks, ducks and flies	exists x. (LargeStream(x) -> (FullOfRocks(x) & FullOfDucks(x) & FullOfFlies(x)))	n	False	False
3133	A seabird is slowly flying over some rocks	exists x.exists y. (Seabird(x) & Rocks(y) -> SlowlyFliesOver(x, y))	A large duck is flying over a rocky stream	exists x. exists y. (Duck(x) & Large(x) & RockyStream(y) & FlyingOver(x, y))	n	False	False
3134	A large duck is flying over a rocky stream	exists x. exists y. (Duck(x) & Large(x) & RockyStream(y) & FlyingOver(x, y))	There is no seabird flying over some rocks	not exists x. (Seabird(x) & FlyingOverRocks(x))	n	False	False
3135	A duck, which is large, is flying over a rocky stream	exists x. (Duck(x) & Large(x) -> FlyingOverRockyStream(x))	A seabird is flying over some rocks	exists x. exists y. (Seabird(x) & Rocks(y) -> FlyingOver(x, y))	e	False	False
3136	A seabird is flying over some rocks	exists x. exists y. (Seabird(x) & Rocks(y) -> FlyingOver(x, y))	A large duck is perching over a rocky stream	exists x.exists y. (LargeDuck(x) & RockyStream(y) -> PerchingOver(x, y))	n	False	False
3137	A large duck is flying over a rocky stream	exists x. exists y. (Duck(x) & Large(x) & RockyStream(y) & FlyingOver(x, y))	A seabird is flying over some rocks	exists x. exists y. (Seabird(x) & Rocks(y) -> FlyingOver(x, y))	n	True	False
3138	The kids are chasing each other in the sand	exists x.exists y.exists z. (Kid(x) & Kid(y) & Sand(z) -> Chasing(x, y, z))	The children are chasing each other in the sand	exists x.exists y.exists z. (Child(x) & Child(y) & Sand(z) -> Chasing(x, y, z))	e	True	False
3139	There is no little boy running on the ground and playing with a little girl	not exists x. (LittleBoy(x) & RunningOnGround(x) & PlayingWith(x, littleGirl))	A little boy is running on the ground and playing with a little girl	exists x. exists y. (LittleBoy(x) & LittleGirl(y) & RunningOnGround(x) & PlayingWith(x, y))	c	False	False
3140	The kids are chasing each other in the sand	exists x.exists y.exists z. (Kid(x) & Kid(y) & Sand(z) -> Chasing(x, y, z))	The little boy is running on the ground and playing with a little girl	exists x.exists y. (LittleBoy(x) & LittleGirl(y) & RunsOnGround(x) & PlaysWith(x, y))	n	False	False
3141	The kids are chasing each other in the sand	exists x.exists y.exists z. (Kid(x) & Kid(y) & Sand(z) -> Chasing(x, y, z))	There is no little boy running on the ground and playing with a little girl	not exists x. (LittleBoy(x) & RunningOnGround(x) & PlayingWith(x, littleGirl))	n	False	False
3142	The children are chasing each other in the sand	exists x.exists y.exists z. (Child(x) & Child(y) & Sand(z) -> Chasing(x, y, z))	A little boy is running on the ground and playing with a little girl	exists x. exists y. (LittleBoy(x) & LittleGirl(y) & RunningOnGround(x) & PlayingWith(x, y))	n	False	False
3143	The kids are not chasing each other in the sand	not exists x. exists y. (Kid(x) & Kid(y) & Chasing(x, y) & InSand(x, y))	A little boy is running on the ground and playing with a little girl	exists x. exists y. (LittleBoy(x) & LittleGirl(y) & RunningOnGround(x) & PlayingWith(x, y))	n	False	False
3144	Two small children are playing with a toy car in the street	exists x. exists y. exists z. (Child(x) & Child(y) & ToyCar(z) & PlayingWith(x, y, z) & InStreet(z))	Two small children are idling in the street	exists x. exists y. (Child(x) & Child(y) & Small(x) & Small(y) & IdlingInStreet(x) & IdlingInStreet(y))	n	False	False
3145	A daughter is being pushed by her father on a go-kart and another girl is watching	exists x.exists y.exists z. (Daughter(x) & Father(y) & GoKart(z) & Pushing(y, x, z) & Girl(w) & Watching(w, z) -> FamilyActivity(x, y, z, w))	Two small children are playing with a toy car in the street	exists x. exists y. exists z. (Child(x) & Child(y) & ToyCar(z) & PlayingWith(x, y, z) & InStreet(z))	n	False	False
3146	Two small children are playing with a toy car in the street	exists x. exists y. exists z. (Child(x) & Child(y) & ToyCar(z) & PlayingWith(x, y, z) & InStreet(z))	A girl is pushing a go-kart and a daughter is watching her father	exists x.exists y.exists z. (Girl(x) & GoKart(y) & Daughter(z) -> (Pushes(x, y) & Watches(z, Father)))	n	False	False
3147	Two small children are idling in the street	exists x. exists y. (Child(x) & Child(y) & Small(x) & Small(y) & IdlingInStreet(x) & IdlingInStreet(y))	A father is pushing his daughter on a go-kart and another girl is watching	exists x.exists y.exists z. (Father(x) & Daughter(y) & GoKart(z) -> Pushing(x, y, z)) & (Girl(w) & Watching(w, z))	n	False	False
3148	A dog is quickly running uphill	exists x. (Dog(x) & QuicklyRunning(x) & Uphill(x))	A dog is running uphill	exists x. (Dog(x) & Running(x) & Uphill(x))	e	False	False
3149	A dog is running downhill	exists x. (Dog(x) -> RunsDownhill(x))	A dog is running uphill	exists x. (Dog(x) & Running(x) & Uphill(x))	n	False	False
3150	A dog is running up a hill full of grass	exists x. exists y. exists z. (Dog(x) & Hill(y) & Grass(z) & RunningUp(x, y, z))	A dog is running up a grassy hill	exists x.exists y.exists z. (Dog(x) & GrassyHill(y) & Running(z) & Up(z) & On(z, x, y))	e	False	False
3151	A dog is running up a hill full of grass	exists x. exists y. exists z. (Dog(x) & Hill(y) & Grass(z) & RunningUp(x, y, z))	A dog is running uphill	exists x. (Dog(x) & Running(x) & Uphill(x))	e	False	False
3152	A dog is running up a grassy hill	exists x.exists y.exists z. (Dog(x) & GrassyHill(y) & Running(z) & Up(z) & On(z, x, y))	A dog is quickly running uphill	exists x. (Dog(x) & QuicklyRunning(x) & Uphill(x))	n	False	False
3153	A dog is running downhill	exists x. (Dog(x) -> RunsDownhill(x))	A dog is running up a grassy hill	exists x.exists y.exists z. (Dog(x) & GrassyHill(y) & Running(z) & Up(z) & On(z, x, y))	n	False	False
3154	A dog is running up a grassy hill	exists x.exists y.exists z. (Dog(x) & GrassyHill(y) & Running(z) & Up(z) & On(z, x, y))	A dog is running uphill	exists x. (Dog(x) & Running(x) & Uphill(x))	e	False	False
3155	A golden dog is running through a field of tall grass	exists x. exists y. (GoldenDog(x) & Field(y) & TallGrass(y) -> RunsThrough(x, y))	The golden dog is running through a field of tall grass	exists x. exists y. (GoldenDog(x) & FieldOfTallGrass(y) -> RunsThrough(x, y))	e	False	False
3156	There is no brown dog running through tall green grass	not exists x. (Dog(x) & Brown(x) & exists y. (Grass(y) & Tall(y) & Green(y) & RunningThrough(x, y)))	A brown dog is running through tall green grass	exists x. exists y. (BrownDog(x) & TallGreenGrass(y) -> RunningThrough(x, y))	c	False	False
3157	The golden dog is running through a field of tall grass	exists x. exists y. (GoldenDog(x) & FieldOfTallGrass(y) -> RunsThrough(x, y))	A brown dog is running through tall green grass	exists x. exists y. (BrownDog(x) & TallGreenGrass(y) -> RunningThrough(x, y))	n	False	False
3158	Two dogs are playing on the beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	Two dogs are resting on the beach	exists x. exists y. (Dog(x) & Dog(y) & RestingOnBeach(x) & RestingOnBeach(y))	n	False	False
3159	There are no white dogs running and jumping along a beach	exists x. (Dog(x) & White(x) & not Runs(x) & not Jumps(x))	Two white dogs are running and jumping along a beach	exists x. exists y. (WhiteDog(x) & WhiteDog(y) & Running(x) & Running(y) & Jumping(x) & Jumping(y) & Beach(z) & Along(x, y, z))	c	False	False
3160	A couple of white dogs are running and jumping along a beach	exists x.exists y.exists z. (WhiteDog(x) & WhiteDog(y) & Beach(z) & Running(x, z) & Jumping(y, z))	Two dogs are playing on the beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	e	False	False
3161	Two white dogs are running and jumping along a beach	exists x. exists y. (WhiteDog(x) & WhiteDog(y) & Running(x) & Running(y) & Jumping(x) & Jumping(y) & Beach(z) & Along(x, y, z))	Two dogs are cheerfully playing on the beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	n	False	False
3162	Two white dogs are running and jumping along a beach	exists x. exists y. (WhiteDog(x) & WhiteDog(y) & Running(x) & Running(y) & Jumping(x) & Jumping(y) & Beach(z) & Along(x, y, z))	Two dogs are playing on the beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	e	False	False
3163	A dog is running alongside a fence on a dirt track	exists x. exists y. exists z. (Dog(x) & Fence(y) & DirtTrack(z) & RunningAlongside(x, y, z))	A dog is running alongside a fence on a track full of dirt	exists x. exists y. exists z. (Dog(x) & Fence(y) & Track(z) & RunningAlongside(x, y, z))	e	False	False
3164	A dog is running alongside a fence on a dirt track	exists x. exists y. exists z. (Dog(x) & Fence(y) & DirtTrack(z) & RunningAlongside(x, y, z))	A dog is sitting by a fence on a dirt track	exists x. exists y. exists z. (Dog(x) & Fence(y) & DirtTrack(z) & SittingBy(x, y) & On(x, z))	n	False	False
3165	A dog is running alongside a fence on a track full of dirt	exists x. exists y. exists z. (Dog(x) & Fence(y) & Track(z) & RunningAlongside(x, y, z))	The large brown dog is running outside in the dirt	exists x. (Dog(x) & Large(x) & Brown(x) & Running(x) & Outside(x) & In(x, dirt))	n	False	False
3166	The large brown dog is not running outside in the dirt	not (exists x. (Dog(x) & Large(x) & Brown(x) & Running(x) & Outside(x) & InDirt(x)))	A dog is running alongside a fence on a dirt track	exists x. exists y. exists z. (Dog(x) & Fence(y) & DirtTrack(z) & RunningAlongside(x, y, z))	n	False	False
3167	A young girl in a coat made for winter is jumping off a boulder into the sand at a beach	exists x.exists y.exists z. (YoungGirl(x) & Coat(y) & Winter(z) & MadeFor(y, z) & Wearing(x, y) & JumpingOffBoulder(x) -> AtBeach(x))	A young girl in a winter coat is jumping off a boulder into the sand at a beach	exists x.exists y.exists z. (YoungGirl(x) & WinterCoat(x) & Boulder(y) & Beach(z) -> JumpsOffIntoSand(x, y, z))	e	False	False
3168	There is no young girl in a winter coat jumping off a boulder into the sand at a beach	not exists x. (YoungGirl(x) & WinterCoat(x) & JumpsOffBoulder(x) & IntoSand(x) & AtBeach(x))	A young girl in a winter coat is jumping off a boulder into the sand at a beach	exists x.exists y.exists z. (YoungGirl(x) & WinterCoat(x) & Boulder(y) & Beach(z) -> JumpsOffIntoSand(x, y, z))	c	False	False
3169	A girl is jumping off a rock and another is standing on it	exists x. exists y. (Girl(x) & Girl(y) & JumpingOffRock(x) & StandingOnRock(y))	A girl is jumping on a rock and another is sitting on it	exists x. exists y. (Girl(x) & Girl(y) & JumpingOnRock(x) & SittingOnRock(y))	n	False	False
3170	One girl is jumping off a rock and another is standing on it	exists x. exists y. (Girl(x) & Girl(y) & JumpingOffRock(x) & StandingOnRock(y))	A young girl in a winter coat is jumping off a boulder into the sand at a beach	exists x.exists y.exists z. (YoungGirl(x) & WinterCoat(x) & Boulder(y) & Beach(z) -> JumpsOffIntoSand(x, y, z))	n	False	False
3171	A young girl in a winter coat is jumping off a boulder into the sand at a beach	exists x.exists y.exists z. (YoungGirl(x) & WinterCoat(x) & Boulder(y) & Beach(z) -> JumpsOffIntoSand(x, y, z))	A girl is jumping on a rock and another is sitting on it	exists x. exists y. (Girl(x) & Girl(y) & JumpingOnRock(x) & SittingOnRock(y))	n	False	False
3172	There is no young girl in a winter coat jumping off a boulder into the sand at a beach	not exists x. (YoungGirl(x) & WinterCoat(x) & JumpsOffBoulder(x) & IntoSand(x) & AtBeach(x))	A girl is jumping off a rock and another is standing on it	exists x. exists y. (Girl(x) & Girl(y) & JumpingOffRock(x) & StandingOnRock(y))	n	False	False
3173	The man with brown hair is not wearing sunglasses and is not sitting at a table with cans of soda and other drinks	exists x. (Man(x) & BrownHair(x) -> not WearingSunglasses(x) & not SittingAtTableWithCansOfDrinks(x))	The man with brown hair is wearing sunglasses and is sitting at a table with cans of soda and other drinks	exists x. (Man(x) & BrownHair(x) -> (WearsSunglasses(x) & SitsAtTable(x, cansOfSoda, otherDrinks)))	c	False	False
3174	A young man with brown hair and sunglasses is sitting in front of some cans of soda	exists x. (YoungMan(x) & BrownHair(x) & Sunglasses(x) -> SittingInFrontOfCansOfSoda(x))	There is no young man with brown hair and sunglasses sitting in front of some cans of soda	not exists x. (YoungMan(x) & BrownHair(x) & Sunglasses(x) & SittingInFrontOf(x, cansOfSoda))	c	False	False
3175	The man with brown hair is not wearing sunglasses and is not sitting at a table with cans of soda and other drinks	exists x. (Man(x) & BrownHair(x) -> not WearingSunglasses(x) & not SittingAtTableWithCansOfDrinks(x))	A young man with brown hair and sunglasses is sitting in front of some cans of soda	exists x. (YoungMan(x) & BrownHair(x) & Sunglasses(x) -> SittingInFrontOfCansOfSoda(x))	n	False	False
3176	A woman wearing a blue and white uniform with a white and blue hat is keeping her mouth open and is near others dressed in the same fashion	exists x. (Woman(x) & WearsBlueAndWhiteUniform(x) & WearsWhiteAndBlueHat(x) -> (KeepingMouthOpen(x) & NearOthers(x)))	The woman wearing the blue and white uniform with a white and blue hat is keeping her mouth open and is near others who are dressed in the same fashion	exists x. (Woman(x) & WearsBlueAndWhiteUniform(x) & WearsWhiteAndBlueHat(x) -> (KeepingMouthOpen(x) & NearOthersInSameFashion(x)))	e	False	False
3177	A woman is wearing a shirt, which is blue, with a white vest and a white cap and is talking and marching	exists x. (Woman(x) -> (exists y. (Shirt(y) & Wearing(x, y) & Blue(y)) & exists z. (WhiteVest(z) & Wearing(x, z)) & exists w. (WhiteCap(w) & Wearing(x, w)) & Talking(x) & Marching(x)))	A woman is wearing a blue shirt with a white vest and a white cap and is talking and marching	exists x. (Woman(x) & exists y. (BlueShirt(y) & Wearing(x, y)) & exists z. (WhiteVest(z) & Wearing(x, z)) & exists w. (WhiteCap(w) & Wearing(x, w)) & Talking(x) & Marching(x))	e	False	False
3178	A woman is wearing a blue shirt with a white vest and a white cap and is talking and marching	exists x. (Woman(x) & exists y. (BlueShirt(y) & Wearing(x, y)) & exists z. (WhiteVest(z) & Wearing(x, z)) & exists w. (WhiteCap(w) & Wearing(x, w)) & Talking(x) & Marching(x))	There is no woman wearing a blue shirt with a white vest and a white cap, talking and marching	not exists x. (Woman(x) & WearingBlueShirt(x) & WearingWhiteVest(x) & WearingWhiteCap(x) & Talking(x) & Marching(x))	c	False	False
3179	A woman is wearing a shirt, which is blue, with a white vest and a white cap and is talking and marching	exists x. (Woman(x) -> (exists y. (Shirt(y) & Wearing(x, y) & Blue(y)) & exists z. (WhiteVest(z) & Wearing(x, z)) & exists w. (WhiteCap(w) & Wearing(x, w)) & Talking(x) & Marching(x)))	A woman wearing a blue and white uniform with a white and blue hat is keeping her mouth open and is near others dressed in the same fashion	exists x. (Woman(x) & WearsBlueAndWhiteUniform(x) & WearsWhiteAndBlueHat(x) -> (KeepingMouthOpen(x) & NearOthers(x)))	n	False	False
3180	A woman wearing a blue and white uniform with a white and blue hat is keeping her mouth open and is near others dressed in the same fashion	exists x. (Woman(x) & WearsBlueAndWhiteUniform(x) & WearsWhiteAndBlueHat(x) -> (KeepingMouthOpen(x) & NearOthers(x)))	There is no woman wearing a blue shirt with a white vest and a white cap, talking and marching	not exists x. (Woman(x) & WearingBlueShirt(x) & WearingWhiteVest(x) & WearingWhiteCap(x) & Talking(x) & Marching(x))	n	False	False
3181	A man is uninterestedly holding a sign and is seeking money	exists x. (Man(x) & HoldingSign(x) & SeekingMoney(x))	A man is holding a sign and is seeking money	exists x. (Man(x) & HoldingSign(x) & SeekingMoney(x))	e	True	False
3182	There is no man holding a sign and seeking money	not exists x. (Man(x) & HoldsSign(x) & SeeksMoney(x))	A man is holding a sign and is seeking money	exists x. (Man(x) & HoldingSign(x) & SeekingMoney(x))	c	False	False
3183	A man is holding a sign and is seeking money	exists x. (Man(x) & HoldingSign(x) & SeekingMoney(x))	A man is seeking a sign and is holding some money	exists x. (Man(x) & SeekingSign(x) & HoldingMoney(x))	n	False	False
3184	A bearded man is standing by a shopping cart and is holding a cardboard sign	exists x.exists y.exists z. (BeardedMan(x) & ShoppingCart(y) & CardboardSign(z) -> (StandingBy(x, y) & Holding(x, z)))	A man is holding a sign and is seeking money	exists x. (Man(x) & HoldingSign(x) & SeekingMoney(x))	n	False	False
3185	The snowboarder is doing a flip over a mound of snow	exists x.exists y. (Snowboarder(x) & MoundOfSnow(y) -> DoesFlipOver(x, y))	A snowboarder is doing a flip over a mound of snow	exists x. exists y. (Snowboarder(x) & MoundOfSnow(y) -> DoingFlip(x, y))	e	False	False
3186	Somebody is leaping in the air on a board	exists x. (Person(x) & Leaping(x) & On(x, Board))	Somebody is jumping in the air on a board	exists x. (Jumping(x) & OnBoard(x))	e	False	False
3187	There is nobody jumping in the air on a board	exists x. (JumpingInAir(x) & OnBoard(x))	Somebody is jumping in the air on a board	exists x. (Jumping(x) & OnBoard(x))	c	False	False
3188	A snowboarder is doing a flip over a mound of snow	exists x. exists y. (Snowboarder(x) & MoundOfSnow(y) -> DoingFlip(x, y))	Somebody is leaping in the air on a board	exists x. (Person(x) & Leaping(x) & On(x, Board))	e	False	False
3189	There is no snowboarder doing a flip over a mound of snow	not exists x. (Snowboarder(x) & Flip(x) & Over(x, moundOfSnow))	Somebody is jumping in the air on a board	exists x. (Jumping(x) & OnBoard(x))	n	False	False
3190	A large crowd in warm clothing is posing for a camera	exists x. (LargeCrowd(x) & WarmClothing(x) -> PosingForCamera(x))	A crowd, which is large, in warm clothing is posing for a camera	exists x. (Crowd(x) & Large(x) & WarmClothing(x) -> PosingForCamera(x))	e	False	False
3191	A large crowd in warm clothing is walking away from a camera	exists x.exists y. (LargeCrowd(x) & WarmClothing(x) & Camera(y) -> WalkingAwayFrom(x, y))	A large crowd in warm clothing is posing for a camera	exists x. (LargeCrowd(x) & WarmClothing(x) -> PosingForCamera(x))	n	False	False
3192	A large crowd in warm clothing is posing for a camera	exists x. (LargeCrowd(x) & WarmClothing(x) -> PosingForCamera(x))	A crowd is posing for a large camera man in heavy clothing	exists x.exists y.exists z. (Crowd(x) & LargeCameraMan(y) & HeavyClothing(z) -> PosingFor(x, y, z))	n	False	False
3193	Two men, a woman, and two young boys are standing aimlessly in front of a large gathering of people outside a building	exists x. exists y. exists z. exists w. (Man(x) & Woman(y) & YoungBoy(z) & YoungBoy(w) & StandingAimlessly(x, y, z, w) & LargeGatheringOfPeople(x, y, z, w) & OutsideBuilding(x, y, z, w))	Two men, a woman, and two young boys are standing in front of a large gathering of people outside a building	exists x. exists y. exists z. exists w. (Man(x) & Woman(y) & YoungBoy(z) & YoungBoy(w) & StandingInFrontOfGathering(x, y, z, w, building))	e	False	False
3194	Two men, a woman, and two young boys are sitting in front of a large gathering of people outside a building	exists x. exists y. exists z. exists w. (Man(x) & Woman(y) & YoungBoy(z) & YoungBoy(w) & SittingInFrontOfGathering(x, y, z, w, building))	Two men, a woman, and two young boys are standing in front of a large gathering of people outside a building	exists x. exists y. exists z. exists w. (Man(x) & Woman(y) & YoungBoy(z) & YoungBoy(w) & StandingInFrontOfGathering(x, y, z, w, building))	n	False	False
3195	Two men, a woman, and two young boys are sitting in front of a large gathering of people outside a building	exists x. exists y. exists z. exists w. (Man(x) & Woman(y) & YoungBoy(z) & YoungBoy(w) & SittingInFrontOfGathering(x, y, z, w, building))	A large crowd in warm clothing is posing for a camera	exists x. (LargeCrowd(x) & WarmClothing(x) -> PosingForCamera(x))	n	False	False
3196	A large crowd in warm clothing is walking away from a camera	exists x.exists y. (LargeCrowd(x) & WarmClothing(x) & Camera(y) -> WalkingAwayFrom(x, y))	Two men, a woman, and two young boys are standing in front of a large gathering of people outside a building	exists x. exists y. exists z. exists w. (Man(x) & Woman(y) & YoungBoy(z) & YoungBoy(w) & StandingInFrontOfGathering(x, y, z, w, building))	n	False	False
3197	Two men, a woman, and two young boys are standing in front of a large gathering of people outside a building	exists x. exists y. exists z. exists w. (Man(x) & Woman(y) & YoungBoy(z) & YoungBoy(w) & StandingInFrontOfGathering(x, y, z, w, building))	A crowd is posing for a large camera man in heavy clothing	exists x.exists y.exists z. (Crowd(x) & LargeCameraMan(y) & HeavyClothing(z) -> PosingFor(x, y, z))	n	False	False
3198	A blonde boy in green is sitting on a swing	exists x.exists y.exists z. (Blonde(x) & Boy(x) & Green(y) & Swing(z) -> SittingOn(x, y, z))	A blonde boy in green is standing on a swing	exists x.exists y.exists z. (Blonde(x) & Boy(x) & Green(y) & Swing(z) -> StandingOn(x, y, z))	c	False	False
3199	A little girl with blond hair is smiling and sitting on a swing	exists x. (LittleGirl(x) & BlondHair(x) -> (Smiling(x) & SittingOnSwing(x)))	A blond kid in green is sitting on a swing	exists x.exists y.exists z. (BlondKid(x) & Green(y) & Swing(z) -> SittingOn(x, y, z))	n	False	False
3200	A blonde boy in green is standing on a swing	exists x.exists y.exists z. (Blonde(x) & Boy(x) & Green(y) & Swing(z) -> StandingOn(x, y, z))	A little girl with blond hair is smiling and sitting on a swing	exists x. (LittleGirl(x) & BlondHair(x) -> (Smiling(x) & SittingOnSwing(x)))	n	False	False
3201	A blonde in green is sitting by a swinging boy	exists x.exists y. (Blonde(x) & Green(y) -> SittingBySwingingBoy(x, y))	A little girl with blond hair is smiling and sitting on a swing	exists x. (LittleGirl(x) & BlondHair(x) -> (Smiling(x) & SittingOnSwing(x)))	n	False	False
3202	A girl, who is little, with blond hair is smiling and sitting on a swing	exists x. (Girl(x) & Little(x) & BlondHair(x) -> (Smiling(x) & SittingOnSwing(x)))	A blonde boy in green is sitting on a swing	exists x.exists y.exists z. (Blonde(x) & Boy(x) & Green(y) & Swing(z) -> SittingOn(x, y, z))	n	False	False
3203	A blonde boy in green is sitting on a swing	exists x.exists y.exists z. (Blonde(x) & Boy(x) & Green(y) & Swing(z) -> SittingOn(x, y, z))	A little girl with blond hair is smiling and sitting on a swing	exists x. (LittleGirl(x) & BlondHair(x) -> (Smiling(x) & SittingOnSwing(x)))	n	False	False
3204	The man in the white hat is playing guitar on stage	exists x. (Man(x) & WearsWhiteHat(x) -> PlaysGuitarOnStage(x))	A man in a white hat is playing guitar on stage	exists x. (Man(x) & WearsWhiteHat(x) -> PlaysGuitarOnStage(x))	e	True	False
3205	A man in a white hat is playing guitar on stage	exists x. (Man(x) & WearsWhiteHat(x) -> PlaysGuitarOnStage(x))	A man in a white hat is getting off stage	exists x. (Man(x) & WearsWhiteHat(x) -> GetsOffStage(x))	n	False	False
3206	The man in the white hat is playing guitar on stage	exists x. (Man(x) & WearsWhiteHat(x) -> PlaysGuitarOnStage(x))	Four people are performing music outdoors	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & PerformsMusic(x) & PerformsMusic(y) & PerformsMusic(z) & PerformsMusic(w) & Outdoors(x) & Outdoors(y) & Outdoors(z) & Outdoors(w))	n	False	False
3207	A man in a white hat is getting off stage	exists x. (Man(x) & WearsWhiteHat(x) -> GetsOffStage(x))	Four people are performing music outdoors	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & PerformsMusic(x) & PerformsMusic(y) & PerformsMusic(z) & PerformsMusic(w) & Outdoors(x) & Outdoors(y) & Outdoors(z) & Outdoors(w))	n	False	False
3208	A man in a white hat is playing guitar on stage	exists x. (Man(x) & WearsWhiteHat(x) -> PlaysGuitarOnStage(x))	Music is being performed by four people outdoors	exists x.exists y.exists z. (Music(x) & Person(y) & Person(z) & Outdoors(y) -> Performs(y, x))	n	False	False
3209	A man in a white hat is playing guitar on stage	exists x. (Man(x) & WearsWhiteHat(x) -> PlaysGuitarOnStage(x))	Four people are performing music outdoors	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & PerformsMusic(x) & PerformsMusic(y) & PerformsMusic(z) & PerformsMusic(w) & Outdoors(x) & Outdoors(y) & Outdoors(z) & Outdoors(w))	n	False	False
3210	A man in a red uniform is making a jump in a dirt bike race	exists x.exists y. (Man(x) & RedUniform(x) & DirtBikeRace(y) -> MakingJump(x, y))	A man in a red uniform is racing and making a jump over a bike in the dirt	exists x.exists y.exists z. (Man(x) & RedUniform(x) & Bike(y) & Dirt(z) -> (Racing(x, y) & JumpingOver(x, y, z)))	n	False	False
3211	A man in a red uniform is swiftly making a jump in a dirt bike race	exists x. (Man(x) & WearsRedUniform(x) -> SwiftlyMakesJumpInDirtBikeRace(x))	A man is participating in a bmx race	exists x. (Man(x) & ParticipatingInBmxRace(x))	e	False	False
3212	A man in a red uniform is making a jump in a dirt bike race	exists x.exists y. (Man(x) & RedUniform(x) & DirtBikeRace(y) -> MakingJump(x, y))	A man is participating in a race for bmxs	exists x. exists y. (Man(x) & Race(y) & ForBmx(y) -> ParticipatingIn(x, y))	n	False	False
3213	A man is not participating in a bmx race	exists x. (Man(x) & not ParticipatingInBmxRace(x))	A man in a red uniform is making a jump in a dirt bike race	exists x.exists y. (Man(x) & RedUniform(x) & DirtBikeRace(y) -> MakingJump(x, y))	c	False	False
3214	There is no family posing by the mantel and the Christmas tree	exists x. (Family(x) & PosingByMantel(x) & not PosingByChristmasTree(x))	A happy family is posing by the fireplace	exists x. (HappyFamily(x) -> PosingByFireplace(x))	c	False	False
3215	A family, which looks happy, is posing by the fireplace	exists x. (Family(x) & LooksHappy(x) -> PosingByFireplace(x))	A family is posing by the mantel and the Christmas tree	exists x. exists y. exists z. (Family(x) & Mantel(y) & ChristmasTree(z) & PosingBy(x, y, z))	n	False	False
3216	A family is posing by the mantel and the Christmas tree	exists x. exists y. exists z. (Family(x) & Mantel(y) & ChristmasTree(z) & PosingBy(x, y, z))	A sad family is posing by the fireplace	exists x. (Family(x) & Sad(x) -> PosingByFireplace(x))	n	False	False
3217	Two twin preteen boys are dueling with sticks	exists x. exists y. (Twin(x) & Twin(y) & Preteen(x) & Preteen(y) & Dueling(x, y) & Dueling(y, x) & WithSticks(x) & WithSticks(y))	Two twin preteen kids are dueling with sticks	exists x. exists y. (Twin(x) & Twin(y) & Preteen(x) & Preteen(y) & Dueling(x, y) & With(x, sticks) & With(y, sticks))	e	False	False
3218	Two twin preteen boys are dueling with sticks	exists x. exists y. (Twin(x) & Twin(y) & Preteen(x) & Preteen(y) & Dueling(x, y) & Dueling(y, x) & WithSticks(x) & WithSticks(y))	Two twin preteen boys are playing with cards	exists x. exists y. (Twin(x) & Twin(y) & Preteen(x) & Preteen(y) & PlayingWithCards(x) & PlayingWithCards(y))	n	False	False
3219	Two boys are wearing brown shirts and are enthusiastically tugging at a rope on a wooden platform	exists x. exists y. (Boy(x) & Boy(y) & WearingBrownShirt(x) & WearingBrownShirt(y) & TuggingRope(x, y) & WoodenPlatform(x, y))	Two boys are wearing brown shirts and are tugging at a rope on a wooden platform	exists x. exists y. (Boy(x) & Boy(y) & WearingBrownShirt(x) & WearingBrownShirt(y) & TuggingAtRope(x, y) & WoodenPlatform(x, y))	e	False	False
3220	Some people playing rugby are tackling each other	exists x.exists y. (Person(x) & Person(y) & RugbyPlayer(x) & RugbyPlayer(y) -> Tackle(x, y))	Rugby players are tackling each other	exists x.exists y. (RugbyPlayer(x) & RugbyPlayer(y) -> Tackle(x, y))	e	False	False
3221	Rugby players are tackling each other	exists x.exists y. (RugbyPlayer(x) & RugbyPlayer(y) -> Tackle(x, y))	An opponent is tackling a soccer player	exists x.exists y. (Opponent(x) & SoccerPlayer(y) -> Tackling(x, y))	n	False	False
3222	A white dog is standing on fallen leaves	exists x. (WhiteDog(x) -> exists y. (FallenLeaves(y) & StandingOn(x, y)))	One white dog is standing on the leaves on the ground	exists x. (WhiteDog(x) & StandingOnLeaves(x))	e	False	False
3223	A white dog is standing on fallen leaves	exists x. (WhiteDog(x) -> exists y. (FallenLeaves(y) & StandingOn(x, y)))	There is no white dog standing on the leaves on the ground	not exists x. (Dog(x) & White(x) & exists y. (Leaves(y) & OnGround(y) & StandingOn(x, y)))	c	False	False
3224	A white dog is standing on the leaves on the ground	exists x.exists y. (WhiteDog(x) & Leaves(y) -> StandingOn(x, y))	A dog, which is white, is standing on fallen leaves	exists x. (Dog(x) & White(x) -> StandingOnFallenLeaves(x))	e	False	False
3225	A white dog is standing on the leaves on the ground	exists x.exists y. (WhiteDog(x) & Leaves(y) -> StandingOn(x, y))	A white dog is standing on fallen leaves	exists x. (WhiteDog(x) -> exists y. (FallenLeaves(y) & StandingOn(x, y)))	e	False	False
3226	Two girls are happily playing inside a jumper house	exists x. exists y. (Girl(x) & Girl(y) & JumperHouse(z) & Inside(x, y, z) & Happy(x) & Happy(y))	Two girls are playing inside a jumper house	exists x. exists y. (Girl(x) & Girl(y) & JumperHouse(z) & PlayingIn(x, z) & PlayingIn(y, z))	e	False	False
3227	Two girls are jumping inside a playing house	exists x. exists y. (Girl(x) & Girl(y) & JumpingInside(x, y, PlayingHouse))	Two girls are playing inside a jumper house	exists x. exists y. (Girl(x) & Girl(y) & JumperHouse(z) & PlayingIn(x, z) & PlayingIn(y, z))	n	False	False
3228	A child in light colored clothing is standing with his arms extended outward	exists x. (Child(x) & LightColoredClothing(x) -> StandingWithArmsExtended(x))	Two girls are not playing inside the jumper house	not exists x. exists y. (Girl(x) & Girl(y) & PlayingInsideJumperHouse(x) & PlayingInsideJumperHouse(y))	n	False	False
3229	Two girls are jumping inside a playing house	exists x. exists y. (Girl(x) & Girl(y) & JumpingInside(x, y, PlayingHouse))	A child in light colored clothing is standing with his arms extended outward	exists x. (Child(x) & LightColoredClothing(x) -> StandingWithArmsExtended(x))	n	False	False
3230	Some children are playing on a playground	exists x. (Child(x) & PlayingOnPlayground(x))	Some children are not playing on a playground	exists x. (Child(x) & not PlayingOnPlayground(x))	c	False	False
3231	Some children are not playing on a playground	exists x. (Child(x) & not PlayingOnPlayground(x))	The boy and girl are playing on the outdoor gym	exists x.exists y.exists z. (Boy(x) & Girl(y) & OutdoorGym(z) -> PlayingOn(x, y, z))	n	False	False
3232	A boy and a girl are playing on the outdoor gym	exists x. exists y. (Boy(x) & Girl(y) & PlayingOnOutdoorGym(x, y))	Some children are playing on a playground	exists x. (Child(x) & PlayingOnPlayground(x))	e	False	False
3233	Some children are playing on a playground	exists x. (Child(x) & PlayingOnPlayground(x))	The boy and girl are not playing on a playground	not (Boy(b) & Girl(g) & Playground(p) & PlayingOn(b, p) & PlayingOn(g, p))	n	False	False
3234	The boy and girl are playing on the outdoor gym	exists x.exists y.exists z. (Boy(x) & Girl(y) & OutdoorGym(z) -> PlayingOn(x, y, z))	Some children are playing on a playground	exists x. (Child(x) & PlayingOnPlayground(x))	n	False	False
3235	The motocross rider is wearing blue and black pants	exists x. (MotocrossRider(x) -> WearsBlueAndBlackPants(x))	The motocross rider is standing naked	exists x. (MotocrossRider(x) -> StandingNaked(x))	n	False	False
3236	The rider on the blue and black motocross bike is not wearing the pants	exists x. (Rider(x) & OnBlueAndBlackMotocrossBike(x) -> not WearingPants(x))	The motocross rider is wearing blue and black pants	exists x. (MotocrossRider(x) -> WearsBlueAndBlackPants(x))	n	False	False
3237	A biker with a blue jacket, black pants and a white helmet is driving recklessly on dirt and people watch	exists x. (Biker(x) & BlueJacket(x) & BlackPants(x) & WhiteHelmet(x) -> DrivingRecklesslyOnDirt(x) & PeopleWatch(x))	A biker with a blue jacket, black pants and a white helmet is driving on dirt and people are watching	exists x. (Biker(x) & BlueJacket(x) & BlackPants(x) & WhiteHelmet(x) -> (DrivingOnDirt(x) & PeopleWatching(x)))	e	False	False
3238	A biker with a blue jacket, black pants and a white helmet is parking on dirt and people are not watching	exists x. (Biker(x) & BlueJacket(x) & BlackPants(x) & WhiteHelmet(x) -> ParkingOnDirt(x) & not Watching(x))	A biker with a blue jacket, black pants and a white helmet is driving on dirt and people are watching	exists x. (Biker(x) & BlueJacket(x) & BlackPants(x) & WhiteHelmet(x) -> (DrivingOnDirt(x) & PeopleWatching(x)))	c	False	False
3239	The motocross rider is wearing blue and black pants	exists x. (MotocrossRider(x) -> WearsBlueAndBlackPants(x))	A biker with a blue jacket, black pants and a white helmet is parking on dirt and people are not watching	exists x. (Biker(x) & BlueJacket(x) & BlackPants(x) & WhiteHelmet(x) -> ParkingOnDirt(x) & not Watching(x))	n	False	False
3240	A biker with a blue jacket, black pants and a white helmet is driving on dirt and people are watching	exists x. (Biker(x) & BlueJacket(x) & BlackPants(x) & WhiteHelmet(x) -> (DrivingOnDirt(x) & PeopleWatching(x)))	Blue and black pants are being worn by the motocross rider	exists x. (MotocrossRider(x) & (WearsBluePants(x) | WearsBlackPants(x)))	e	False	False
3241	A young Asian woman with pink gloves is standing in the snow	exists x. (YoungAsianWoman(x) & PinkGloves(x) & StandingInSnow(x))	A woman, who is young and Asian, with gloves colored in pink, is standing in the snow	exists x. (Woman(x) & Young(x) & Asian(x) & WearsPinkGloves(x) -> StandingInSnow(x))	e	True	False
3242	There is no young Asian woman with pink gloves standing in the snow	not exists x. (YoungAsianWoman(x) & PinkGloves(x) & StandingInSnow(x))	A young Asian woman with pink gloves is standing in the snow	exists x. (YoungAsianWoman(x) & PinkGloves(x) & StandingInSnow(x))	c	False	True
3243	A female wearing pink gloves and a brown jacket is smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> SmilingInSnow(x))	The female wearing pink gloves and a brown jacket is smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> SmilingInSnow(x))	e	True	False
3244	A female wearing pink gloves and a brown jacket is not smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> not SmilingInSnow(x))	A female wearing pink gloves and a brown jacket is smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> SmilingInSnow(x))	c	False	False
3245	The female wearing pink gloves and a brown jacket is smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> SmilingInSnow(x))	A young Asian woman with pink gloves is standing in the snow	exists x. (YoungAsianWoman(x) & PinkGloves(x) & StandingInSnow(x))	n	False	False
3246	A young Asian woman with pink gloves is standing in the snow	exists x. (YoungAsianWoman(x) & PinkGloves(x) & StandingInSnow(x))	A female wearing pink gloves and a brown jacket is not smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> not SmilingInSnow(x))	n	False	False
3247	A woman, who is young and Asian, with gloves colored in pink, is standing in the snow	exists x. (Woman(x) & Young(x) & Asian(x) & WearsPinkGloves(x) -> StandingInSnow(x))	A female wearing pink gloves and a brown jacket is smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> SmilingInSnow(x))	n	False	False
3248	A female wearing pink gloves and a brown jacket is smiling in the snow	exists x. (Female(x) & WearingPinkGloves(x) & WearingBrownJacket(x) -> SmilingInSnow(x))	There is no young Asian woman with pink gloves standing in the snow	not exists x. (YoungAsianWoman(x) & PinkGloves(x) & StandingInSnow(x))	n	False	False
3249	A man is drinking orange juice and walking	exists x. (Man(x) & DrinkingOrangeJuice(x) & Walking(x))	A person is drinking orange juice and walking	exists x. (Person(x) & DrinkingOrangeJuice(x) & Walking(x))	e	True	False
3250	Orange juice is being drunk by a man who is walking on a sunny day	exists x.exists y.exists z. (OrangeJuice(x) & Man(y) & SunnyDay(z) -> Drinking(y, x))	A man is drinking orange juice and walking on a sunny day	exists x. (Man(x) & DrinkingOrangeJuice(x) & WalkingOnSunnyDay(x))	e	False	False
3251	Orange juice is being drunk by a man who is walking on a sunny day	exists x.exists y.exists z. (OrangeJuice(x) & Man(y) & SunnyDay(z) -> Drinking(y, x))	A man is drinking orange juice and walking	exists x. (Man(x) & DrinkingOrangeJuice(x) & Walking(x))	e	False	False
3252	A man is spilling orange juice and standing still	exists x. (Man(x) & SpillingOrangeJuice(x) & StandingStill(x))	A man is drinking orange juice and walking on a sunny day	exists x. (Man(x) & DrinkingOrangeJuice(x) & WalkingOnSunnyDay(x))	n	False	False
3253	The rollerblader is not performing a trick on a ramp	not PerformsTrickOnRamp(rollerblader)	A rollerblader is performing a trick on a ramp	exists x.exists y.exists z. (Rollerblader(x) & Trick(y) & Ramp(z) -> PerformsOn(x, y, z))	c	False	False
3254	A man on inline skates is skating at a skate park	exists x. (Man(x) & OnInlineSkates(x) -> SkatingAtSkatePark(x))	A man on inline skates is resting at a skate park	exists x. (Man(x) & OnInlineSkates(x) -> RestingAtSkatePark(x))	n	False	False
3255	A rollerblader is performing a trick on a ramp	exists x.exists y.exists z. (Rollerblader(x) & Trick(y) & Ramp(z) -> PerformsOn(x, y, z))	A man on inline skates is skating at a park built for skating	exists x.exists y. (Man(x) & InlineSkates(x) & Park(y) & BuiltForSkating(y) -> SkatingAt(x, y))	n	False	False
3256	A rollerblader is performing a trick on a ramp	exists x.exists y.exists z. (Rollerblader(x) & Trick(y) & Ramp(z) -> PerformsOn(x, y, z))	A man on inline skates is resting at a skate park	exists x. (Man(x) & OnInlineSkates(x) -> RestingAtSkatePark(x))	n	False	False
3257	The rollerblader is not performing a trick on a ramp	not PerformsTrickOnRamp(rollerblader)	A man on inline skates is skating at a skate park	exists x. (Man(x) & OnInlineSkates(x) -> SkatingAtSkatePark(x))	n	False	False
3258	A rollerblader is performing a trick on a ramp	exists x.exists y.exists z. (Rollerblader(x) & Trick(y) & Ramp(z) -> PerformsOn(x, y, z))	A man on inline skates is skating at a skate park	exists x. (Man(x) & OnInlineSkates(x) -> SkatingAtSkatePark(x))	n	False	False
3259	A dog with a black coat is standing in shallow water	exists x. (Dog(x) & HasBlackCoat(x) -> StandingInShallowWater(x))	A black dog is standing in shallow water	exists x. (Dog(x) & Black(x) & StandingInShallowWater(x))	e	False	False
3260	A black dog with a red collar is amusedly putting its face in the water	exists x. (BlackDog(x) & RedCollar(x) -> AmusedlyPutsFaceInWater(x))	A black dog with a red collar is putting its face in the water	exists x. (BlackDog(x) & HasRedCollar(x) -> PutsFaceInWater(x))	e	False	False
3261	A black dog with a red collar is putting its face in the water	exists x. (BlackDog(x) & HasRedCollar(x) -> PutsFaceInWater(x))	There is no black dog with a red collar putting its face in the water	not exists x. (Dog(x) & Black(x) & RedCollar(x) & PutsFaceInWater(x))	c	False	False
3262	A black dog is standing in shallow water	exists x. (Dog(x) & Black(x) & StandingInShallowWater(x))	There is no black dog with a red collar putting its face in the water	not exists x. (Dog(x) & Black(x) & RedCollar(x) & PutsFaceInWater(x))	n	False	False
3263	A black dog with a red collar is putting its face in the water	exists x. (BlackDog(x) & HasRedCollar(x) -> PutsFaceInWater(x))	A dog with a black coat is standing in shallow water	exists x. (Dog(x) & HasBlackCoat(x) -> StandingInShallowWater(x))	n	False	False
3264	A black dog with a red collar is putting its face in the water	exists x. (BlackDog(x) & HasRedCollar(x) -> PutsFaceInWater(x))	A black dog is standing in deep water	exists x. (Dog(x) & Black(x) & StandingIn(x, DeepWater))	n	False	False
3265	A group of football players is running in the field	exists x. (GroupOfFootballPlayers(x) -> exists y. (Field(y) & RunningIn(x, y)))	A football game is being watched by the crowd	exists x. (FootballGame(x) -> exists y. (Crowd(y) & Watching(y, x)))	n	False	False
3266	A group of football players is running in the field	exists x. (GroupOfFootballPlayers(x) -> exists y. (Field(y) & RunningIn(x, y)))	The crowd is watching the football at the game	Crowd(c) & Football(f) & Game(g) -> Watching(c, f, g)	n	False	False
3267	An oriental man and two women are in front of a camera	exists x. exists y. exists z. (OrientalMan(x) & Woman(y) & Woman(z) & Camera(c) & InFrontOf(x, y, z, c))	An oriental man and two women are facing a camera	exists x. exists y. exists z. (OrientalMan(x) & Woman(y) & Woman(z) & Camera(c) & Facing(x, y, z, c))	n	False	False
3268	An oriental man and two women are turning their backs to the camera	exists x. exists y. exists z. (OrientalMan(x) & Woman(y) & Woman(z) -> TurningBacks(x, y, z))	An oriental man and two women are facing a camera	exists x. exists y. exists z. (OrientalMan(x) & Woman(y) & Woman(z) & Camera(c) & Facing(x, y, z, c))	c	False	False
3269	An oriental man and two women are in front of a camera	exists x. exists y. exists z. (OrientalMan(x) & Woman(y) & Woman(z) & Camera(c) & InFrontOf(x, y, z, c))	A group of people is standing together and looking at the camera	exists x. (GroupOfPeople(x) -> (StandingTogether(x) & LookingAtCamera(x)))	n	False	False
3270	An oriental man and two women are turning their backs to the camera	exists x. exists y. exists z. (OrientalMan(x) & Woman(y) & Woman(z) -> TurningBacks(x, y, z))	A group of people is standing together and looking at the camera	exists x. (GroupOfPeople(x) -> (StandingTogether(x) & LookingAtCamera(x)))	n	False	False
3271	A child is sitting in a red and yellow toy car	exists x. exists y. (Child(x) & ToyCar(y) & Red(y) & Yellow(y) & SittingIn(x, y))	A child is sitting in a toy car colored in red and yellow	exists x. exists y. (Child(x) & ToyCar(y) & SittingIn(x, y) & (ColoredInRed(y) & ColoredInYellow(y)))	e	False	False
3272	A small girl is riding in a toy car	exists x. exists y. (SmallGirl(x) & ToyCar(y) & RidingIn(x, y))	A small toy girl is in a riding car	exists x. (ToyGirl(x) & RidingCar(x))	n	False	False
3273	A child is sitting in a red and yellow toy car	exists x. exists y. (Child(x) & ToyCar(y) & Red(y) & Yellow(y) & SittingIn(x, y))	The small girl is riding in the toy car	exists x. exists y. (SmallGirl(x) & ToyCar(y) & RidingIn(x, y))	n	False	False
3274	A small toy girl is in a riding car	exists x. (ToyGirl(x) & RidingCar(x))	A child is sitting in a red and yellow toy car	exists x. exists y. (Child(x) & ToyCar(y) & Red(y) & Yellow(y) & SittingIn(x, y))	n	False	False
3275	A small girl is riding in a toy car	exists x. exists y. (SmallGirl(x) & ToyCar(y) & RidingIn(x, y))	There is no child sitting in a red and yellow toy car	not exists x. (Child(x) & SittingIn(x, redToyCar) & SittingIn(x, yellowToyCar))	c	False	False
3276	A child is sitting in a red and yellow toy car	exists x. exists y. (Child(x) & ToyCar(y) & Red(y) & Yellow(y) & SittingIn(x, y))	A small girl is riding in a toy car	exists x. exists y. (SmallGirl(x) & ToyCar(y) & RidingIn(x, y))	n	False	False
3277	A child in a red outfit is dangerously jumping on a trampoline	exists x. (Child(x) & WearsRedOutfit(x) -> JumpsOnTrampoline(x))	A child in a red outfit is jumping on a trampoline	exists x. (Child(x) & WearsRedOutfit(x) -> JumpsOnTrampoline(x))	e	True	False
3278	A child in a red outfit is jumping on a trampoline	exists x. (Child(x) & WearsRedOutfit(x) -> JumpsOnTrampoline(x))	There is no child in a red outfit jumping on a trampoline	not exists x. (Child(x) & RedOutfit(x) & JumpingOnTrampoline(x))	c	False	False
3279	A little boy in clothes dyed in red is jumping into the air	exists x. (LittleBoy(x) & WearsRedClothes(x) -> JumpsIntoAir(x))	A little boy in red clothes is jumping into the air	exists x. (LittleBoy(x) & RedClothes(x) & JumpingIntoAir(x))	e	False	False
3280	A child in a red outfit is jumping on a trampoline	exists x. (Child(x) & WearsRedOutfit(x) -> JumpsOnTrampoline(x))	A little boy in clothes dyed in red is jumping into the air	exists x. (LittleBoy(x) & WearsRedClothes(x) -> JumpsIntoAir(x))	n	False	False
3281	The black dog is playing with the brown dog on the sand	exists x. exists y. exists z. (BlackDog(x) & BrownDog(y) & Sand(z) -> PlaysWith(x, y, z))	A black dog is playing with a brown dog on the sand	exists x.exists y.exists z. (BlackDog(x) & BrownDog(y) & Sand(z) -> PlayingOn(x, y, z))	e	False	False
3282	A brown dog and a black dog are playing in the sand	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) & PlayingInSand(x, y))	The black dog is playing with the brown dog on the sand	exists x. exists y. exists z. (BlackDog(x) & BrownDog(y) & Sand(z) -> PlaysWith(x, y, z))	e	False	False
3283	A brown dog and a black dog are playing in the sand	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) & PlayingInSand(x, y))	A black dog is attacking a brown dog on the sand	exists x.exists y.exists z. (BlackDog(x) & BrownDog(y) & Sand(z) -> AttackingOn(x, y, z))	n	False	False
3284	A brown dog and a black dog are playing in the sand	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) & PlayingInSand(x, y))	A black dog is playing with a brown dog on the sand	exists x.exists y.exists z. (BlackDog(x) & BrownDog(y) & Sand(z) -> PlayingOn(x, y, z))	e	False	False
3285	A woman and three men are posing motionlessly for a photo	exists x. exists y. exists z. exists w. (Woman(x) & Man(y) & Man(z) & Man(w) & PosingMotionlessly(x, y, z, w))	A woman and three men are posing for a photo	exists x. exists y. exists z. exists w. (Woman(x) & Man(y) & Man(z) & Man(w) & PosingForPhoto(x, y, z, w))	e	False	False
3286	A woman and three men are posing for a photo	exists x. exists y. exists z. exists w. (Woman(x) & Man(y) & Man(z) & Man(w) & PosingForPhoto(x, y, z, w))	A woman and three men are denying a photo	exists x. exists y. exists z. exists w. (Woman(x) & Man(y) & Man(z) & Man(w) & DenyPhoto(x, y, z, w))	n	False	False
3287	Three men and a woman are standing still for a picture	exists x. exists y. exists z. exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & StandingStill(x) & StandingStill(y) & StandingStill(z) & StandingStill(w))	Three men and a woman are posing for a picture	exists x.exists y.exists z.exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & PosingForPicture(x, y, z, w))	e	False	False
3288	Three men and a woman are running away from a picture	exists x. exists y. exists z. exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & RunningAwayFromPicture(x, y, z, w))	Three men and a woman are posing for a picture	exists x.exists y.exists z.exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & PosingForPicture(x, y, z, w))	n	False	False
3289	Three men and a woman are standing still for a picture	exists x. exists y. exists z. exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & StandingStill(x) & StandingStill(y) & StandingStill(z) & StandingStill(w))	A woman and three men are posing for a photo	exists x. exists y. exists z. exists w. (Woman(x) & Man(y) & Man(z) & Man(w) & PosingForPhoto(x, y, z, w))	e	False	False
3290	A woman and three men are posing for a photo	exists x. exists y. exists z. exists w. (Woman(x) & Man(y) & Man(z) & Man(w) & PosingForPhoto(x, y, z, w))	Three men and a woman are running away from a picture	exists x. exists y. exists z. exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & RunningAwayFromPicture(x, y, z, w))	c	False	False
3291	Three men and a woman are posing for a picture	exists x.exists y.exists z.exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & PosingForPicture(x, y, z, w))	A woman is posing for three men for a photo	exists x. exists y. exists z. (Woman(x) & Man(y) & Man(z) & PosingFor(x, y, z))	n	False	False
3292	Three men and a woman are posing for a picture	exists x.exists y.exists z.exists w. (Man(x) & Man(y) & Man(z) & Woman(w) & PosingForPicture(x, y, z, w))	A woman and three men are posing for a photo	exists x. exists y. exists z. exists w. (Woman(x) & Man(y) & Man(z) & Man(w) & PosingForPhoto(x, y, z, w))	e	False	False
3293	A young boy covered in grass is jumping near a wooden fence	exists x. (YoungBoy(x) & CoveredInGrass(x) & JumpingNear(x, woodenFence))	A young boy covered in grass is jumping near a fence made of wood	exists x.exists y.exists z. (YoungBoy(x) & Grass(y) & Fence(z) & CoveredIn(x, y) & JumpingNear(x, z) -> MadeOfWood(z))	e	False	False
3294	A wet boy is standing still on dirty and wet grass	exists x. (WetBoy(x) -> (exists y. (DirtyGrass(y) & WetGrass(y) & StandingStillOn(x, y))))	A wet boy is jumping around on dirty and wet grass	exists x. (WetBoy(x) -> (JumpsOn(x, dirtyGrass) & JumpsOn(x, wetGrass)))	n	False	False
3295	A wet boy is cheerfully jumping around on dirty and wet grass	exists x. (WetBoy(x) -> (CheerfullyJumping(x) & On(x, dirtyGrass) & On(x, wetGrass)))	A young boy covered in grass is jumping near a wooden fence	exists x. (YoungBoy(x) & CoveredInGrass(x) & JumpingNear(x, woodenFence))	n	False	False
3296	A wet boy is standing still on dirty and wet grass	exists x. (WetBoy(x) -> (exists y. (DirtyGrass(y) & WetGrass(y) & StandingStillOn(x, y))))	A young boy covered in grass is jumping near a wooden fence	exists x. (YoungBoy(x) & CoveredInGrass(x) & JumpingNear(x, woodenFence))	n	False	False
3297	A wet boy is jumping around on dirty and wet grass	exists x. (WetBoy(x) -> (JumpsOn(x, dirtyGrass) & JumpsOn(x, wetGrass)))	A young boy covered in grass is jumping near a fence made of wood	exists x.exists y.exists z. (YoungBoy(x) & Grass(y) & Fence(z) & CoveredIn(x, y) & JumpingNear(x, z) -> MadeOfWood(z))	n	False	False
3298	A wet boy is jumping around on dirty and wet grass	exists x. (WetBoy(x) -> (JumpsOn(x, dirtyGrass) & JumpsOn(x, wetGrass)))	A young boy is jumping and covering nearby wooden fence with grass	exists x. (YoungBoy(x) -> (Jumping(x) & CoveringNearbyWoodenFenceWithGrass(x)))	n	False	False
3299	A young boy covered in grass is jumping near a wooden fence	exists x. (YoungBoy(x) & CoveredInGrass(x) & JumpingNear(x, woodenFence))	A wet boy is jumping around on dirty and wet grass	exists x. (WetBoy(x) -> (JumpsOn(x, dirtyGrass) & JumpsOn(x, wetGrass)))	n	False	False
3300	The black dog is walking through the tall grass	exists x. (Dog(x) & Black(x) & Walking(x) & Through(x, tallGrass))	The black dog is not walking through the tall grass	not exists x. (Dog(x) & Black(x) & Walking(x) & TallGrass(x))	c	False	False
3301	The black dog is sprinting through the grass	exists x. (BlackDog(x) -> SprintingThroughGrass(x))	The black dog is walking through the tall grass	exists x. (Dog(x) & Black(x) & Walking(x) & Through(x, tallGrass))	n	False	False
3302	A black dog is walking through some tall grass	exists x. (Dog(x) & Black(x) & Walking(x) & Through(x, tallGrass))	The black dog is running through the grass	exists x. exists y. (BlackDog(x) & Grass(y) -> RunsThrough(x, y))	n	False	False
3303	The black dog is not walking through the tall grass	not exists x. (Dog(x) & Black(x) & Walking(x) & TallGrass(x))	The black dog is running through the grass	exists x. exists y. (BlackDog(x) & Grass(y) -> RunsThrough(x, y))	n	False	False
3304	The black dog is climbing on a rock	exists x. exists y. (BlackDog(x) & Rock(y) & ClimbingOn(x, y))	A rock is being climbed by the black dog	exists x.exists y. (Rock(x) & BlackDog(y) & Climbing(y, x))	e	False	False
3305	The black dog is climbing on a rock	exists x. exists y. (BlackDog(x) & Rock(y) & ClimbingOn(x, y))	The black dog is not climbing on a rock	not exists x. (Dog(x) & Black(x) & ClimbingOnRock(x))	c	False	False
3306	The black dog is climbing on a rock	exists x. exists y. (BlackDog(x) & Rock(y) & ClimbingOn(x, y))	The dog is standing with its two front paws on a rock in the field	exists x.exists y.exists z. (Dog(x) & Rock(y) & Field(z) -> StandingWithPawsOn(x, y, z))	n	False	False
3307	The black dog is climbing on a rock	exists x. exists y. (BlackDog(x) & Rock(y) & ClimbingOn(x, y))	There is no dog standing with its two front paws on a rock in the field	not exists x. (Dog(x) & Standing(x) & TwoFrontPawsOnRock(x) & InField(x))	n	False	False
3308	A dog is standing with its two front paws on a rock in a field	exists x.exists y.exists z. (Dog(x) & Rock(y) & Field(z) & Standing(x) & FrontPaw(x, y) & On(x, y))	A rock is being climbed by the black dog	exists x.exists y. (Rock(x) & BlackDog(y) & Climbing(y, x))	n	False	False
3309	A dog is standing with its two front paws on a rock in a field	exists x.exists y.exists z. (Dog(x) & Rock(y) & Field(z) & Standing(x) & FrontPaw(x, y) & On(x, y))	The black dog is not climbing on a rock	not exists x. (Dog(x) & Black(x) & ClimbingOnRock(x))	n	False	False
3310	A dog is standing with its two front paws on a rock in a field	exists x.exists y.exists z. (Dog(x) & Rock(y) & Field(z) & Standing(x) & FrontPaw(x, y) & On(x, y))	A black climber is rocking a dog	exists x.exists y. (BlackClimber(x) & Dog(y) -> Rocks(x, y))	n	False	False
3311	A dog is standing with its two front paws on a rock in a field	exists x.exists y.exists z. (Dog(x) & Rock(y) & Field(z) & Standing(x) & FrontPaw(x, y) & On(x, y))	The black dog is climbing on a rock	exists x. exists y. (BlackDog(x) & Rock(y) & ClimbingOn(x, y))	n	False	False
3312	A young child with hair of black color is taking a picture with a camera	exists x.exists y. (YoungChild(x) & BlackHair(x) & Camera(y) -> TakingPictureWith(x, y))	A young child with black hair is taking a picture with a camera	exists x.exists y. (YoungChild(x) & BlackHair(x) & Camera(y) -> TakingPictureWith(x, y))	e	True	False
3313	A young child with black hair is deleting a picture from the camera	exists x. (YoungChild(x) & HasBlackHair(x) -> DeletingPictureFromCamera(x))	A young child with black hair is taking a picture with a camera	exists x.exists y. (YoungChild(x) & BlackHair(x) & Camera(y) -> TakingPictureWith(x, y))	n	False	False
3314	A child is holding a camera in front of his face	exists x. (Child(x) & HoldingCamera(x) -> InFrontOfFace(x))	A camera is being held in front of the face of a child	exists x. exists y. (Camera(x) & Child(y) & HoldsInFrontOfFace(x, y))	e	False	False
3315	A child is holding a camera in front of his face	exists x. (Child(x) & HoldingCamera(x) -> InFrontOfFace(x))	There is no child holding a camera in front of his face	not exists x. (Child(x) & HoldsCamera(x) & InFrontOfFace(x))	c	False	False
3316	A young child with black hair is taking a picture with a camera	exists x.exists y. (YoungChild(x) & BlackHair(x) & Camera(y) -> TakingPictureWith(x, y))	A camera is being held in front of the face of a child	exists x. exists y. (Camera(x) & Child(y) & HoldsInFrontOfFace(x, y))	n	False	False
3317	A young child with black hair is taking a picture with a camera	exists x.exists y. (YoungChild(x) & BlackHair(x) & Camera(y) -> TakingPictureWith(x, y))	There is no child holding a camera in front of his face	not exists x. (Child(x) & HoldsCamera(x) & InFrontOfFace(x))	n	False	False
3318	A child is holding a camera in front of his face	exists x. (Child(x) & HoldingCamera(x) -> InFrontOfFace(x))	A young child with hair of black color is taking a picture with a camera	exists x.exists y. (YoungChild(x) & BlackHair(x) & Camera(y) -> TakingPictureWith(x, y))	n	False	False
3319	A child is holding a camera in front of his face	exists x. (Child(x) & HoldingCamera(x) -> InFrontOfFace(x))	A young child with black hair is deleting a picture from the camera	exists x. (YoungChild(x) & HasBlackHair(x) -> DeletingPictureFromCamera(x))	n	False	False
3320	A child is holding a camera in front of his face	exists x. (Child(x) & HoldingCamera(x) -> InFrontOfFace(x))	A young child with black hair is taking a picture with a camera	exists x.exists y. (YoungChild(x) & BlackHair(x) & Camera(y) -> TakingPictureWith(x, y))	n	False	False
3321	Two little boys are wearing tuxedos	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & WearingTuxedo(x) & WearingTuxedo(y))	Two little kids are wearing tuxedos	exists x. exists y. (LittleKid(x) & LittleKid(y) & WearingTuxedo(x) & WearingTuxedo(y))	e	False	False
3322	Two little boys are not wearing tuxedos	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & not WearingTuxedo(x) & not WearingTuxedo(y))	Two little boys are wearing tuxedos	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & WearingTuxedo(x) & WearingTuxedo(y))	c	False	False
3323	Two boys, who look small, dressed in tuxedos are sitting on a red carpeted floor	exists x. exists y. (Boy(x) & Boy(y) & Small(x) & Small(y) & DressedInTuxedo(x) & DressedInTuxedo(y) & SittingOnRedCarpetedFloor(x) & SittingOnRedCarpetedFloor(y))	Two small boys dressed in tuxedos are sitting on a red carpeted floor	exists x. exists y. (SmallBoy(x) & SmallBoy(y) & Tuxedo(x) & Tuxedo(y) & SittingOn(x, redCarpetedFloor) & SittingOn(y, redCarpetedFloor))	e	False	False
3324	Two boys, who look small, dressed in tuxedos are sitting on a red carpeted floor	exists x. exists y. (Boy(x) & Boy(y) & Small(x) & Small(y) & DressedInTuxedo(x) & DressedInTuxedo(y) & SittingOnRedCarpetedFloor(x) & SittingOnRedCarpetedFloor(y))	Two little boys are wearing tuxedos	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & WearingTuxedo(x) & WearingTuxedo(y))	e	False	False
3325	Two small boys dressed in tuxedos are standing on a red carpeted floor	exists x. exists y. (SmallBoy(x) & SmallBoy(y) & Tuxedo(x) & Tuxedo(y) & StandingOn(x, y, redCarpetedFloor))	Two little boys are wearing tuxedos	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & WearingTuxedo(x) & WearingTuxedo(y))	e	False	False
3326	Two small boys dressed in tuxedos are sitting on a red carpeted floor	exists x. exists y. (SmallBoy(x) & SmallBoy(y) & Tuxedo(x) & Tuxedo(y) & SittingOn(x, redCarpetedFloor) & SittingOn(y, redCarpetedFloor))	Two little kids are wearing tuxedos	exists x. exists y. (LittleKid(x) & LittleKid(y) & WearingTuxedo(x) & WearingTuxedo(y))	e	False	False
3327	Two small boys dressed in tuxedos are sitting on a red carpeted floor	exists x. exists y. (SmallBoy(x) & SmallBoy(y) & Tuxedo(x) & Tuxedo(y) & SittingOn(x, redCarpetedFloor) & SittingOn(y, redCarpetedFloor))	Two little boys are not wearing tuxedos	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & not WearingTuxedo(x) & not WearingTuxedo(y))	c	False	False
3328	Two small boys dressed in tuxedos are sitting on a red carpeted floor	exists x. exists y. (SmallBoy(x) & SmallBoy(y) & Tuxedo(x) & Tuxedo(y) & SittingOn(x, redCarpetedFloor) & SittingOn(y, redCarpetedFloor))	Two little boys are wearing tuxedos	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & WearingTuxedo(x) & WearingTuxedo(y))	e	False	False
3329	A man is standing tiredly next to a bus	exists x. exists y. (Man(x) & Bus(y) & StandingNextTo(x, y))	A man is standing next to a bus	exists x. exists y. (Man(x) & Bus(y) & StandingNextTo(x, y))	e	True	False
3330	There is no man standing next to a bus	not exists x. (Man(x) & StandingNextToBus(x))	A man is standing next to a bus	exists x. exists y. (Man(x) & Bus(y) & StandingNextTo(x, y))	c	False	False
3331	The man is standing on the sidewalk	exists x. (Man(x) & StandingOnSidewalk(x))	A man is standing on a sidewalk	exists x. exists y. (Man(x) & Sidewalk(y) & StandingOn(x, y))	e	False	False
3332	A man is standing next to a bus	exists x. exists y. (Man(x) & Bus(y) & StandingNextTo(x, y))	The man is standing on the sidewalk	exists x. (Man(x) & StandingOnSidewalk(x))	n	False	False
3333	A man is sitting on a sidewalk	exists x. exists y. (Man(x) & Sidewalk(y) & SittingOn(x, y))	A man is standing next to a bus	exists x. exists y. (Man(x) & Bus(y) & StandingNextTo(x, y))	n	False	False
3334	A man is standing on a sidewalk	exists x. exists y. (Man(x) & Sidewalk(y) & StandingOn(x, y))	A man is standing tiredly next to a bus	exists x. exists y. (Man(x) & Bus(y) & StandingNextTo(x, y))	n	False	False
3335	A man is standing next to a bus	exists x. exists y. (Man(x) & Bus(y) & StandingNextTo(x, y))	A man is standing on a sidewalk	exists x. exists y. (Man(x) & Sidewalk(y) & StandingOn(x, y))	n	False	False
3336	A dog with a blanket dyed in blue is running through the grass	exists x. (Dog(x) & HasBlueDyedBlanket(x) -> RunsThroughGrass(x))	A dog with a blue blanket is running through the grass	exists x. (Dog(x) & HasBlueBlanket(x) -> RunsThroughGrass(x))	e	False	False
3337	A dog with a blue blanket is running through the grass	exists x. (Dog(x) & HasBlueBlanket(x) -> RunsThroughGrass(x))	There is no dog with a blue blanket running through the grass	not exists x. (Dog(x) & BlueBlanket(x) & RunningThroughGrass(x))	c	False	False
3338	A dog with a muzzle and a blue jacket is running around the yard	exists x. (Dog(x) & HasMuzzle(x) & HasBlueJacket(x) -> RunsAroundYard(x))	A dog with a blue muzzle is running around the yard with a jacket	exists x. (Dog(x) & BlueMuzzle(x) -> (exists y. (Yard(y) & RunningAround(x, y) & WearingJacket(x))))	n	False	False
3339	A dog with a blue blanket is running through the grass	exists x. (Dog(x) & HasBlueBlanket(x) -> RunsThroughGrass(x))	A dog with a muzzle and a blue jacket is running around the court	exists x. (Dog(x) & HasMuzzle(x) & HasBlueJacket(x) -> RunsAroundCourt(x))	n	False	False
3340	A dog with a muzzle and a blue jacket is running around the yard	exists x. (Dog(x) & HasMuzzle(x) & HasBlueJacket(x) -> RunsAroundYard(x))	A dog with a blue blanket is running through the grass	exists x. (Dog(x) & HasBlueBlanket(x) -> RunsThroughGrass(x))	e	False	False
3341	A colored toy is being carried by a brown dog in the grass	exists x.exists y.exists z. (ColoredToy(x) & BrownDog(y) & Grass(z) -> Carries(y, x, z))	A brown dog is carrying a colored toy in the grass	exists x.exists y.exists z. (BrownDog(x) & Toy(y) & Grass(z) -> CarriesIn(x, y, z))	e	False	False
3342	A brown dog is carrying a colored toy in the grass	exists x.exists y.exists z. (BrownDog(x) & Toy(y) & Grass(z) -> CarriesIn(x, y, z))	A brown dog is dropping a colored toy from its mouth	exists x.exists y. (BrownDog(x) & Toy(y) & DroppingFromMouth(x, y) -> Colored(y))	n	False	False
3343	There is no brown dog running across the yard with a toy in its mouth	not exists x. (Dog(x) & Brown(x) & Running(x) & AcrossYard(x) & HasToy(x))	A brown dog is carrying a colored toy in the grass	exists x.exists y.exists z. (BrownDog(x) & Toy(y) & Grass(z) -> CarriesIn(x, y, z))	n	False	False
3344	A person with a green shirt is jumping onto the grass	exists x. (Person(x) & WearsGreenShirt(x) -> JumpsOntoGrass(x))	A person with a green shirt is jumping high over the grass	exists x. (Person(x) & WearsGreenShirt(x) -> JumpsHighOverGrass(x))	n	False	False
3345	A young boy is jumping in the air with his knees bent and arms spread	exists x. (YoungBoy(x) & Jumping(x) & KneesBent(x) & ArmsSpread(x) -> AirJump(x))	A boy, who is young, is jumping in the air with his knees bent and arms spread	exists x. (Boy(x) & Young(x) -> JumpingInAirWithKneesBentAndArmsSpread(x))	e	False	False
3346	A boy, who is young, is jumping in the air with his knees bent and arms spread	exists x. (Boy(x) & Young(x) -> JumpingInAirWithKneesBentAndArmsSpread(x))	A person with a green shirt is jumping high over the grass	exists x. (Person(x) & WearsGreenShirt(x) -> JumpsHighOverGrass(x))	n	False	False
3347	A person without shirt is jumping high over the green grass	exists x. (Person(x) & not HasShirt(x) -> JumpingHighOverGreenGrass(x))	A young boy is jumping in the air with his knees bent and arms spread	exists x. (YoungBoy(x) & Jumping(x) & KneesBent(x) & ArmsSpread(x) -> AirJump(x))	n	False	False
3348	A person with a green shirt is jumping high over the grass	exists x. (Person(x) & WearsGreenShirt(x) -> JumpsHighOverGrass(x))	A young boy is jumping in the air with his knees bent and arms spread	exists x. (YoungBoy(x) & Jumping(x) & KneesBent(x) & ArmsSpread(x) -> AirJump(x))	n	False	False
3349	A brown and white dog is leaping in the air with a tennis ball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) & LeapingInAir(x) & HasTennisBall(x))	A brown and white dog is jumping in the air with a tennis ball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) -> JumpsWithTennisBall(x))	e	False	False
3350	A dog is catching a ball in mid air	exists x. exists y. exists z. (Dog(x) & Ball(y) & MidAir(z) & Catching(x, y, z))	A brown and white dog is leaping in the air with a tennis ball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) & LeapingInAir(x) & HasTennisBall(x))	n	False	False
3351	A brown and white dog is jumping in the air with a tennis ball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) -> JumpsWithTennisBall(x))	A dog is catching a ball in mid air	exists x. exists y. exists z. (Dog(x) & Ball(y) & MidAir(z) & Catching(x, y, z))	n	False	False
3352	A woman in a black shirt is sitting next to a fluorescent green bag	exists x.exists y. (Woman(x) & BlackShirt(x) & FluorescentGreenBag(y) -> SittingNextTo(x, y))	A woman in a black shirt is standing next to a fluorescent green bag	exists x.exists y. (Woman(x) & BlackShirt(x) & FluorescentGreenBag(y) -> StandingNextTo(x, y))	n	False	False
3353	A woman is speaking on her cell phone and is keeping a purse and a yellow bag on the near ledge	exists x. (Woman(x) & SpeakingOnCellPhone(x) & exists y. (Purse(y) & KeepingOnNearLedge(x, y)) & exists z. (YellowBag(z) & KeepingOnNearLedge(x, z)))	A woman is silent and is leaving a purse and a yellow bag on the near ledge	exists x. (Woman(x) & Silent(x) & LeavingPurse(x) & LeavingYellowBag(x) & NearLedge(x))	n	False	False
3354	A woman is speaking on her cell phone and is keeping a purse and a yellow bag on the near ledge	exists x. (Woman(x) & SpeakingOnCellPhone(x) & exists y. (Purse(y) & KeepingOnNearLedge(x, y)) & exists z. (YellowBag(z) & KeepingOnNearLedge(x, z)))	A woman is speaking from a ledge and is keeping her cell phone inside a purse that is inside a yellow bag	exists x. (Woman(x) & SpeakingFromLedge(x) & exists y. (Purse(y) & Inside(x, y) & CellPhone(x) & Inside(y, z) & Bag(z) & Yellow(z)))	n	False	False
3355	A woman in a black shirt is sitting next to a fluorescent green bag	exists x.exists y. (Woman(x) & BlackShirt(x) & FluorescentGreenBag(y) -> SittingNextTo(x, y))	A woman is speaking loudly on her cell phone and is keeping a purse and a yellow bag on the near ledge	exists x. (Woman(x) & SpeakingLoudlyOnCellPhone(x) & exists y. (Purse(y) & KeepingOnNearLedge(x, y)) & exists z. (YellowBag(z) & KeepingOnNearLedge(x, z)))	n	False	False
3356	A woman in a black shirt is sitting next to a fluorescent green bag	exists x.exists y. (Woman(x) & BlackShirt(x) & FluorescentGreenBag(y) -> SittingNextTo(x, y))	A woman is silent and is leaving a purse and a yellow bag on the near ledge	exists x. (Woman(x) & Silent(x) & LeavingPurse(x) & LeavingYellowBag(x) & NearLedge(x))	n	False	False
3357	A woman in a black shirt is sitting next to a fluorescent green bag	exists x.exists y. (Woman(x) & BlackShirt(x) & FluorescentGreenBag(y) -> SittingNextTo(x, y))	A woman is speaking from a ledge and is keeping her cell phone inside a purse that is inside a yellow bag	exists x. (Woman(x) & SpeakingFromLedge(x) & exists y. (Purse(y) & Inside(x, y) & CellPhone(x) & Inside(y, z) & Bag(z) & Yellow(z)))	n	False	False
3358	A woman is speaking on her cell phone and is keeping a purse and a yellow bag on the near ledge	exists x. (Woman(x) & SpeakingOnCellPhone(x) & exists y. (Purse(y) & KeepingOnNearLedge(x, y)) & exists z. (YellowBag(z) & KeepingOnNearLedge(x, z)))	A woman in a black shirt is standing next to a fluorescent green bag	exists x.exists y. (Woman(x) & BlackShirt(x) & FluorescentGreenBag(y) -> StandingNextTo(x, y))	n	False	False
3359	A woman is speaking on her cell phone and is keeping a purse and a yellow bag on the near ledge	exists x. (Woman(x) & SpeakingOnCellPhone(x) & exists y. (Purse(y) & KeepingOnNearLedge(x, y)) & exists z. (YellowBag(z) & KeepingOnNearLedge(x, z)))	A woman in a black shirt is sitting next to a fluorescent green bag	exists x.exists y. (Woman(x) & BlackShirt(x) & FluorescentGreenBag(y) -> SittingNextTo(x, y))	n	False	False
3360	One man is doing a wheelie on the mountain bike	exists x. (Man(x) & DoingWheelie(x))	The man is doing a wheelie on a mountain bike	exists x. (Man(x) & Wheelie(x) & MountainBike(x) & On(x))	e	False	False
3361	The man is doing a wheelie on a mountain bike	exists x. (Man(x) & Wheelie(x) & MountainBike(x) & On(x))	The man is not doing a wheelie on a mountain bike	not exists x. (Man(x) & Wheelie(x) & MountainBike(x) & On(x))	c	False	True
3362	A man is riding on a bicycle with one wheel only	exists x. exists y. (Man(x) & Bicycle(y) & RidingOn(x, y) & HasOneWheel(y))	A man on a bicycle is riding on one wheel only	exists x.exists y. (Man(x) & Bicycle(y) & RidingOn(x, y) -> RidingOnOneWheel(x, y))	e	False	False
3363	The man is doing a wheelie on a mountain bike	exists x. (Man(x) & Wheelie(x) & MountainBike(x) & On(x))	A person on a bike is riding on one wheel only	exists x. (Person(x) & OnBike(x) -> RidingOnOneWheel(x))	e	False	False
3364	The man is doing a wheelie on a mountain bike	exists x. (Man(x) & Wheelie(x) & MountainBike(x) & On(x))	There is no man on a bicycle riding on one wheel only	not exists x. (Man(x) & Bicycle(x) & RidingOnOneWheel(x))	c	False	False
3365	One man is doing a wheelie on the mountain bike	exists x. (Man(x) & DoingWheelie(x))	A man on a bicycle is riding on one wheel only	exists x.exists y. (Man(x) & Bicycle(y) & RidingOn(x, y) -> RidingOnOneWheel(x, y))	e	False	False
3366	The man is not doing a wheelie on a mountain bike	not exists x. (Man(x) & Wheelie(x) & MountainBike(x) & On(x))	A man on a bicycle is riding on one wheel only	exists x.exists y. (Man(x) & Bicycle(y) & RidingOn(x, y) -> RidingOnOneWheel(x, y))	n	False	False
3367	The man is doing a wheelie on a mountain bike	exists x. (Man(x) & Wheelie(x) & MountainBike(x) & On(x))	A man on a bicycle is riding on one wheel only	exists x.exists y. (Man(x) & Bicycle(y) & RidingOn(x, y) -> RidingOnOneWheel(x, y))	e	False	False
3368	A duck with brown feathers and a green head is flapping its wings in the water	exists x. (Duck(x) & BrownFeathers(x) & GreenHead(x) -> FlappingWingsInWater(x))	A brown duck with a green head is flapping its wings in the water	exists x. (Duck(x) & Brown(x) & GreenHead(x) -> FlappingWingsInWater(x))	e	False	False
3369	A duck with brown feathers and a green head is flapping its wings in the water	exists x. (Duck(x) & BrownFeathers(x) & GreenHead(x) -> FlappingWingsInWater(x))	A bird is flapping its wings on the water	exists x. (Bird(x) & FlappingWings(x))	e	False	False
3370	There is no brown duck with a green head flapping its wings in the water	not exists x. (Duck(x) & Brown(x) & GreenHead(x) & FlappingWings(x) & InWater(x))	A bird is flapping its wings on the water	exists x. (Bird(x) & FlappingWings(x))	n	False	False
3371	The dog with the brown coat is playing outdoors	exists x. (Dog(x) & HasBrownCoat(x) -> PlaysOutdoors(x))	The brown dog is playing outdoors	exists x. (Dog(x) & Brown(x) & PlayingOutdoors(x))	e	False	False
3372	The furry brown dog is running through the grassy area	exists x.exists y. (FurryBrownDog(x) & GrassyArea(y) -> RunsThrough(x, y))	The furry brown dog is not running through the grassy area	exists x. (Dog(x) & Furry(x) & Brown(x) -> not RunningThroughGrassyArea(x))	c	False	False
3373	A furry brown dog is running through the grassy area	exists x. (Dog(x) & Furry(x) & Brown(x) -> exists y. (GrassyArea(y) & RunningThrough(x, y)))	The brown dog is playing outdoors	exists x. (Dog(x) & Brown(x) & PlayingOutdoors(x))	e	False	False
3374	The brown dog is not playing outdoors	exists x. (BrownDog(x) -> not PlayingOutdoors(x))	The furry brown dog is running through the grassy area	exists x.exists y. (FurryBrownDog(x) & GrassyArea(y) -> RunsThrough(x, y))	n	False	False
3375	The brown dog is playing outdoors	exists x. (Dog(x) & Brown(x) & PlayingOutdoors(x))	The furry brown dog is running through the grassy area	exists x.exists y. (FurryBrownDog(x) & GrassyArea(y) -> RunsThrough(x, y))	n	False	False
3376	A woman in a fur hat and fur coat is standing outside a building	exists x. (Woman(x) & WearsFurHat(x) & WearsFurCoat(x) -> StandingOutsideBuilding(x))	A lady in a fur hat and fur coat is standing outside a building	exists x. (Lady(x) & WearsFurHat(x) & WearsFurCoat(x) -> StandingOutsideBuilding(x))	e	True	False
3377	A woman in a fur hat and fur coat is sitting outside a building	exists x. (Woman(x) & WearsFurHat(x) & WearsFurCoat(x) -> SittingOutsideBuilding(x))	A woman in a fur hat and fur coat is standing outside a building	exists x. (Woman(x) & WearsFurHat(x) & WearsFurCoat(x) -> StandingOutsideBuilding(x))	c	False	False
3378	The elderly lady is anxiously waiting on the sidewalk	exists x. (ElderlyLady(x) -> AnxiouslyWaitingOnSidewalk(x))	The elderly lady is waiting on the sidewalk	exists x. (ElderlyLady(x) & WaitingOnSidewalk(x))	e	False	False
3379	The elderly lady is waiting on the sidewalk	exists x. (ElderlyLady(x) & WaitingOnSidewalk(x))	The elderly person is waiting a lady on the sidewalk	exists x. exists y. (ElderlyPerson(x) & Lady(y) & Waiting(x, y) & OnSidewalk(x, y))	n	False	False
3380	The elderly lady is anxiously waiting on the sidewalk	exists x. (ElderlyLady(x) -> AnxiouslyWaitingOnSidewalk(x))	A woman in a fur hat and fur coat is standing outside a building	exists x. (Woman(x) & WearsFurHat(x) & WearsFurCoat(x) -> StandingOutsideBuilding(x))	n	False	False
3381	The elderly lady is not waiting on the sidewalk	not exists x. (ElderlyLady(x) & WaitingOnSidewalk(x))	A woman in a fur hat and fur coat is standing outside a building	exists x. (Woman(x) & WearsFurHat(x) & WearsFurCoat(x) -> StandingOutsideBuilding(x))	n	False	False
3382	A young child is running down a gravel road that is covered with dead leaves	exists x. exists y. (YoungChild(x) & GravelRoad(y) & CoveredWithDeadLeaves(y) -> RunsDown(x, y))	A young child is running down a road made of gravel that is covered with dead leaves	exists x. exists y. exists z. (YoungChild(x) & Road(y) & Gravel(z) & MadeOf(y, z) & CoveredWith(y, DeadLeaves) -> RunningOn(x, y))	e	False	False
3383	A young child is running down a gravel road that is covered with dead leaves	exists x. exists y. (YoungChild(x) & GravelRoad(y) & CoveredWithDeadLeaves(y) -> RunsDown(x, y))	A young child is lying down on a gravel road that is covered with dead leaves	exists x. exists y. (YoungChild(x) & GravelRoad(y) & LyingDownOn(x, y) -> CoveredWithDeadLeaves(y))	n	False	False
3384	One young child is running outside over some fallen leaves	exists x. (YoungChild(x) & Running(x) & Outside(x) & OverFallenLeaves(x))	A young child is running outside over the fallen leaves	exists x. (YoungChild(x) & Outside(x) & FallenLeaves(x) -> Running(x))	e	True	False
3385	One young child is running outside over some fallen leaves	exists x. (YoungChild(x) & Running(x) & Outside(x) & OverFallenLeaves(x))	A young child is running down a gravel road that is covered with dead leaves	exists x. exists y. (YoungChild(x) & GravelRoad(y) & CoveredWithDeadLeaves(y) -> RunsDown(x, y))	n	False	False
3386	A young child is running down a road made of gravel that is covered with dead leaves	exists x. exists y. exists z. (YoungChild(x) & Road(y) & Gravel(z) & MadeOf(y, z) & CoveredWith(y, DeadLeaves) -> RunningOn(x, y))	A young child is running outside over the fallen leaves	exists x. (YoungChild(x) & Outside(x) & FallenLeaves(x) -> Running(x))	e	False	False
3387	A young child is running down a gravel road that is covered with dead leaves	exists x. exists y. (YoungChild(x) & GravelRoad(y) & CoveredWithDeadLeaves(y) -> RunsDown(x, y))	A young child is running outside over the fallen leaves	exists x. (YoungChild(x) & Outside(x) & FallenLeaves(x) -> Running(x))	e	False	False
3388	The man in the straw hat is not smoking a cigarette	exists x. (Man(x) & WearsStrawHat(x) -> not SmokingCigarette(x))	The man in the straw hat is smoking a cigarette	exists x. (Man(x) & WearsStrawHat(x) -> SmokingCigarette(x))	c	False	False
3389	A man is wearing a straw hat and smoking a cigarette	exists x. (Man(x) & WearingStrawHat(x) & SmokingCigarette(x))	A person is wearing a straw hat and smoking a cigarette	exists x. (Person(x) & WearingStrawHat(x) & SmokingCigarette(x))	e	True	False
3390	There is no man wearing a straw hat who is smoking a cigarette	not exists x. (Man(x) & WearingStrawHat(x) & SmokingCigarette(x))	A man is wearing a straw hat and smoking a cigarette	exists x. (Man(x) & WearingStrawHat(x) & SmokingCigarette(x))	c	False	True
3391	There is no man wearing a straw hat who is smoking a cigarette	not exists x. (Man(x) & WearingStrawHat(x) & SmokingCigarette(x))	The man in the straw hat is smoking a cigarette	exists x. (Man(x) & WearsStrawHat(x) -> SmokingCigarette(x))	c	False	False
3392	The man in the straw hat is not smoking a cigarette	exists x. (Man(x) & WearsStrawHat(x) -> not SmokingCigarette(x))	A man is wearing a straw hat and smoking a cigarette	exists x. (Man(x) & WearingStrawHat(x) & SmokingCigarette(x))	c	False	False
3393	A man is wearing a long sleeved blue shirt and jeans and is riding a unicycle down a street	exists x. (Man(x) & Wearing(x, longSleevedBlueShirt) & Wearing(x, jeans) & Riding(x, unicycle) & RidingDown(x, street))	A man is wearing a blue shirt which has long sleeves and jeans and is riding a unicycle down a street	exists x. (Man(x) & WearingBlueShirt(x) & HasLongSleeves(x) & WearingJeans(x) & RidingUnicycle(x) & DownStreet(x))	e	False	False
3394	There is no man wearing a long sleeved blue shirt and jeans and riding a unicycle down a street	not exists x. (Man(x) & WearsLongSleevedBlueShirt(x) & WearsJeans(x) & RidesUnicycle(x) & DownStreet(x))	A man is wearing a long sleeved blue shirt and jeans and is riding a unicycle down a street	exists x. (Man(x) & Wearing(x, longSleevedBlueShirt) & Wearing(x, jeans) & Riding(x, unicycle) & RidingDown(x, street))	c	False	False
3395	A man is wearing a long sleeved blue shirt and jeans and is riding a unicycle down a street	exists x. (Man(x) & Wearing(x, longSleevedBlueShirt) & Wearing(x, jeans) & Riding(x, unicycle) & RidingDown(x, street))	A man is wearing a blue checkered shirt and cheerfully riding a unicycle in the street	exists x. (Man(x) & WearingBlueCheckeredShirt(x) & CheerfullyRidingUnicycleInStreet(x))	n	False	False
3396	A man is wearing a long sleeved blue shirt and jeans and is riding a unicycle down a street	exists x. (Man(x) & Wearing(x, longSleevedBlueShirt) & Wearing(x, jeans) & Riding(x, unicycle) & RidingDown(x, street))	A man is wearing a blue checkered shirt and riding a unicycle in the street	exists x. (Man(x) & WearingBlueCheckeredShirt(x) & RidingUnicycleInStreet(x))	n	False	False
3397	Three men are looking absent mindedly into the distance	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingAbsentMindedly(x) & LookingAbsentMindedly(y) & LookingAbsentMindedly(z))	Three men are looking into the distance	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingIntoDistance(x) & LookingIntoDistance(y) & LookingIntoDistance(z))	e	False	False
3398	Three men are looking into the distance	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingIntoDistance(x) & LookingIntoDistance(y) & LookingIntoDistance(z))	Three men are looking at something nearby	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & LookingAt(x, y, z, Nearby))	n	False	False
3399	Some men are staring at the big green hills in the distance	exists x.exists y.exists z. (Man(x) & BigGreenHill(y) & Distance(z) & StaringAt(x, y, z))	Three men are looking into the distance	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingIntoDistance(x) & LookingIntoDistance(y) & LookingIntoDistance(z))	n	False	False
3400	Three men are looking into the distance	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingIntoDistance(x) & LookingIntoDistance(y) & LookingIntoDistance(z))	Some men in the distance are staring at three big hills	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & Distance(x, y, z) & StaringAt(x, y, z) & BigHill(y) & BigHill(z) & BigHill(x))	n	False	False
3401	The men are not climbing a mountain	not exists x. (Man(x) & ClimbingMountain(x))	The men are climbing a mountain	exists x.exists y. (Man(x) & Mountain(y) -> Climbing(x, y))	c	False	False
3402	One man is climbing a rock wall and another man is holding a rope	exists x. exists y. (Man(x) & Man(y) & ClimbingRockWall(x) & HoldingRope(y))	One man is climbing a wall made of rock and another man is holding a rope	exists x. exists y. (Man(x) & Man(y) & ClimbingWall(x) & MadeOfRock(x) & HoldingRope(y))	e	False	False
3403	One man is jumping off a rock wall and another man is dropping a rope	exists x. exists y. (Man(x) & Man(y) & JumpingOffRockWall(x) & DroppingRope(y))	One man is climbing a rock wall and another man is holding a rope	exists x. exists y. (Man(x) & Man(y) & ClimbingRockWall(x) & HoldingRope(y))	n	False	False
3404	One man is climbing a rock wall and another man is holding a rope	exists x. exists y. (Man(x) & Man(y) & ClimbingRockWall(x) & HoldingRope(y))	One climber is holding a rock and another man is roping a wall	exists x. exists y. (Climber(x) & Climber(y) & HoldingRock(x) & RopeWall(y))	n	False	False
3405	One man is jumping off a rock wall and another man is dropping a rope	exists x. exists y. (Man(x) & Man(y) & JumpingOffRockWall(x) & DroppingRope(y))	The men are climbing a mountain	exists x.exists y. (Man(x) & Mountain(y) -> Climbing(x, y))	n	False	False
3406	The men are climbing a mountain	exists x.exists y. (Man(x) & Mountain(y) -> Climbing(x, y))	One climber is holding a rock and another man is roping a wall	exists x. exists y. (Climber(x) & Climber(y) & HoldingRock(x) & RopeWall(y))	n	False	False
3407	One man is climbing a rock wall and another man is holding a rope	exists x. exists y. (Man(x) & Man(y) & ClimbingRockWall(x) & HoldingRope(y))	The men are climbing a mountain	exists x.exists y. (Man(x) & Mountain(y) -> Climbing(x, y))	n	False	False
3408	Small kids are climbing a statue in a park	exists x.exists y.exists z. (SmallKid(x) & Statue(y) & Park(z) -> Climbs(x, y, z))	Small children are climbing a statue in a park	exists x.exists y.exists z. (SmallChild(x) & Statue(y) & Park(z) -> Climbing(x, y, z))	e	False	False
3409	Small children are climbing a statue in a park	exists x.exists y.exists z. (SmallChild(x) & Statue(y) & Park(z) -> Climbing(x, y, z))	Some children are playing on a statue	exists x.exists y. (Child(x) & Statue(y) & PlayingOn(x, y))	e	False	False
3410	A tower is being looked at by a blonde lady	exists x.exists y. (Tower(x) & BlondeLady(y) & LookingAt(y, x))	A blonde lady is looking at a tower	exists x. exists y. (Lady(x) & Tower(y) & LookingAt(x, y))	e	False	False
3411	A woman is turning her back from the view of a city	exists x. exists y. (Woman(x) & City(y) -> TurningBackFrom(x, y))	A woman is looking at the view of a city	exists x. exists y. (Woman(x) & City(y) & View(x, y))	c	False	False
3412	A blonde lady is looking at a tower	exists x. exists y. (Lady(x) & Tower(y) & LookingAt(x, y))	The woman is looking at the view of a city	exists x. exists y. (Woman(x) & City(y) & View(x, y))	n	False	False
3413	A person is standing on a mountain top	exists x. exists y. (Person(x) & Mountain(y) & StandingOn(x, y))	Somebody is standing on a mountain top	exists x. (StandingOnMountainTop(x))	e	False	False
3414	A man is standing on the top of the rocks with clouds behind them	exists x. (Man(x) & StandingOnRocks(x) & CloudsBehind(x))	A person is lying on the top of the rocks with clouds behind them	exists x. (Person(x) & LyingOnRocks(x) & CloudsBehind(x))	n	False	False
3415	A man is standing behind the rocks with clouds on top of them	exists x. (Man(x) & StandingBehindRocks(x) & CloudsOnTopOfRocks(x))	A person is standing on a mountain top	exists x. exists y. (Person(x) & Mountain(y) & StandingOn(x, y))	n	False	False
3416	A man is standing on the top of the rocks with clouds behind them	exists x. (Man(x) & StandingOnRocks(x) & CloudsBehind(x))	A person is standing on a mountain top	exists x. exists y. (Person(x) & Mountain(y) & StandingOn(x, y))	n	False	False
3417	A smiling boy in summer clothes is standing still outside a building	exists x.exists y.exists z. (Boy(x) & SummerClothes(y) & Building(z) & Smiling(x) & Wearing(x, y) -> StandingStillOutside(x, z))	A smiling boy in winter clothes is waving his mittened hands outside a building in the snow	exists x.exists y.exists z. (Boy(x) & WinterClothes(x) & Building(y) & Snow(z) & Smiling(x) & WavingHands(x) -> Outside(x, y, z))	n	False	False
3418	A child, who is young, dressed for cold weather, is standing outside	exists x. (Child(x) & Young(x) & DressedForColdWeather(x) -> StandingOutside(x))	A young child dressed for cold weather is standing outside	exists x. (YoungChild(x) & DressedForColdWeather(x) -> StandingOutside(x))	e	False	False
3419	There is no young child dressed for cold weather standing outside	not exists x. (YoungChild(x) & DressedForColdWeather(x) & StandingOutside(x))	A young child dressed for cold weather is standing outside	exists x. (YoungChild(x) & DressedForColdWeather(x) -> StandingOutside(x))	c	False	False
3420	There is no young child dressed for cold weather standing outside	not exists x. (YoungChild(x) & DressedForColdWeather(x) & StandingOutside(x))	A smiling boy in winter clothes is waving his mittened hands outside a building in the snow	exists x.exists y.exists z. (Boy(x) & WinterClothes(x) & Building(y) & Snow(z) & Smiling(x) & WavingHands(x) -> Outside(x, y, z))	c	False	False
3421	A smiling boy in summer clothes is standing still outside a building	exists x.exists y.exists z. (Boy(x) & SummerClothes(y) & Building(z) & Smiling(x) & Wearing(x, y) -> StandingStillOutside(x, z))	A young child dressed for cold weather is standing outside	exists x. (YoungChild(x) & DressedForColdWeather(x) -> StandingOutside(x))	n	False	False
3422	A smiling boy in winter clothes is waving his mittened hands outside a building in the snow	exists x.exists y.exists z. (Boy(x) & WinterClothes(x) & Building(y) & Snow(z) & Smiling(x) & WavingHands(x) -> Outside(x, y, z))	A young child dressed for cold weather is standing outside	exists x. (YoungChild(x) & DressedForColdWeather(x) -> StandingOutside(x))	e	False	False
3423	A child is looking seriously at the camera and getting out of a pool	exists x. (Child(x) & SeriousLook(x) & AtCamera(x) -> (GettingOutOfPool(x)))	A child is smiling at the camera and swimming underwater	exists x. (Child(x) & SmilingAtCamera(x) & SwimmingUnderwater(x))	n	False	False
3424	A child is looking seriously at the camera and getting out of a pool	exists x. (Child(x) & SeriousLook(x) & AtCamera(x) -> (GettingOutOfPool(x)))	A child is swimming underwater in a pool	exists x. exists y. (Child(x) & Pool(y) & SwimmingUnderwater(x, y))	n	False	False
3425	A man and a child are kayaking through gentle waters	exists x. exists y. (Man(x) & Child(y) & Kayaking(x, y) & GentleWaters(x, y))	The man and the child are kayaking through gentle waters	exists x. exists y. (Man(x) & Child(y) -> KayakingThroughGentleWaters(x, y))	e	False	False
3426	A man and a child are kayaking through gentle waters	exists x. exists y. (Man(x) & Child(y) & Kayaking(x, y) & GentleWaters(x, y))	There is no man and child kayaking through gentle waters	not exists x. (Man(x) & Child(y) & Kayaking(x, y) & GentleWaters(x, y))	c	False	False
3427	A man and a young boy are jumping off of a yellow kayak	exists x. exists y. (Man(x) & YoungBoy(y) & JumpingOffKayak(x, y, yellow))	A man and a child are kayaking through gentle waters	exists x. exists y. (Man(x) & Child(y) & Kayaking(x, y) & GentleWaters(x, y))	n	False	False
3428	The man and the child are kayaking through gentle waters	exists x. exists y. (Man(x) & Child(y) -> KayakingThroughGentleWaters(x, y))	A man and a young boy are riding in a yellow kayak	exists x. exists y. (Man(x) & YoungBoy(y) & RidingIn(x, y, kayak) & Yellow(kayak))	n	False	False
3429	A man and a child are kayaking through gentle waters	exists x. exists y. (Man(x) & Child(y) & Kayaking(x, y) & GentleWaters(x, y))	A man and a young boy are riding in a yellow kayak	exists x. exists y. (Man(x) & YoungBoy(y) & RidingIn(x, y, kayak) & Yellow(kayak))	n	False	False
3430	The American footballer is not wearing a red and white strip	not (AmericanFootballer(x) & Wearing(x, redStrip) & Wearing(x, whiteStrip))	The American footballer is wearing a red and white strip	exists x. (AmericanFootballer(x) -> WearsRedAndWhiteStrip(x))	c	False	False
3431	A person playing football is wearing black armbands	exists x. (Person(x) & PlayingFootball(x) -> WearingBlackArmband(x))	A football player is wearing black armbands	exists x. (FootballPlayer(x) -> WearingBlackArmband(x))	e	False	False
3432	A football player is wearing black armbands	exists x. (FootballPlayer(x) -> WearingBlackArmband(x))	A football player is taking off black armbands	exists x. (FootballPlayer(x) -> TakingOffBlackArmbands(x))	n	False	False
3433	A person playing football is wearing black armbands	exists x. (Person(x) & PlayingFootball(x) -> WearingBlackArmband(x))	The American footballer is wearing a red and white strip	exists x. (AmericanFootballer(x) -> WearsRedAndWhiteStrip(x))	n	False	False
3434	The American footballer is wearing a red and white strip	exists x. (AmericanFootballer(x) -> WearsRedAndWhiteStrip(x))	A football player is taking off black armbands	exists x. (FootballPlayer(x) -> TakingOffBlackArmbands(x))	n	False	False
3435	The American footballer is wearing a red and white strip	exists x. (AmericanFootballer(x) -> WearsRedAndWhiteStrip(x))	A football player is wearing black armbands	exists x. (FootballPlayer(x) -> WearingBlackArmband(x))	n	False	False
3436	A dog is running after a ball in the grass	exists x.exists y.exists z. (Dog(x) & Ball(y) & Grass(z) & RunningAfter(x, y, z))	A dog is chasing a ball in the grass	exists x.exists y.exists z. (Dog(x) & Ball(y) & Grass(z) & Chasing(x, y, z))	e	False	False
3437	A dog is chasing a ball in the grass	exists x.exists y.exists z. (Dog(x) & Ball(y) & Grass(z) & Chasing(x, y, z))	A dog with a ball is being chased in the grass	exists x.exists y.exists z. (Dog(x) & Ball(y) & Grass(z) -> BeingChased(x, y, z))	n	False	False
3438	A dog is chasing a ball on the grass	exists x. exists y. exists z. (Dog(x) & Ball(y) & Grass(z) & Chasing(x, y, z))	There is no dog chasing a ball in the grass	exists x. exists y. exists z. (Dog(x) & Ball(y) & Grass(z) & not Chasing(x, y, z))	c	False	False
3439	A red dog is excitedly jumping up and catching a tennis ball in its mouth	exists x. (RedDog(x) -> (exists y. (TennisBall(y) & JumpsUpAndCatches(x, y))))	A red dog is jumping and catching a tennis ball in its mouth	exists x. (RedDog(x) -> (Jumps(x) & CatchesTennisBall(x)))	e	False	False
3440	A red dog is sitting and dropping a tennis ball from its mouth	exists x. (RedDog(x) -> (Sitting(x) & DroppingTennisBall(x)))	A red dog is jumping and catching a tennis ball in its mouth	exists x. (RedDog(x) -> (Jumps(x) & CatchesTennisBall(x)))	n	False	False
3441	A tan dog is jumping up and catching a tennis ball	exists x. (TanDog(x) -> (JumpsUp(x) & CatchesTennisBall(x)))	A dog with a tan coat is jumping up and catching a tennis ball	exists x. (Dog(x) & TanCoat(x) -> (JumpsUp(x) & CatchesTennisBall(x)))	e	False	False
3442	There is no tan dog jumping up and catching a tennis ball	not exists x. (Dog(x) & Tan(x) & JumpsUp(x) & CatchesTennisBall(x))	A red dog is jumping and catching a tennis ball in its mouth	exists x. (RedDog(x) -> (Jumps(x) & CatchesTennisBall(x)))	n	False	False
3443	A red dog is excitedly jumping up and catching a tennis ball in its mouth	exists x. (RedDog(x) -> (exists y. (TennisBall(y) & JumpsUpAndCatches(x, y))))	A tan dog is jumping up and catching a tennis ball	exists x. (TanDog(x) -> (JumpsUp(x) & CatchesTennisBall(x)))	n	False	False
3444	A tan dog is jumping up and catching a tennis ball	exists x. (TanDog(x) -> (JumpsUp(x) & CatchesTennisBall(x)))	A red dog is sitting and dropping a tennis ball from its mouth	exists x. (RedDog(x) -> (Sitting(x) & DroppingTennisBall(x)))	n	False	False
3445	A man is sitting on a train and resting his hand against his face	exists x. exists y. (Man(x) & Train(y) & SittingOn(x, y) & RestingHandAgainstFace(x))	The man is sitting on the train and resting his hand against his face	exists x. exists y. (Man(x) & Train(y) & SittingOn(x, y) & RestingHandAgainstFace(x))	e	True	False
3446	The bearded man is sitting on a train	exists x. (BeardedMan(x) & SittingOnTrain(x))	The hairy man is sitting on a train	exists x. (HairyMan(x) & SittingOnTrain(x))	n	False	False
3447	The bearded man is not sitting on a train	exists x. (BeardedMan(x) -> not SittingOnTrain(x))	The bearded man is sitting on a train	exists x. (BeardedMan(x) & SittingOnTrain(x))	c	False	False
3448	The bearded man is sitting on a train	exists x. (BeardedMan(x) & SittingOnTrain(x))	The man is sitting on the train and resting his hand against his face	exists x. exists y. (Man(x) & Train(y) & SittingOn(x, y) & RestingHandAgainstFace(x))	n	False	False
3449	A man is standing on a train and resting his hand on his lap	exists x. exists y. (Man(x) & Train(y) & StandingOn(x, y) & RestingHandOnLap(x))	The bearded man is sitting on a train	exists x. (BeardedMan(x) & SittingOnTrain(x))	n	False	False
3450	A small child is showing excitement on a swing set at the park	exists x. (SmallChild(x) & Excitement(x) & OnSwingSet(x) & AtPark(x))	A small child is showing excitement on a set of swings at the park	exists x.exists y.exists z. (SmallChild(x) & Swings(y) & Park(z) -> ShowsExcitementOn(x, y, z))	e	False	False
3451	A small child is showing excitement on a swing set at the park	exists x. (SmallChild(x) & Excitement(x) & OnSwingSet(x) & AtPark(x))	A small child is showing boredom on a swing set at the park	exists x.exists y. (SmallChild(x) & SwingSet(y) & At(x, y) -> Bored(x))	n	False	False
3452	The little girl is swinging and the woman is standing behind her	exists x.exists y. (LittleGirl(x) & Woman(y) & Swinging(x) & StandingBehind(y, x))	The girl is standing behind the little woman who is swinging	exists x.exists y. (Girl(x) & LittleWoman(y) -> StandingBehind(x, y) & Swinging(y))	c	True	False
3453	A small child is showing excitement on a swing set at the park	exists x. (SmallChild(x) & Excitement(x) & OnSwingSet(x) & AtPark(x))	The little girl is not swinging and the woman is not standing behind her	not (LittleGirlSwinging(girl) & WomanStandingBehind(girl))	n	False	False
3454	A small child is showing excitement on a swing set at the park	exists x. (SmallChild(x) & Excitement(x) & OnSwingSet(x) & AtPark(x))	The girl is standing behind the little woman who is swinging	exists x.exists y. (Girl(x) & LittleWoman(y) -> StandingBehind(x, y) & Swinging(y))	n	False	False
3455	The show for the small child is being set on an exciting swing at the park	exists x.exists y.exists z. (Show(x) & SmallChild(y) & ExcitingSwing(z) -> SetOn(x, y, z))	The little girl is swinging and the woman is standing behind her	exists x.exists y. (LittleGirl(x) & Woman(y) & Swinging(x) & StandingBehind(y, x))	n	False	False
3456	A man is falling off a surfboard in the water	exists x. (Man(x) & FallingOffSurfboard(x))	A man is performing a trick on a surfboard in the water	exists x.exists y.exists z. (Man(x) & Surfboard(y) & Water(z) -> PerformsTrickOn(x, y, z))	n	False	False
3457	There is no surfer riding the wave	not exists x. (Surfer(x) & RidingWave(x))	A surfer is riding the wave	exists x.exists y. (Surfer(x) & Wave(y) -> Riding(x, y))	c	False	False
3458	A man is performing a trick on a surfboard in the water	exists x.exists y.exists z. (Man(x) & Surfboard(y) & Water(z) -> PerformsTrickOn(x, y, z))	The wave is being ridden by a surfer	exists x.exists y. (Wave(x) & Surfer(y) -> Riding(y, x))	n	False	False
3459	A person is performing a trick on a surfboard in the water	exists x.exists y.exists z. (Person(x) & Trick(y) & Surfboard(z) & PerformsOn(x, y, z) -> InWater(x, z))	A surfer is riding the wave	exists x.exists y. (Surfer(x) & Wave(y) -> Riding(x, y))	n	False	False
3460	A surfer is riding the wave	exists x.exists y. (Surfer(x) & Wave(y) -> Riding(x, y))	A man is performing a trick on a surfboard in the water	exists x.exists y.exists z. (Man(x) & Surfboard(y) & Water(z) -> PerformsTrickOn(x, y, z))	n	False	False
3461	The group of people is not sitting in a dim room	not exists x. (Group(x) & People(x) & DimRoom(x))	The group of people is sitting in a dim room	exists x. (Group(x) -> SittingInDimRoom(x))	c	False	False
3462	A man and two women in a dark room are sitting at a table with candles	exists x. exists y. exists z. (Man(x) & Woman(y) & Woman(z) & DarkRoom(x) & DarkRoom(y) & DarkRoom(z) & Table(x) & Table(y) & Table(z) & SittingAt(x, y, z))	A man and two women in a darkened room are sitting at a table with candles	exists x. exists y. exists z. (Man(x) & Woman(y) & Woman(z) & DarkenedRoom(x) & DarkenedRoom(y) & DarkenedRoom(z) & SittingAtTableWithCandles(x, y, z))	e	False	False
3463	A man and two women in a darkened room are sitting at a table with candles	exists x. exists y. exists z. (Man(x) & Woman(y) & Woman(z) & DarkenedRoom(x) & DarkenedRoom(y) & DarkenedRoom(z) & SittingAtTableWithCandles(x, y, z))	The group of people is sitting in a room which is dim	exists x. exists y. (Group(x) & Person(y) & SittingIn(y, x) -> DimRoom(x))	e	False	False
3464	Two guys are standing by a table and putting some beers down on it	exists x. exists y. exists z. (Guy(x) & Guy(y) & Guy(z) & StandingByTable(x, y, z) & PuttingBeersOn(x, y, z))	Two guys are sitting around a table and holding beers in their hands	exists x. exists y. exists z. (Guy(x) & Guy(y) & Guy(z) & SittingAroundTable(x, y, z) & HoldingBeers(x, y, z))	n	False	False
3465	A man in a white shirt and sunglasses and a man in a black shirt and sunglasses are sitting at a table with four beer bottles	exists x.exists y.exists z. (Man(x) & WhiteShirt(x) & Sunglasses(x) & Man(y) & BlackShirt(y) & Sunglasses(y) & Table(z) & FourBeerBottles(z) -> SittingAtTable(x, y, z))	Two guys are standing by a table and putting some beers down on it	exists x. exists y. exists z. (Guy(x) & Guy(y) & Guy(z) & StandingByTable(x, y, z) & PuttingBeersOn(x, y, z))	n	False	False
3466	Two guys are sitting around a table and holding beers in their hands	exists x. exists y. exists z. (Guy(x) & Guy(y) & Guy(z) & SittingAroundTable(x, y, z) & HoldingBeers(x, y, z))	There are no men sitting at the table with four beer bottles	not exists x. (Man(x) & SittingAtTable(x) & HasFourBeerBottles(x))	c	False	False
3467	A blue ball is being caught by the dog	exists x.exists y. (BlueBall(x) & Dog(y) & Catching(y, x))	The dog is catching a blue ball	exists x. exists y. (Dog(x) & BlueBall(y) & Catching(x, y))	e	True	False
3468	The dog is catching a blue ball	exists x. exists y. (Dog(x) & BlueBall(y) & Catching(x, y))	The dog is not catching a blue ball	not exists x. (Dog(x) & CatchingBlueBall(x))	c	False	False
3469	A dog is chasing a ball	exists x.exists y. (Dog(x) & Ball(y) & Chasing(x, y))	A blue ball is being caught by the dog	exists x.exists y. (BlueBall(x) & Dog(y) & Catching(y, x))	n	False	False
3470	The dog is catching a blue ball	exists x. exists y. (Dog(x) & BlueBall(y) & Catching(x, y))	A dog is chasing a ball	exists x.exists y. (Dog(x) & Ball(y) & Chasing(x, y))	n	False	False
3471	A person is wearing a red jacket and carefully holding a beer	exists x. (Person(x) & WearingRedJacket(x) & CarefullyHoldingBeer(x))	A person is wearing a red jacket and holding a beer	exists x. (Person(x) & WearingRedJacket(x) & HoldingBeer(x))	e	False	False
3472	The woman is wearing a red jacket and holding a glass in front of the man in a white t-shirt	exists x. exists y. (Woman(x) & RedJacket(x) & Man(y) & WhiteTShirt(y) & Wearing(x, y) & HoldingGlass(x))	The woman is not wearing a red jacket and is not holding a glass in front of the man in a white t-shirt	not (Woman(x) & RedJacket(y) & Wearing(x, y) & Man(z) & WhiteTShirt(w) & HoldingGlassInFrontOf(z, w))	c	False	False
3473	A person is wearing a red jacket and holding a beer	exists x. (Person(x) & WearingRedJacket(x) & HoldingBeer(x))	The woman is wearing a red jacket and holding a glass in front of the man in a t-shirt, which is white	exists x.exists y.exists z. (Woman(x) & RedJacket(x) & Man(y) & TShirt(y) & White(y) & Glass(z) & InFrontOf(z, y) -> Wearing(x, z))	n	False	False
3474	The woman is holding a white jacket and a red glass in front of the man wearing a t-shirt	exists x.exists y. (Woman(x) & Man(y) & WhiteJacket(x) & RedGlass(x) -> (Holding(x, y) & Wearing(y, tshirt)))	A person is wearing a red jacket and holding a beer	exists x. (Person(x) & WearingRedJacket(x) & HoldingBeer(x))	n	False	False
3475	Two dogs are battling for a frisbee in a lake	exists x. exists y. exists z. (Dog(x) & Dog(y) & Frisbee(z) & BattlingFor(x, y, z) & InLake(z))	Two brown dogs are playing with a frisbee in the water	exists x. exists y. exists z. (Dog(x) & Dog(y) & Frisbee(z) & Playing(x, y, z) & Water(w) & In(z, w))	e	False	False
3476	Two brown dogs are playing with the frisbee in the water	exists x. exists y. exists z. (Dog(x) & Dog(y) & Frisbee(z) & Brown(x) & Brown(y) & Water(w) & PlayingWith(x, y, z, w))	Two dogs are fighting for a frisbee in a lake	exists x. exists y. exists z. (Dog(x) & Dog(y) & Frisbee(z) & FightingFor(x, y, z) & InLake(z))	n	False	False
3477	Two dogs are fighting for a frisbee in a lake	exists x. exists y. exists z. (Dog(x) & Dog(y) & Frisbee(z) & FightingFor(x, y, z) & InLake(z))	Two brown dogs are leaving a frisbee in the water	exists x. exists y. (BrownDog(x) & BrownDog(y) & LeavingFrisbee(x, water) & LeavingFrisbee(y, water))	n	False	False
3478	Two dogs are fighting for a frisbee in a lake	exists x. exists y. exists z. (Dog(x) & Dog(y) & Frisbee(z) & FightingFor(x, y, z) & InLake(z))	Two brown dogs are playing with a frisbee in the water	exists x. exists y. exists z. (Dog(x) & Dog(y) & Frisbee(z) & Playing(x, y, z) & Water(w) & In(z, w))	n	False	False
3479	A girl in pink is twirling a ribbon	exists x. (Girl(x) & WearingPink(x) -> TwirlingRibbon(x))	A ribbon is being twirled by a girl in pink	exists x.exists y. (Ribbon(x) & Girl(y) & Pink(y) & Twirling(y, x))	e	False	False
3480	The girl is wearing a shirt colored in white with a pink skirt, and is standing in front of a house	exists x. (Girl(x) & WearingShirt(x, White) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	The girl is wearing a white shirt and a pink skirt, and is standing in front of a house	exists x. (Girl(x) & WearingWhiteShirt(x) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	e	False	False
3481	The girl is not wearing a white shirt and a pink skirt, and is not standing in front of a house	not (Girl(x) & WearingWhiteShirt(x) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	The girl is wearing a white shirt and a pink skirt, and is standing in front of a house	exists x. (Girl(x) & WearingWhiteShirt(x) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	c	False	True
3482	The girl is wearing a shirt colored in white with a pink skirt, and is standing in front of a house	exists x. (Girl(x) & WearingShirt(x, White) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	A girl in pink is twirling a ribbon	exists x. (Girl(x) & WearingPink(x) -> TwirlingRibbon(x))	n	False	False
3483	A girl in pink is twirling a ribbon	exists x. (Girl(x) & WearingPink(x) -> TwirlingRibbon(x))	The girl is not wearing a white shirt and a pink skirt, and is not standing in front of a house	not (Girl(x) & WearingWhiteShirt(x) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	n	False	False
3484	The girl is wearing a white shirt and a pink skirt, and is standing in front of a house	exists x. (Girl(x) & WearingWhiteShirt(x) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	A ribbon is being twirled by a girl in pink	exists x.exists y. (Ribbon(x) & Girl(y) & Pink(y) & Twirling(y, x))	n	False	False
3485	A girl in pink is twirling a ribbon	exists x. (Girl(x) & WearingPink(x) -> TwirlingRibbon(x))	The girl is wearing a white shirt and a pink skirt, and is standing in front of a house	exists x. (Girl(x) & WearingWhiteShirt(x) & WearingPinkSkirt(x) & StandingInFrontOfHouse(x))	n	False	False
3486	The child is playing with the water spout outdoors and the rest of his family is watching	exists x.exists y.exists z. (Child(x) & WaterSpout(y) & Outdoors(z) & PlaysWith(x, y) & Family(x) -> Watches(x, z))	A child is playing with a water spout outdoors and the rest of his family is watching	exists x.exists y.exists z. (Child(x) & WaterSpout(y) & Outdoors(z) & PlaysWith(x, y) -> Watches(x, z))	e	False	False
3487	A boy is laying down a hose next to a man and another boy is running away	exists x. exists y. exists z. (Boy(x) & Boy(y) & Man(z) & LayingDownHose(x, z) & RunningAway(y))	A boy is holding a hose next to a man and another boy is watching	exists x. exists y. exists z. (Boy(x) & Hose(y) & Man(z) -> (Holds(x, y) & NextTo(x, z))) & (Boy(w) & Watches(w, x))	n	False	False
3488	A child is playing with a water spout outdoors and the rest of his family is watching	exists x.exists y.exists z. (Child(x) & WaterSpout(y) & Outdoors(z) & PlaysWith(x, y) -> Watches(x, z))	A hose is being held by a boy next to a man and another boy is watching	exists x. exists y. exists z. (Hose(x) & Boy(y) & Man(z) & Holds(y, x) & Watches(z, y))	n	False	False
3489	A child is playing with a water spout outdoors and the rest of his family is watching	exists x.exists y.exists z. (Child(x) & WaterSpout(y) & Outdoors(z) & PlaysWith(x, y) -> Watches(x, z))	A boy is laying down a hose next to a man and another boy is running away	exists x. exists y. exists z. (Boy(x) & Boy(y) & Man(z) & LayingDownHose(x, z) & RunningAway(y))	n	False	False
3490	The child is playing with the water spout outdoors and the rest of his family is watching	exists x.exists y.exists z. (Child(x) & WaterSpout(y) & Outdoors(z) & PlaysWith(x, y) & Family(x) -> Watches(x, z))	A boy is holding a hose next to a man and another boy is watching	exists x. exists y. exists z. (Boy(x) & Hose(y) & Man(z) -> (Holds(x, y) & NextTo(x, z))) & (Boy(w) & Watches(w, x))	n	False	False
3491	A football player is running past an official carrying a football	exists x.exists y.exists z. (FootballPlayer(x) & Official(y) & Football(z) -> RunningPast(x, y, z))	A person playing football is running past an official carrying a football	exists x.exists y.exists z. (Person(x) & Football(y) & Official(z) & Carrying(z, y) -> Playing(x, y))	e	False	False
3492	A football player is running into an official carrying a football	exists x.exists y.exists z. (FootballPlayer(x) & Football(y) & Official(z) & Carrying(z, y) -> RunningInto(x, z))	A football player is running past an official carrying a football	exists x.exists y.exists z. (FootballPlayer(x) & Official(y) & Football(z) -> RunningPast(x, y, z))	n	False	False
3493	A football player in a purple jersey is breathlessly running with the ball for a touchdown	exists x.exists y.exists z. (FootballPlayer(x) & PurpleJersey(x) & Ball(y) & Touchdown(z) -> BreathlesslyRunning(x, y, z))	A football player in a purple jersey is running with the ball for a touchdown	exists x.exists y.exists z. (FootballPlayer(x) & PurpleJersey(y) & Touchdown(z) -> RunsWithBallFor(x, y, z))	e	False	False
3494	A football player in a purple jersey is breathlessly running with the ball for a touchdown	exists x.exists y.exists z. (FootballPlayer(x) & PurpleJersey(x) & Ball(y) & Touchdown(z) -> BreathlesslyRunning(x, y, z))	A football player is running past an official carrying a football	exists x.exists y.exists z. (FootballPlayer(x) & Official(y) & Football(z) -> RunningPast(x, y, z))	n	False	False
3495	A young girl in a leotard colored in blue is jumping in the air	exists x. (YoungGirl(x) & WearsLeotard(x) & ColoredInBlue(x) -> JumpsInAir(x))	A young girl in blue is jumping in the air	exists x. (YoungGirl(x) & Blue(x) -> JumpingInAir(x))	e	False	False
3496	A boy, who is little, is sitting in a green tunnel with a smile on his face	exists x. (Boy(x) & Little(x) -> SittingInGreenTunnelWithSmile(x))	A little boy is sitting in a green tunnel with a smile on his face	exists x. exists y. (LittleBoy(x) & GreenTunnel(y) & SittingIn(x, y) & SmileOnFace(x))	e	False	False
3497	A little boy is sitting in a green tunnel with a smile on his face	exists x. exists y. (LittleBoy(x) & GreenTunnel(y) & SittingIn(x, y) & SmileOnFace(x))	A little boy in a striped shirt is sliding out of a green tube	exists x.exists y.exists z. (LittleBoy(x) & StripedShirt(x) & GreenTube(y) & SlidingOutOf(x, y) -> Tube(z))	n	False	False
3498	A little boy is sitting in a green tunnel with a smile on his face	exists x. exists y. (LittleBoy(x) & GreenTunnel(y) & SittingIn(x, y) & SmileOnFace(x))	A small boy in a green shirt is striping a sliding tube	exists x.exists y.exists z. (SmallBoy(x) & GreenShirt(y) & SlidingTube(z) -> Stripping(x, y, z))	n	False	False
3499	A small boy in a striped shirt is sliding out of a green tube	exists x.exists y.exists z. (SmallBoy(x) & StripedShirt(x) & GreenTube(y) & SlidingOutOf(x, y) -> Tube(z))	A little boy is sitting in a green tunnel with a smile on his face	exists x. exists y. (LittleBoy(x) & GreenTunnel(y) & SittingIn(x, y) & SmileOnFace(x))	n	False	False
3500	The person is flying through the air on a bicycle	exists x. (Person(x) & Flying(x) & OnBicycle(x))	The person is flying through the air on the bicycle	exists x. (Person(x) & Bicycle(x) -> FlyingThroughAir(x))	e	False	False
3501	A person on a bike is jumping through the air and the sun is flaring beautifully through the bike frame	exists x.exists y.exists z. (Person(x) & Bike(y) & Sun(z) -> (JumpsThroughAir(x, y) & FlaresBeautifullyThroughFrame(z, y)))	A person on a bike is jumping through the air and the sun is flaring through the bike frame	exists x.exists y.exists z. (Person(x) & Bike(y) & Sun(z) -> (JumpsThroughAir(x, y) & FlaresThroughFrame(z, y)))	e	False	False
3502	A person on a bike is jumping through the air and the sun is flaring beautifully through the bike frame	exists x.exists y.exists z. (Person(x) & Bike(y) & Sun(z) -> (JumpsThroughAir(x, y) & FlaresBeautifullyThroughFrame(z, y)))	The person is flying through the air on a bicycle	exists x. (Person(x) & Flying(x) & OnBicycle(x))	e	False	False
3503	The person is flying through the air on a bicycle	exists x. (Person(x) & Flying(x) & OnBicycle(x))	There is no person on a bike jumping through the air with the sun flaring through the bike frame	not exists x. (Person(x) & OnBike(x) & JumpingThroughAir(x) & SunFlaresThroughBikeFrame(x))	n	False	False
3504	A person on a bike is jumping through the air and the sun is flaring through the bike frame	exists x.exists y.exists z. (Person(x) & Bike(y) & Sun(z) -> (JumpsThroughAir(x, y) & FlaresThroughFrame(z, y)))	The person is flying through the air on a bicycle	exists x. (Person(x) & Flying(x) & OnBicycle(x))	e	False	False
3505	The bunch of men are playing rugby on a muddy field	exists x.exists y.exists z. (Bunch(x) & Men(y) & Rugby(z) & MuddyField(z) -> Playing(y, z))	The bunch of men are playing rugby on a field full of mud	exists x.exists y.exists z. (Bunch(x) & Men(y) & Rugby(z) & Field(f) & FullOfMud(f) -> PlayingOn(y, z, f))	e	False	False
3506	Rugby is being played by some men	exists x. (Man(x) & PlayingRugby(x))	Some men are playing rugby	exists x. (Man(x) & PlayingRugby(x))	e	True	False
3507	Some men are idling	exists x. (Man(x) & Idling(x))	Some men are playing rugby	exists x. (Man(x) & PlayingRugby(x))	n	False	False
3508	Some men are playing rugby	exists x. (Man(x) & PlayingRugby(x))	The bunch of men are playing with the mud on a rugby field	exists x.exists y.exists z. (Bunch(x) & Men(y) & RugbyField(z) -> PlayingWithMud(y, z))	n	False	False
3509	The bunch of men are playing rugby on a muddy field	exists x.exists y.exists z. (Bunch(x) & Men(y) & Rugby(z) & MuddyField(z) -> Playing(y, z))	Some men are playing rugby	exists x. (Man(x) & PlayingRugby(x))	e	False	False
3510	The person who rides bikes is looking at an accident of another bike rider	exists x. (RidesBikes(x) -> exists y. (BikeRider(y) & Accident(y) & LookingAt(x, y)))	The bike rider is looking at an accident of another bike rider	exists x.exists y. (BikeRider(x) & BikeRider(y) & Accident(y) -> LookingAt(x, y))	e	False	False
3511	The bike rider is looking at an accident of another bike rider	exists x.exists y. (BikeRider(x) & BikeRider(y) & Accident(y) -> LookingAt(x, y))	A person is ignoring the motocross bike that is lying on its side and there is no one is racing by	exists x. (Person(x) & IgnoringMotocrossBike(x) & LyingOnSide(x) & not RacingBy(x) -> exists y. (MotocrossBike(y) & LyingOnSide(y)))	n	False	False
3512	The person who rides bikes is looking at an accident of another bike rider	exists x. (RidesBikes(x) -> exists y. (BikeRider(y) & Accident(y) & LookingAt(x, y)))	A person is looking at a motocross bike that is lying on its side and another is racing by	exists x.exists y.exists z. (Person(x) & Person(y) & MotocrossBike(z) & LyingOnSide(z) & RacingBy(y, z) -> LookingAt(x, z))	n	False	False
3513	Two dogs are frolicking in the snow	exists x. exists y. (Dog(x) & Dog(y) & FrolickingInSnow(x, y))	Two dogs are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & PlayingInSnow(x) & PlayingInSnow(y))	e	False	False
3514	There are no dogs playing in the snow	not exists x. (Dog(x) & PlayingInSnow(x))	Two dogs are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & PlayingInSnow(x) & PlayingInSnow(y))	c	False	True
3515	It is snowing on two playing dogs	exists x.exists y.exists z. (Dog(x) & Dog(y) & Snow(z) -> SnowingOn(x, y, z))	Two dogs are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & PlayingInSnow(x) & PlayingInSnow(y))	e	False	False
3516	A brown dog and a gray dog are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Gray(y) & PlayingInSnow(x, y))	The brown dog and the gray dog are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Gray(y) & PlayingInSnow(x, y))	e	True	False
3517	A brown dog and a grey dog are fighting in the snow	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Grey(y) & Fighting(x, y) & In(Snow))	Two dogs are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & PlayingInSnow(x) & PlayingInSnow(y))	n	False	False
3518	Two dogs are frolicking in the snow	exists x. exists y. (Dog(x) & Dog(y) & FrolickingInSnow(x, y))	A brown dog and a gray dog are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Gray(y) & PlayingInSnow(x, y))	n	False	False
3519	It is snowing on two playing dogs	exists x.exists y.exists z. (Dog(x) & Dog(y) & Snow(z) -> SnowingOn(x, y, z))	A brown dog and a gray dog are playing in the snow	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Gray(y) & PlayingInSnow(x, y))	n	False	False
3520	A girl is getting a tattoo on her hand	exists x. (Girl(x) & Tattoo(x) & On(x, Hand))	A tattoo is being drawn by the woman in the white sweater on the hand of a teenager	exists x.exists y.exists z. (Tattoo(x) & Woman(y) & WhiteSweater(y) & Teenager(z) -> DrawnOnHand(x, y, z))	n	False	False
3521	The woman in the white sweater is drawing a tattoo on the hand of a teenager	exists x.exists y. (Woman(x) & Teenager(y) & WearsWhiteSweater(x) & DrawingTattoo(x, y) -> WomanInWhiteSweater(x))	A girl is getting a tattoo on her hand	exists x. (Girl(x) & Tattoo(x) & On(x, Hand))	n	False	False
3522	A woman in a purple top is walking a bicycle between two stone columns	exists x. (Woman(x) & WearsPurpleTop(x) -> WalksBicycleBetweenStoneColumns(x))	A woman in a top which is purple is walking a bicycle between two stone columns	exists x.exists y.exists z. (Woman(x) & Top(y) & Purple(y) & Bicycle(z) & StoneColumn(w) & StoneColumn(u) -> WalkingBetween(x, y, z, w, u))	e	False	False
3523	A woman in a purple top is walking a bicycle between two stone columns	exists x. (Woman(x) & WearsPurpleTop(x) -> WalksBicycleBetweenStoneColumns(x))	A stone woman and bicycle are on top of two purple columns, between which people are walking	exists x. exists y. exists z. (StoneWoman(x) & Bicycle(y) & PurpleColumn(z) -> (OnTopOf(x, z) & Between(z, people)))	n	False	False
3524	A woman in a purple top is walking a bicycle between two stone columns	exists x. (Woman(x) & WearsPurpleTop(x) -> WalksBicycleBetweenStoneColumns(x))	A girl dressed in purple and blue is slowly walking beside her bike at night	exists x. (Girl(x) & DressedInPurple(x) & DressedInBlue(x) -> SlowlyWalkingBesideBikeAtNight(x))	n	False	False
3525	A woman in a purple top is walking a bicycle between two stone columns	exists x. (Woman(x) & WearsPurpleTop(x) -> WalksBicycleBetweenStoneColumns(x))	A naked girl is walking beside her bike at night	exists x. exists y. (Girl(x) & Naked(x) & Bike(y) & WalkingBeside(x, y) & Night(z) & At(x, z))	n	False	False
3526	A girl dressed in purple and blue is walking beside her bike at night	exists x.exists y. (Girl(x) & Purple(x) & Blue(x) & Bike(y) & WalkingBeside(x, y) -> Night(z) & At(x, z))	There is no woman in a purple top walking a bicycle between two stone columns	not exists x. (Woman(x) & PurpleTop(x) & WalkingBicycle(x) & BetweenStoneColumns(x))	n	False	False
3527	A girl dressed in purple and blue is walking beside her bike at night	exists x.exists y. (Girl(x) & Purple(x) & Blue(x) & Bike(y) & WalkingBeside(x, y) -> Night(z) & At(x, z))	A stone woman and bicycle are on top of two purple columns, between which people are walking	exists x. exists y. exists z. (StoneWoman(x) & Bicycle(y) & PurpleColumn(z) -> (OnTopOf(x, z) & Between(z, people)))	n	False	False
3528	A man in a red jacket is standing next to a yellow kayak on some rocks by the ocean	exists x.exists y.exists z. (Man(x) & RedJacket(x) & YellowKayak(y) & Rocks(z) & Ocean(o) -> StandingNextTo(x, y, z))	The man in the red jacket is standing next to the yellow kayak on some rocks by the ocean	exists x.exists y.exists z. (Man(x) & RedJacket(x) & YellowKayak(y) & Rocks(z) & ByOcean(z) -> StandingNextTo(x, y, z))	e	False	False
3529	A man in a red jacket is standing next to a yellow kayak on some rocks by the ocean	exists x.exists y.exists z. (Man(x) & RedJacket(x) & YellowKayak(y) & Rocks(z) & Ocean(o) -> StandingNextTo(x, y, z))	A man is standing bare-chested beside a yellow canoe on some rocks with water in the background	exists x. exists y. exists z. (Man(x) & YellowCanoe(y) & Rocks(z) & StandingBeside(x, y) & On(x, z) & WaterInBackground(x))	n	False	False
3530	A man is wearing a red jacket and standing beside a yellow canoe on some rocks with water in the background	exists x. exists y. exists z. (Man(x) & RedJacket(x) & YellowCanoe(y) & Rocks(z) & WaterInBackground(z) & Wearing(x, y) & StandingBeside(x, y, z))	The man in the red jacket is standing next to the yellow kayak on some rocks by the ocean	exists x.exists y.exists z. (Man(x) & RedJacket(x) & YellowKayak(y) & Rocks(z) & ByOcean(z) -> StandingNextTo(x, y, z))	e	False	False
3531	A man is wearing a red jacket and standing beside a yellow canoe on some rocks with water in the background	exists x. exists y. exists z. (Man(x) & RedJacket(x) & YellowCanoe(y) & Rocks(z) & WaterInBackground(z) & Wearing(x, y) & StandingBeside(x, y, z))	There is no man in a red jacket standing next to a yellow kayak on some rocks by the ocean	not exists x. (Man(x) & RedJacket(x) & StandingNextTo(x, y) & YellowKayak(y) & OnRocks(y) & ByOcean(y))	n	False	False
3532	The dog with the black coat is walking along a tree trunk bridge over water	exists x. (Dog(x) & HasBlackCoat(x) -> WalksAlongTreeTrunkBridgeOverWater(x))	The black dog is walking along a tree trunk bridge over water	exists x.exists y.exists z. (BlackDog(x) & TreeTrunkBridge(y) & Water(z) -> WalkingAlong(x, y, z))	e	False	False
3533	A river is being crossed by a dog on a bridge made from a fallen tree	exists x. exists y. exists z. (River(x) & Dog(y) & Bridge(z) & Crosses(y, x, z))	A dog is crossing a river on a bridge made from a fallen tree	exists x. exists y. exists z. (Dog(x) & River(y) & Bridge(z) & Crossing(x, y, z) & MadeFromFallenTree(z))	e	False	False
3534	The black dog is walking along a tree trunk bridge over water	exists x.exists y.exists z. (BlackDog(x) & TreeTrunkBridge(y) & Water(z) -> WalkingAlong(x, y, z))	A river is being crossed by a dog on a bridge made from a fallen tree	exists x. exists y. exists z. (River(x) & Dog(y) & Bridge(z) & Crosses(y, x, z))	e	False	False
3535	The black dog is not walking along a tree trunk bridge over water	not exists x. (BlackDog(x) & WalkingAlongTreeTrunkBridge(x) & OverWater(x))	A dog is crossing a river on a bridge made from a fallen tree	exists x. exists y. exists z. (Dog(x) & River(y) & Bridge(z) & Crossing(x, y, z) & MadeFromFallenTree(z))	n	False	False
3536	The black dog is walking along a tree trunk bridge over water	exists x.exists y.exists z. (BlackDog(x) & TreeTrunkBridge(y) & Water(z) -> WalkingAlong(x, y, z))	A dog is crossing a river on a bridge made from a fallen tree	exists x. exists y. exists z. (Dog(x) & River(y) & Bridge(z) & Crossing(x, y, z) & MadeFromFallenTree(z))	n	False	False
3537	A child in a green and white sports uniform is running over the grass	exists x. (Child(x) & GreenAndWhiteUniform(x) -> RunningOverGrass(x))	A child in a green and white uniform for sports is running over the grass	exists x. (Child(x) & GreenAndWhiteUniform(x) & ForSports(x) -> RunsOverGrass(x))	e	False	False
3538	A little boy is proudly wearing a green soccer strip and is running on the grass	exists x. (LittleBoy(x) & WearingGreenSoccerStrip(x) & RunningOnGrass(x))	A child in a green and white sports uniform is running over the grass	exists x. (Child(x) & GreenAndWhiteUniform(x) -> RunningOverGrass(x))	e	False	False
3539	The girl in the black hat is wearing a bikini at the beach	exists x. (Girl(x) & WearsBikini(x) -> AtBeach(x))	A girl in a black hat is wearing a bikini at the beach	exists x. (Girl(x) & WearsBlackHat(x) -> WearsBikiniAtBeach(x))	e	False	False
3540	A girl in a black hat is standing topless at the beach	exists x. (Girl(x) & WearsBlackHat(x) -> StandingToplessAtBeach(x))	A girl in a black hat is wearing a bikini at the beach	exists x. (Girl(x) & WearsBlackHat(x) -> WearsBikiniAtBeach(x))	n	False	False
3541	A young lady in a bikini is standing on the beach	exists x. (YoungLady(x) & WearingBikini(x) -> StandingOnBeach(x))	A girl in a black hat is wearing a bikini at the beach	exists x. (Girl(x) & WearsBlackHat(x) -> WearsBikiniAtBeach(x))	n	False	False
3542	A girl in a black hat is standing topless at the beach	exists x. (Girl(x) & WearsBlackHat(x) -> StandingToplessAtBeach(x))	A young lady in a bikini is lying on the beach	exists x. (YoungLady(x) & WearingBikini(x) -> LyingOnBeach(x))	n	False	False
3543	A young lady in a bikini is lying on the beach	exists x. (YoungLady(x) & WearingBikini(x) -> LyingOnBeach(x))	A black girl with no bikini is wearing a hat at the beach	exists x. (BlackGirl(x) & not WearingBikini(x) -> WearingHatAtBeach(x))	n	False	False
3544	A man is sitting on the beach	exists x. (Man(x) & SittingOnBeach(x))	The man is doing a handstand on the wet sand at the edge of the water at the beach	exists x.exists y.exists z. (Man(x) & Handstand(y) & WetSand(z) & AtEdgeOfWater(x, z) -> Doing(x, y, z))	n	False	False
3545	A man is performing a handstand on the beach	exists x. (Man(x) & Handstand(x) & OnBeach(x))	The man at the beach is not doing a handstand on the wet sand at the edge of the water	exists x. (Man(x) & AtBeach(x) -> not DoingHandstandOnWetSand(x))	n	False	False
3546	The man is doing a handstand on the wet sand at the edge of the water at the beach	exists x.exists y.exists z. (Man(x) & Handstand(y) & WetSand(z) & AtEdgeOfWater(x, z) -> Doing(x, y, z))	A man is performing a handstand on the beach	exists x. (Man(x) & Handstand(x) & OnBeach(x))	e	False	False
3547	A young boy is playing in the park with his mother	exists x.exists y.exists z. (YoungBoy(x) & Park(y) & Mother(z) & PlaysIn(x, y) -> With(x, z))	There is no young boy playing in the park with his mother	not exists x. (YoungBoy(x) & PlaysInPark(x) & WithMother(x))	c	False	False
3548	A boy in blue is running away from a woman in blue	exists x.exists y. (Boy(x) & Blue(x) & Woman(y) & Blue(y) -> RunningAwayFrom(x, y))	A boy in blue is running towards a woman in blue	exists x.exists y. (Boy(x) & Blue(x) & Woman(y) & Blue(y) -> RunningTowards(x, y))	n	False	False
3549	A boy in blue is running away from a woman in blue	exists x.exists y. (Boy(x) & Blue(x) & Woman(y) & Blue(y) -> RunningAwayFrom(x, y))	There is no young boy playing in the park with his mother	not exists x. (YoungBoy(x) & PlaysInPark(x) & WithMother(x))	n	False	False
3550	A boy in blue is running away from a woman in blue	exists x.exists y. (Boy(x) & Blue(x) & Woman(y) & Blue(y) -> RunningAwayFrom(x, y))	A young mother is playing with her boy in the park	exists x.exists y. (YoungMother(x) & Boy(y) & Park(z) -> PlaysWith(x, y, z))	n	False	False
3551	A young boy is playing in the park with his mother	exists x.exists y.exists z. (YoungBoy(x) & Park(y) & Mother(z) & PlaysIn(x, y) -> With(x, z))	A boy in blue is running away from a woman in blue	exists x.exists y. (Boy(x) & Blue(x) & Woman(y) & Blue(y) -> RunningAwayFrom(x, y))	n	False	False
3552	One little boy with brown hair is jumping off of the brown chair onto the floor	exists x. exists y. exists z. (LittleBoy(x) & BrownHair(x) & Chair(y) & Brown(y) & Floor(z) & JumpingOff(x, y, z))	A little boy with brown hair is jumping off of a brown chair onto the floor	exists x. exists y. exists z. (LittleBoy(x) & BrownHair(x) & Chair(y) & Brown(y) & Floor(z) & JumpingOffOf(x, y, z))	e	False	False
3553	A little boy with brown hair is jumping off of a brown chair onto the floor	exists x. exists y. exists z. (LittleBoy(x) & BrownHair(x) & Chair(y) & Brown(y) & Floor(z) & JumpingOffOf(x, y, z))	A young boy is quickly jumping off a chair	exists x. (YoungBoy(x) & QuicklyJumpsOffChair(x))	e	False	False
3554	A little boy with brown hair is jumping off of a brown chair onto the floor	exists x. exists y. exists z. (LittleBoy(x) & BrownHair(x) & Chair(y) & Brown(y) & Floor(z) & JumpingOffOf(x, y, z))	A young boy is jumping onto a chair	exists x. exists y. exists z. (YoungBoy(x) & Chair(y) & Jumping(x, y) & Onto(x, z) & Chair(z))	n	False	False
3555	A young boy is jumping off a chair	exists x. (YoungBoy(x) & JumpingOffChair(x))	There is no little boy with brown hair jumping off of a brown chair onto the floor	not exists x. (LittleBoy(x) & BrownHair(x) & JumpsOffBrownChair(x) & LandsOnFloor(x))	n	False	False
3556	A little boy with brown hair is jumping off of a brown chair onto the floor	exists x. exists y. exists z. (LittleBoy(x) & BrownHair(x) & Chair(y) & Brown(y) & Floor(z) & JumpingOffOf(x, y, z))	A young boy is jumping off a chair	exists x. (YoungBoy(x) & JumpingOffChair(x))	e	False	False
3557	Two children are bouncing on colorful balls	exists x. exists y. (Child(x) & Child(y) & BouncingOnColorfulBalls(x) & BouncingOnColorfulBalls(y))	Two kids are bouncing on colorful balls	exists x. exists y. (Kid(x) & Kid(y) & BouncingOnColorfulBalls(x) & BouncingOnColorfulBalls(y))	e	True	False
3558	Two kids are sitting on colorful balls	exists x. exists y. (Kid(x) & Kid(y) & SittingOnColorfulBall(x) & SittingOnColorfulBall(y))	Two kids are bouncing on colorful balls	exists x. exists y. (Kid(x) & Kid(y) & BouncingOnColorfulBalls(x) & BouncingOnColorfulBalls(y))	n	False	False
3559	The children are wearing black tights and hopping	exists x. (Child(x) -> (WearingBlackTights(x) & Hopping(x)))	Some children are wearing black tights and hopping	exists x. (Child(x) & WearingBlackTights(x) & Hopping(x))	e	False	False
3560	The children are wearing black tights and hopping	exists x. (Child(x) -> (WearingBlackTights(x) & Hopping(x)))	Two balls are bouncing against some colorful kids	exists x.exists y.exists z. (Ball(x) & Ball(y) & ColorfulKid(z) & BouncingAgainst(x, z) & BouncingAgainst(y, z))	n	False	False
3561	The children are wearing black tights and hopping	exists x. (Child(x) -> (WearingBlackTights(x) & Hopping(x)))	Two kids are bouncing on colorful balls	exists x. exists y. (Kid(x) & Kid(y) & BouncingOnColorfulBalls(x) & BouncingOnColorfulBalls(y))	n	False	False
3562	A little girl is smiling and wearing a fake nose and glasses	exists x. (LittleGirl(x) & Smiling(x) & WearingFakeNose(x) & WearingGlasses(x))	The little girl is smiling and wearing a fake nose and glasses	exists x. (LittleGirl(x) & Smiling(x) & WearingFakeNose(x) & WearingGlasses(x))	e	True	False
3563	The blonde girl with the pink top is smiling and wearing funny glasses with a large nose attached	exists x. (BlondeGirl(x) & PinkTop(x) -> (Smiling(x) & WearingFunnyGlasses(x) & LargeNoseAttached(x)))	The blonde girl with the pink top is happily smiling and wearing funny glasses with a large nose attached	exists x. (Girl(x) & Blonde(x) & PinkTop(x) -> (HappilySmiling(x) & WearingFunnyGlasses(x) & LargeNoseAttached(x)))	e	False	False
3564	The blonde girl with the pink top is smiling and wearing funny glasses with a large nose attached	exists x. (BlondeGirl(x) & PinkTop(x) -> (Smiling(x) & WearingFunnyGlasses(x) & LargeNoseAttached(x)))	The blonde girl with the pink top is not smiling and not wearing funny glasses with a large nose attached	exists x. (BlondeGirl(x) & PinkTop(x) -> (not Smiling(x) & not WearingFunnyGlasses(x) & LargeNoseAttached(x)))	c	False	False
3565	The blonde girl with the pink top is happily smiling and wearing funny glasses with a large nose attached	exists x. (Girl(x) & Blonde(x) & PinkTop(x) -> (HappilySmiling(x) & WearingFunnyGlasses(x) & LargeNoseAttached(x)))	A little girl is smiling and wearing a fake nose and glasses	exists x. (LittleGirl(x) & Smiling(x) & WearingFakeNose(x) & WearingGlasses(x))	n	False	False
3566	The blonde girl with the pink top is smiling and wearing funny glasses with a large nose attached	exists x. (BlondeGirl(x) & PinkTop(x) -> (Smiling(x) & WearingFunnyGlasses(x) & LargeNoseAttached(x)))	A little girl is frowning and taking off a fake nose and glasses	exists x. (LittleGirl(x) & Frowning(x) & TakingOffFakeNose(x) & TakingOffGlasses(x))	n	False	False
3567	Water is being squirted by a man into the mouth of a white dog with a squirt gun	exists x.exists y.exists z. (Water(x) & Man(y) & WhiteDog(z) & SquirtGun(y) -> Squirt(y, x, z))	A man is squirting water into the mouth of a white dog with a squirt gun	exists x. exists y. exists z. (Man(x) & Dog(y) & SquirtGun(z) & SquirtsWaterIntoMouth(x, y, z))	e	False	False
3568	Water is being squirted by a man into the mouth of a white dog with a squirt gun	exists x.exists y.exists z. (Water(x) & Man(y) & WhiteDog(z) & SquirtGun(y) -> Squirt(y, x, z))	A man is spraying a super soaker into the mouth of a dog	exists x.exists y. (Man(x) & SuperSoaker(x) & Dog(y) -> SpraysIntoMouth(x, y))	n	False	False
3569	A boy under an umbrella is being let go by his father who is wearing a blue coat	exists x.exists y.exists z. (Boy(x) & Umbrella(y) & Father(z) & Under(x, y) & WearingBlueCoat(z) -> LettingGo(z, x))	A boy under an umbrella is being held by his father who is wearing a blue coat	exists x.exists y.exists z. (Boy(x) & Umbrella(y) & Father(z) & Holds(z, x, y) -> WearsBlueCoat(z))	n	False	False
3570	A child is amazedly experiencing a new world	exists x. (Child(x) -> ExperiencingNewWorld(x))	A child is experiencing a new world	exists x. (Child(x) -> ExperiencingNewWorld(x))	e	True	False
3571	A child is falling asleep	exists x. (Child(x) -> FallingAsleep(x))	A boy under an umbrella is being held by his father who is wearing a blue coat	exists x.exists y.exists z. (Boy(x) & Umbrella(y) & Father(z) & Holds(z, x, y) -> WearsBlueCoat(z))	n	False	False
3572	A dog is walking along the snowdrift	exists x. (Dog(x) & Walking(x) & OnSnowdrift(x))	A dog is walking along a snowdrift	exists x. exists y. (Dog(x) & Snowdrift(y) & WalkingAlong(x, y))	e	False	False
3573	There is no dog walking along a snowdrift	not exists x. (Dog(x) & WalkingAlongSnowdrift(x))	A dog is walking along a snowdrift	exists x. exists y. (Dog(x) & Snowdrift(y) & WalkingAlong(x, y))	c	False	False
3574	A dog is playing alone on a beach covered by snow	exists x. (Dog(x) & PlayingAlone(x) & OnBeach(x) & CoveredBySnow(x))	A dog is playing alone on the shore covered by snow	exists x. (Dog(x) & PlayingAlone(x) & OnShore(x) & CoveredBySnow(x))	e	False	False
3575	A dog is playing alone on a beach covered by snow	exists x. (Dog(x) & PlayingAlone(x) & OnBeach(x) & CoveredBySnow(x))	A dog is sleeping on a beach covered by snow	exists x. exists y. (Dog(x) & Beach(y) & SleepingOn(x, y) & CoveredBy(y, snow))	n	False	False
3576	A light brown dog is running up a street	exists x. (Dog(x) & LightBrown(x) & RunningUpStreet(x))	There is no light brown dog running up a street	not exists x. (Dog(x) & LightBrown(x) & Running(x) & UpStreet(x))	c	False	False
3577	A great dog is climbing a steep hill	exists x. (Dog(x) & Great(x) & Climbing(x, SteepHill))	A great dog is getting down a steep hill	exists x. (GreatDog(x) -> DownSteepHill(x))	c	False	False
3578	A great dog is wildly climbing a steep hill	exists x. (Dog(x) & WildlyClimbing(x) & SteepHill(x) -> Great(x))	A light brown dog is running up a street	exists x. (Dog(x) & LightBrown(x) & RunningUpStreet(x))	n	False	False
3579	A light brown dog is running up a street	exists x. (Dog(x) & LightBrown(x) & RunningUpStreet(x))	A great dog is getting down a steep hill	exists x. (GreatDog(x) -> DownSteepHill(x))	n	False	False
3580	A man and a woman are walking down a city street	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y) & CityStreet(x, y))	A man and a woman are idling in a city street	exists x. exists y. (Man(x) & Woman(y) & IdlingInCityStreet(x, y))	n	False	False
3581	People are not walking through a crowded street	exists x. (Person(x) -> not WalkingThroughCrowdedStreet(x))	People are walking through a crowded street	exists x. exists y. (Person(x) & Person(y) & CrowdedStreet(z) & WalkingThrough(x, z) & WalkingThrough(y, z))	c	False	False
3582	A man and a woman are walking down a city street	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y) & CityStreet(x, y))	People are not walking through a crowded street	exists x. (Person(x) -> not WalkingThroughCrowdedStreet(x))	n	False	False
3583	People are walking through a crowd in the street	exists x. exists y. exists z. (Person(x) & Crowd(y) & Street(z) -> WalkingThrough(x, y, z))	A man and a woman are walking down a city street	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y) & CityStreet(x, y))	n	False	False
3584	People are walking through a crowded street	exists x. exists y. (Person(x) & Person(y) & CrowdedStreet(z) & WalkingThrough(x, z) & WalkingThrough(y, z))	A man and a woman are walking down a city street	exists x. exists y. (Man(x) & Woman(y) & Walking(x) & Walking(y) & CityStreet(x, y))	n	False	False
3585	A surfer is riding a big wave across dark green water	exists x.exists y.exists z. (Surfer(x) & Wave(y) & Water(z) & Riding(x, y) & Big(y) & DarkGreen(z) -> Surfing(x, y, z))	A big wave is being ridden by a surfer across dark green water	exists x.exists y.exists z. (BigWave(x) & Surfer(y) & DarkGreenWater(z) -> RidesAcross(y, x, z))	e	False	False
3586	A surfer is riding a big wave across dark green water	exists x.exists y.exists z. (Surfer(x) & Wave(y) & Water(z) & Riding(x, y) & Big(y) & DarkGreen(z) -> Surfing(x, y, z))	No surfer is riding a big wave across dark green water	not exists x. (Surfer(x) & RidingBigWave(x) & DarkGreenWater(x))	c	False	False
3587	The big surfer is riding and waving	exists x. (BigSurfer(x) -> (Rides(x) & Waves(x)))	The surfer is riding a big wave	exists x. exists y. (Surfer(x) & Wave(y) & Riding(x, y))	n	False	False
3588	A surfer is riding a big wave across dark green water	exists x.exists y.exists z. (Surfer(x) & Wave(y) & Water(z) & Riding(x, y) & Big(y) & DarkGreen(z) -> Surfing(x, y, z))	The big surfer is riding and waving	exists x. (BigSurfer(x) -> (Rides(x) & Waves(x)))	n	False	False
3589	A big wave is being ridden by a surfer across dark green water	exists x.exists y.exists z. (BigWave(x) & Surfer(y) & DarkGreenWater(z) -> RidesAcross(y, x, z))	The surfer is riding a big wave	exists x. exists y. (Surfer(x) & Wave(y) & Riding(x, y))	e	False	False
3590	No surfer is riding a big wave across dark green water	not exists x. (Surfer(x) & RidingBigWave(x) & DarkGreenWater(x))	The surfer is riding a big wave	exists x. exists y. (Surfer(x) & Wave(y) & Riding(x, y))	e	False	False
3591	The shirtless man in striped shorts and sunglasses is standing near a person in a white shirt and sunglasses	exists x.exists y. (ShirtlessMan(x) & StripedShorts(x) & Sunglasses(x) & WhiteShirt(y) & Sunglasses(y) -> StandingNear(x, y))	The muscular black man is dancing and the man behind him is wearing green beads	exists x.exists y. (MuscularBlackMan(x) & ManBehind(y, x) -> (Dancing(x) & WearingGreenBeads(y)))	n	False	False
3592	A person wearing grey pants is airborne on a snowboard	exists x. (Person(x) & WearsGreyPants(x) -> SnowboardAirborne(x))	A person is wearing grey pants on a snowboard	exists x. (Person(x) & Wearing(x, greyPants) & Snowboarding(x))	e	False	False
3593	A snowboarding man is jumping through the air	exists x. (SnowboardingMan(x) -> JumpsThroughAir(x))	A snowboarder is jumping through the air	exists x. (Snowboarder(x) -> JumpingThroughAir(x))	e	False	False
3594	A snowboarding woman is jumping through the air	exists x. (SnowboardingWoman(x) -> JumpsThroughAir(x))	A snowboarding man is jumping through the air	exists x. (SnowboardingMan(x) -> JumpsThroughAir(x))	n	False	False
3595	A snowboarding woman is jumping through the air	exists x. (SnowboardingWoman(x) -> JumpsThroughAir(x))	A person wearing grey pants is airborne on a snowboard	exists x. (Person(x) & WearsGreyPants(x) -> SnowboardAirborne(x))	n	False	False
3596	There is no tennis player lunging to the left	not exists x. (TennisPlayer(x) & LungesToLeft(x))	A tennis player is lunging to the left	exists x. (TennisPlayer(x) -> LungesToLeft(x))	c	False	False
3597	A tennis player with a green headband is hitting the ball	exists x. (TennisPlayer(x) & HasGreenHeadband(x) -> HittingBall(x))	The tennis player with a green headband is hitting the ball	exists x. (TennisPlayer(x) & HasGreenHeadband(x) -> HittingBall(x))	e	True	False
3598	A tennis player is lunging to the left	exists x. (TennisPlayer(x) -> LungesToLeft(x))	The tennis player with a green headband is hitting the ball	exists x. (TennisPlayer(x) & HasGreenHeadband(x) -> HittingBall(x))	n	False	False
3599	A tennis player with a green headband is missing the ball	exists x. (TennisPlayer(x) & WearsGreenHeadband(x) -> MissingBall(x))	A tennis player is lunging to the left	exists x. (TennisPlayer(x) -> LungesToLeft(x))	n	False	False
3600	A tennis player with a green headband is hitting the ball	exists x. (TennisPlayer(x) & HasGreenHeadband(x) -> HittingBall(x))	A tennis player is jumping to the left	exists x. (TennisPlayer(x) & Jumping(x, Left))	n	False	False
3601	There is no tennis player lunging to the left	not exists x. (TennisPlayer(x) & LungesToLeft(x))	A tennis player with a green headband is hitting the ball	exists x. (TennisPlayer(x) & HasGreenHeadband(x) -> HittingBall(x))	n	False	False
3602	A tennis player with a green headband is hitting the ball	exists x. (TennisPlayer(x) & HasGreenHeadband(x) -> HittingBall(x))	A tennis player is lunging to the left	exists x. (TennisPlayer(x) -> LungesToLeft(x))	n	False	False
3603	A man is squatting in brush and taking a photograph	exists x. (Man(x) & SquattingInBrush(x) & TakingPhotograph(x))	A man is squatting in brush and taking a photo	exists x. (Man(x) & SquattingInBrush(x) & TakingPhoto(x))	e	False	False
3604	There is no man squatting in brush and taking a photograph	not exists x. (Man(x) & SquattingInBrush(x) & TakingPhotograph(x))	A man is crouching and holding a camera	exists x. (Man(x) & Crouching(x) & exists y. (Camera(y) & Holding(x, y)))	n	False	False
3605	A man is squatting in brush and taking a photograph	exists x. (Man(x) & SquattingInBrush(x) & TakingPhotograph(x))	A man is crouching and holding a camera	exists x. (Man(x) & Crouching(x) & exists y. (Camera(y) & Holding(x, y)))	e	False	False
3606	Some dogs are not playing in a stream	exists x. (Dog(x) & not PlayingInStream(x))	Some dogs are playing in a stream	exists x. (Dog(x) & PlayingInStream(x))	c	False	False
3607	Two dogs are looking at something that is moving in the water	exists x.exists y.exists z. (Dog(x) & Dog(y) & Something(z) & MovingInWater(z) & LookingAt(x, z) & LookingAt(y, z))	Two dogs are looking at something that is splashing in the water	exists x. exists y. exists z. (Dog(x) & Dog(y) & Splashing(z) & LookingAt(x, z) & LookingAt(y, z))	e	False	False
3608	Two dogs are looking at something that is splashing in the water	exists x. exists y. exists z. (Dog(x) & Dog(y) & Splashing(z) & LookingAt(x, z) & LookingAt(y, z))	Two cats are looking at something that is splashing in the water	exists x.exists y.exists z. (Cat(x) & Cat(y) & Splashing(z) & LookingAt(x, z) & LookingAt(y, z))	n	False	False
3609	Some dogs are playing in a stream	exists x. (Dog(x) & PlayingInStream(x))	Two cats are looking at something that is splashing in the water	exists x.exists y.exists z. (Cat(x) & Cat(y) & Splashing(z) & LookingAt(x, z) & LookingAt(y, z))	n	False	False
3610	A black dog is jumping from n hay ball to another hay ball	exists x.exists y.exists z. (BlackDog(x) & HayBall(y) & HayBall(z) -> JumpsFromTo(x, y, z))	A black dog is leaping from a hay ball to another hay ball	exists x.exists y.exists z. (BlackDog(x) & HayBall(y) & HayBall(z) -> LeapsFromTo(x, y, z))	e	False	False
3611	A black cat is jumping from a hay ball to another hay ball	exists x.exists y.exists z. (BlackCat(x) & HayBall(y) & HayBall(z) -> JumpsFromTo(x, y, z))	A black dog is jumping from n hay ball to another hay ball	exists x.exists y.exists z. (BlackDog(x) & HayBall(y) & HayBall(z) -> JumpsFromTo(x, y, z))	n	False	False
3612	A black dog is leaping from a hay ball to another hay ball	exists x.exists y.exists z. (BlackDog(x) & HayBall(y) & HayBall(z) -> LeapsFromTo(x, y, z))	A black dog is leaping from a cylindrical hay bale	exists x.exists y. (BlackDog(x) & CylindricalHayBale(y) -> LeapingFrom(x, y))	n	False	False
3613	A black dog is leaping from a cylindrical hay bale	exists x.exists y. (BlackDog(x) & CylindricalHayBale(y) -> LeapingFrom(x, y))	A black cat is jumping from a hay ball to another hay ball	exists x.exists y.exists z. (BlackCat(x) & HayBall(y) & HayBall(z) -> JumpsFromTo(x, y, z))	n	False	False
3614	A black dog is jumping from n hay ball to another hay ball	exists x.exists y.exists z. (BlackDog(x) & HayBall(y) & HayBall(z) -> JumpsFromTo(x, y, z))	A black dog is jumping from a cylindrical hay bale	exists x.exists y. (BlackDog(x) & CylindricalHayBale(y) -> JumpsFrom(x, y))	n	False	False
3615	A black dog is jumping from n hay ball to another hay ball	exists x.exists y.exists z. (BlackDog(x) & HayBall(y) & HayBall(z) -> JumpsFromTo(x, y, z))	A white dog is leaping from a cylindrical hay bale	exists x.exists y. (WhiteDog(x) & CylindricalHayBale(y) -> LeapingFrom(x, y))	n	False	False
3616	A black dog is jumping from n hay ball to another hay ball	exists x.exists y.exists z. (BlackDog(x) & HayBall(y) & HayBall(z) -> JumpsFromTo(x, y, z))	A black dog is leaping from a cylindrical hay bale	exists x.exists y. (BlackDog(x) & CylindricalHayBale(y) -> LeapingFrom(x, y))	n	False	False
3617	The brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	The brown animal is jumping in the air	exists x. (BrownAnimal(x) -> JumpsInAir(x))	e	False	False
3618	The brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	A brown dog is jumping in the water	exists x. (Dog(x) & Brown(x) & JumpingInWater(x))	n	False	False
3619	A brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	A dog is jumping in the air	exists x. (Dog(x) & JumpingInAir(x))	e	True	False
3620	The brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	A dog is jumping in the air	exists x. (Dog(x) & JumpingInAir(x))	e	True	False
3621	A brown dog is jumping in the air	exists x. (Dog(x) & Brown(x) & JumpingInAir(x))	The brown animal is jumping in the air	exists x. (BrownAnimal(x) -> JumpsInAir(x))	e	False	False
3622	The person on the motorcycle is holding up his arm	exists x. (Person(x) & OnMotorcycle(x) -> HoldingUpArm(x))	The person on the motorcycle is holding up an arm	exists x. (Person(x) & OnMotorcycle(x) -> HoldingUpArm(x))	e	True	False
3623	The person on the motorcycle is holding up an arm	exists x. (Person(x) & OnMotorcycle(x) -> HoldingUpArm(x))	The person on the motorcycle is not holding up an arm	exists x. (PersonOnMotorcycle(x) -> not HoldingUpArm(x))	c	False	False
3624	A man on a motorcycle is riding on a track and waving	exists x.exists y.exists z. (Man(x) & Motorcycle(y) & Track(z) -> (RidingOn(x, y, z) & Waving(x)))	The person on the motorcycle is not holding up an arm	exists x. (PersonOnMotorcycle(x) -> not HoldingUpArm(x))	c	False	False
3625	A man on a motorcycle is riding on a track and waving happily	exists x.exists y. (Man(x) & Motorcycle(y) & RidingOn(x, y) -> WavingHappily(x))	The person on the motorcycle is holding up an arm	exists x. (Person(x) & OnMotorcycle(x) -> HoldingUpArm(x))	n	False	False
3626	The person on the motorcycle is holding up an arm	exists x. (Person(x) & OnMotorcycle(x) -> HoldingUpArm(x))	A man on a motorcycle is riding on a track and waving	exists x.exists y.exists z. (Man(x) & Motorcycle(y) & Track(z) -> (RidingOn(x, y, z) & Waving(x)))	n	False	False
3627	Two adults are standing on a scooter in a field of yellow flowers	exists x. exists y. exists z. (Adult(x) & Adult(y) & Scooter(z) & StandingOn(x, z) & StandingOn(y, z) & YellowFlowers(w) & Field(w) & LocatedIn(w, z))	Two adults are not standing on a scooter in a field of yellow flowers	not (exists x. exists y. exists z. (Adult(x) & Adult(y) & Scooter(z) & StandingOn(x, z) & StandingOn(y, z) & FieldOfYellowFlowers(z)))	c	False	False
3628	Two people wearing helmets are driving over the yellow and white flowers	exists x.exists y.exists z. (Person(x) & Person(y) & Helmet(x) & Helmet(y) & YellowFlower(z) & WhiteFlower(w) -> DrivingOver(x, y, z, w))	Two adults are standing on a scooter in a field of yellow flowers	exists x. exists y. exists z. (Adult(x) & Adult(y) & Scooter(z) & StandingOn(x, z) & StandingOn(y, z) & YellowFlowers(w) & Field(w) & LocatedIn(w, z))	n	False	False
3629	Two people wearing helmets are not riding over the yellow and white flowers	exists x.exists y.exists z. (Person(x) & Person(y) & Helmet(x) & Helmet(y) & YellowFlower(z) & WhiteFlower(w) -> not RidingOver(x, y, z, w))	Two adults are standing on a scooter in a field of yellow flowers	exists x. exists y. exists z. (Adult(x) & Adult(y) & Scooter(z) & StandingOn(x, z) & StandingOn(y, z) & YellowFlowers(w) & Field(w) & LocatedIn(w, z))	n	False	False
3630	Two people wearing helmets are riding over the yellow and white flowers	exists x.exists y.exists z. (Person(x) & Person(y) & Helmet(x) & Helmet(y) & YellowFlower(z) & WhiteFlower(z) -> RidingOver(x, y, z))	Two adults are standing on a scooter in a field of flowers	exists x. exists y. exists z. (Adult(x) & Adult(y) & Scooter(z) & StandingOn(x, z) & StandingOn(y, z) & FieldOfFlowers(z))	n	False	False
3631	Two people wearing helmets are riding over the yellow and white flowers	exists x.exists y.exists z. (Person(x) & Person(y) & Helmet(x) & Helmet(y) & YellowFlower(z) & WhiteFlower(z) -> RidingOver(x, y, z))	Two adults are not standing on a scooter in a field of yellow flowers	not (exists x. exists y. exists z. (Adult(x) & Adult(y) & Scooter(z) & StandingOn(x, z) & StandingOn(y, z) & FieldOfYellowFlowers(z)))	n	False	False
3632	Two people wearing helmets are riding over the yellow and white flowers	exists x.exists y.exists z. (Person(x) & Person(y) & Helmet(x) & Helmet(y) & YellowFlower(z) & WhiteFlower(z) -> RidingOver(x, y, z))	Two adults are standing on a scooter in a field of yellow flowers	exists x. exists y. exists z. (Adult(x) & Adult(y) & Scooter(z) & StandingOn(x, z) & StandingOn(y, z) & YellowFlowers(w) & Field(w) & LocatedIn(w, z))	n	False	False
3633	A man is riding a dirt bike down a dirt hill	exists x. exists y. exists z. (Man(x) & DirtBike(y) & DirtHill(z) & Riding(x, y, z))	A person is riding a dirt bike down a dirt hill	exists x. exists y. exists z. (Person(x) & DirtBike(y) & DirtHill(z) & Riding(x, y, z))	e	True	False
3634	A person is riding a bike along a muddy trail	exists x. exists y. exists z. (Person(x) & Bike(y) & MuddyTrail(z) & Riding(x, y, z))	A person is riding a bike along the trail	exists x. exists y. exists z. (Person(x) & Bike(y) & Trail(z) & Riding(x, y, z))	e	False	False
3635	A person is riding a dirt bike down a dirt hill	exists x. exists y. exists z. (Person(x) & DirtBike(y) & DirtHill(z) & Riding(x, y, z))	A person is riding a bike along the trail	exists x. exists y. exists z. (Person(x) & Bike(y) & Trail(z) & Riding(x, y, z))	n	False	False
3636	There is no person riding a bike along a muddy trail	not exists x. (Person(x) & RidingBike(x) & OnMuddyTrail(x))	A person is riding a dirt bike down a dirt hill	exists x. exists y. exists z. (Person(x) & DirtBike(y) & DirtHill(z) & Riding(x, y, z))	n	False	False
3637	A person is riding a bike along a muddy trail	exists x. exists y. exists z. (Person(x) & Bike(y) & MuddyTrail(z) & Riding(x, y, z))	A person is riding a dirt bike up a dirt hill	exists x. exists y. exists z. (Person(x) & DirtBike(y) & DirtHill(z) & Riding(x, y, z))	n	False	False
3638	A white horse is being ridden by a man in a blue cowboy hat	exists x. exists y. exists z. (WhiteHorse(x) & Man(y) & BlueCowboyHat(z) & Riding(y, x, z))	A man in a blue cowboy hat is riding a white horse	exists x.exists y.exists z. (Man(x) & BlueCowboyHat(x) & WhiteHorse(y) & HorseRider(x, y) -> Hat(x, z) & CowboyHat(z))	e	False	False
3639	A man in blue is riding a horse on a dirt road	exists x.exists y.exists z. (Man(x) & Blue(x) & Horse(y) & DirtRoad(z) -> RidingOn(x, y, z))	A man in a blue cowboy hat is riding a black horse	exists x.exists y.exists z. (Man(x) & BlueCowboyHat(x) & BlackHorse(y) & Riding(x, y) -> Hat(x, z) & Horse(z))	n	False	False
3640	A man in blue is riding a animal on a dirt road	exists x.exists y.exists z. (Man(x) & Blue(x) & Animal(y) & DirtRoad(z) -> RidingOn(x, y, z))	A man in a blue cowboy hat is riding a white horse	exists x.exists y.exists z. (Man(x) & BlueCowboyHat(x) & WhiteHorse(y) & HorseRider(x, y) -> Hat(x, z) & CowboyHat(z))	n	False	False
3641	Three people are driving ATVs	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & DrivingATV(x) & DrivingATV(y) & DrivingATV(z))	There are no people driving ATVs	not exists x. (Person(x) & DrivesATV(x))	c	False	False
3642	Three people are driving four wheel ATVs in a field	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & DrivingATV(x, 4WheelATV) & DrivingATV(y, 4WheelATV) & DrivingATV(z, 4WheelATV) & Field(x, y, z))	Three people are driving four wheel vehicles in a field	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Driving(x, FourWheelVehicle) & Driving(y, FourWheelVehicle) & Driving(z, FourWheelVehicle) & Field(x, y, z))	e	False	False
3643	Three people are driving ATVs	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & DrivingATV(x) & DrivingATV(y) & DrivingATV(z))	Three people are driving four wheel vehicles in a field	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Driving(x, FourWheelVehicle) & Driving(y, FourWheelVehicle) & Driving(z, FourWheelVehicle) & Field(x, y, z))	e	False	False
3644	Three people are driving four wheel ATVs in a field	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & DrivingATV(x, 4WheelATV) & DrivingATV(y, 4WheelATV) & DrivingATV(z, 4WheelATV) & Field(x, y, z))	There are no people driving ATVs	not exists x. (Person(x) & DrivesATV(x))	c	False	False
3645	Two white dogs and one brown dog are not chasing a ball	not (exists x. exists y. exists z. (WhiteDog(x) & WhiteDog(y) & BrownDog(z) & ChasingBall(x, y, z)))	Two white dogs are playing with a brown dog and a ball	exists x. exists y. exists z. exists w. (WhiteDog(x) & WhiteDog(y) & BrownDog(z) & Ball(w) & PlayingWith(x, y, z, w))	n	False	False
3646	A white race car is driving through a puddle	exists x.exists y. (WhiteRaceCar(x) & Puddle(y) -> DrivingThrough(x, y))	There is no white race car driving through a puddle	not exists x. (WhiteRaceCar(x) & DrivingThroughPuddle(x))	c	False	False
3647	A black rally car is throwing mud into the air and is approaching a bend in the track	exists x. (BlackRallyCar(x) -> (ThrowsMudIntoAir(x) & ApproachingBend(x)))	A white race car is driving through a puddle	exists x.exists y. (WhiteRaceCar(x) & Puddle(y) -> DrivingThrough(x, y))	n	False	False
3648	A white race car is driving through a puddle	exists x.exists y. (WhiteRaceCar(x) & Puddle(y) -> DrivingThrough(x, y))	A white rally car is throwing mud into the air and is approaching a bend in the track	exists x. (WhiteRallyCar(x) -> (ThrowsMudIntoAir(x) & ApproachingBend(x)))	n	False	False
3649	A dog is jumping at a shiny blue soccer ball in a field of dry leaves	exists x. exists y. exists z. (Dog(x) & ShinyBlueSoccerBall(y) & Field(z) & JumpsAt(x, y) & In(x, z))	A dog is jumping at dry leaves in a field of shiny blue soccer balls	exists x. exists y. exists z. (Dog(x) & DryLeaves(y) & Field(z) & JumpsAt(x, y) & In(x, z) & ShinyBlueSoccerBalls(z))	n	False	False
3650	A small black dog is wearing a red collar and is in the leaves with a blue ball	exists x. (Dog(x) & Small(x) & Black(x) & WearingRedCollar(x) & InLeavesWithBlueBall(x))	A little black dog is wearing a red collar and is in the leaves with a blue ball	exists x. (Dog(x) & LittleBlack(x) & WearingRedCollar(x) & InLeavesWithBlueBall(x))	e	False	False
3651	A small black dog is wearing a red collar and is in the leaves with a blue ball	exists x. (Dog(x) & Small(x) & Black(x) & WearingRedCollar(x) & InLeavesWithBlueBall(x))	A dog is jumping at a shiny blue soccer ball in a field of dry leaves	exists x. exists y. exists z. (Dog(x) & ShinyBlueSoccerBall(y) & Field(z) & JumpsAt(x, y) & In(x, z))	n	False	False
3652	A big black dog is wearing a red collar and is in the leaves with a blue ball	exists x. (Dog(x) & Big(x) & Black(x) & WearingRedCollar(x) & InLeavesWithBlueBall(x))	A dog is jumping at a shiny blue soccer ball in a field of dry leaves	exists x. exists y. exists z. (Dog(x) & ShinyBlueSoccerBall(y) & Field(z) & JumpsAt(x, y) & In(x, z))	n	False	False
3653	A little black dog is wearing a red collar and is in the leaves with a blue ball	exists x. (Dog(x) & LittleBlack(x) & WearingRedCollar(x) & InLeavesWithBlueBall(x))	There is no dog jumping at a shiny blue soccer ball in a field of dry leaves	not exists x. (Dog(x) & Jumping(x) & ShinyBlueSoccerBall(x) & InField(x) & DryLeaves(x))	n	False	False
3654	A little black dog is wearing a red collar and is in the leaves with a blue ball	exists x. (Dog(x) & LittleBlack(x) & WearingRedCollar(x) & InLeavesWithBlueBall(x))	A dog is jumping at dry leaves in a field of shiny blue soccer balls	exists x. exists y. exists z. (Dog(x) & DryLeaves(y) & Field(z) & JumpsAt(x, y) & In(x, z) & ShinyBlueSoccerBalls(z))	n	False	False
3655	A dog is jumping at a shiny blue soccer ball in a field of dry leaves	exists x. exists y. exists z. (Dog(x) & ShinyBlueSoccerBall(y) & Field(z) & JumpsAt(x, y) & In(x, z))	A little black dog is wearing a red collar and is in the leaves with a blue ball	exists x. (Dog(x) & LittleBlack(x) & WearingRedCollar(x) & InLeavesWithBlueBall(x))	n	False	False
3656	A dog is running towards a ball	exists x. exists y. (Dog(x) & Ball(y) & RunningTowards(x, y))	A dog is running towards a toy	exists x.exists y. (Dog(x) & Toy(y) -> RunningTowards(x, y))	e	True	False
3657	A dog is running through a field and is chasing a ball	exists x. exists y. exists z. (Dog(x) & Field(y) & Ball(z) & RunningThrough(x, y) & Chasing(x, z))	A dog is running through a field and is chasing a toy	exists x.exists y.exists z. (Dog(x) & Field(y) & Toy(z) -> (RunsThrough(x, y) & Chases(x, z)))	e	False	False
3658	A dog is running through a field and is chasing a ball	exists x. exists y. exists z. (Dog(x) & Field(y) & Ball(z) & RunningThrough(x, y) & Chasing(x, z))	There is no dog running through a field and chasing a ball	not exists x. (Dog(x) & RunningThroughField(x) & ChasingBall(x))	c	False	False
3659	A dog is running towards a ball	exists x. exists y. (Dog(x) & Ball(y) & RunningTowards(x, y))	A dog is running through a field and is chasing a toy	exists x.exists y.exists z. (Dog(x) & Field(y) & Toy(z) -> (RunsThrough(x, y) & Chases(x, z)))	n	False	False
3660	A dog is running through a field and is chasing a ball	exists x. exists y. exists z. (Dog(x) & Field(y) & Ball(z) & RunningThrough(x, y) & Chasing(x, z))	A dog is running towards a toy	exists x.exists y. (Dog(x) & Toy(y) -> RunningTowards(x, y))	e	False	False
3661	A dog is running through a field and is chasing a ball	exists x. exists y. exists z. (Dog(x) & Field(y) & Ball(z) & RunningThrough(x, y) & Chasing(x, z))	A dog is running towards a ball	exists x. exists y. (Dog(x) & Ball(y) & RunningTowards(x, y))	e	False	False
3662	A person in a pink jacket is running onto the field	exists x. (Person(x) & WearsPinkJacket(x) -> RunsOntoField(x))	A person in a pink jacket is not running onto the field	exists x. (Person(x) & WearsPinkJacket(x) -> not RunsOntoField(x))	c	False	False
3663	A person in pink is running onto the field	exists x. (Person(x) & WearingPink(x) -> RunOntoField(x))	Four athletes are with a man in a crowded stadium	exists x. exists y. exists z. exists w. (Athlete(x) & Athlete(y) & Athlete(z) & Athlete(w) & Man(x) & Man(y) & Man(z) & Man(w) & CrowdedStadium(x) & CrowdedStadium(y) & CrowdedStadium(z) & CrowdedStadium(w))	n	False	False
3664	Four athletes are with a man in a crowded stadium	exists x. exists y. exists z. exists w. (Athlete(x) & Athlete(y) & Athlete(z) & Athlete(w) & Man(x) & Man(y) & Man(z) & Man(w) & CrowdedStadium(x) & CrowdedStadium(y) & CrowdedStadium(z) & CrowdedStadium(w))	A person in a pink jacket is not running onto the field	exists x. (Person(x) & WearsPinkJacket(x) -> not RunsOntoField(x))	n	False	False
3665	Four athletes are with a person in a crowded stadium	exists x. exists y. exists z. exists w. (Athlete(x) & Athlete(y) & Athlete(z) & Athlete(w) & Person(x) & Person(y) & Person(z) & Person(w) & CrowdedStadium(x) & With(x, y) & With(x, z) & With(x, w))	A person in a pink jacket is running onto the field	exists x. (Person(x) & WearsPinkJacket(x) -> RunsOntoField(x))	n	False	False
3666	There is no Asian woman holding a fur scarf	not exists x. (AsianWoman(x) & exists y. (FurScarf(y) & Holds(x, y)))	A woman dressed in elegant clothing is inside a crowd of people and is looking down	exists x. (Woman(x) & DressedInElegantClothing(x) -> (InsideCrowd(x) & LookingDown(x)))	n	False	False
3667	An Asian woman is holding a fur scarf	exists x. (AsianWoman(x) & exists y. (FurScarf(y) & Holding(x, y)))	A woman dressed in elegant clothing is inside a crowd of people and is looking down	exists x. (Woman(x) & DressedInElegantClothing(x) -> (InsideCrowd(x) & LookingDown(x)))	n	False	False
3668	A boy is running through the sea at the beach	exists x. exists y. exists z. (Boy(x) & Sea(y) & Beach(z) & RunningThrough(x, y, z))	A boy is running through the water at the beach	exists x. (Boy(x) & Running(x) & ThroughWater(x) & AtBeach(x))	e	False	False
3669	A girl is running through the water at the beach	exists x. (Girl(x) & Running(x) & ThroughWater(x) & AtBeach(x))	A boy is running through the water at the beach	exists x. (Boy(x) & Running(x) & ThroughWater(x) & AtBeach(x))	n	False	False
3670	A boy in a white t-shirt is splashing in shallow water	exists x. (Boy(x) & WearingWhiteTShirt(x) -> SplashingInShallowWater(x))	A kid in a white t-shirt is splashing in shallow water	exists x. (Kid(x) & WearingWhiteTShirt(x) -> SplashingInShallowWater(x))	e	False	False
3671	There is no boy in a white t-shirt splashing in shallow water	not exists x. (Boy(x) & WearingWhiteTShirt(x) & SplashingInShallowWater(x))	A boy is running through the water at the beach	exists x. (Boy(x) & Running(x) & ThroughWater(x) & AtBeach(x))	n	False	False
3672	Two tall basketball players are scrambling for the ball on the court	exists x. exists y. (TallBasketballPlayer(x) & TallBasketballPlayer(y) & ScramblingForBall(x, y) & ScramblingForBall(y, x))	Two basketball players are scrambling for the ball on the court	exists x. exists y. (BasketballPlayer(x) & BasketballPlayer(y) & ScramblingForBall(x, y))	e	False	False
3673	A basketball player is on the court floor and another one is grabbing the ball	exists x. exists y. (BasketballPlayer(x) & BasketballPlayer(y) & OnCourtFloor(x) & GrabbingBall(y))	There is no basketball player on the court floor and no one is grabbing the ball	not exists x. (BasketballPlayer(x) & OnCourtFloor(x)) & not exists y. (GrabsBall(y))	c	False	False
3674	A basketball player is on the court floor and the ball is being grabbed by another one	exists x.exists y. (BasketballPlayer(x) & Ball(y) -> (OnCourtFloor(x) & GrabbedBy(x, y)))	Two basketball players are scrambling for the ball on the court	exists x. exists y. (BasketballPlayer(x) & BasketballPlayer(y) & ScramblingForBall(x, y))	e	False	False
3675	Two tall basketball players are scrambling for the ball on the court	exists x. exists y. (TallBasketballPlayer(x) & TallBasketballPlayer(y) & ScramblingForBall(x, y) & ScramblingForBall(y, x))	A basketball player is on the court floor and another one is grabbing the ball	exists x. exists y. (BasketballPlayer(x) & BasketballPlayer(y) & OnCourtFloor(x) & GrabbingBall(y))	n	False	False
3676	A basketball player is on the court floor and another one is grabbing the ball	exists x. exists y. (BasketballPlayer(x) & BasketballPlayer(y) & OnCourtFloor(x) & GrabbingBall(y))	Two basketball players are scrambling for the ball on the court	exists x. exists y. (BasketballPlayer(x) & BasketballPlayer(y) & ScramblingForBall(x, y))	e	False	False
3677	The white dogs are looking curiously at the black llama	exists x.exists y. (WhiteDog(x) & BlackLlama(y) -> LookingCuriouslyAt(x, y))	The white dogs are looking at the black llama	exists x.exists y. (WhiteDog(x) & BlackLlama(y) -> LookingAt(x, y))	e	False	False
3678	A black sheep is standing near three white dogs	exists x. exists y. exists z. (BlackSheep(x) & WhiteDog(y) & WhiteDog(z) & StandingNear(x, y) & StandingNear(x, z) & StandingNear(x, y))	A black sheep is standing far from three white dogs	exists x.exists y.exists z. (BlackSheep(x) & WhiteDog(y) & WhiteDog(z) -> StandingFarFrom(x, y, z))	c	False	False
3679	A black sheep is standing near three white dogs	exists x. exists y. exists z. (BlackSheep(x) & WhiteDog(y) & WhiteDog(z) & StandingNear(x, y) & StandingNear(x, z) & StandingNear(x, y))	The white dogs are looking at the black llama	exists x.exists y. (WhiteDog(x) & BlackLlama(y) -> LookingAt(x, y))	n	False	False
3680	The white dogs aren't looking curiously at the black llama	not exists x. (WhiteDog(x) & CuriouslyLookingAt(x, BlackLlama))	A black sheep is standing near three white dogs	exists x. exists y. exists z. (BlackSheep(x) & WhiteDog(y) & WhiteDog(z) & StandingNear(x, y) & StandingNear(x, z) & StandingNear(x, y))	n	False	False
3681	The black llama is curiously looking at the white dogs	exists x.exists y. (BlackLlama(x) & WhiteDog(y) -> CuriouslyLookingAt(x, y))	A black sheep is standing near three white dogs	exists x. exists y. exists z. (BlackSheep(x) & WhiteDog(y) & WhiteDog(z) & StandingNear(x, y) & StandingNear(x, z) & StandingNear(x, y))	n	False	False
3682	A grey dog is jumping toward a black and white dog in the soft snow	exists x.exists y. (GreyDog(x) & BlackAndWhiteDog(y) & SoftSnow(z) -> JumpsToward(x, y, z))	A grey dog is jumping toward a black and white dog in the snow	exists x.exists y. (GreyDog(x) & BlackAndWhiteDog(y) & Snow(z) -> JumpsToward(x, y, z))	e	False	False
3683	A grey dog is jumping toward a black and white dog in the snow	exists x.exists y. (GreyDog(x) & BlackAndWhiteDog(y) & Snow(z) -> JumpsToward(x, y, z))	A grey dog is jumping toward a black and white dog in the water	exists x.exists y. (GreyDog(x) & BlackAndWhiteDog(y) & Jumping(x, y) -> InWater(x, y))	n	False	False
3684	Two poodles are in the snow and one is jumping	exists x.exists y.exists z. (Poodle(x) & Poodle(y) & Poodle(z) & InSnow(x) & InSnow(y) & Jumping(z))	A grey dog is jumping toward a black and white dog in the snow	exists x.exists y. (GreyDog(x) & BlackAndWhiteDog(y) & Snow(z) -> JumpsToward(x, y, z))	n	False	False
3685	A grey dog is jumping toward a black and white dog in the snow	exists x.exists y. (GreyDog(x) & BlackAndWhiteDog(y) & Snow(z) -> JumpsToward(x, y, z))	Two poodles are in the snow and one is lying down	exists x.exists y.exists z. (Poodle(x) & Poodle(y) & Poodle(z) & InSnow(x) & InSnow(y) & LyingDown(z))	n	False	False
3686	The man surrounded by photographers is wearing a gray suit and glasses	exists x. (Man(x) & SurroundedByPhotographers(x) -> (WearsGraySuit(x) & WearsGlasses(x)))	The woman surrounded by photographers is wearing a gray suit and glasses	exists x. (Woman(x) & SurroundedByPhotographers(x) -> (WearsGraySuit(x) & WearsGlasses(x)))	n	False	False
3687	A man in a elegant dress is being surrounded by photographers	exists x. (Man(x) & ElegantDress(x) -> SurroundedByPhotographers(x))	A man in a suit is being surrounded by photographers	exists x. (Man(x) & InSuit(x) -> SurroundedByPhotographers(x))	n	False	False
3688	A man in a suit is not being surrounded by photographers	exists x. (Man(x) & InSuit(x) -> not SurroundedByPhotographers(x))	A man in a suit is being surrounded by photographers	exists x. (Man(x) & InSuit(x) -> SurroundedByPhotographers(x))	c	False	False
3689	A photographer is being surrounded by men	exists x. (Photographer(x) & SurroundedByMen(x))	The man surrounded by photographers is wearing a gray suit and glasses	exists x. (Man(x) & SurroundedByPhotographers(x) -> (WearsGraySuit(x) & WearsGlasses(x)))	n	False	False
3690	The man surrounded by photographers is wearing a gray suit and glasses	exists x. (Man(x) & SurroundedByPhotographers(x) -> (WearsGraySuit(x) & WearsGlasses(x)))	A man in a suit is being surrounded by photographers	exists x. (Man(x) & InSuit(x) -> SurroundedByPhotographers(x))	e	False	False
3691	Children in swimming suits are playing in the pool	exists x. (Child(x) & WearingSwimmingSuit(x) -> PlayingInPool(x))	Children in swimming suits are playing in the water	exists x. (Child(x) & WearingSwimmingSuit(x) -> PlayingInWater(x))	e	False	False
3692	The boys are wearing bathing suits and water is splashing around	exists x.exists y. (Boy(x) & BathingSuit(y) -> Wearing(x, y) & WaterSplashingAround(x))	The kids are wearing bathing suits and water is splashing around	exists x.exists y. (Kid(x) & BathingSuit(x) & Water(y) -> SplashesAround(y))	e	False	False
3693	The kids are wearing bathing suits and water is splashing around	exists x.exists y. (Kid(x) & BathingSuit(x) & Water(y) -> SplashesAround(y))	Children in swimming suits are playing in the water	exists x. (Child(x) & WearingSwimmingSuit(x) -> PlayingInWater(x))	n	False	False
3694	Boys are dangling from straps and kicking at each other	exists x.exists y.exists z. (Boy(x) & Strap(y) & Kick(z) -> (DanglesFrom(x, y) & KicksAt(x, z)))	People are dangling from straps and kicking at each other	exists x. exists y. (Person(x) & Person(y) -> (DanglesFromStraps(x) & KicksAt(x, y)))	e	False	False
3695	A blonde girl is hanging by gymnastic ropes	exists x. (BlondeGirl(x) -> HangingByGymnasticRopes(x))	A girl is hanging by gymnastic ropes	exists x. (Girl(x) & HangingByGymnasticRopes(x))	e	False	False
3696	A blonde girl is hanging by gymnastic ropes	exists x. (BlondeGirl(x) -> HangingByGymnasticRopes(x))	A blonde man is hanging by gymnastic ropes	exists x. (Man(x) & Blonde(x) & HangingByGymnasticRopes(x))	n	False	False
3697	A blonde girl is hanging by gymnastic ropes	exists x. (BlondeGirl(x) -> HangingByGymnasticRopes(x))	Boys are dangling from straps and kicking at each other	exists x.exists y.exists z. (Boy(x) & Strap(y) & Kick(z) -> (DanglesFrom(x, y) & KicksAt(x, z)))	n	False	False
3698	Nobody is dangling from straps and kicking at each other	not exists x. (DanglingFromStraps(x) & KickingAtEachOther(x))	A blonde girl is hanging by gymnastic ropes	exists x. (BlondeGirl(x) -> HangingByGymnasticRopes(x))	n	False	False
3699	People are dangling from straps and kicking at each other	exists x. exists y. (Person(x) & Person(y) -> (DanglesFromStraps(x) & KicksAt(x, y)))	A blonde girl is hanging by gymnastic ropes	exists x. (BlondeGirl(x) -> HangingByGymnasticRopes(x))	n	False	False
3700	A man dressed in black and white is holding up the tennis racket and is waiting for the ball	exists x. (Man(x) & DressedInBlack(x) & DressedInWhite(x) -> (HoldingTennisRacket(x) & WaitingForBall(x)))	A man dressed in black and white is dropping the tennis racket and is waiting for the ball	exists x. (Man(x) & DressedInBlackAndWhite(x) -> (DroppingTennisRacket(x) & WaitingForBall(x)))	c	False	False
3701	A tennis player in mid game is holding a racquet	exists x. (TennisPlayer(x) & MidGame(x) -> HoldsRacquet(x))	A tennis player in mid game is not holding a racquet	exists x. (TennisPlayer(x) & MidGame(x) -> not HoldingRacquet(x))	c	False	False
3702	A tennis player in mid game is not holding a racquet	exists x. (TennisPlayer(x) & MidGame(x) -> not HoldingRacquet(x))	A man dressed in black and white is holding up the tennis racket and is waiting for the ball	exists x. (Man(x) & DressedInBlack(x) & DressedInWhite(x) -> (HoldingTennisRacket(x) & WaitingForBall(x)))	n	False	False
3703	A tennis player in mid game is holding a racquet	exists x. (TennisPlayer(x) & MidGame(x) -> HoldsRacquet(x))	A player dressed in black and white is holding up the tennis racket and is waiting for the ball	exists x. (Player(x) & DressedInBlack(x) & DressedInWhite(x) -> (HoldingTennisRacket(x) & WaitingForBall(x)))	n	False	False
3704	A man dressed in black and white is dropping the tennis racket and is waiting for the ball	exists x. (Man(x) & DressedInBlackAndWhite(x) -> (DroppingTennisRacket(x) & WaitingForBall(x)))	A tennis player in mid game is holding a racquet	exists x. (TennisPlayer(x) & MidGame(x) -> HoldsRacquet(x))	n	False	False
3705	A dog is playing in the green field	exists x. exists y. (Dog(x) & GreenField(y) & PlayingIn(x, y))	A dog is playing on the green grass	exists x. (Dog(x) & PlayingOnGreenGrass(x))	e	False	False
3706	A dog is sleeping on the green grass	exists x. (Dog(x) & SleepingOn(x, greenGrass))	A dog is playing on the green grass	exists x. (Dog(x) & PlayingOnGreenGrass(x))	n	False	False
3707	A brown and white cat is playing on the grass	exists x. (Cat(x) & Brown(x) & White(x) -> PlayingOnGrass(x))	A brown and white dog is playing on the grass	exists x. (Dog(x) & Brown(x) & White(x) & PlayingOnGrass(x))	n	False	False
3708	A brown and white dog is playing on the lawn	exists x. (Dog(x) & Brown(x) & White(x) & PlayingOnLawn(x))	A dog is playing on the green grass	exists x. (Dog(x) & PlayingOnGreenGrass(x))	e	False	False
3709	A dog is sleeping on the green grass	exists x. (Dog(x) & SleepingOn(x, greenGrass))	A brown and white dog is playing on the grass	exists x. (Dog(x) & Brown(x) & White(x) & PlayingOnGrass(x))	n	False	False
3710	A brown and white dog is playing on the grass	exists x. (Dog(x) & Brown(x) & White(x) & PlayingOnGrass(x))	A dog is playing on the green grass	exists x. (Dog(x) & PlayingOnGreenGrass(x))	e	False	False
3711	A little boy with a bib is watching the camera	exists x.exists y. (LittleBoy(x) & Bib(x) & Camera(y) -> Watching(x, y))	A young boy with a bib is watching the camera	exists x. (YoungBoy(x) & HasBib(x) -> WatchingCamera(x))	e	False	False
3712	A little boy with a bib is not watching the camera	exists x. (LittleBoy(x) & HasBib(x) -> not WatchingCamera(x))	A tan skinned child is looking at the camera	exists x. (TanSkinnedChild(x) -> exists y. (Camera(y) & LookingAt(x, y)))	n	False	False
3713	A little boy with a bib is watching the camera	exists x.exists y. (LittleBoy(x) & Bib(x) & Camera(y) -> Watching(x, y))	A tan skinned kid is looking at the camera	exists x. (TanSkinnedKid(x) -> exists y. (Camera(y) & LookingAt(x, y)))	n	False	False
3714	There is no tan skinned child looking at the camera	not exists x. (Child(x) & TanSkinned(x) & LookingAtCamera(x))	A little boy with a bib is watching the camera	exists x.exists y. (LittleBoy(x) & Bib(x) & Camera(y) -> Watching(x, y))	n	False	False
3715	A tan skinned child is looking at the camera	exists x. (TanSkinnedChild(x) -> exists y. (Camera(y) & LookingAt(x, y)))	A little boy with a bib is watching the camera	exists x.exists y. (LittleBoy(x) & Bib(x) & Camera(y) -> Watching(x, y))	n	False	False
3716	The young boy in the blue shirt is jumping into the water	exists x. (YoungBoy(x) & BlueShirt(x) & JumpingIntoWater(x))	A young girl is jumping into a still lake	exists x. exists y. (YoungGirl(x) & Lake(y) & JumpsInto(x, y))	n	False	False
3717	A young boy is jumping into a still lake	exists x. exists y. exists z. (YoungBoy(x) & Lake(y) & Still(z) & JumpsInto(x, y, z))	A young boy in the blue shirt is jumping into the water	exists x.exists y. (YoungBoy(x) & BlueShirt(y) -> JumpingIntoWater(x, y))	n	False	False
3718	A young boy is jumping into a still lake	exists x. exists y. exists z. (YoungBoy(x) & Lake(y) & Still(z) & JumpsInto(x, y, z))	The young boy in the blue shirt is jumping into the water	exists x. (YoungBoy(x) & BlueShirt(x) & JumpingIntoWater(x))	n	False	False
3719	Two men are carrying colorful baskets and blankets and walking near a building	exists x. exists y. (Man(x) & Man(y) & CarryingColorfulBaskets(x) & CarryingColorfulBaskets(y) & WalkingNearBuilding(x) & WalkingNearBuilding(y))	Two people are carrying colorful baskets and blankets and walking near a building	exists x. exists y. (Person(x) & Person(y) & CarryingColorfulBaskets(x) & CarryingColorfulBaskets(y) & WalkingNearBuilding(x) & WalkingNearBuilding(y))	e	True	False
3720	Two people are walking with laden baskets and colorful blankets	exists x. exists y. (Person(x) & Person(y) & Walking(x) & Walking(y) & LadenBasket(x) & LadenBasket(y) & ColorfulBlanket(x) & ColorfulBlanket(y))	Two people are walking with laden baskets and blankets	exists x. exists y. (Person(x) & Person(y) & Walking(x) & Walking(y) & LadenBasket(x) & LadenBasket(y) & Blanket(x) & Blanket(y))	e	False	False
3721	Two people are carrying colorful baskets and blankets and walking near a building	exists x. exists y. (Person(x) & Person(y) & CarryingColorfulBaskets(x) & CarryingColorfulBaskets(y) & WalkingNearBuilding(x) & WalkingNearBuilding(y))	Two people are sitting with laden baskets and blankets	exists x. exists y. (Person(x) & Person(y) & SittingWith(x, y) & LadenBasket(x) & Blanket(y))	n	False	False
3722	Two men are carrying colorful baskets and blankets and walking near a building	exists x. exists y. (Man(x) & Man(y) & CarryingColorfulBaskets(x) & CarryingColorfulBaskets(y) & WalkingNearBuilding(x) & WalkingNearBuilding(y))	Two people are walking with laden baskets and blankets	exists x. exists y. (Person(x) & Person(y) & Walking(x) & Walking(y) & LadenBasket(x) & LadenBasket(y) & Blanket(x) & Blanket(y))	e	False	False
3723	Two people are carrying gray baskets and blankets and walking near a building	exists x. exists y. (Person(x) & Person(y) & CarryingGrayBasket(x) & CarryingGrayBasket(y) & CarryingBlanket(x) & CarryingBlanket(y) & WalkingNearBuilding(x) & WalkingNearBuilding(y))	Two people are walking with laden baskets and blankets	exists x. exists y. (Person(x) & Person(y) & Walking(x) & Walking(y) & LadenBasket(x) & LadenBasket(y) & Blanket(x) & Blanket(y))	n	False	False
3724	Two people are carrying colorful baskets and blankets and walking near a building	exists x. exists y. (Person(x) & Person(y) & CarryingColorfulBaskets(x) & CarryingColorfulBaskets(y) & WalkingNearBuilding(x) & WalkingNearBuilding(y))	Two people are walking with laden baskets and blankets	exists x. exists y. (Person(x) & Person(y) & Walking(x) & Walking(y) & LadenBasket(x) & LadenBasket(y) & Blanket(x) & Blanket(y))	e	False	False
3725	A young girl is sitting in swimming gear	exists x. (YoungGirl(x) & Sitting(x) & WearingSwimmingGear(x))	A young man is sitting in swimming gear	exists x. (YoungMan(x) & Sitting(x) & WearingSwimmingGear(x))	n	False	False
3726	A young girl is sitting in a swimsuit	exists x. (YoungGirl(x) & SittingInSwimsuit(x))	A young girl is wearing a blue patterned swim suit, a black and yellow swim cap and has blue swimming goggles on her head	exists x. (YoungGirl(x) & WearingBluePatternedSwimSuit(x) & WearingBlackAndYellowSwimCap(x) & WearingBlueSwimmingGoggles(x))	n	False	False
3727	A young man is sitting in swimming gear	exists x. (YoungMan(x) & Sitting(x) & WearingSwimmingGear(x))	A young girl is wearing a blue patterned swim suit, a black and yellow swim cap and has blue swimming goggles on her head	exists x. (YoungGirl(x) & WearingBluePatternedSwimSuit(x) & WearingBlackAndYellowSwimCap(x) & WearingBlueSwimmingGoggles(x))	n	False	False
3728	A young girl is sitting in swimming gear	exists x. (YoungGirl(x) & Sitting(x) & WearingSwimmingGear(x))	A young girl is wearing a blue patterned swim suit, a black and yellow swim cap and has blue swimming goggles on her head	exists x. (YoungGirl(x) & WearingBluePatternedSwimSuit(x) & WearingBlackAndYellowSwimCap(x) & WearingBlueSwimmingGoggles(x))	n	False	False
3729	A brown dog is running through a snowy path	exists x. (BrownDog(x) -> exists y. (SnowyPath(y) & RunningThrough(x, y)))	A brown dog is running through a snowy trail	exists x.exists y. (BrownDog(x) & SnowyTrail(y) -> RunningThrough(x, y))	e	True	False
3730	A brown dog is running through a snowy trail	exists x.exists y. (BrownDog(x) & SnowyTrail(y) -> RunningThrough(x, y))	A dog is running on a snowy road	exists x. exists y. (Dog(x) & SnowyRoad(y) & RunningOn(x, y))	n	False	False
3731	Two children in white outfits and red protective gear are sitting on a mat	exists x. exists y. (Child(x) & Child(y) & WhiteOutfit(x) & WhiteOutfit(y) & RedProtectiveGear(x) & RedProtectiveGear(y) & SittingOnMat(x, y))	Two children in white outfits and red protective gear are sparring on a mat	exists x. exists y. (Child(x) & Child(y) & WhiteOutfit(x) & WhiteOutfit(y) & RedProtectiveGear(x) & RedProtectiveGear(y) & SparringOnMat(x, y))	n	False	False
3732	Two boys are doing martial arts on a blue mat	exists x.exists y.exists z. (Boy(x) & Boy(y) & MartialArts(z) & BlueMat(m) & Doing(x, z, m) & Doing(y, z, m))	Two kids are doing martial arts on a blue mat	exists x. exists y. (Kid(x) & Kid(y) & MartialArts(x) & MartialArts(y) & BlueMat(x) & BlueMat(y))	e	False	False
3733	Two boys are doing martial arts on a green mat	exists x. exists y. (Boy(x) & Boy(y) & MartialArts(x) & MartialArts(y) & GreenMat(x) & GreenMat(y))	Two children in white outfits and red protective gear are sparring on a mat	exists x. exists y. (Child(x) & Child(y) & WhiteOutfit(x) & WhiteOutfit(y) & RedProtectiveGear(x) & RedProtectiveGear(y) & SparringOnMat(x, y))	n	False	False
3734	Two boys are doing martial arts on a blue mat	exists x.exists y.exists z. (Boy(x) & Boy(y) & MartialArts(z) & BlueMat(m) & Doing(x, z, m) & Doing(y, z, m))	Two children in white outfits and red protective gear are sitting on a mat	exists x. exists y. (Child(x) & Child(y) & WhiteOutfit(x) & WhiteOutfit(y) & RedProtectiveGear(x) & RedProtectiveGear(y) & SittingOnMat(x, y))	n	False	False
3735	Two boys are doing martial arts on a blue mat	exists x.exists y.exists z. (Boy(x) & Boy(y) & MartialArts(z) & BlueMat(m) & Doing(x, z, m) & Doing(y, z, m))	Two children in white outfits and red protective gear are sparring on a mat	exists x. exists y. (Child(x) & Child(y) & WhiteOutfit(x) & WhiteOutfit(y) & RedProtectiveGear(x) & RedProtectiveGear(y) & SparringOnMat(x, y))	n	False	False
3736	A black and white dog is playing with a tattered volleyball in a brown field	exists x. exists y. exists z. (Dog(x) & Dog(y) & Volleyball(z) & BlackAndWhite(x) & BlackAndWhite(y) & Tattered(z) & BrownField(w) -> PlayingWith(x, y, z, w))	A black and white dog is playing with a frisbee in a brown field	exists x.exists y.exists z. (Dog(x) & Frisbee(y) & BrownField(z) -> PlaysWith(x, y, z))	n	False	False
3737	A black and white dog is playing with a new volleyball	exists x.exists y. (Dog(x) & Volleyball(y) & BlackAndWhite(x) -> PlaysWith(x, y))	A black and white dog is playing with a broken volleyball	exists x. exists y. exists z. (Dog(x) & Dog(y) & Volleyball(z) & BlackAndWhite(x) & Broken(z) & PlayingWith(x, z))	n	False	False
3738	A black and white dog is playing with a tattered volleyball in a brown field	exists x. exists y. exists z. (Dog(x) & Dog(y) & Volleyball(z) & BlackAndWhite(x) & BlackAndWhite(y) & Tattered(z) & BrownField(w) -> PlayingWith(x, y, z, w))	A black and white dog is playing with a new volleyball	exists x.exists y. (Dog(x) & Volleyball(y) & BlackAndWhite(x) -> PlaysWith(x, y))	n	False	False
3739	A black and white dog is playing with a ruined volleyball in a brown field	exists x.exists y.exists z. (Dog(x) & Volleyball(y) & BrownField(z) & BlackAndWhite(x) & Ruined(y) & In(y, z) -> PlayingWith(x, y))	A black and white dog is playing with a broken volleyball	exists x. exists y. exists z. (Dog(x) & Dog(y) & Volleyball(z) & BlackAndWhite(x) & Broken(z) & PlayingWith(x, z))	e	False	False
3740	A bike is ridden on the road by a young boy in a helmet 	exists x.exists y.exists z. (Bike(x) & Road(y) & YoungBoy(z) & RidesOn(z, x, y) -> WearsHelmet(z))	The little boy is riding a bicycle in a race	exists x.exists y. (LittleBoy(x) & Bicycle(y) & Riding(x, y) & Race(z) & ParticipatingIn(x, z))	n	False	False
3741	The little boy is riding a bicycle in a race	exists x.exists y. (LittleBoy(x) & Bicycle(y) & Riding(x, y) & Race(z) & ParticipatingIn(x, z))	A young boy in a helmet is riding a bike on the lawn	exists x.exists y.exists z. (YoungBoy(x) & Helmet(y) & Bike(z) & Wears(x, y) & Riding(x, z) -> OnLawn(x, z))	n	False	False
3742	A young boy in a helmet is riding a bike on the road	exists x.exists y.exists z. (YoungBoy(x) & Helmet(y) & Bike(z) & Wears(x, y) & Riding(x, z) -> OnRoad(x, z))	The little boy is riding a bicycle in a race	exists x.exists y. (LittleBoy(x) & Bicycle(y) & Riding(x, y) & Race(z) & ParticipatingIn(x, z))	n	False	False
3743	Mud is covering a topless woman	exists x.exists y. (Mud(x) & Woman(y) & Topless(y) -> CoveredBy(x, y))	A topless woman is being covered in mud	exists x. (ToplessWoman(x) -> CoveredInMud(x))	e	False	False
3744	A topless woman is being covered in mud	exists x. (ToplessWoman(x) -> CoveredInMud(x))	There is no topless woman covered in mud	not exists x. (Woman(x) & Topless(x) & CoveredInMud(x))	c	False	False
3745	A topless woman is being smeared with a brown substance and a blurry crowd is in the background	exists x.exists y. (ToplessWoman(x) & BrownSubstance(y) -> SmearedWith(x, y)) & (BlurryCrowd(x) & Background(x))	A woman is being smeared with brown substance and a blurry crowd is in the background	exists x. (Woman(x) & exists y. (BrownSubstance(y) & SmearedWith(x, y))) & exists z. (Crowd(z) & Blurry(z) & InBackground(z))	e	False	False
3746	A topless woman is being smeared with a brown substance and a blurry crowd is in the background	exists x.exists y. (ToplessWoman(x) & BrownSubstance(y) -> SmearedWith(x, y)) & (BlurryCrowd(x) & Background(x))	A topless woman is being smeared with brown substance and a nobody is in the background	exists x. exists y. (ToplessWoman(x) & BrownSubstance(y) & SmearedWith(x, y) & Nobody(z) & InBackground(z))	c	False	False
3747	Mud is covering a topless woman	exists x.exists y. (Mud(x) & Woman(y) & Topless(y) -> CoveredBy(x, y))	A topless woman is being smeared with a brown substance and a blurry crowd is in the background	exists x.exists y. (ToplessWoman(x) & BrownSubstance(y) -> SmearedWith(x, y)) & (BlurryCrowd(x) & Background(x))	n	False	False
3748	There is no topless woman covered in mud	not exists x. (Woman(x) & Topless(x) & CoveredInMud(x))	A topless woman is being smeared with a brown substance and a blurry crowd is in the background	exists x.exists y. (ToplessWoman(x) & BrownSubstance(y) -> SmearedWith(x, y)) & (BlurryCrowd(x) & Background(x))	n	False	False
3749	A family is purchasing something at the vending machine	exists x. exists y. exists z. (Family(x) & VendingMachine(y) & Purchase(z) & PurchasesAt(z, y) & BelongsTo(z, x))	A family is buying something at the vending machine	exists x. exists y. exists z. (Family(x) & VendingMachine(y) & (Buying(x, z) & Something(z)))	e	False	False
3750	A family is buying something at the vending machine	exists x. exists y. exists z. (Family(x) & VendingMachine(y) & (Buying(x, z) & Something(z)))	Two kids and a man are playing games at an arcade	exists x.exists y.exists z. (Kid(x) & Kid(y) & Man(z) & PlayingGamesAtArcade(x, y, z))	n	False	False
3751	Two kids and a man are playing games at an arcade	exists x.exists y.exists z. (Kid(x) & Kid(y) & Man(z) & PlayingGamesAtArcade(x, y, z))	A family is not purchasing something at a vending machine	exists x. (Family(x) -> not PurchasingAtVendingMachine(x))	n	False	False
3752	A family is purchasing something at the vending machine	exists x. exists y. exists z. (Family(x) & VendingMachine(y) & Purchase(z) & PurchasesAt(z, y) & BelongsTo(z, x))	Two boys and a man are playing games at an arcade	exists x.exists y.exists z. (Boy(x) & Boy(y) & Man(z) & PlayingGamesAtArcade(x, y, z))	n	False	False
3753	A family is purchasing something at the vending machine	exists x. exists y. exists z. (Family(x) & VendingMachine(y) & Purchase(z) & PurchasesAt(z, y) & BelongsTo(z, x))	Two kids and a woman are playing games at an arcade	exists x.exists y.exists z. (Kid(x) & Kid(y) & Woman(z) & PlayingGamesAtArcade(x, y, z))	n	False	False
3754	Two kids and a man are playing games at an arcade	exists x.exists y.exists z. (Kid(x) & Kid(y) & Man(z) & PlayingGamesAtArcade(x, y, z))	A family is purchasing something at the vending machine	exists x. exists y. exists z. (Family(x) & VendingMachine(y) & Purchase(z) & PurchasesAt(z, y) & BelongsTo(z, x))	n	False	False
3755	A female cheerleader is sitting on the knee of a male cheerleader	exists x.exists y. (FemaleCheerleader(x) & MaleCheerleader(y) -> SittingOnKnee(x, y))	A female cheerleader is sitting on the knee of a man	exists x.exists y. (FemaleCheerleader(x) & Man(y) -> SittingOnKnee(x, y))	e	False	False
3756	Some cheerleaders are dancing	exists x. (Cheerleader(x) & Dancing(x))	A female cheerleader is sitting on the knee of a male cheerleader	exists x.exists y. (FemaleCheerleader(x) & MaleCheerleader(y) -> SittingOnKnee(x, y))	n	False	False
3757	A female cheerleader is jumping on the knee of a male cheerleader	exists x.exists y. (FemaleCheerleader(x) & MaleCheerleader(y) -> JumpsOnKnee(x, y))	Some cheerleaders are taking a break	exists x. (Cheerleader(x) & TakingBreak(x))	n	False	False
3758	A group of people is holding food and pointing at the camera	exists x. (Group(x) -> (HoldingFood(x) & PointingAtCamera(x)))	A group of people is holding drinks and pointing at the camera	exists x. (Group(x) -> (HoldingDrinks(x) & PointingAtCamera(x)))	n	False	False
3759	Several old people are posing for a photo and holding beers	exists x.exists y.exists z. (OldPerson(x) & OldPerson(y) & OldPerson(z) & PosingForPhoto(x, y, z) & HoldingBeers(x, y, z))	A group of people is holding drinks and pointing at the camera	exists x. (Group(x) -> (HoldingDrinks(x) & PointingAtCamera(x)))	n	False	False
3760	Several young people are posing for a photo and holding beers	exists x. exists y. exists z. (YoungPerson(x) & YoungPerson(y) & YoungPerson(z) & PosingForPhoto(x, y, z) & HoldingBeers(x, y, z))	Drinks are being held by people pointing at the camera	exists x.exists y. (Drink(x) & Person(y) & PointsAtCamera(y) -> Holds(y, x))	n	False	False
3761	Several young people are posing for a photo and holding beers	exists x. exists y. exists z. (YoungPerson(x) & YoungPerson(y) & YoungPerson(z) & PosingForPhoto(x, y, z) & HoldingBeers(x, y, z))	A group of people is holding drinks and pointing at the camera	exists x. (Group(x) -> (HoldingDrinks(x) & PointingAtCamera(x)))	n	False	False
3762	The girl has red hair and eyebrows, several piercings in a ear and a tattoo on the back	exists x. (Girl(x) -> (RedHair(x) & RedEyebrows(x) & PiercingsInEar(x) & TattooOnBack(x)))	The girl has red hair and eyebrows, several piercings in a ear and no tattoo on the back	exists x. (Girl(x) -> (RedHair(x) & RedEyebrows(x) & PiercingsInEar(x) & not TattooOnBack(x)))	c	False	False
3763	The girl has red hair and eyebrows, several piercings in a ear and a drawing on the back	exists x. (Girl(x) -> (RedHair(x) & RedEyebrows(x) & PiercingsInEar(x) & DrawingOnBack(x)))	A girl with red hair and red eyebrows is in midspeech	exists x. (Girl(x) & RedHair(x) & RedEyebrows(x) -> Midspeech(x))	n	False	False
3764	The girl has red hair and eyebrows, several piercings in a ear and a tattoo on the back	exists x. (Girl(x) -> (RedHair(x) & RedEyebrows(x) & PiercingsInEar(x) & TattooOnBack(x)))	A girl with red hair and red eyebrows is talking	exists x. (Girl(x) & RedHair(x) & RedEyebrows(x) -> Talking(x))	n	False	False
3765	A girl with red hair and red eyebrows is in midspeech	exists x. (Girl(x) & RedHair(x) & RedEyebrows(x) -> Midspeech(x))	The girl has red hair and eyebrows, several piercings in a ear and a tattoo on the back	exists x. (Girl(x) -> (RedHair(x) & RedEyebrows(x) & PiercingsInEar(x) & TattooOnBack(x)))	n	False	False
3766	A woman in blue has a yellow ball in the mitt	exists x. (Woman(x) & Blue(x) -> exists y. (Ball(y) & Yellow(y) & InMitt(x, y)))	A man in blue has a yellow ball in the mitt	exists x. (Man(x) & Blue(x) -> exists y. (YellowBall(y) & HasInMitt(x, y)))	n	False	False
3767	The girl in blue is chasing the base runner with a number on the jersey	exists x.exists y. (Girl(x) & Blue(x) & BaseRunner(y) & NumberOnJersey(y) -> Chasing(x, y))	The man in blue is chasing the base runner with a number on the jersey	exists x.exists y. (Man(x) & Blue(x) & BaseRunner(y) & WearsNumber(y) -> Chasing(x, y))	n	False	False
3768	The girl in blue is chasing the player with a number on the jersey	exists x.exists y. (Girl(x) & Blue(x) & Player(y) & NumberOnJersey(y) -> Chasing(x, y))	A woman in blue has a yellow ball in the mitt	exists x. (Woman(x) & Blue(x) -> exists y. (Ball(y) & Yellow(y) & InMitt(x, y)))	n	False	False
3769	A woman in blue has a yellow ball in the mitt	exists x. (Woman(x) & Blue(x) -> exists y. (Ball(y) & Yellow(y) & InMitt(x, y)))	The man in blue is chasing the base runner with a number on the jersey	exists x.exists y. (Man(x) & Blue(x) & BaseRunner(y) & WearsNumber(y) -> Chasing(x, y))	n	False	False
3770	A woman in blue has a yellow ball in the hand	exists x. (Woman(x) & Blue(x) -> exists y. (Ball(y) & Yellow(y) & InHand(x, y)))	The girl in blue is chasing the base runner with a number on the jersey	exists x.exists y. (Girl(x) & Blue(x) & BaseRunner(y) & NumberOnJersey(y) -> Chasing(x, y))	n	False	False
3771	The girl in blue is chasing the base runner with a number on the jersey	exists x.exists y. (Girl(x) & Blue(x) & BaseRunner(y) & NumberOnJersey(y) -> Chasing(x, y))	A woman in blue has a yellow ball in the mitt	exists x. (Woman(x) & Blue(x) -> exists y. (Ball(y) & Yellow(y) & InMitt(x, y)))	n	False	False
3772	The young man is rock climbing	exists x. (YoungMan(x) & RockClimbing(x))	The man is rock climbing	exists x. (Man(x) & RockClimbing(x))	e	False	False
3773	A man in a purple hat is climbing a rocky wall with bare hands	exists x.exists y.exists z. (Man(x) & PurpleHat(x) & RockyWall(y) & BareHands(z) -> Climbing(x, y, z))	The man is rock climbing	exists x. (Man(x) & RockClimbing(x))	e	False	False
3774	Two people are driving a jeep and a lady is sitting on the top of it	exists x. exists y. exists z. (Person(x) & Person(y) & Jeep(z) & Driving(x, z) & Driving(y, z) & Lady(z) & SittingOnTop(z))	Two people are driving a boat and a lady is sitting on the top of it	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & DrivingBoat(x, y) & SittingOnBoat(z))	n	False	False
3775	A blond woman is sitting on the roof of a yellow vehicle and two people are inside	exists x. exists y. exists z. (Blond(x) & Woman(x) & YellowVehicle(y) & Roof(y, x) & exists w. exists u. (Person(w) & Person(u) & Inside(w, y) & Inside(u, y)))	A blond woman is sitting on the roof of a yellow vehicle and two people are outside	exists x.exists y.exists z. (Blond(x) & Woman(x) & YellowVehicle(y) & Roof(y, x) & Outside(z) -> (Person(z) & not InVehicle(z, y)))	n	False	False
3776	A woman with blond hair is sitting on the roof of a yellow vehicle and two people are inside	exists x.exists y.exists z. (Woman(x) & BlondHair(x) & YellowVehicle(y) & Roof(z) & SittingOn(x, z) & TwoPeopleInside(y) -> WomanOnRoof(x, y))	Two people are driving a jeep and a lady is sitting on the top of it	exists x. exists y. exists z. (Person(x) & Person(y) & Jeep(z) & Driving(x, z) & Driving(y, z) & Lady(z) & SittingOnTop(z))	n	False	False
3777	Two people are driving a jeep and a girl is sitting on the top of it	exists x. exists y. exists z. (Person(x) & Person(y) & Jeep(z) & Driving(x, z) & Driving(y, z) & Girl(z) & SittingOnTop(z))	A blond woman is sitting on the roof of a yellow vehicle and two people are inside	exists x. exists y. exists z. (Blond(x) & Woman(x) & YellowVehicle(y) & Roof(y, x) & exists w. exists u. (Person(w) & Person(u) & Inside(w, y) & Inside(u, y)))	n	False	False
3778	Two people are driving a boat and a lady is sitting on the top of it	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & DrivingBoat(x, y) & SittingOnBoat(z))	A blond woman is sitting on the roof of a yellow vehicle and two people are inside	exists x. exists y. exists z. (Blond(x) & Woman(x) & YellowVehicle(y) & Roof(y, x) & exists w. exists u. (Person(w) & Person(u) & Inside(w, y) & Inside(u, y)))	n	False	False
3779	A blond woman is sitting on the roof of a yellow vehicle and two people are inside	exists x. exists y. exists z. (Blond(x) & Woman(x) & YellowVehicle(y) & Roof(y, x) & exists w. exists u. (Person(w) & Person(u) & Inside(w, y) & Inside(u, y)))	Two people are driving a jeep and a lady is sitting on the top of it	exists x. exists y. exists z. (Person(x) & Person(y) & Jeep(z) & Driving(x, z) & Driving(y, z) & Lady(z) & SittingOnTop(z))	n	False	False
3780	A large brown dog is jumping over a red hurdle	exists x. exists y. (LargeBrownDog(x) & RedHurdle(y) & JumpsOver(x, y))	A red hurdle is being jumped by a large brown dog	exists x. exists y. (RedHurdle(x) & LargeBrownDog(y) & Jumps(y, x))	e	False	False
3781	A brown and white dog is jumping over a red, yellow and white barrier	exists x. exists y. exists z. (Dog(x) & Barrier(y) & Colour(z) & Brown(x) & White(x) & Red(z) & Yellow(z) & White(z) -> JumpsOver(x, y))	A brown and white dog is jumping over a red, yellow and white hurdle	exists x.exists y. (BrownAndWhiteDog(x) & RedYellowAndWhiteHurdle(y) -> JumpsOver(x, y))	e	False	False
3782	A large brown dog is jumping over a red hurdle	exists x. exists y. (LargeBrownDog(x) & RedHurdle(y) & JumpsOver(x, y))	A brown and white dog is jumping over a red, yellow and white barrier	exists x. exists y. exists z. (Dog(x) & Barrier(y) & Colour(z) & Brown(x) & White(x) & Red(z) & Yellow(z) & White(z) -> JumpsOver(x, y))	n	True	False
3783	A red hurdle is being jumped by a large brown dog	exists x. exists y. (RedHurdle(x) & LargeBrownDog(y) & Jumps(y, x))	A brown and white dog is jumping over a red, yellow and white hurdle	exists x.exists y. (BrownAndWhiteDog(x) & RedYellowAndWhiteHurdle(y) -> JumpsOver(x, y))	n	False	False
3784	The yellow dog is drinking water from a bottle	exists x. (YellowDog(x) -> DrinkingWaterFromBottle(x))	The yellow dog is drinking water from a container	exists x.exists y. (YellowDog(x) & Container(y) -> DrinksWaterFrom(x, y))	e	False	False
3785	The yellow dog is drinking water from a bottle	exists x. (YellowDog(x) -> DrinkingWaterFromBottle(x))	The yellow dog is drinking water from a pot	exists x.exists y. (YellowDog(x) & Pot(y) -> DrinksWaterFrom(x, y))	c	False	False
3786	A yellow dog is drinking water from the faucet	exists x. (Dog(x) & Yellow(x) -> DrinkingWaterFromFaucet(x))	 water from the faucet is being drunk by a yellow dog	exists x.exists y. (Faucet(x) & Water(y) & From(y, x) -> Drinks(y, y))	e	False	False
3787	 water from the faucet is being drunk by a yellow dog	exists x.exists y. (Faucet(x) & Water(y) & From(y, x) -> Drinks(y, y))	The yellow dog is drinking water from a bottle	exists x. (YellowDog(x) -> DrinkingWaterFromBottle(x))	n	False	False
3788	A yellow dog is drinking water from the faucet	exists x. (Dog(x) & Yellow(x) -> DrinkingWaterFromFaucet(x))	The yellow dog is drinking water from a pot	exists x.exists y. (YellowDog(x) & Pot(y) -> DrinksWaterFrom(x, y))	n	False	False
3789	The adults and children are being gathered near an outdoor seating arrangement	exists x. exists y. (Adult(x) & Child(y) -> GatheredNearOutdoorSeatingArrangement(x, y))	Adults and children are standing and playing in front of steps near a desert area	exists x. exists y. exists z. (Adult(x) & Child(y) & Step(z) & NearDesertArea(z) -> (StandingInFrontOf(x, z) & PlayingInFrontOf(y, z)))	n	False	False
3790	Adults and children standing and playing in front of steps near a wooded area	exists x.exists y.exists z. (Adult(x) & Child(y) & Step(z) & WoodedArea(w) & Near(z, w) -> (Standing(x, y, z) & Playing(x, y, z)))	The adults and children are being gathered near an outdoor seating arrangement	exists x. exists y. (Adult(x) & Child(y) -> GatheredNearOutdoorSeatingArrangement(x, y))	n	False	False
3791	A woman is looking down and is wearing a wedding veil	exists x. (Woman(x) & LookingDown(x) & WearingWeddingVeil(x))	A boy is looking down and wearing a wedding veil	exists x. (Boy(x) & LookingDown(x) & WearingWeddingVeil(x))	n	False	False
3792	A woman is looking down and is wearing a wedding dress	exists x. (Woman(x) & LookingDown(x) & WearingWeddingDress(x))	A bride with a white veil is looking down	exists x. (Bride(x) & WearsWhiteVeil(x) -> LooksDown(x))	n	False	False
3793	A bride with a white veil is looking down	exists x. (Bride(x) & WearsWhiteVeil(x) -> LooksDown(x))	A boy is looking down and wearing a wedding veil	exists x. (Boy(x) & LookingDown(x) & WearingWeddingVeil(x))	n	False	False
3794	A bride with a white dress is looking down	exists x. (Bride(x) & WearsWhiteDress(x) -> LooksDown(x))	A woman is looking down and is wearing a wedding veil	exists x. (Woman(x) & LookingDown(x) & WearingWeddingVeil(x))	n	False	False
3795	A bride with a white veil is looking down	exists x. (Bride(x) & WearsWhiteVeil(x) -> LooksDown(x))	A woman is looking down and is wearing a wedding veil	exists x. (Woman(x) & LookingDown(x) & WearingWeddingVeil(x))	n	False	False
3796	A young girl is standing in a group and is wearing a black shirt and pink beads	exists x. (YoungGirl(x) & StandingInGroup(x) & WearingBlackShirt(x) & WearingPinkBeads(x))	A girl is standing in a group and is wearing a black shirt and pink beads	exists x. (Girl(x) & StandingInGroup(x) & WearingBlackShirt(x) & WearingPinkBeads(x))	e	False	False
3797	A girl is standing in a group and is wearing a black shirt and pink beads	exists x. (Girl(x) & StandingInGroup(x) & WearingBlackShirt(x) & WearingPinkBeads(x))	A girl is standing alone and wears a black shirt and pink beads	exists x. (Girl(x) & StandingAlone(x) & WearsBlackShirt(x) & WearsPinkBeads(x))	n	False	False
3798	A girl has black and orange patches on the cheeks	exists x. (Girl(x) -> HasBlackPatchesOnCheeks(x) & HasOrangePatchesOnCheeks(x))	A young girl is standing in a group and is wearing a black shirt and pink beads	exists x. (YoungGirl(x) & StandingInGroup(x) & WearingBlackShirt(x) & WearingPinkBeads(x))	n	False	False
3799	Two large dogs are frolicking in a grassy field	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & Frolicking(x, y) & GrassyField(x, y))	Two large dogs are frolicking in a parking lot	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & Frolicking(x, y) & ParkingLot(x, y))	n	False	False
3800	Two large dogs are frolicking in a grassy field	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & Frolicking(x, y) & GrassyField(x, y))	Two animals are running through high grass	exists x. exists y. (Animal(x) & Animal(y) & RunningThroughHighGrass(x) & RunningThroughHighGrass(y))	n	False	False
3801	Two large dogs are frolicking in a grassy field	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & Frolicking(x, y) & GrassyField(x, y))	Two dogs are running through water	exists x. exists y. (Dog(x) & Dog(y) & RunningThroughWater(x) & RunningThroughWater(y))	n	False	False
3802	Two large dogs are frolicking in a parking lot	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & Frolicking(x, y) & ParkingLot(x, y))	Two dogs are running through high grass	exists x. exists y. (Dog(x) & Dog(y) & RunningThroughHighGrass(x) & RunningThroughHighGrass(y))	n	False	False
3803	A black dog is running across a rocky landscape	exists x.exists y. (BlackDog(x) & RockyLandscape(y) -> RunsAcross(x, y))	A dog is running across a rocky landscape	exists x. exists y. (Dog(x) & RockyLandscape(y) & RunningAcross(x, y))	e	False	False
3804	A black dog is walking along rocky terrain	exists x. (BlackDog(x) -> WalksAlongRockyTerrain(x))	A black cat is walking along rocky terrain	exists x. (BlackCat(x) -> WalksAlongRockyTerrain(x))	n	False	False
3805	A black dog is running across a rocky landscape	exists x.exists y. (BlackDog(x) & RockyLandscape(y) -> RunsAcross(x, y))	A black cat is walking along rocky terrain	exists x. (BlackCat(x) -> WalksAlongRockyTerrain(x))	n	False	False
3806	A dog is running across a rocky landscape	exists x. exists y. (Dog(x) & RockyLandscape(y) & RunningAcross(x, y))	A black dog is walking along rocky terrain	exists x. (BlackDog(x) -> WalksAlongRockyTerrain(x))	n	False	False
3807	A black dog is running across a rocky landscape	exists x.exists y. (BlackDog(x) & RockyLandscape(y) -> RunsAcross(x, y))	A black dog is walking along rocky terrain	exists x. (BlackDog(x) -> WalksAlongRockyTerrain(x))	n	False	False
3808	Three dogs are resting on a sidewalk	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnSidewalk(x) & RestingOnSidewalk(y) & RestingOnSidewalk(z))	Three dogs are resting on the pavement	exists x. exists y. exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnPavement(x) & RestingOnPavement(y) & RestingOnPavement(z))	e	False	False
3809	Three dogs are resting on a couch	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnCouch(x) & RestingOnCouch(y) & RestingOnCouch(z))	Three dogs are resting on a sidewalk	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnSidewalk(x) & RestingOnSidewalk(y) & RestingOnSidewalk(z))	n	False	False
3810	Three small dogs are sniffing at something	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & Small(x) & Small(y) & Small(z) & Sniffing(x) & Sniffing(y) & Sniffing(z))	Three dogs are resting on the pavement	exists x. exists y. exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnPavement(x) & RestingOnPavement(y) & RestingOnPavement(z))	n	False	False
3811	Three small dogs are sniffing at something	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & Small(x) & Small(y) & Small(z) & Sniffing(x) & Sniffing(y) & Sniffing(z))	Three dogs are resting on a couch	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnCouch(x) & RestingOnCouch(y) & RestingOnCouch(z))	n	False	False
3812	Three dogs are resting on a sidewalk	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnSidewalk(x) & RestingOnSidewalk(y) & RestingOnSidewalk(z))	Three dogs are sniffing at something	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & Sniffing(x, y, z))	n	False	False
3813	Three small cats is sniffing at something	exists x.exists y.exists z. (SmallCat(x) & SmallCat(y) & SmallCat(z) & Sniffing(x, y, z))	Three dogs are resting on a sidewalk	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnSidewalk(x) & RestingOnSidewalk(y) & RestingOnSidewalk(z))	n	False	False
3814	Three dogs are resting on a sidewalk	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & RestingOnSidewalk(x) & RestingOnSidewalk(y) & RestingOnSidewalk(z))	Three small dogs are sniffing at something	exists x.exists y.exists z. (Dog(x) & Dog(y) & Dog(z) & Small(x) & Small(y) & Small(z) & Sniffing(x) & Sniffing(y) & Sniffing(z))	n	False	False
3815	A young man is getting a motocross bike up a dirt hill	exists x. exists y. exists z. (YoungMan(x) & MotocrossBike(y) & DirtHill(z) -> GetsUp(x, y, z))	A young man is pushing a motocross bike up a dirt hill	exists x.exists y.exists z. (YoungMan(x) & MotocrossBike(y) & DirtHill(z) -> PushingUp(x, y, z))	e	False	False
3816	A young man is pushing a motocross bike up a dirt hill	exists x.exists y.exists z. (YoungMan(x) & MotocrossBike(y) & DirtHill(z) -> PushingUp(x, y, z))	A young man is pushing a motocross bike down a dirt hill	exists x.exists y.exists z. (YoungMan(x) & MotocrossBike(y) & DirtHill(z) -> Pushing(x, y, z))	n	False	False
3817	Some young dirt bikers are getting a dirt bike up a sandy hill	exists x.exists y.exists z. (YoungDirtBiker(x) & DirtBike(y) & SandyHill(z) & GetsUp(x, y, z))	A young man is getting a motocross bike up a dirt hill	exists x. exists y. exists z. (YoungMan(x) & MotocrossBike(y) & DirtHill(z) -> GetsUp(x, y, z))	n	True	False
3818	Some young dirt bikers are getting a dirt bike up a sandy hill	exists x.exists y.exists z. (YoungDirtBiker(x) & DirtBike(y) & SandyHill(z) & GetsUp(x, y, z))	A young man is pushing a motocross bike up a dirt hill	exists x.exists y.exists z. (YoungMan(x) & MotocrossBike(y) & DirtHill(z) -> PushingUp(x, y, z))	n	False	False
3819	An older man and a woman are riding bikes on the boardwalk near the ocean	exists x. exists y. (OlderMan(x) & Woman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearOcean(x, y))	An older man and a woman are riding bikes on the boardwalk near the water	exists x. exists y. (OlderMan(x) & OlderWoman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearWater(x, y))	e	False	False
3820	A young man and a woman are riding bikes on the boardwalk near the ocean	exists x. exists y. (YoungMan(x) & Woman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearOcean(x, y))	An older man and a woman are riding bikes on the boardwalk near the ocean	exists x. exists y. (OlderMan(x) & Woman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearOcean(x, y))	n	False	False
3821	An older man and a woman are riding bikes on the boardwalk near the water	exists x. exists y. (OlderMan(x) & OlderWoman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearWater(x, y))	A middle aged man and woman are riding bikes down a road beside the water	exists x.exists y.exists z. (MiddleAgedMan(x) & MiddleAgedWoman(y) & Bike(z) -> Riding(x, y, z, DownRoadBesideWater))	e	False	False
3822	A middle aged man and woman are riding bikes down a road near the water	exists x.exists y.exists z. (MiddleAgedMan(x) & MiddleAgedWoman(y) & Bike(z) & Road(w) & NearWater(w) -> Riding(x, y, z, w))	An older man and a woman are riding bikes on the boardwalk near the ocean	exists x. exists y. (OlderMan(x) & Woman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearOcean(x, y))	n	False	False
3823	An older man and a woman are riding bikes on the boardwalk near the ocean	exists x. exists y. (OlderMan(x) & Woman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearOcean(x, y))	A middle aged man and woman are riding horses down a road beside the water	exists x.exists y.exists z. (MiddleAgedMan(x) & MiddleAgedWoman(y) & Horse(z) & Road(w) & Water(v) -> Riding(x, y, z, w, v))	n	False	False
3824	An older man and a woman are riding bikes on the boardwalk near the ocean	exists x. exists y. (OlderMan(x) & Woman(y) & RidingBikes(x, y) & OnBoardwalk(x, y) & NearOcean(x, y))	A middle aged man and woman are riding bikes down a road beside the water	exists x.exists y.exists z. (MiddleAgedMan(x) & MiddleAgedWoman(y) & Bike(z) -> Riding(x, y, z, DownRoadBesideWater))	n	False	False
3825	Some people and cars are on a crowded street	exists x.exists y.exists z. (Person(x) & Car(y) & Street(z) & Crowded(z) & On(x, z) & On(y, z))	Some people and vehicles are on a crowded street	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & Vehicle(x) & Vehicle(y) & Vehicle(z) & CrowdedStreet(x) & CrowdedStreet(y) & CrowdedStreet(z))	e	False	False
3826	Pedestrians and cars are moving through a traffic jam in a small city	exists x.exists y.exists z. (Pedestrian(x) & Car(y) & SmallCity(z) -> MovingThroughTrafficJam(x, y, z))	Pedestrians and cars are moving through a traffic jam in a big city	exists x.exists y.exists z. (Pedestrian(x) & Car(y) & BigCity(z) -> MovingThroughTrafficJam(x, y, z))	n	False	False
3827	Pedestrians and cars are moving through a traffic jam in a big city	exists x.exists y.exists z. (Pedestrian(x) & Car(y) & BigCity(z) -> MovingThroughTrafficJam(x, y, z))	Some people and cars are on a crowded street	exists x.exists y.exists z. (Person(x) & Car(y) & Street(z) & Crowded(z) & On(x, z) & On(y, z))	e	False	False
3828	Pedestrians and cars are moving through a traffic jam in a big city	exists x.exists y.exists z. (Pedestrian(x) & Car(y) & BigCity(z) -> MovingThroughTrafficJam(x, y, z))	Some people and vehicles are on a crowded street	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & Vehicle(x) & Vehicle(y) & Vehicle(z) & CrowdedStreet(x) & CrowdedStreet(y) & CrowdedStreet(z))	e	False	False
3829	Two brown and white dogs are fighting on a grassy area in front of a tree	exists x. exists y. exists z. (Dog(x) & Dog(y) & GrassyArea(z) & Brown(x) & White(y) & FightingOn(x, y, z))	Two brown and white dogs are fighting on a grassy area in front of a plant	exists x. exists y. exists z. (Dog(x) & Dog(y) & GrassyArea(z) & Brown(x) & White(y) & FightingOn(x, y, z))	e	True	False
3830	Two dogs are playing outside	exists x. exists y. (Dog(x) & Dog(y) & PlayingOutside(x) & PlayingOutside(y))	Two animals are playing outside	exists x. exists y. (Animal(x) & Animal(y) & PlayingOutside(x) & PlayingOutside(y))	e	True	False
3831	Two brown and white dogs are fighting on a grassy area in front of a tree	exists x. exists y. exists z. (Dog(x) & Dog(y) & GrassyArea(z) & Brown(x) & White(y) & FightingOn(x, y, z))	Two animals are playing outside	exists x. exists y. (Animal(x) & Animal(y) & PlayingOutside(x) & PlayingOutside(y))	e	False	False
3832	Two dogs are playing outside	exists x. exists y. (Dog(x) & Dog(y) & PlayingOutside(x) & PlayingOutside(y))	Two brown and white dogs are fighting on a grassy area behind a tree	exists x. exists y. exists z. (Dog(x) & Dog(y) & GrassyArea(z) & BehindTree(z) & Brown(x) & White(y) & Fighting(x, y, z))	n	False	False
3833	Two dogs are playing outside	exists x. exists y. (Dog(x) & Dog(y) & PlayingOutside(x) & PlayingOutside(y))	Two brown and white dogs are fighting on a grassy area in front of a tree	exists x. exists y. exists z. (Dog(x) & Dog(y) & GrassyArea(z) & Brown(x) & White(y) & FightingOn(x, y, z))	n	False	False
3834	A soccer player is sitting on the field and is drinking water	exists x. (SoccerPlayer(x) -> (SittingOnField(x) & DrinkingWater(x)))	Water is being drunk by a soccer player sitting on the field	exists x. exists y. exists z. (Water(x) & SoccerPlayer(y) & Field(z) & Drinking(y, x) & SittingOn(y, z))	e	False	False
3835	A man is sitting on the lawn and drinking from a water bottle	exists x. (Man(x) & SittingOnLawn(x) & DrinkingWaterBottle(x))	A soccer player is sitting on the field and is drinking water	exists x. (SoccerPlayer(x) -> (SittingOnField(x) & DrinkingWater(x)))	n	False	False
3836	Water is being drunk by a soccer player sitting on the field	exists x. exists y. exists z. (Water(x) & SoccerPlayer(y) & Field(z) & Drinking(y, x) & SittingOn(y, z))	A man is sitting on the grass and drinking from a water bottle	exists x. (Man(x) & SittingOnGrass(x) & DrinkingWaterBottle(x))	e	False	False
3837	A soccer player is sitting on the field and is drinking beer	exists x. (SoccerPlayer(x) & SittingOnField(x) & DrinkingBeer(x))	A man is sitting on the grass and drinking from a water bottle	exists x. (Man(x) & SittingOnGrass(x) & DrinkingWaterBottle(x))	n	False	False
3838	A dog is running on the beach	exists x. (Dog(x) & RunningOnBeach(x))	There is no dog running on the beach	exists x. (Dog(x) & exists y. (Beach(y) & RunningOn(x, y)))	c	False	False
3839	The dog is running through the wet sand	exists x. (Dog(x) & Running(x) & Through(x, WetSand))	The dog is moving through the wet sand	exists x. (Dog(x) & MovingThroughWetSand(x))	e	False	False
3840	The dog is running through the wet sand	exists x. (Dog(x) & Running(x) & Through(x, WetSand))	The dog is running through the dry sand	exists x. exists y. (Dog(x) & DrySand(y) -> RunsThrough(x, y))	c	False	False
3841	A dog is running on the beach	exists x. (Dog(x) & RunningOnBeach(x))	The dog is moving through the wet sand	exists x. (Dog(x) & MovingThroughWetSand(x))	n	False	False
3842	The dog is running through the wet sand	exists x. (Dog(x) & Running(x) & Through(x, WetSand))	A dog is running on the sea shore	exists x. (Dog(x) & RunningOnSeaShore(x))	n	False	False
3843	A dog is running on the beach	exists x. (Dog(x) & RunningOnBeach(x))	The dog is running through the wet sand	exists x. (Dog(x) & Running(x) & Through(x, WetSand))	n	False	False
3844	Sunglasses are being worn by a boy	exists x. (Sunglasses(x) & Wearing(x, boy))	A boy is wearing sunglasses	exists x. (Boy(x) & WearingSunglasses(x))	e	False	False
3845	A boy is wearing sunglasses	exists x. (Boy(x) & WearingSunglasses(x))	A girl is wearing sunglasses	exists x. (Girl(x) & WearingSunglasses(x))	n	False	False
3846	A chubby faced boy is not wearing sunglasses	exists x. (ChubbyFacedBoy(x) -> not WearingSunglasses(x))	A chubby faced boy is wearing sunglasses	exists x. (ChubbyFacedBoy(x) -> WearingSunglasses(x))	c	False	False
3847	A chubby faced boy is wearing dark glasses	exists x. (ChubbyFacedBoy(x) -> WearsDarkGlasses(x))	A boy is wearing sunglasses	exists x. (Boy(x) & WearingSunglasses(x))	e	False	False
3848	A boy is wearing sunglasses	exists x. (Boy(x) & WearingSunglasses(x))	A chubby faced boy is not wearing sunglasses	exists x. (ChubbyFacedBoy(x) -> not WearingSunglasses(x))	n	False	False
3849	Kids are being dressed in costumes and playing a game	exists x. (Kid(x) -> (DressedInCostume(x) & PlayingGame(x)))	Kids are not dressed in costumes and playing a game	exists x. (Kid(x) -> not DressedInCostume(x) & not PlayingGame(x))	c	False	False
3850	A young girl with painted face is standing next to some other children	exists x.exists y. (YoungGirl(x) & PaintedFace(x) & Child(y) -> StandingNextTo(x, y))	A girl with painted face is standing next to some other children	exists x.exists y. (Girl(x) & PaintedFace(x) & Child(y) -> StandingNextTo(x, y))	e	False	False
3851	A girl with painted face is standing next to some other children	exists x.exists y. (Girl(x) & PaintedFace(x) & Child(y) -> StandingNextTo(x, y))	Kids are being dressed in costumes and playing a game	exists x. (Kid(x) -> (DressedInCostume(x) & PlayingGame(x)))	n	False	False
3852	A young girl with painted face is standing next to some other children	exists x.exists y. (YoungGirl(x) & PaintedFace(x) & Child(y) -> StandingNextTo(x, y))	Kids are being dressed in costumes and playing a game	exists x. (Kid(x) -> (DressedInCostume(x) & PlayingGame(x)))	n	False	False
3853	A horse is racing	exists x. (Horse(x) & Racing(x))	A horse is running	exists x. (Horse(x) & Running(x))	e	False	False
3854	A horse is racing	exists x. (Horse(x) & Racing(x))	A horse is not racing	exists x. (Horse(x) -> not Racing(x))	c	False	False
3855	A horse is running	exists x. (Horse(x) & Running(x))	Dogs are racing on a track	exists x. exists y. (Dog(x) & Track(y) -> RacesOn(x, y))	n	False	False
3856	A horse is racing	exists x. (Horse(x) & Racing(x))	Dogs are running on a track	exists x. exists y. (Dog(x) & Track(y) -> RunsOn(x, y))	n	False	False
3857	Dogs are racing on a track	exists x. exists y. (Dog(x) & Track(y) -> RacesOn(x, y))	A horse is racing	exists x. (Horse(x) & Racing(x))	n	False	False
3858	There is no bmx biker jumping dirt ramps in front of a body of water	not exists x. (BmxBiker(x) & JumpingDirtRamps(x) & InFrontOfBodyOfWater(x))	Some bikers are getting airborne on a track near water and a skyline	exists x. (Biker(x) & Airborne(x) & OnTrack(x) & NearWater(x) & NearSkyline(x))	c	False	False
3859	A woman is doing a skateboard trick on an outdoor park porch	exists x. exists y. exists z. (Woman(x) & SkateboardTrick(y) & OutdoorParkPorch(z) & Doing(x, y, z))	A man is doing a skateboard trick on an outdoor park porch	exists x. exists y. exists z. (Man(x) & SkateboardTrick(y) & OutdoorParkPorch(z) & DoingOn(x, y, z))	n	False	False
3860	A man is doing a trick on a bike	exists x. exists y. (Man(x) & Bike(y) & Trick(z) & Doing(x, z, y))	A man is doing a skateboard trick on an outdoor park porch	exists x. exists y. exists z. (Man(x) & SkateboardTrick(y) & OutdoorParkPorch(z) & DoingOn(x, y, z))	n	False	False
3861	A man is doing a skateboard trick on an outdoor park porch	exists x. exists y. exists z. (Man(x) & SkateboardTrick(y) & OutdoorParkPorch(z) & DoingOn(x, y, z))	A man is doing a trick on a skateboard	exists x. exists y. (Man(x) & Skateboard(y) & DoingTrickOn(x, y))	e	False	False
3862	A person in a motocross uniform is wearing a helmet and rides a red motorcycle	exists x. (Person(x) & WearsMotocrossUniform(x) -> (WearsHelmet(x) & RidesRedMotorcycle(x)))	A person in a motocross uniform is not wearing a helmet and riding a red motorcycle	exists x. (Person(x) & MotocrossUniform(x) -> not WearingHelmet(x) & RidingRedMotorcycle(x))	c	False	False
3863	A racer in full gear is wearing a helmet with sponsor logos and is riding a red sport motorcycle	exists x.exists y.exists z. (Racer(x) & FullGear(x) & Helmet(y) & SponsorLogos(y) & RedSportMotorcycle(z) -> WearsWithSponsors(x, y, z))	A racer in full gear wears a helmet with sponsor logos and is riding a blue sport motorcycle	exists x.exists y.exists z. (Racer(x) & FullGear(x) & Helmet(y) & SponsorLogos(y) & BlueSportMotorcycle(z) -> Wears(x, y) & Riding(x, z))	n	False	False
3864	A person in a motocross uniform is wearing a helmet and rides a red motorcycle	exists x. (Person(x) & WearsMotocrossUniform(x) -> (WearsHelmet(x) & RidesRedMotorcycle(x)))	A racer in full gear wears a helmet with sponsor logos and is riding a blue sport motorcycle	exists x.exists y.exists z. (Racer(x) & FullGear(x) & Helmet(y) & SponsorLogos(y) & BlueSportMotorcycle(z) -> Wears(x, y) & Riding(x, z))	n	False	False
3865	A person in a motocross uniform is not wearing a helmet and riding a red motorcycle	exists x. (Person(x) & MotocrossUniform(x) -> not WearingHelmet(x) & RidingRedMotorcycle(x))	A racer in full gear is wearing a helmet with sponsor logos and is riding a red sport motorcycle	exists x.exists y.exists z. (Racer(x) & FullGear(x) & Helmet(y) & SponsorLogos(y) & RedSportMotorcycle(z) -> WearsWithSponsors(x, y, z))	n	False	False
3866	People are sitting at round tables in a red room	exists x. exists y. exists z. (Person(x) & RoundTable(y) & RedRoom(z) -> SittingAt(x, y, z))	People are sitting at square tables in a red room	exists x. exists y. exists z. (Person(x) & SquareTable(y) & RedRoom(z) -> SittingAt(x, y, z))	n	False	False
3867	Several people are sitting at little tables in a darkened room	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & LittleTable(x) & LittleTable(y) & LittleTable(z) & DarkenedRoom(x) & DarkenedRoom(y) & DarkenedRoom(z))	Several people are sitting at small tables in a darkened room	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & SmallTable(x) & SmallTable(y) & SmallTable(z) & DarkenedRoom(x) & DarkenedRoom(y) & DarkenedRoom(z))	e	False	False
3868	People are sitting at square tables in a red room	exists x. exists y. exists z. (Person(x) & SquareTable(y) & RedRoom(z) -> SittingAt(x, y, z))	Several people are sitting at small tables in a light room	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & SmallTable(x) & SmallTable(y) & SmallTable(z) & LightRoom(x) & LightRoom(y) & LightRoom(z))	n	False	False
3869	Several people are sitting at small tables in a darkened room	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & SmallTable(x) & SmallTable(y) & SmallTable(z) & DarkenedRoom(x) & DarkenedRoom(y) & DarkenedRoom(z))	People are sitting at round tables in a red room	exists x. exists y. exists z. (Person(x) & RoundTable(y) & RedRoom(z) -> SittingAt(x, y, z))	n	False	False
3870	A boy in a striped shirt is playing in front of a water fountain	exists x.exists y. (Boy(x) & StripedShirt(x) & WaterFountain(y) -> PlayingInFrontOf(x, y))	A boy in a striped shirt is jumping in front of a water fountain	exists x.exists y. (Boy(x) & StripedShirt(x) & WaterFountain(y) -> JumpsInFrontOf(x, y))	n	False	False
3871	A boy is jumping on the side of a stone water fountain in front of a building	exists x. exists y. exists z. (Boy(x) & StoneWaterFountain(y) & Building(z) & JumpsOnSideOf(x, y) & InFrontOf(x, z))	A boy is jumping off the side of a stone water fountain in front of a building	exists x. exists y. exists z. (Boy(x) & StoneWaterFountain(y) & Building(z) & JumpsOffSide(x, y) & InFrontOf(x, z))	c	False	False
3872	A boy is jumping off the side of a water fountain made of stone in front of a building	exists x. exists y. exists z. (Boy(x) & WaterFountain(y) & MadeOfStone(y) & Building(z) & JumpsOffSide(x, y) & InFrontOf(x, z))	A boy in a striped shirt is jumping in front of a water fountain	exists x.exists y. (Boy(x) & StripedShirt(x) & WaterFountain(y) -> JumpsInFrontOf(x, y))	n	False	False
3873	A boy is jumping off the side of a stone water fountain in front of a building	exists x. exists y. exists z. (Boy(x) & StoneWaterFountain(y) & Building(z) & JumpsOffSide(x, y) & InFrontOf(x, z))	A boy in a striped shirt is jumping in front of a water fountain	exists x.exists y. (Boy(x) & StripedShirt(x) & WaterFountain(y) -> JumpsInFrontOf(x, y))	n	False	False
3874	Two dogs are leaping through snowy grass and rocks	exists x. exists y. (Dog(x) & Dog(y) & Leaping(x) & Leaping(y) & SnowyGrass(x) & SnowyGrass(y) & Rocks(x) & Rocks(y))	Two dogs are jumping through snowy grass and rocks	exists x. exists y. (Dog(x) & Dog(y) & JumpingThroughSnowyGrassAndRocks(x, y))	e	False	False
3875	Two dogs are leaping through snowy grass and rocks	exists x. exists y. (Dog(x) & Dog(y) & Leaping(x) & Leaping(y) & SnowyGrass(x) & SnowyGrass(y) & Rocks(x) & Rocks(y))	There is no dog leaping through snowy grass and rocks	not exists x. (Dog(x) & Leaping(x) & SnowyGrass(x) & Rocks(x))	c	False	True
3876	Two large dogs, a light colored one and a dark one, are quickly moving through snowy terrain	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & LightColored(x) & DarkColored(y) & QuicklyMovingThroughSnowyTerrain(x) & QuicklyMovingThroughSnowyTerrain(y))	Two large dogs, a light colored one and a dark one, are running through snowy terrain	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & LightColored(x) & Dark(y) & RunningThroughSnowyTerrain(x) & RunningThroughSnowyTerrain(y))	e	False	False
3877	Two large dogs, a light colored one and a dark one, are sleeping on a snowy terrain	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & LightColored(x) & Dark(y) & SleepingOn(x, y, SnowyTerrain))	Two large dogs, a light colored one and a dark one, are running through snowy terrain	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & LightColored(x) & Dark(y) & RunningThroughSnowyTerrain(x) & RunningThroughSnowyTerrain(y))	n	False	False
3878	Two large dogs, a light colored one and a dark one, are running through snowy terrain	exists x. exists y. (Dog(x) & Dog(y) & Large(x) & Large(y) & LightColored(x) & Dark(y) & RunningThroughSnowyTerrain(x) & RunningThroughSnowyTerrain(y))	Two dogs are leaping through snowy grass and rocks	exists x. exists y. (Dog(x) & Dog(y) & Leaping(x) & Leaping(y) & SnowyGrass(x) & SnowyGrass(y) & Rocks(x) & Rocks(y))	n	False	False
3879	A girl in blue is sliding down a green slide	exists x.exists y.exists z. (Girl(x) & Blue(x) & GreenSlide(y) & Slide(z) -> SlidingDown(x, y, z))	A boy in blue are sliding down a green slide	exists x.exists y.exists z. (Boy(x) & Blue(x) & GreenSlide(y) & Slide(z) -> SlidingDown(x, y, z))	n	False	False
3880	The young girl in blue is having fun on a swing	exists x. (YoungGirl(x) & Blue(x) -> HavingFunOnSwing(x))	The young girl in blue is having fun on a slide	exists x. (YoungGirl(x) & Blue(x) -> HavingFunOnSlide(x))	n	False	False
3881	The young girl in blue is having fun on a slide	exists x. (YoungGirl(x) & Blue(x) -> HavingFunOnSlide(x))	A girl in blue is sliding down a slide	exists x.exists y. (Girl(x) & Blue(x) & Slide(y) -> SlidingDown(x, y))	n	False	False
3882	A boy in blue are sliding down a green slide	exists x.exists y.exists z. (Boy(x) & Blue(x) & GreenSlide(y) & Slide(z) -> SlidingDown(x, y, z))	The young girl in blue is having fun on a slide	exists x. (YoungGirl(x) & Blue(x) -> HavingFunOnSlide(x))	n	False	False
3883	A girl in blue is sliding down a green slide	exists x.exists y.exists z. (Girl(x) & Blue(x) & GreenSlide(y) & Slide(z) -> SlidingDown(x, y, z))	The young girl in blue is having fun on a slide	exists x. (YoungGirl(x) & Blue(x) -> HavingFunOnSlide(x))	n	False	False
3884	A man is looking into the distance and people is walking between buildings behind	exists x. exists y. exists z. (Man(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	A person is looking into the distance and people is walking between buildings behind	exists x. exists y. exists z. (Person(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	e	False	False
3885	A woman is looking into the distance and people are walking between buildings behind	exists x. exists y. exists z. (Woman(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	A man is looking into the distance and people is walking between buildings behind	exists x. exists y. exists z. (Man(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	n	False	False
3886	A person is looking into the distance and people is walking between buildings behind	exists x. exists y. exists z. (Person(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	A black man is walking next to a building in a big city	exists x. exists y. exists z. (BlackMan(x) & Building(y) & BigCity(z) & WalkingNextTo(x, y, z))	n	False	False
3887	A black man is walking next to a building in a big city	exists x. exists y. exists z. (BlackMan(x) & Building(y) & BigCity(z) & WalkingNextTo(x, y, z))	A woman is looking into the distance and people are walking between buildings behind	exists x. exists y. exists z. (Woman(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	n	False	False
3888	A man is looking into the distance and people is walking between buildings behind	exists x. exists y. exists z. (Man(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	A black man is walking next to a shop in a big city	exists x. exists y. exists z. (BlackMan(x) & Shop(y) & BigCity(z) & WalkingNextTo(x, y, z))	n	False	False
3889	A white man is walking next to a building in a big city	exists x. exists y. exists z. (WhiteMan(x) & Building(y) & BigCity(z) & WalkingNextTo(x, y, z))	A man is looking into the distance and people is walking between buildings behind	exists x. exists y. exists z. (Man(x) & Distance(y) & Building(z) -> (LookingInto(x, y) & WalkingBetween(x, z)))	n	False	False
3890	A bald man in a band is playing guitar in the spotlight	exists x.exists y.exists z. (BaldMan(x) & Band(y) & Guitar(z) & InBand(x, y) -> PlayingInSpotlight(x, z))	A bald man in a band is playing an instrument in the spotlight	exists x.exists y.exists z. (BaldMan(x) & Band(y) & Instrument(z) & InBand(x, y) & Playing(x, z) -> InSpotlight(z))	e	False	False
3891	A man is playing guitar next to a drummer	exists x. exists y. (Man(x) & Man(y) & Guitar(x) & Drum(y) & PlayingNextTo(x, y))	A guitar is being played by a man next to a drummer	exists x. exists y. exists z. (Guitar(x) & Man(y) & Drummer(z) & Playing(y, x) & NextTo(y, z))	e	False	False
3892	A bald man in a band is playing guitar in the spotlight	exists x.exists y.exists z. (BaldMan(x) & Band(y) & Guitar(z) & InBand(x, y) -> PlayingInSpotlight(x, z))	A guitar is being played by a man next to a drummer	exists x. exists y. exists z. (Guitar(x) & Man(y) & Drummer(z) & Playing(y, x) & NextTo(y, z))	n	False	False
3893	A bald man in a band is playing guitar in the spotlight	exists x.exists y.exists z. (BaldMan(x) & Band(y) & Guitar(z) & InBand(x, y) -> PlayingInSpotlight(x, z))	There is no man playing guitar next to a drummer	not exists x. (Man(x) & PlayingGuitar(x) & exists y. (Drummer(y) & NextTo(x, y)))	n	False	False
3894	A bald man in a band is playing an instrument in the spotlight	exists x.exists y.exists z. (BaldMan(x) & Band(y) & Instrument(z) & InBand(x, y) & Playing(x, z) -> InSpotlight(z))	A man is playing guitar next to a drummer	exists x. exists y. (Man(x) & Man(y) & Guitar(x) & Drum(y) & PlayingNextTo(x, y))	n	False	False
3895	A bald man in a band is playing guitar in the spotlight	exists x.exists y.exists z. (BaldMan(x) & Band(y) & Guitar(z) & InBand(x, y) -> PlayingInSpotlight(x, z))	A man is playing guitar next to a drummer	exists x. exists y. (Man(x) & Man(y) & Guitar(x) & Drum(y) & PlayingNextTo(x, y))	n	False	False
3896	A black dog is jumping from a dock into the water	exists x.exists y.exists z. (BlackDog(x) & Dock(y) & Water(z) -> JumpsFrom(x, y, z))	A black animal is jumping from a dock into the water	exists x. (BlackAnimal(x) & JumpsFromDock(x) -> JumpsIntoWater(x))	e	False	False
3897	A black dog is jumping off a dock into a pond	exists x.exists y.exists z. (BlackDog(x) & Dock(y) & Pond(z) -> JumpsInto(x, y, z))	A black animal is jumping from a dock into the water	exists x. (BlackAnimal(x) & JumpsFromDock(x) -> JumpsIntoWater(x))	e	False	False
3898	A black dog is jumping off a dock into a pond	exists x.exists y.exists z. (BlackDog(x) & Dock(y) & Pond(z) -> JumpsInto(x, y, z))	A white dog is jumping from a dock into the water	exists x.exists y.exists z. (WhiteDog(x) & Dock(y) & Water(z) -> JumpsFrom(x, y, z))	n	False	False
3899	A black dog is jumping on a dock into a pond	exists x.exists y.exists z. (BlackDog(x) & Dock(y) & Pond(z) -> JumpsOn(x, y, z))	A black dog is jumping from a dock into the water	exists x.exists y.exists z. (BlackDog(x) & Dock(y) & Water(z) -> JumpsFrom(x, y, z))	e	False	False
3900	A black dog is jumping off a dock into a pond	exists x.exists y.exists z. (BlackDog(x) & Dock(y) & Pond(z) -> JumpsInto(x, y, z))	A black dog is jumping from a dock into the water	exists x.exists y.exists z. (BlackDog(x) & Dock(y) & Water(z) -> JumpsFrom(x, y, z))	e	False	False
3901	A bride in a white dress is running	exists x. (Bride(x) & WearingWhiteDress(x) -> Running(x))	A girl in a white dress is running	exists x. (Girl(x) & WearsWhiteDress(x) -> Runs(x))	e	False	False
3902	A girl in a white dress is running	exists x. (Girl(x) & WearsWhiteDress(x) -> Runs(x))	A girl in a white dress is standing	exists x. (Girl(x) & WearingWhiteDress(x) -> Standing(x))	n	False	False
3903	A little girl is smiling and running outside	exists x. (LittleGirl(x) & Smiling(x) & RunningOutside(x))	A little girl is smiling and running inside	exists x. (LittleGirl(x) & Smiling(x) & Running(x))	c	False	False
3904	A girl in a white dress is running	exists x. (Girl(x) & WearsWhiteDress(x) -> Runs(x))	A little girl is smiling and running inside	exists x. (LittleGirl(x) & Smiling(x) & Running(x))	n	False	False
3905	A girl in a white dress is standing	exists x. (Girl(x) & WearingWhiteDress(x) -> Standing(x))	A little girl is smiling and running outside	exists x. (LittleGirl(x) & Smiling(x) & RunningOutside(x))	n	False	False
3906	A little girl is smiling and running outside	exists x. (LittleGirl(x) & Smiling(x) & RunningOutside(x))	A girl in a white dress is running	exists x. (Girl(x) & WearsWhiteDress(x) -> Runs(x))	n	False	False
3907	There is no man skiing down a snowy hill	not exists x. (Man(x) & Skiing(x) & SnowyHill(x))	A man is skiing down a snowy hill	exists x. (Man(x) & Skiing(x) & DownSnowyHill(x))	c	False	False
3908	A man is skiing down a snowy mountain	exists x. exists y. (Man(x) & SnowyMountain(y) & SkiingDown(x, y))	A skier in black is catching a tiny bit of air	exists x. (Skier(x) & Black(x) -> CatchesAir(x))	n	False	False
3909	There is no man skiing down a snowy hill	not exists x. (Man(x) & Skiing(x) & SnowyHill(x))	A skier in black is catching a tiny bit of air	exists x. (Skier(x) & Black(x) -> CatchesAir(x))	n	False	False
3910	A skier in black is catching a tiny bit of air	exists x. (Skier(x) & Black(x) -> CatchesAir(x))	A man is skiing down a snowy hill	exists x. (Man(x) & Skiing(x) & DownSnowyHill(x))	n	False	False
3911	A boy is playing slip and slide in the grass	exists x. (Boy(x) & PlayingSlipAndSlide(x))	A child is playing slip and slide in the grass	exists x. (Child(x) & PlayingSlipAndSlide(x))	e	False	False
3912	A child is splashing in a pool for children and no other children are playing in the background	exists x. exists y. (Child(x) & Pool(y) & SplashingIn(x, y) -> not exists z. (Child(z) & PlayingInBackground(z, y)))	A child is splashing in a pool for children and other children are playing in the background	exists x. exists y. (Child(x) & Pool(y) & SplashingIn(x, y) -> exists z. (Child(z) & PlayingInBackground(z, y)))	c	False	False
3913	A child is playing slip and slide in the grass	exists x. (Child(x) & PlayingSlipAndSlide(x))	A child is splashing in a pool for children and no other children are playing in the background	exists x. exists y. (Child(x) & Pool(y) & SplashingIn(x, y) -> not exists z. (Child(z) & PlayingInBackground(z, y)))	n	False	False
3914	A boy is playing slip and slide in the grass	exists x. (Boy(x) & PlayingSlipAndSlide(x))	A child is splashing in a pool for children and other children are playing in the background	exists x. exists y. (Child(x) & Pool(y) & SplashingIn(x, y) -> exists z. (Child(z) & PlayingInBackground(z, y)))	n	False	False
3915	A child is splashing in a pool for children and other children are playing in the background	exists x. exists y. (Child(x) & Pool(y) & SplashingIn(x, y) -> exists z. (Child(z) & PlayingInBackground(z, y)))	A child is not playing slip and slide in the grass	exists x. (Child(x) -> not PlayingSlipAndSlideInGrass(x))	n	False	False
3916	Two men are standing together and one is looking in the distance	exists x.exists y. (Man(x) & Man(y) & StandingTogether(x, y) & LookingInDistance(x))	Two men are standing together and one is looking through binoculars	exists x. exists y. (Man(x) & Man(y) & StandingTogether(x, y) & LookingThroughBinoculars(x))	n	False	False
3917	Two women are standing together and one is looking through binoculars	exists x. exists y. (Woman(x) & Woman(y) & StandingTogether(x, y) & LookingThroughBinoculars(x))	Two men are standing together and one is looking through binoculars	exists x. exists y. (Man(x) & Man(y) & StandingTogether(x, y) & LookingThroughBinoculars(x))	n	False	False
3918	Two men are looking out and one is holding binoculars	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingOut(x) & LookingOut(y) & HoldingBinoculars(z))	Two men are looking out and one is holding a spyglass	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & LookingOut(x) & LookingOut(y) & HoldingSpyglass(z))	n	False	False
3919	Two men are standing together and one is looking through binoculars	exists x. exists y. (Man(x) & Man(y) & StandingTogether(x, y) & LookingThroughBinoculars(x))	Two men are looking out and one is holding a spyglass	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & LookingOut(x) & LookingOut(y) & HoldingSpyglass(z))	n	False	False
3920	Two men are looking out and one is holding binoculars	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingOut(x) & LookingOut(y) & HoldingBinoculars(z))	Two men are standing together and one is looking in the distance	exists x.exists y. (Man(x) & Man(y) & StandingTogether(x, y) & LookingInDistance(x))	n	False	False
3921	Two men are standing together and one is looking through binoculars	exists x. exists y. (Man(x) & Man(y) & StandingTogether(x, y) & LookingThroughBinoculars(x))	Two men are looking out and one is holding binoculars	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & LookingOut(x) & LookingOut(y) & HoldingBinoculars(z))	n	False	False
3922	A man on a motorcycle is going around a corner	exists x.exists y. (Man(x) & Motorcycle(y) & On(x, y) -> GoingAroundCorner(x, y))	A woman on a motorcycle is going around a corner	exists x.exists y. (Woman(x) & Motorcycle(y) & On(x, y) -> GoingAroundCorner(x, y))	n	False	False
3923	An old man in a white shirt and gold and black hat is sitting with crossed legs	exists x. (OldMan(x) & WhiteShirt(x) & GoldAndBlackHat(x) & SittingWithCrossedLegs(x))	A young man in a white shirt and gold and black hat is sitting with crossed legs	exists x. (YoungMan(x) & WearsWhiteShirt(x) & WearsGoldAndBlackHat(x) -> SitsWithCrossedLegs(x))	n	False	False
3924	A young person in a white shirt and gold and black hat is sitting with crossed legs	exists x. (YoungPerson(x) & WearsWhiteShirt(x) & WearsGoldAndBlackHat(x) -> SitsWithCrossedLegs(x))	A man with a backwards hat is sitting on the ground	exists x. (Man(x) & WearsBackwardsHat(x) -> SittingOnGround(x))	n	False	False
3925	A man with a backwards hat is sitting on the ground	exists x. (Man(x) & WearsBackwardsHat(x) -> SittingOnGround(x))	An old man in a white shirt and gold and black hat is sitting with crossed legs	exists x. (OldMan(x) & WhiteShirt(x) & GoldAndBlackHat(x) & SittingWithCrossedLegs(x))	n	False	False
3926	A person with a backwards hat is sitting on the ground	exists x. (Person(x) & WearsBackwardsHat(x) -> SittingOnGround(x))	A young man in a white shirt and gold and black hat is sitting with crossed legs	exists x. (YoungMan(x) & WearsWhiteShirt(x) & WearsGoldAndBlackHat(x) -> SitsWithCrossedLegs(x))	n	False	False
3927	A young man in a white shirt and gold and black hat is sitting with crossed legs	exists x. (YoungMan(x) & WearsWhiteShirt(x) & WearsGoldAndBlackHat(x) -> SitsWithCrossedLegs(x))	A man with no hat is sitting on the ground	exists x. (Man(x) & not HasHat(x) -> SittingOnGround(x))	n	False	False
3928	A young man in a white shirt and gold and black hat is sitting with crossed legs	exists x. (YoungMan(x) & WearsWhiteShirt(x) & WearsGoldAndBlackHat(x) -> SitsWithCrossedLegs(x))	A man with a backwards hat is sitting on the ground	exists x. (Man(x) & WearsBackwardsHat(x) -> SittingOnGround(x))	n	False	False
3929	A girl in blue sweater is holding a multicolor toy and is sitting on the shoulders of a man with grey hair	exists x.exists y.exists z. (Girl(x) & BlueSweater(x) & MulticolorToy(y) & Man(z) & GreyHair(z) -> (Holding(x, y) & SittingOnShoulders(x, z)))	A girl in blue sweater is holding a multicolor toy and is sitting on the shoulders of a woman with grey hair	exists x.exists y.exists z. (Girl(x) & BlueSweater(x) & MulticolorToy(y) & Woman(z) & GreyHair(z) -> (Holding(x, y) & SittingOnShoulders(x, z)))	n	False	False
3930	A young oriental girl is standing above the crowd and is playing with a pinwheel	exists x. (OrientalGirl(x) & Young(x) -> (StandingAboveCrowd(x) & PlayingWithPinwheel(x)))	A girl in blue sweater is holding a multicolor toy and is sitting on the shoulders of an old man with grey hair	exists x.exists y.exists z. (Girl(x) & BlueSweater(x) & MulticolorToy(y) & OldMan(z) & GreyHair(z) -> (Holding(x, y) & SittingOnShoulders(x, z)))	n	False	False
3931	A young oriental girl is standing above the crowd and is playing with a pinwheel	exists x. (OrientalGirl(x) & Young(x) -> (StandingAboveCrowd(x) & PlayingWithPinwheel(x)))	A girl in blue sweater is holding a multicolor toy and is sitting on the shoulders of a man with grey hair	exists x.exists y.exists z. (Girl(x) & BlueSweater(x) & MulticolorToy(y) & Man(z) & GreyHair(z) -> (Holding(x, y) & SittingOnShoulders(x, z)))	n	False	False
3932	A young man on a bmx bicycle is jumping off a masonry pyramid	exists x.exists y.exists z. (YoungMan(x) & BmxBicycle(y) & MasonryPyramid(z) -> JumpsOff(x, y, z))	A young man on a bmx bicycle is jumping off a pyramid	exists x.exists y.exists z. (YoungMan(x) & BmxBicycle(y) & Pyramid(z) -> JumpsOff(x, y, z))	e	False	False
3933	A shirtless man is playing football on a lawn	exists x.exists y.exists z. (ShirtlessMan(x) & Football(y) & Lawn(z) -> PlaysOn(x, y, z))	A shirtless man is playing football on a field	exists x.exists y.exists z. (ShirtlessMan(x) & Football(y) & Field(z) -> PlaysOn(x, y, z))	n	False	False
3934	A shirtless man is playing football in a gym	exists x.exists y.exists z. (ShirtlessMan(x) & Football(y) & Gym(z) -> PlaysIn(x, y, z))	A shirtless man is playing football on a lawn	exists x.exists y.exists z. (ShirtlessMan(x) & Football(y) & Lawn(z) -> PlaysOn(x, y, z))	n	False	False
3935	A shirtless man is playing football on a lawn	exists x.exists y.exists z. (ShirtlessMan(x) & Football(y) & Lawn(z) -> PlaysOn(x, y, z))	A football is being held by a man with no shirt	exists x. exists y. (Football(x) & Man(y) & Holds(y, x) & not Shirt(y))	n	False	False
3936	A man with no shirt is holding a football	exists x. (Man(x) & not HasShirt(x) -> HoldingFootball(x))	A shirtless man is playing football on a lawn	exists x.exists y.exists z. (ShirtlessMan(x) & Football(y) & Lawn(z) -> PlaysOn(x, y, z))	n	False	False
3937	The man is going into the lake	exists x. (Man(x) & GoingIntoLake(x))	The man is going into the water	exists x. (Man(x) -> GoesIntoWater(x))	e	False	False
3938	The man is going into the water	exists x. (Man(x) -> GoesIntoWater(x))	The man is not going into the water	not GoingIntoWater(man)	c	False	False
3939	The person is going into the sea	exists x. (Person(x) -> GoingIntoSea(x))	The person is going into the water	exists x. (Person(x) -> GoingIntoWater(x))	e	False	False
3940	The person is going into the water	exists x. (Person(x) -> GoingIntoWater(x))	The person is not going into the water	not GoingIntoWater(person)	c	False	False
3941	The person is going into the water	exists x. (Person(x) -> GoingIntoWater(x))	The man is not going into the water	not GoingIntoWater(man)	n	False	False
3942	Two women dressed in white and black are relaxing on a bench	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & DressedInWhite(x) & DressedInWhite(y) & DressedInBlack(z) & RelaxingOnBench(x) & RelaxingOnBench(y) & RelaxingOnBench(z))	Two people are sitting on a park bench on a sunny day	exists x. exists y. (Person(x) & Person(y) & ParkBench(x) & ParkBench(y) & SittingOn(x, y) & SittingOn(y, x) & SunnyDay(x) & SunnyDay(y))	n	False	False
3943	Two people are sitting on a park bench on a sunny day	exists x. exists y. (Person(x) & Person(y) & ParkBench(x) & ParkBench(y) & SittingOn(x, y) & SittingOn(y, x) & SunnyDay(x) & SunnyDay(y))	Two men dressed in white and black are sitting on a bench	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & DressedInWhite(x) & DressedInWhite(y) & DressedInBlack(z) & SittingOnBench(x, y, z))	n	False	False
3944	Two women dressed in white and black are sitting on a bench	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & DressedInWhite(x) & DressedInWhite(y) & DressedInBlack(z) & SittingOnBench(x) & SittingOnBench(y) & SittingOnBench(z))	Two people are sitting on a park bench on a sunny day	exists x. exists y. (Person(x) & Person(y) & ParkBench(x) & ParkBench(y) & SittingOn(x, y) & SittingOn(y, x) & SunnyDay(x) & SunnyDay(y))	n	False	False
3945	A girl in gold and purple is holding a rainbow afghan	exists x. (Girl(x) & Gold(x) & Purple(x) -> HoldingRainbowAfghan(x))	A man in gold and purple is holding a rainbow afghan	exists x. (Man(x) & Gold(x) & Purple(x) -> HoldingRainbowAfghan(x))	n	False	False
3946	A young woman is carrying a lot of colorful scarves on the beach	exists x. (YoungWoman(x) & CarryingScarves(x) & Colorful(x) & OnBeach(x))	A rainbow afghan is being held by a girl in gold and purple	exists x.exists y.exists z. (RainbowAfghan(x) & Girl(y) & (Gold(z) | Purple(z)) -> HeldBy(y, x, z))	n	False	False
3947	A young woman is carrying a lot of colorful scarves on the beach	exists x. (YoungWoman(x) & CarryingScarves(x) & Colorful(x) & OnBeach(x))	A girl in gold and purple is holding a rainbow afghan	exists x. (Girl(x) & Gold(x) & Purple(x) -> HoldingRainbowAfghan(x))	n	False	False
3948	A light brown dog is running in the grass	exists x. (Dog(x) & LightBrown(x) & exists y. (Grass(y) & RunningIn(x, y)))	A light brown dog is running in the water	exists x. (Dog(x) & LightBrown(x) & RunningInWater(x))	n	False	False
3949	A tan dog is splashing in the water on the bank of a pond	exists x.exists y.exists z. (TanDog(x) & Water(y) & Pond(z) -> SplashingOnBank(x, y, z))	A tan dog is playing in the water on the bank of a pond	exists x.exists y.exists z. (TanDog(x) & Water(y) & Pond(z) -> PlaysIn(x, y, z))	n	False	False
3950	A tan dog is splashing in the water on the bank of a pond	exists x.exists y.exists z. (TanDog(x) & Water(y) & Pond(z) -> SplashingOnBank(x, y, z))	A tan dog is splashing in the water on the bank of a river	exists x.exists y.exists z. (TanDog(x) & Water(y) & RiverBank(z) -> SplashingIn(x, y, z))	n	False	False
3951	A tan dog is splashing in the water on the bank of a pond	exists x.exists y.exists z. (TanDog(x) & Water(y) & Pond(z) -> SplashingOnBank(x, y, z))	A light brown dog is running in the grass	exists x. (Dog(x) & LightBrown(x) & exists y. (Grass(y) & RunningIn(x, y)))	n	False	False
3952	A light brown dog is running in the water	exists x. (Dog(x) & LightBrown(x) & RunningInWater(x))	A tan dog is splashing in the water on the bank of a pond	exists x.exists y.exists z. (TanDog(x) & Water(y) & Pond(z) -> SplashingOnBank(x, y, z))	n	False	False
3953	The child is splashing water in a small blue pool	exists x. exists y. exists z. (Child(x) & Water(y) & SmallBluePool(z) & SplashingIn(x, y, z))	The child is splashing water in a big red pool	exists x. exists y. exists z. (Child(x) & Water(y) & Pool(z) & SplashingIn(x, y, z))	c	False	False
3954	A toddler is making a splash outside a blue paddling pool	exists x. (Toddler(x) & MakingSplash(x) & OutsideBluePaddlingPool(x))	A toddler is making a splash inside a blue paddling pool	exists x. exists y. (Toddler(x) & BluePaddlingPool(y) & MakingSplashInside(x, y))	c	False	False
3955	A toddler is making a splash outside a blue paddling pool	exists x. (Toddler(x) & MakingSplash(x) & OutsideBluePaddlingPool(x))	The child is splashing water in a small blue pool	exists x. exists y. exists z. (Child(x) & Water(y) & SmallBluePool(z) & SplashingIn(x, y, z))	n	False	False
3956	A toddler is making a splash inside a blue paddling pool	exists x. exists y. (Toddler(x) & BluePaddlingPool(y) & MakingSplashInside(x, y))	The child is splashing water in a pool	exists x. (Child(x) & SplashingWater(x))	e	False	False
3957	A toddler is making a splash inside a blue paddling pool	exists x. exists y. (Toddler(x) & BluePaddlingPool(y) & MakingSplashInside(x, y))	The child is splashing water in a small blue pool	exists x. exists y. exists z. (Child(x) & Water(y) & SmallBluePool(z) & SplashingIn(x, y, z))	e	False	False
3958	The brown dog is spotting a black dog lying in the dry field	exists x. exists y. (BrownDog(x) & BlackDog(y) & Spotting(x, y) & LyingIn(y, dryField))	The brown dog is spotting a black dog lying in the dry grass	exists x. exists y. (BrownDog(x) & BlackDog(y) & Spotting(x, y) & LyingInDryGrass(y))	e	False	False
3959	The brown dog is spotting a black dog and is playing in the dry grass	exists x. exists y. (Dog(x) & Dog(y) & Brown(x) & Black(y) & Spotting(x, y) & PlayingInDryGrass(x))	The brown dog is spotting a black dog lying in the dry grass	exists x. exists y. (BrownDog(x) & BlackDog(y) & Spotting(x, y) & LyingInDryGrass(y))	n	False	False
3960	A grey silky dog is lying in the grass and a brown dog is looking on	exists x. exists y. (GreySilkyDog(x) & BrownDog(y) & LyingInGrass(x) & LookingOn(y, x))	The brown dog is spotting a black dog lying in the dry field	exists x. exists y. (BrownDog(x) & BlackDog(y) & Spotting(x, y) & LyingIn(y, dryField))	n	False	False
3961	The brown dog is spotting a black dog lying in the dry grass	exists x. exists y. (BrownDog(x) & BlackDog(y) & Spotting(x, y) & LyingInDryGrass(y))	A grey silky dog is sleeping in the grass and a brown dog is looking on	exists x. exists y. (GreySilkyDog(x) & BrownDog(y) -> (SleepingInGrass(x) & LookingOn(y)))	n	False	False
3962	The brown dog is spotting a black dog lying in the dry grass	exists x. exists y. (BrownDog(x) & BlackDog(y) & Spotting(x, y) & LyingInDryGrass(y))	A grey silky dog is running in the grass and a brown dog looks on	exists x. exists y. (GreySilkyDog(x) & BrownDog(y) & Dog(x) & Dog(y) & RunningInGrass(x) & LooksOn(y, x))	n	False	False
3963	A man is standing on a dirt hill next to a black jeep	exists x. exists y. exists z. (Man(x) & DirtHill(y) & BlackJeep(z) & StandingOn(x, y) & NextTo(x, z))	A man is standing on a dirt hill next to a black car	exists x. exists y. exists z. (Man(x) & DirtHill(y) & BlackCar(z) & StandingOn(x, y) & NextTo(x, z))	e	False	False
3964	A man in a hat is standing outside of a green jeep	exists x.exists y. (Man(x) & Hat(x) & GreenJeep(y) -> StandingOutside(x, y))	A man is standing on a dirt hill next to a black car	exists x. exists y. exists z. (Man(x) & DirtHill(y) & BlackCar(z) & StandingOn(x, y) & NextTo(x, z))	n	False	False
3965	A black dog and a small white and black dog are looking up at a kitchen countertop	exists x.exists y.exists z. (BlackDog(x) & SmallWhiteAndBlackDog(y) & KitchenCountertop(z) -> LookingAt(x, y, z))	Two dogs are looking up at a kitchen countertop	exists x. exists y. (Dog(x) & Dog(y) & LookingUpAt(x, y, Countertop))	e	False	False
3966	A large dog and a small dog are standing next to the kitchen counter and are sniffing	exists x.exists y. (LargeDog(x) & SmallDog(y) -> (StandingNextToKitchenCounter(x, y) & Sniffing(x, y)))	A large dog and a small dog are standing next to the kitchen counter and are investigating	exists x.exists y.exists z. (LargeDog(x) & SmallDog(y) & KitchenCounter(z) -> (StandingNextTo(x, z) & StandingNextTo(y, z) & Investigating(x, y, z)))	e	False	False
3967	A black dog and a small white and black dog are looking up at a kitchen countertop	exists x.exists y.exists z. (BlackDog(x) & SmallWhiteAndBlackDog(y) & KitchenCountertop(z) -> LookingAt(x, y, z))	A large dog and a small dog is standing on the kitchen counter and investigate	exists x.exists y. (LargeDog(x) & SmallDog(y) -> (StandingOnKitchenCounter(x) & StandingOnKitchenCounter(y) & Investigate(x) & Investigate(y)))	n	False	False
3968	A black cat and a small white and black cat are looking up at a kitchen countertop	exists x. exists y. exists z. (BlackCat(x) & SmallWhiteAndBlackCat(y) & KitchenCountertop(z) -> LookingAt(x, y, z))	A large dog and a small dog are standing next to the kitchen counter and are investigating	exists x.exists y.exists z. (LargeDog(x) & SmallDog(y) & KitchenCounter(z) -> (StandingNextTo(x, z) & StandingNextTo(y, z) & Investigating(x, y, z)))	n	False	False
3969	A dog is playing on the ground	exists x. (Dog(x) & PlayingOnGround(x))	A dog is rolling on the ground	exists x. (Dog(x) & RollingOnGround(x))	n	False	False
3970	A tan dog which is dirty is rolling in the dirt and looking right at the camera	exists x. (TanDog(x) & Dirty(x) -> (RollingInDirt(x) & LookingRightAtCamera(x)))	A dirty tan dog is rolling in the dirt and looking right at the camera	exists x. (DirtyTanDog(x) -> (RollingInDirt(x) & LookingRightAtCamera(x)))	e	False	False
3971	A dirty tan dog is rolling in the water and looking right at the camera	exists x. (DirtyTanDog(x) -> (RollingInWater(x) & LookingRightAtCamera(x)))	A dirty tan dog is rolling in the dirt and looking right at the camera	exists x. (DirtyTanDog(x) -> (RollingInDirt(x) & LookingRightAtCamera(x)))	n	False	False
3972	A dirty tan dog is rolling in the dirt and looking right at the camera	exists x. (DirtyTanDog(x) -> (RollingInDirt(x) & LookingRightAtCamera(x)))	A dog is playing on the ground	exists x. (Dog(x) & PlayingOnGround(x))	e	False	False
3973	A dirty tan dog is rolling in the dirt and looking right at the camera	exists x. (DirtyTanDog(x) -> (RollingInDirt(x) & LookingRightAtCamera(x)))	A dog is rolling on the ground	exists x. (Dog(x) & RollingOnGround(x))	e	False	False
3974	An Arabic man isn't wearing a white hat	exists x. (ArabicMan(x) & not WearingWhiteHat(x))	An Arabic man is wearing a white hat	exists x. (Man(x) & Arabic(x) & Wearing(x, WhiteHat))	c	False	False
3975	A white hat is being worn by an Arabic man	exists x. exists y. (WhiteHat(x) & Man(y) & Wears(y, x))	A man with a white hat and brown shirt is behind a woman in red and is looking to the left	exists x.exists y. (Man(x) & Woman(y) & WhiteHat(x) & BrownShirt(x) & Red(y) & LookingToLeft(x) -> Behind(x, y))	n	False	False
3976	Little boys are playing in a water fountain in front of lots of people	exists x.exists y.exists z. (LittleBoy(x) & WaterFountain(y) & People(z) -> PlayingIn(x, y, z))	Little kids are playing in a water fountain in front of lots of people	exists x.exists y.exists z. (LittleKid(x) & WaterFountain(y) & People(z) -> PlayingIn(x, y, z))	e	False	False
3977	Little kids are playing in a water fountain in front of few people	exists x.exists y.exists z. (LittleKid(x) & WaterFountain(y) & FewPeople(z) -> PlayingIn(x, y, z))	Children are playing in a fountain that is spraying water from the ground	exists x. exists y. (Child(x) & Fountain(y) & SpraysWaterFromGround(y) -> PlaysIn(x, y))	e	False	False
3978	Children are playing in a fountain that is spraying water from the ground	exists x. exists y. (Child(x) & Fountain(y) & SpraysWaterFromGround(y) -> PlaysIn(x, y))	Little kids are playing in a water fountain in front of lots of people	exists x.exists y.exists z. (LittleKid(x) & WaterFountain(y) & People(z) -> PlayingIn(x, y, z))	n	False	False
3979	A person on a yellow dirt bike is taking a jump	exists x. (Person(x) & OnYellowDirtBike(x) -> TakingJump(x))	A person on a yellow clean bike is taking a jump	exists x. exists y. (Person(x) & YellowCleanBike(y) & Riding(x, y) -> TakingJump(x))	n	False	False
3980	A person on a yellow dirt bike is taking a jump	exists x. (Person(x) & OnYellowDirtBike(x) -> TakingJump(x))	A cyclist on a yellow bike is airborne	exists x.exists y. (Cyclist(x) & YellowBike(y) -> Airborne(x))	e	False	False
3981	An old man with a grey beard is riding a bike	exists x. (OldMan(x) & GreyBeard(x) & RidingBike(x))	An old man with a beard that is grey is riding a bike	exists x. (OldMan(x) & HasBeard(x) & GreyBeard(x) -> RidingBike(x))	e	True	False
3982	An old man with a grey beard is not riding a bike	exists x. (OldMan(x) & GreyBeard(x) -> not RidingBike(x))	An old man with a grey beard is riding a bike	exists x. (OldMan(x) & GreyBeard(x) & RidingBike(x))	c	False	False
3983	An old man with a beard that is grey is riding a bike	exists x. (OldMan(x) & HasBeard(x) & GreyBeard(x) -> RidingBike(x))	A man is wearing a beret and is riding the bicycle on a recreation trail	exists x. (Man(x) & WearingBeret(x) & RidingBicycleOnRecreationTrail(x))	n	False	False
3984	An old man with a grey beard is riding a bike	exists x. (OldMan(x) & GreyBeard(x) & RidingBike(x))	The bicycle is being ridden by a man wearing a beret on a recreation trail	exists x. exists y. exists z. (Bicycle(x) & Man(y) & Beret(z) & Riding(y, x) & Wearing(y, z) & RecreationTrail(x))	n	False	False
3985	An old man with a grey beard is riding a bike	exists x. (OldMan(x) & GreyBeard(x) & RidingBike(x))	A man is wearing a beret and is riding the bicycle on a recreation trail	exists x. (Man(x) & WearingBeret(x) & RidingBicycleOnRecreationTrail(x))	n	False	False
3986	Five adults are sitting on stone steps	exists x. exists y. exists z. exists w. exists v. (Adult(x) & Adult(y) & Adult(z) & Adult(w) & Adult(v) & SittingOnStoneSteps(x, y, z, w, v))	Five adults are sitting on a chair	exists x. exists y. exists z. exists w. exists v. (Adult(x) & Adult(y) & Adult(z) & Adult(w) & Adult(v) & Chair(x) & SittingOn(x, y) & SittingOn(x, z) & SittingOn(x, w) & SittingOn(x, v))	n	False	False
3987	People are sitting against a wall	exists x. exists y. (Person(x) & Wall(y) & SittingAgainst(x, y))	People is standing against a wall	exists x. exists y. (Person(x) & Wall(y) & StandingAgainst(x, y))	n	False	False
3988	People are sitting against a wall	exists x. exists y. (Person(x) & Wall(y) & SittingAgainst(x, y))	Five adults are sitting on steps made of stone	exists x. exists y. exists z. exists w. exists v. (Adult(x) & Adult(y) & Adult(z) & Adult(w) & Adult(v) & SittingOnSteps(x, y, z, w, v) & MadeOfStone(x, y, z, w, v))	n	False	False
3989	A man is rock climbing, pausing and calculating the route	exists x. (Man(x) -> (RockClimbing(x) & Pausing(x) & CalculatingRoute(x)))	A woman is rock climbing, pausing and calculating the route	exists x. (Woman(x) -> (RockClimbing(x) & Pausing(x) & CalculatingRoute(x)))	n	False	False
3990	A man is not rock climbing and a city and a bay are in the background	exists x. (Man(x) & not RockClimbing(x)) & exists y. (City(y) & InBackground(y)) & exists z. (Bay(z) & InBackground(z))	A man is rock climbing, pausing and calculating the route	exists x. (Man(x) -> (RockClimbing(x) & Pausing(x) & CalculatingRoute(x)))	n	False	False
3991	A little girl wearing a pink shirt is playing t-ball and taking a swing	exists x. (LittleGirl(x) & WearingPinkShirt(x) -> (PlayingTball(x) & TakingSwing(x)))	A little girl in a pink shirt is playing t-ball and taking a swing	exists x. (LittleGirl(x) & WearsPinkShirt(x) -> (PlaysTball(x) & TakesSwing(x)))	e	False	False
3992	A little girl in a pink shirt is playing t-ball and taking a swing	exists x. (LittleGirl(x) & WearsPinkShirt(x) -> (PlaysTball(x) & TakesSwing(x)))	A little boy in a pink shirt is playing t-ball and taking a swing	exists x. (LittleBoy(x) & WearsPinkShirt(x) -> (PlaysTball(x) & TakesSwing(x)))	n	False	False
3993	A little girl is hitting a baseball off a tee	exists x. exists y. exists z. (LittleGirl(x) & Baseball(y) & Tee(z) & HitsOff(x, y, z))	A little girl is hitting a ball off a tee	exists x. exists y. exists z. (LittleGirl(x) & Ball(y) & Tee(z) & HitsOff(x, y, z))	e	False	False
3994	A little girl is missing a baseball on a tee	exists x. (LittleGirl(x) & MissingBaseball(x))	A little girl is hitting a baseball off a tee	exists x. exists y. exists z. (LittleGirl(x) & Baseball(y) & Tee(z) & HitsOff(x, y, z))	c	False	False
3995	A girl is hitting a little tee with a baseball	exists x. exists y. exists z. (Girl(x) & Tee(y) & Baseball(z) & HitsWith(x, y, z))	A little girl is hitting a baseball off a tee	exists x. exists y. exists z. (LittleGirl(x) & Baseball(y) & Tee(z) & HitsOff(x, y, z))	n	False	False
3996	A little girl wearing a pink shirt is playing t-ball and taking a swing	exists x. (LittleGirl(x) & WearingPinkShirt(x) -> (PlayingTball(x) & TakingSwing(x)))	A little girl is hitting a baseball off a tee	exists x. exists y. exists z. (LittleGirl(x) & Baseball(y) & Tee(z) & HitsOff(x, y, z))	n	False	False
3997	A little girl is hitting a baseball off a tee	exists x. exists y. exists z. (LittleGirl(x) & Baseball(y) & Tee(z) & HitsOff(x, y, z))	A little girl in a pink shirt is playing t-ball and taking a swing	exists x. (LittleGirl(x) & WearsPinkShirt(x) -> (PlaysTball(x) & TakesSwing(x)))	n	False	False
3998	A group of people is gathering at a stand at the fair	exists x.exists y. (Group(x) & People(y) & Stand(z) & GatheringAt(y, z) -> Fair(z))	No group of people is gathering at a stand at the fair	not exists x. (GroupOfPeople(x) & GatheringAtStand(x))	c	False	False
3999	The people are standing at a carnival	exists x. (Person(x) -> exists y. (Carnival(y) & StandingAt(x, y)))	The people are standing at a parade	exists x. (Person(x) -> exists y. (Parade(y) & StandingAt(x, y)))	n	False	False
4000	The people are standing at a carnival	exists x. (Person(x) -> exists y. (Carnival(y) & StandingAt(x, y)))	The people are running at a carnival	exists x. exists y. (Person(x) & Carnival(y) -> RunsAt(x, y))	n	False	False
4001	The people are standing at a parade	exists x. (Person(x) -> exists y. (Parade(y) & StandingAt(x, y)))	A group of people is gathering at a stand at the fair	exists x.exists y. (Group(x) & People(y) & Stand(z) & GatheringAt(y, z) -> Fair(z))	n	False	False
4002	A group of people is gathering at a stand at the fair	exists x.exists y. (Group(x) & People(y) & Stand(z) & GatheringAt(y, z) -> Fair(z))	The people are standing at a carnival	exists x. (Person(x) -> exists y. (Carnival(y) & StandingAt(x, y)))	e	False	False
4003	A group of rollerbladers is lining up on the street	exists x. (RollerbladerGroup(x) -> LiningUpOnStreet(x))	A group of rollerbladers is scattering on the street	exists x. (RollerbladerGroup(x) -> ScatteringOnStreet(x))	n	False	False
4004	Rollerbladers are rolling in formation down a hill	exists x. exists y. exists z. (Rollerblader(x) & Hill(y) & RollingInFormation(x, y) -> Down(x, z) & Hill(z))	Rollerbladers are running in formation down a hill	exists x. exists y. exists z. (Rollerblader(x) & Hill(y) & Formation(z) -> RunningInFormation(x, y, z))	n	False	False
4005	A group of rollerbladers is lining up on the road	exists x. (RollerbladerGroup(x) -> LiningUpOnRoad(x))	Rollerbladers are rolling in formation down a hill	exists x. exists y. exists z. (Rollerblader(x) & Hill(y) & RollingInFormation(x, y) -> Down(x, z) & Hill(z))	n	False	False
4006	A group of rollerbladers is scattering on the street	exists x. (RollerbladerGroup(x) -> ScatteringOnStreet(x))	Rollerbladers are rolling in formation down a hill	exists x. exists y. exists z. (Rollerblader(x) & Hill(y) & RollingInFormation(x, y) -> Down(x, z) & Hill(z))	n	False	False
4007	A woman is standing with a pair of dogs	exists x. exists y. exists z. (Woman(x) & Dog(y) & Dog(z) & StandingWith(x, y) & StandingWith(x, z))	A woman is marching with a pair of dogs	exists x. exists y. exists z. (Woman(x) & Dog(y) & Dog(z) & MarchingWith(x, y, z))	n	False	False
4008	A woman is showing a dog with very long hair at a dog show	exists x.exists y. (Woman(x) & Dog(y) & VeryLongHair(y) -> ShowingAtDogShow(x, y))	A dog with very long hair is being showed by a woman at a dog show	exists x.exists y.exists z. (Dog(x) & Woman(y) & DogShow(z) & VeryLongHair(x) & At(x, z) -> Shows(y, x))	e	False	False
4009	A woman is showing a dog with very short hair at a dog show	exists x.exists y. (Woman(x) & Dog(y) & VeryShortHair(y) -> ShowsAtDogShow(x, y))	A woman is showing a dog with very long hair at a dog show	exists x.exists y. (Woman(x) & Dog(y) & VeryLongHair(y) -> ShowingAtDogShow(x, y))	c	False	False
4010	A dog with very long hair is being showed by a woman at a dog show	exists x.exists y.exists z. (Dog(x) & Woman(y) & DogShow(z) & VeryLongHair(x) & At(x, z) -> Shows(y, x))	A woman is marching with a pair of dogs	exists x. exists y. exists z. (Woman(x) & Dog(y) & Dog(z) & MarchingWith(x, y, z))	n	False	False
4011	A woman is showing a dog with very long hair at a dog show	exists x.exists y. (Woman(x) & Dog(y) & VeryLongHair(y) -> ShowingAtDogShow(x, y))	A woman is marching with a pair of dogs	exists x. exists y. exists z. (Woman(x) & Dog(y) & Dog(z) & MarchingWith(x, y, z))	n	False	False
4012	A man dressed in black is wearing inline skates and performing a trick on a rail	exists x. (Man(x) & DressedInBlack(x) -> (WearingInlineSkates(x) & PerformingTrickOnRail(x)))	A woman dressed in black is wearing inline skates and performing a trick on a rail	exists x. (Woman(x) & DressedInBlack(x) -> (WearsInlineSkates(x) & PerformsTrickOnRail(x)))	n	False	False
4013	A man dressed in black is wearing inline skates and performing acrobatics on a rail	exists x. (Man(x) & DressedInBlack(x) -> (WearsInlineSkates(x) & PerformsAcrobaticsOnRail(x)))	A skateboarder is making a jump off a ramp	exists x.exists y.exists z. (Skateboarder(x) & Ramp(y) & Jump(z) -> Makes(x, y, z))	n	False	False
4014	Three children are running down hill	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Running(x) & Running(y) & Running(z) & DownHill(x) & DownHill(y) & DownHill(z))	Three kids are running down hill	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & Running(x) & Running(y) & Running(z) & DownHill(x) & DownHill(y) & DownHill(z))	e	True	False
4015	Three children are running down hill	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Running(x) & Running(y) & Running(z) & DownHill(x) & DownHill(y) & DownHill(z))	Three children are running up hill	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & RunningUpHill(x) & RunningUpHill(y) & RunningUpHill(z))	c	False	False
4016	Three children are running down a grassy hillside	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Running(x) & Running(y) & Running(z) & GrassyHillside(x) & GrassyHillside(y) & GrassyHillside(z))	Three kids are running down hill	exists x. exists y. exists z. (Kid(x) & Kid(y) & Kid(z) & Running(x) & Running(y) & Running(z) & DownHill(x) & DownHill(y) & DownHill(z))	e	False	False
4017	Three children are running up hill	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & RunningUpHill(x) & RunningUpHill(y) & RunningUpHill(z))	Three children are running down a grassy hillside	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Running(x) & Running(y) & Running(z) & GrassyHillside(x) & GrassyHillside(y) & GrassyHillside(z))	n	False	False
4018	Three children are running down a grassy hillside	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Running(x) & Running(y) & Running(z) & GrassyHillside(x) & GrassyHillside(y) & GrassyHillside(z))	Three children are running down hill	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & Running(x) & Running(y) & Running(z) & DownHill(x) & DownHill(y) & DownHill(z))	e	False	False
4019	A white bird with a yellow beak is standing in the green grass	exists x. (WhiteBird(x) & YellowBeak(x) -> exists y. (GreenGrass(y) & StandingIn(x, y)))	A black and orange bird is standing in the grass	exists x. (Bird(x) & Black(x) & Orange(x) & StandingIn(x, Grass))	n	False	False
4020	A black bird with a yellow beak is standing in the green grass	exists x. (BlackBird(x) & YellowBeak(x) -> exists y. (GreenGrass(y) & StandingIn(x, y)))	A black and orange bird is not standing in the grass	exists x. (BlackAndOrangeBird(x) -> not StandingInGrass(x))	n	False	False
4021	A black and orange bird is standing in the grass	exists x. (Bird(x) & Black(x) & Orange(x) & StandingIn(x, Grass))	A black bird with a yellow beak is standing in the green grass	exists x. (BlackBird(x) & YellowBeak(x) -> exists y. (GreenGrass(y) & StandingIn(x, y)))	n	False	False
4022	A shirtless man is posing with a girl who is hiking in a park	exists x.exists y.exists z. (ShirtlessMan(x) & Girl(y) & Park(z) -> PosingWith(x, y, z))	A shirtless woman is posing with a girl who is hiking in a park	exists x.exists y.exists z. (ShirtlessWoman(x) & Girl(y) & Park(z) -> PosingWith(x, y, z))	n	False	False
4023	A man without a shirt is posing with the arms spread next to a woman	exists x.exists y. (Man(x) & Woman(y) & not HasShirt(x) & ArmsSpread(x) -> PosingNextTo(x, y))	A man without a shirt is posing with the arms spread near a woman	exists x.exists y. (Man(x) & Woman(y) & not HasShirt(x) & ArmsSpread(x) & Near(x, y) -> Posing(x, y))	e	False	False
4024	A shirtless man is posing with a girl who is hiking in a park	exists x.exists y.exists z. (ShirtlessMan(x) & Girl(y) & Park(z) -> PosingWith(x, y, z))	A man with a shirt is posing with the arms spread next to a woman	exists x.exists y. (Man(x) & Shirt(x) & Woman(y) & ArmsSpread(x) -> PosingNextTo(x, y))	n	False	False
4025	A shirtless person is posing with a girl who is hiking in a park	exists x.exists y.exists z. (ShirtlessPerson(x) & Girl(y) & Park(z) -> PosingWith(x, y, z))	A man without a shirt is posing with the arms spread next to a woman	exists x.exists y. (Man(x) & Woman(y) & not HasShirt(x) & ArmsSpread(x) -> PosingNextTo(x, y))	n	False	False
4026	A man without a shirt is posing with the arms spread next to a woman	exists x.exists y. (Man(x) & Woman(y) & not HasShirt(x) & ArmsSpread(x) -> PosingNextTo(x, y))	A shirtless man is posing with a girl who is hiking in a park	exists x.exists y.exists z. (ShirtlessMan(x) & Girl(y) & Park(z) -> PosingWith(x, y, z))	n	False	False
4027	Two white dogs are not running together	exists x. exists y. (WhiteDog(x) & WhiteDog(y) & not RunningTogether(x, y))	Two white dogs are running together	exists x. exists y. (Dog(x) & Dog(y) & White(x) & White(y) & RunningTogether(x, y))	c	False	False
4028	Two black puppies are playing near a pool	exists x. exists y. exists z. (BlackPuppy(x) & BlackPuppy(y) & Pool(z) & PlayingNear(x, y, z))	Two white puppies are playing near a pool	exists x. exists y. exists z. (WhitePuppy(x) & WhitePuppy(y) & Pool(z) & PlayingNear(x, y, z))	n	False	False
4029	Two white dogs are running together	exists x. exists y. (Dog(x) & Dog(y) & White(x) & White(y) & RunningTogether(x, y))	Two white puppies are playing near water	exists x. exists y. (WhitePuppy(x) & WhitePuppy(y) & PlayingNearWater(x) & PlayingNearWater(y))	n	False	False
4030	Two white dogs are quickly running together	exists x. exists y. (WhiteDog(x) & WhiteDog(y) & QuicklyRunningTogether(x, y))	Two white puppies are playing near a pool	exists x. exists y. exists z. (WhitePuppy(x) & WhitePuppy(y) & Pool(z) & PlayingNear(x, y, z))	n	False	False
4031	Two white puppies are playing near a pool	exists x. exists y. exists z. (WhitePuppy(x) & WhitePuppy(y) & Pool(z) & PlayingNear(x, y, z))	Two white dogs are not running together	exists x. exists y. (WhiteDog(x) & WhiteDog(y) & not RunningTogether(x, y))	n	False	False
4032	Two white puppies are playing near a pool	exists x. exists y. exists z. (WhitePuppy(x) & WhitePuppy(y) & Pool(z) & PlayingNear(x, y, z))	Two white dogs are running together	exists x. exists y. (Dog(x) & Dog(y) & White(x) & White(y) & RunningTogether(x, y))	n	False	False
4033	A group of people are standing around a sound mixing table	exists x.exists y.exists z. (Group(x) & Person(y) & SoundMixingTable(z) & StandingAround(y, z))	A group of people are standing around a sound mixing console	exists x. exists y. (Group(x) & People(y) & StandingAround(y, x) & SoundMixingConsole(x))	e	False	False
4034	A group of people are looking at sound equipment	exists x. exists y. (Group(x) & People(y) & LookingAt(y, x))	Some people is looking at sound equipment	exists x. (Person(x) & LookingAtSoundEquipment(x))	e	False	False
4035	A group of people are not looking at sound equipment	exists x. (GroupOfPeople(x) -> not LookingAtSoundEquipment(x))	A group of people are looking at sound equipment	exists x. exists y. (Group(x) & People(y) & LookingAt(y, x))	c	False	False
4036	A group of people are looking at sound equipment	exists x. exists y. (Group(x) & People(y) & LookingAt(y, x))	A group of people are standing around a sound mixing console	exists x. exists y. (Group(x) & People(y) & StandingAround(y, x) & SoundMixingConsole(x))	e	False	False
4037	A group of people are looking at sound equipment	exists x. exists y. (Group(x) & People(y) & LookingAt(y, x))	A group of people are not standing around a sound mixing table	not exists x. (Group(x) & People(x) & StandingAround(x, soundMixingTable))	n	False	False
4038	A group of people are looking at sound equipment	exists x. exists y. (Group(x) & People(y) & LookingAt(y, x))	A group of people are standing around a sound mixing table	exists x.exists y.exists z. (Group(x) & Person(y) & SoundMixingTable(z) & StandingAround(y, z))	n	False	False
4039	A young couple is sleeping in bed	exists x. exists y. (YoungCouple(x) & YoungCouple(y) & SleepingInBed(x, y))	A young couple is lying in bed	exists x. exists y. (YoungCouple(x) & YoungCouple(y) & LyingInBed(x, y))	e	False	False
4040	A young couple is lying on a bed together	exists x.exists y. (YoungCouple(x) & YoungCouple(y) -> LyingOnBedTogether(x, y))	A couple is lying on a bed together	exists x.exists y. (Couple(x) & Bed(y) -> LyingOn(x, y))	e	False	False
4041	A young couple is lying on a bed together	exists x.exists y. (YoungCouple(x) & YoungCouple(y) -> LyingOnBedTogether(x, y))	A young couple is lying on a couch together	exists x.exists y. (YoungCouple(x) & YoungCouple(y) -> LyingOnCouch(x, y))	n	False	False
4042	A young couple is lying in bed	exists x. exists y. (YoungCouple(x) & YoungCouple(y) & LyingInBed(x, y))	A couple is lying on a bed together	exists x.exists y. (Couple(x) & Bed(y) -> LyingOn(x, y))	e	False	False
4043	A young couple is lying on a couch together	exists x.exists y. (YoungCouple(x) & YoungCouple(y) -> LyingOnCouch(x, y))	A young couple is lying in bed	exists x. exists y. (YoungCouple(x) & YoungCouple(y) & LyingInBed(x, y))	n	False	False
4044	A young couple is lying in bed	exists x. exists y. (YoungCouple(x) & YoungCouple(y) & LyingInBed(x, y))	A young couple is lying on a bed together	exists x.exists y. (YoungCouple(x) & YoungCouple(y) -> LyingOnBedTogether(x, y))	e	False	False
4045	People are walking across a rope bridge over a rocky stream	exists x. exists y. exists z. (Person(x) & RopeBridge(y) & RockyStream(z) -> WalkingAcross(x, y, z))	People are not walking across a rope bridge over a rocky stream	not exists x. (Person(x) & WalkingAcrossRopeBridge(x) & OverRockyStream(x))	c	False	False
4046	People are crossing a rope bridge over a rocky stream	exists x. exists y. exists z. (Person(x) & RopeBridge(y) & RockyStream(z) -> Crossing(x, y, z))	Three people are walking across a rope and wood bridge over a river	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & WalkingAcross(x, ropeBridge) & WalkingAcross(y, woodBridge) & WalkingAcross(z, river))	n	False	False
4047	Three men are walking across a rope and wood bridge over a river	exists x. exists y. exists z. (Man(x) & Man(y) & Man(z) & WalkingAcrossRopeBridge(x) & WalkingAcrossWoodBridge(y) & WalkingAcrossRiver(z))	People are walking across a rope bridge over a rocky stream	exists x. exists y. exists z. (Person(x) & RopeBridge(y) & RockyStream(z) -> WalkingAcross(x, y, z))	n	False	False
4048	Several people are crossing in line a bridge	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & CrossingBridge(x, y, z) & CrossingBridge(y, z, x))	Several people are walking in line across a bridge	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & WalkingInLine(x, y, z, Bridge))	e	False	False
4049	Several people are crossing in line a bridge	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & CrossingBridge(x, y, z) & CrossingBridge(y, z, x))	Four people are walking on a bridge over a body of water	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & WalkingOnBridge(x, y, z, w) & OverBodyOfWater(x, y, z, w))	n	False	False
4050	Four people are walking on a bridge over a body of water	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & WalkingOnBridge(x, y, z, w) & OverBodyOfWater(x, y, z, w))	Several people are not walking in line across a bridge	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Bridge(b) & not WalkingInLine(x, y, z, b))	n	False	False
4051	Four people are walking on a bridge over a body of water	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & WalkingOnBridge(x, y, z, w) & OverBodyOfWater(x, y, z, w))	Several people are walking in line across a bridge	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & WalkingInLine(x, y, z, Bridge))	n	False	False
4052	A boy is wearing a yellow jacket and is jumping down from a rock	exists x. (Boy(x) & WearingYellowJacket(x) & JumpingDownFromRock(x))	A child is wearing a yellow jacket and is jumping down from a rock	exists x. (Child(x) & WearingYellowJacket(x) & JumpingDownFromRock(x))	e	False	False
4053	A child is wearing a yellow jacket and is jumping down from a rock	exists x. (Child(x) & WearingYellowJacket(x) & JumpingDownFromRock(x))	A child is wearing a yellow jacket and is jumping on a rock	exists x. (Child(x) & WearingYellowJacket(x) & JumpingOnRock(x))	n	False	False
4054	A boy is wearing a yellow jacket and is jumping down from a rock	exists x. (Boy(x) & WearingYellowJacket(x) & JumpingDownFromRock(x))	A young boy is jumping into water	exists x. (YoungBoy(x) & JumpingIntoWater(x))	n	False	False
4055	A young boy is jumping into water	exists x. (YoungBoy(x) & JumpingIntoWater(x))	A child is wearing a yellow jacket and is jumping on a rock	exists x. (Child(x) & WearingYellowJacket(x) & JumpingOnRock(x))	n	False	False
4056	A child is wearing a yellow jacket and is jumping down from a rock	exists x. (Child(x) & WearingYellowJacket(x) & JumpingDownFromRock(x))	A young kid is jumping into water	exists x. (YoungKid(x) & JumpingIntoWater(x))	n	False	False
4057	No young child is riding a three wheeled scooter down the sidewalk	not exists x. (YoungChild(x) & RidingThreeWheeledScooter(x) & DownSidewalk(x))	A young child is riding a three wheeled scooter down the sidewalk	exists x.exists y. (YoungChild(x) & ThreeWheeledScooter(y) -> Riding(x, y))	c	False	False
4058	A toddler is riding a plastic scooter toy	exists x. exists y. (Toddler(x) & PlasticScooterToy(y) & Riding(x, y))	A toddler is playing with a plastic scooter toy	exists x.exists y. (Toddler(x) & PlasticScooterToy(y) -> PlayingWith(x, y))	e	False	False
4059	A toddler is riding a plastic scooter toy	exists x. exists y. (Toddler(x) & PlasticScooterToy(y) & Riding(x, y))	A toddler is not riding a plastic scooter toy	exists x. (Toddler(x) -> not RidingPlasticScooterToy(x))	c	False	False
4060	A toddler is playing with a plastic scooter toy	exists x.exists y. (Toddler(x) & PlasticScooterToy(y) -> PlayingWith(x, y))	A young child is riding a three wheeled scooter down the sidewalk	exists x.exists y. (YoungChild(x) & ThreeWheeledScooter(y) -> Riding(x, y))	n	False	False
4061	A toddler is not riding a plastic scooter toy	exists x. (Toddler(x) -> not RidingPlasticScooterToy(x))	A young child is riding a three wheeled scooter down the sidewalk	exists x.exists y. (YoungChild(x) & ThreeWheeledScooter(y) -> Riding(x, y))	n	False	False
4062	The young child is riding a three wheeled scooter down the sidewalk	exists x.exists y. (YoungChild(x) & ThreeWheeledScooter(y) & Riding(x, y) -> DownSidewalk(x, y))	A toddler is riding a plastic scooter toy	exists x. exists y. (Toddler(x) & PlasticScooterToy(y) & Riding(x, y))	e	False	False
4063	A toddler is riding a plastic scooter toy	exists x. exists y. (Toddler(x) & PlasticScooterToy(y) & Riding(x, y))	A young child is riding a three wheeled scooter down the sidewalk	exists x.exists y. (YoungChild(x) & ThreeWheeledScooter(y) -> Riding(x, y))	n	True	False
4064	Three men are sitting on a hill and looking at the mountains and sky	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & SittingOnHill(x) & SittingOnHill(y) & SittingOnHill(z) & LookingAtMountains(x) & LookingAtMountains(y) & LookingAtMountains(z) & LookingAtSky(x) & LookingAtSky(y) & LookingAtSky(z))	Three men are sitting on a hill and looking at the sea	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & SittingOnHill(x) & SittingOnHill(y) & SittingOnHill(z) & LookingAtSea(x) & LookingAtSea(y) & LookingAtSea(z))	n	False	False
4065	Three men are sitting on a hill and looking at the sea	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & SittingOnHill(x) & SittingOnHill(y) & SittingOnHill(z) & LookingAtSea(x) & LookingAtSea(y) & LookingAtSea(z))	Three hikers are sitting on a mountainside and looking at the view with a pair of binoculars	exists x.exists y.exists z. (Hiker(x) & Hiker(y) & Hiker(z) & SittingOnMountainside(x) & SittingOnMountainside(y) & SittingOnMountainside(z) & LookingAtViewWithBinoculars(x))	n	False	False
4066	Three hikers are sitting on a mountainside and looking at the view with a pair of binoculars	exists x.exists y.exists z. (Hiker(x) & Hiker(y) & Hiker(z) & SittingOnMountainside(x) & SittingOnMountainside(y) & SittingOnMountainside(z) & LookingAtViewWithBinoculars(x))	Three men are sitting on a hill and looking at the mountains and sky	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & SittingOnHill(x) & SittingOnHill(y) & SittingOnHill(z) & LookingAtMountains(x) & LookingAtMountains(y) & LookingAtMountains(z) & LookingAtSky(x) & LookingAtSky(y) & LookingAtSky(z))	n	False	False
4067	A young girl is jumping rope on a sidewalk near a parking garage	exists x. exists y. exists z. (YoungGirl(x) & JumpingRope(x) & Sidewalk(y) & ParkingGarage(z) & Near(x, y) & Near(x, z))	A girl is jumping rope on a sidewalk near a parking garage	exists x. exists y. exists z. (Girl(x) & JumpingRope(x) & Sidewalk(y) & ParkingGarage(z) & Near(x, y) & Near(x, z))	e	False	False
4068	A girl is jumping rope on a sidewalk near a parking garage	exists x. exists y. exists z. (Girl(x) & JumpingRope(x) & Sidewalk(y) & ParkingGarage(z) & Near(x, y) & Near(x, z))	A boy is jumping rope on a sidewalk near a parking garage	exists x. exists y. exists z. (Boy(x) & JumpingRope(x) & Sidewalk(y) & ParkingGarage(z) & Near(y, z))	n	False	False
4069	A girl is skipping rope in a park	exists x. exists y. exists z. (Girl(x) & Rope(y) & Park(z) & Skip(x, y, z))	A girl is jumping rope on a sidewalk near a parking garage	exists x. exists y. exists z. (Girl(x) & JumpingRope(x) & Sidewalk(y) & ParkingGarage(z) & Near(x, y) & Near(x, z))	n	False	False
4070	People are clustered around a bonfire at night	exists x. exists y. (Person(x) & Bonfire(y) & Night(z) -> ClusteredAround(x, y, z))	People are sitting around a bonfire at night	exists x. (Person(x) -> SittingAroundBonfire(x))	e	False	False
4071	Several people are sitting around a fire at night	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fire(f) & SittingAround(x, y, z, f) & Night(n))	Several people are gathered around a fire at night	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fire(f) & GatheredAround(x, y, z, f) & Night(n) & OccursAt(f, n))	e	False	False
4072	No people is sitting around a fire at night	not exists x. (Person(x) & SittingAroundFire(x) & Night(x))	Several people are sitting around a fire at night	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fire(f) & SittingAround(x, y, z, f) & Night(n))	c	False	False
4073	People are clustered around a bonfire at night	exists x. exists y. (Person(x) & Bonfire(y) & Night(z) -> ClusteredAround(x, y, z))	Several people are gathered around a fire at night	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fire(f) & GatheredAround(x, y, z, f) & Night(n) & OccursAt(f, n))	e	False	False
4074	People are clustered around a bonfire at morning	exists x. exists y. (Person(x) & Bonfire(y) & Morning(z) -> ClusteredAround(x, y, z))	Several people are sitting around a fire at night	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fire(f) & SittingAround(x, y, z, f) & Night(n))	n	False	False
4075	Several people are sitting around a fire at night	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Fire(f) & SittingAround(x, y, z, f) & Night(n))	People are clustered around a bonfire at night	exists x. exists y. (Person(x) & Bonfire(y) & Night(z) -> ClusteredAround(x, y, z))	e	False	False
4076	A brown dog is standing in a lake	exists x. (Dog(x) & Brown(x) & StandingIn(x, lake))	A brown dog is standing in the water	exists x. (Dog(x) & Brown(x) & StandingInWater(x))	e	False	False
4077	A dog is not swimming in a body of water	exists x. (Dog(x) -> not SwimmingInBodyOfWater(x))	A dog is swimming in a body of water	exists x. exists y. (Dog(x) & BodyOfWater(y) & SwimmingIn(x, y))	c	False	False
4078	An animal is swimming in a body of water	exists x. exists y. (Animal(x) & BodyOfWater(y) -> SwimmingIn(x, y))	A brown dog is standing in a lake	exists x. (Dog(x) & Brown(x) & StandingIn(x, lake))	n	False	False
4079	A dog is not swimming in a body of water	exists x. (Dog(x) -> not SwimmingInBodyOfWater(x))	A brown dog is standing in a lake	exists x. (Dog(x) & Brown(x) & StandingIn(x, lake))	n	False	False
4080	A brown dog is standing in the water	exists x. (Dog(x) & Brown(x) & StandingInWater(x))	A dog is swimming in a body of water	exists x. exists y. (Dog(x) & BodyOfWater(y) & SwimmingIn(x, y))	n	False	False
4081	A white dog is standing in a lake	exists x. (WhiteDog(x) & StandingInLake(x))	A dog is swimming in a body of water	exists x. exists y. (Dog(x) & BodyOfWater(y) & SwimmingIn(x, y))	n	False	False
4082	A brown dog is standing in a lake	exists x. (Dog(x) & Brown(x) & StandingIn(x, lake))	A dog is swimming in a body of water	exists x. exists y. (Dog(x) & BodyOfWater(y) & SwimmingIn(x, y))	n	False	False
4083	Two dogs are running quickly through the park	exists x. exists y. (Dog(x) & Dog(y) & RunningQuickly(x) & RunningQuickly(y) & Park(z) & In(x, z) & In(y, z))	Two dogs are running through the park	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & Park(z) & In(x, z) & In(y, z))	e	False	False
4084	Two dogs are walking slowly through a park	exists x. exists y. (Dog(x) & Dog(y) & Walking(x) & Walking(y) & Slowly(x) & Slowly(y) & Park(z) & Through(x, z) & Through(y, z))	Two dogs are running through the park	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & Park(z) & In(x, z) & In(y, z))	n	False	False
4085	Two animals are running through the park	exists x. exists y. (Animal(x) & Animal(y) & RunningThroughPark(x) & RunningThroughPark(y))	Two dogs are running quickly through a park	exists x. exists y. (Dog(x) & Dog(y) & RunningQuickly(x) & RunningQuickly(y) & Park(z) & In(x, z) & In(y, z))	e	False	False
4086	Two dogs are running through the beach	exists x. exists y. (Dog(x) & Dog(y) & RunningThroughBeach(x) & RunningThroughBeach(y))	Two dogs are running quickly through a park	exists x. exists y. (Dog(x) & Dog(y) & RunningQuickly(x) & RunningQuickly(y) & Park(z) & In(x, z) & In(y, z))	n	False	False
4087	Two dogs are running quickly through a park	exists x. exists y. (Dog(x) & Dog(y) & RunningQuickly(x) & RunningQuickly(y) & Park(z) & In(x, z) & In(y, z))	Two dogs are running through the park	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & Park(z) & In(x, z) & In(y, z))	e	False	False
4088	A boy is wearing all black and is sliding down a blow up yellow slide	exists x. (Boy(x) & WearingAllBlack(x) & SlidingDownBlowUpYellowSlide(x))	A boy is wearing all black and is sliding down a blow up slide	exists x. (Boy(x) & WearingAllBlack(x) & SlidingDownBlowUpSlide(x))	e	False	False
4089	A boy is wearing all black and is sliding down a blow up yellow slide	exists x. (Boy(x) & WearingAllBlack(x) & SlidingDownBlowUpYellowSlide(x))	A girl is wearing all black and is sliding down a blow up yellow slide	exists x. (Girl(x) & WearingAllBlack(x) & SlidingDownBlowUpYellowSlide(x))	n	False	False
4090	A boy is speeding down a steep slide	exists x. (Boy(x) & Speeding(x) & Down(x, SteepSlide))	A boy is wearing all black and is sliding down a blow up slide	exists x. (Boy(x) & WearingAllBlack(x) & SlidingDownBlowUpSlide(x))	n	False	False
4091	A boy is speeding down a steep slide	exists x. (Boy(x) & Speeding(x) & Down(x, SteepSlide))	A girl is wearing all black and is sliding down a blow up yellow slide	exists x. (Girl(x) & WearingAllBlack(x) & SlidingDownBlowUpYellowSlide(x))	n	False	False
4092	A boy is wearing all black and is sliding down a blow up yellow slide	exists x. (Boy(x) & WearingAllBlack(x) & SlidingDownBlowUpYellowSlide(x))	A kid is speeding down a steep slide	exists x. (Kid(x) & Speeding(x) & On(x, SteepSlide))	n	False	False
4093	A boy is wearing all black and is sliding down a blow up yellow slide	exists x. (Boy(x) & WearingAllBlack(x) & SlidingDownBlowUpYellowSlide(x))	A girl is speeding down a steep slide	exists x. (Girl(x) & SpeedingDownSteepSlide(x))	n	False	False
4094	A man is hanging on the ledge of a balcony	exists x. (Man(x) & HangingOnLedge(x, Balcony))	A man is leaning on the ledge of a balcony	exists x. (Man(x) & LeaningOnBalconyLedge(x))	n	False	False
4095	A man with a white moustache is standing on a balcony and is looking at the road below	exists x. (Man(x) & WhiteMoustache(x) -> (StandingOnBalcony(x) & LookingAtRoad(x)))	A man with moustaches is standing on a balcony and is looking at the road below	exists x. (Man(x) & HasMoustaches(x) -> (StandingOnBalcony(x) & LookingAtRoad(x)))	e	False	False
4096	A man is leaning on the ledge of a balcony	exists x. (Man(x) & LeaningOnBalconyLedge(x))	A man with moustaches is standing on a balcony and is looking at the road below	exists x. (Man(x) & HasMoustaches(x) -> (StandingOnBalcony(x) & LookingAtRoad(x)))	n	False	False
4097	A man with a white moustache is standing on a balcony and is looking at the road below	exists x. (Man(x) & WhiteMoustache(x) -> (StandingOnBalcony(x) & LookingAtRoad(x)))	A man is hanging on the ledge of a balcony	exists x. (Man(x) & HangingOnLedge(x, Balcony))	n	False	False
4098	A man with a white moustache is standing on a balcony and is looking at the road below	exists x. (Man(x) & WhiteMoustache(x) -> (StandingOnBalcony(x) & LookingAtRoad(x)))	A man is leaning on the ledge of a balcony	exists x. (Man(x) & LeaningOnBalconyLedge(x))	n	False	False
4099	A small white dog is running in a lawn	exists x. (Dog(x) & Small(x) & White(x) & RunningIn(x, lawn))	A small white dog is running across a lawn	exists x. (Dog(x) & Small(x) & White(x) & RunningAcross(x, lawn))	e	False	False
4100	A brown and white dog with a brown and black bandanna is running very fast	exists x. (Dog(x) & Brown(x) & White(x) & BrownAndBlackBandanna(x) -> RunsVeryFast(x))	A brown and white cat with a brown and black bandanna is running very fast	exists x. (Cat(x) & Brown(x) & White(x) & BrownAndBlackBandanna(x) -> RunsVeryFast(x))	n	False	False
4101	A small white dog is running across a lawn	exists x. (Dog(x) & Small(x) & White(x) & RunningAcross(x, lawn))	A brown and white cat with a brown and black bandanna is running very fast	exists x. (Cat(x) & Brown(x) & White(x) & BrownAndBlackBandanna(x) -> RunsVeryFast(x))	n	False	False
4102	A big white dog is running across a lawn	exists x. (Dog(x) & Big(x) & White(x) & RunningAcross(x, lawn))	A brown and white dog with a brown and black bandanna is running very fast	exists x. (Dog(x) & Brown(x) & White(x) & BrownAndBlackBandanna(x) -> RunsVeryFast(x))	n	False	False
4103	The dog is on a leash and is walking out of the water	exists x. (Dog(x) & OnLeash(x) & WalkingOutOfWater(x))	The dog is on a leash and is walking near the water	exists x. (Dog(x) & OnLeash(x) & WalkingNearWater(x))	n	False	False
4104	The dog is on a leash and is walking in the water	exists x. (Dog(x) & OnLeash(x) & WalkingInWater(x))	The dog is on a leash and is walking out of the water	exists x. (Dog(x) & OnLeash(x) & WalkingOutOfWater(x))	c	False	False
4105	A dog on a leash is walking in the water	exists x. (Dog(x) & OnLeash(x) -> WalkingInWater(x))	The dog is on a leash and is walking out of the water	exists x. (Dog(x) & OnLeash(x) & WalkingOutOfWater(x))	n	False	False
4106	A child is wearing a coat and is carrying a red sled behind a child in a green and black coat	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(x) & Carrying(x, z) & RedSled(z) & GreenAndBlackCoat(z))	A child is wearing a coat and is carrying a red sled near a child in a green and black coat	exists x.exists y.exists z. (Child(x) & Child(y) & Child(z) & WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(y) -> Near(x, y))	e	False	False
4107	A child is not wearing a coat and is carrying a red sled behind a child in a green and black coat	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & not WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(y) & GreenAndBlackCoat(z))	A child is wearing a coat and is carrying a red sled behind a child in a green and black coat	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(x) & Carrying(x, z) & RedSled(z) & GreenAndBlackCoat(z))	c	False	False
4108	A child is not wearing a coat and is carrying a red sled behind a child in a green and black coat	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & not WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(y) & GreenAndBlackCoat(z))	A little girl in a green coat and a boy holding a red sled are walking in the snow	exists x. exists y. (LittleGirl(x) & GreenCoat(x) & Boy(y) & RedSled(y) & WalkingInSnow(x, y))	n	False	False
4109	A red sled is being held by a little girl in a green coat and a boy walking in the snow	exists x.exists y.exists z. (RedSled(x) & LittleGirl(y) & GreenCoat(y) & Boy(z) & WalkingInSnow(z) -> Holds(y, x))	A child is wearing a coat and is carrying a red sled behind a child in a green and black coat	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(x) & Carrying(x, z) & RedSled(z) & GreenAndBlackCoat(z))	n	False	False
4110	A child is wearing a coat and is carrying a red sled behind a child in a green and black coat	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(x) & Carrying(x, z) & RedSled(z) & GreenAndBlackCoat(z))	A little girl in a green coat and a boy holding a red sled are lying in the snow	exists x. exists y. (LittleGirl(x) & GreenCoat(x) & Boy(y) & RedSled(y) & LyingInSnow(x, y))	n	False	False
4111	A little girl in a green coat and a boy holding a red sled are walking in the snow	exists x. exists y. (LittleGirl(x) & GreenCoat(x) & Boy(y) & RedSled(y) & WalkingInSnow(x, y))	A child is wearing a coat and is carrying a red sled behind a child in a green and black coat	exists x. exists y. exists z. (Child(x) & Child(y) & Child(z) & WearingCoat(x) & WearingCoat(y) & WearingCoat(z) & RedSled(x) & GreenAndBlackCoat(x) & Carrying(x, z) & RedSled(z) & GreenAndBlackCoat(z))	n	False	False
4112	A toddler is standing up	exists x. (Toddler(x) -> StandingUp(x))	A toddler is sitting down	exists x. (Toddler(x) & SittingDown(x))	n	False	False
4113	A boy is sitting in a seat	exists x. exists y. (Boy(x) & Seat(y) & SittingIn(x, y))	A girl is sitting in a seat	exists x.exists y. (Girl(x) & Seat(y) & SittingIn(x, y))	n	False	False
4114	A toddler is sitting in a seat	exists x. exists y. (Toddler(x) & Seat(y) & SittingIn(x, y))	A toddler is sitting down	exists x. (Toddler(x) & SittingDown(x))	e	False	False
4115	A toddler is sitting down	exists x. (Toddler(x) & SittingDown(x))	A girl is sitting in a seat	exists x.exists y. (Girl(x) & Seat(y) & SittingIn(x, y))	n	False	False
4116	A boy is sitting in a seat	exists x. exists y. (Boy(x) & Seat(y) & SittingIn(x, y))	A toddler is standing up	exists x. (Toddler(x) -> StandingUp(x))	n	False	False
4117	A dog is catching a black frisbee	exists x. exists y. (Dog(x) & BlackFrisbee(y) & Catching(x, y))	A dog is catching a white frisbee	exists x. exists y. (Dog(x) & WhiteFrisbee(y) & Catching(x, y))	n	False	False
4118	A large wet yellow dog is holding a toy	exists x. (LargeWetYellowDog(x) -> exists y. (Toy(y) & Holding(x, y)))	A dog is catching a black frisbee	exists x. exists y. (Dog(x) & BlackFrisbee(y) & Catching(x, y))	n	False	False
4119	A dog is catching a black frisbee	exists x. exists y. (Dog(x) & BlackFrisbee(y) & Catching(x, y))	A large wet yellow cat is retrieving a toy	exists x. (Cat(x) & Large(x) & Wet(x) & Yellow(x) & exists y. (Toy(y) & Retrieving(x, y)))	n	False	False
4120	A large wet yellow dog is retrieving a toy	exists x. (Dog(x) & Large(x) & Wet(x) & Yellow(x) & exists y. (Toy(y) & Retrieving(x, y)))	A dog is biting a black frisbee	exists x. exists y. (Dog(x) & BlackFrisbee(y) & Biting(x, y))	n	False	False
4121	A large wet yellow dog is retrieving a toy	exists x. (Dog(x) & Large(x) & Wet(x) & Yellow(x) & exists y. (Toy(y) & Retrieving(x, y)))	A dog is catching a white frisbee	exists x. exists y. (Dog(x) & WhiteFrisbee(y) & Catching(x, y))	n	False	False
4122	A large wet yellow dog is retrieving a toy	exists x. (Dog(x) & Large(x) & Wet(x) & Yellow(x) & exists y. (Toy(y) & Retrieving(x, y)))	A dog is catching a black frisbee	exists x. exists y. (Dog(x) & BlackFrisbee(y) & Catching(x, y))	n	False	False
4123	A woman is wearing a long black coat and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Woman(x) & exists y. (LongBlackCoat(y) & Wears(x, y)) & exists z. (BrownHat(z) & Wears(x, z)) & exists w. (Park(w) & WalksPast(x, w)) & exists u. (BloomingTrees(u) & In(w, u)))	A woman is wearing a long black jacket and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Woman(x) & exists y. (LongBlackJacket(y) & Wears(x, y)) & exists z. (BrownHat(z) & Wears(x, z)) & exists w. (Park(w) & WalksPast(x, w)) & exists u. (BloomingTrees(u) & In(w, u)))	e	False	False
4124	A man is wearing a long black jacket and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Man(x) & WearingLongBlackJacket(x) & WearingBrownHat(x) & WalkingPastPark(x) & BloomingTrees(x))	A woman is wearing a long black jacket and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Woman(x) & exists y. (LongBlackJacket(y) & Wears(x, y)) & exists z. (BrownHat(z) & Wears(x, z)) & exists w. (Park(w) & WalksPast(x, w)) & exists u. (BloomingTrees(u) & In(w, u)))	n	False	False
4125	A woman is walking in a city street	exists x. exists y. (Woman(x) & CityStreet(y) & WalkingIn(x, y))	A woman is walking in a road	exists x. (Woman(x) & Walking(x) & InRoad(x))	e	False	False
4126	A woman is walking in a road	exists x. (Woman(x) & Walking(x) & InRoad(x))	A woman is wearing a long black jacket and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Woman(x) & exists y. (LongBlackJacket(y) & Wears(x, y)) & exists z. (BrownHat(z) & Wears(x, z)) & exists w. (Park(w) & WalksPast(x, w)) & exists u. (BloomingTrees(u) & In(w, u)))	n	False	False
4127	A man is walking in a city street	exists x. exists y. (Man(x) & CityStreet(y) & WalkingIn(x, y))	A woman is wearing a long black jacket and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Woman(x) & exists y. (LongBlackJacket(y) & Wears(x, y)) & exists z. (BrownHat(z) & Wears(x, z)) & exists w. (Park(w) & WalksPast(x, w)) & exists u. (BloomingTrees(u) & In(w, u)))	n	False	False
4128	A woman is walking in a city street	exists x. exists y. (Woman(x) & CityStreet(y) & WalkingIn(x, y))	A woman is wearing a long black coat and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Woman(x) & exists y. (LongBlackCoat(y) & Wears(x, y)) & exists z. (BrownHat(z) & Wears(x, z)) & exists w. (Park(w) & WalksPast(x, w)) & exists u. (BloomingTrees(u) & In(w, u)))	n	False	False
4129	A woman is walking in a city street	exists x. exists y. (Woman(x) & CityStreet(y) & WalkingIn(x, y))	A woman is wearing a long black jacket and a brown hat and is walking past a park with a lot of blooming trees	exists x. (Woman(x) & exists y. (LongBlackJacket(y) & Wears(x, y)) & exists z. (BrownHat(z) & Wears(x, z)) & exists w. (Park(w) & WalksPast(x, w)) & exists u. (BloomingTrees(u) & In(w, u)))	n	False	False
4130	Two people are not riding motorbikes	not exists x. exists y. (Person(x) & Person(y) & Motorbike(x) & Motorbike(y) & Riding(x, y))	Two people are riding motorbikes	exists x. exists y. (Person(x) & Person(y) & RidingMotorbike(x) & RidingMotorbike(y))	c	False	False
4131	Dirt bikers are riding on a trail	exists x.exists y. (DirtBiker(x) & Trail(y) -> RidingOn(x, y))	Bikers are riding on a trail	exists x. exists y. (Biker(x) & Trail(y) -> RidingOn(x, y))	e	False	False
4132	Dirt bikers are not riding on a trail	exists x. (DirtBiker(x) -> not RidingOnTrail(x))	Dirt bikers are riding on a trail	exists x.exists y. (DirtBiker(x) & Trail(y) -> RidingOn(x, y))	c	False	False
4133	Two people are riding motorbikes	exists x. exists y. (Person(x) & Person(y) & RidingMotorbike(x) & RidingMotorbike(y))	Bikers are riding on a trail	exists x. exists y. (Biker(x) & Trail(y) -> RidingOn(x, y))	n	False	False
4134	Two people are riding motorbikes	exists x. exists y. (Person(x) & Person(y) & RidingMotorbike(x) & RidingMotorbike(y))	Dirt bikers are not riding on a trail	exists x. (DirtBiker(x) -> not RidingOnTrail(x))	n	False	False
4135	Dirt bikers are riding on a trail	exists x.exists y. (DirtBiker(x) & Trail(y) -> RidingOn(x, y))	Motorbikes are being ridden by two people	exists x. (Motorbike(x) -> exists y.exists z. (Person(y) & Person(z) & Riding(y, x) & Riding(z, x)))	n	False	False
4136	A woman is leaning against a pole and is surrounded by people	exists x. exists y. (Woman(x) & Pole(y) & LeaningAgainst(x, y) & SurroundedByPeople(x))	A man is leaning against a pole and is surrounded by people	exists x. exists y. (Man(x) & Pole(y) & LeaningAgainst(x, y) & SurroundedByPeople(x))	n	False	False
4137	A middle eastern man is standing with the back against a lamp post near to other people	exists x. exists y. exists z. (MiddleEasternMan(x) & LampPost(y) & Person(z) & StandingAgainst(x, y) & Near(x, z))	A middle eastern man is standing against a lamp post near to other people	exists x.exists y.exists z. (MiddleEasternMan(x) & LampPost(y) & Person(z) & StandingAgainst(x, y) & Near(x, z))	e	True	False
4138	A middle eastern man is standing with the back against a lamp post near to other people	exists x. exists y. exists z. (MiddleEasternMan(x) & LampPost(y) & Person(z) & StandingAgainst(x, y) & Near(x, z))	A man is leaning against a pole and is surrounded	exists x. exists y. (Man(x) & Pole(y) -> LeaningAgainst(x, y))	e	False	False
4139	A middle eastern man is standing with the back against a lamp post near to other people	exists x. exists y. exists z. (MiddleEasternMan(x) & LampPost(y) & Person(z) & StandingAgainst(x, y) & Near(x, z))	A woman is leaning against a pole and is surrounded by people	exists x. exists y. (Woman(x) & Pole(y) & LeaningAgainst(x, y) & SurroundedByPeople(x))	n	False	False
4140	A middle eastern man is standing with the back against a lamp post near to other people	exists x. exists y. exists z. (MiddleEasternMan(x) & LampPost(y) & Person(z) & StandingAgainst(x, y) & Near(x, z))	A man is leaning against a pole and is surrounded by people	exists x. exists y. (Man(x) & Pole(y) & LeaningAgainst(x, y) & SurroundedByPeople(x))	e	False	False
4141	A man and a woman are standing in front of an art gallery and are looking at a map	exists x.exists y.exists z. (Man(x) & Woman(y) & ArtGallery(z) & StandingInFrontOf(x, y, z) -> LookingAtMap(x, y, z))	A couple is looking at a map	exists x.exists y.exists z. (Couple(x) & Map(y) & LookingAt(x, y) -> Map(z))	e	True	False
4142	The dog is running across the dirty path	exists x. exists y. (Dog(x) & Path(y) & Dirty(y) & RunningAcross(x, y))	The dog is running across the gravel	exists x. (Dog(x) -> exists y. (Gravel(y) & RunningAcross(x, y)))	n	False	False
4143	The cat is running across the gravel	exists x. (Cat(x) -> exists y. (Gravel(y) & RunningAcross(x, y)))	The dog is running across the gravel	exists x. (Dog(x) -> exists y. (Gravel(y) & RunningAcross(x, y)))	n	False	False
4144	A little dog is running on the beach	exists x. (LittleDog(x) & RunningOnBeach(x))	A little dog is running on the sand	exists x. (LittleDog(x) & RunningOnSand(x))	e	False	False
4145	A little dog is running on the beach	exists x. (LittleDog(x) & RunningOnBeach(x))	The dog is running across the gravel	exists x. (Dog(x) -> exists y. (Gravel(y) & RunningAcross(x, y)))	n	False	False
4146	The dog is running across the dirty path	exists x. exists y. (Dog(x) & Path(y) & Dirty(y) & RunningAcross(x, y))	A little dog is running on the sand	exists x. (LittleDog(x) & RunningOnSand(x))	n	False	False
4147	A little dog is running on the sand	exists x. (LittleDog(x) & RunningOnSand(x))	The cat is running across the gravel	exists x. (Cat(x) -> exists y. (Gravel(y) & RunningAcross(x, y)))	n	False	False
4148	A little dog is running on the sand	exists x. (LittleDog(x) & RunningOnSand(x))	The dog is running across the gravel	exists x. (Dog(x) -> exists y. (Gravel(y) & RunningAcross(x, y)))	n	False	False
4149	One boy in orange shorts is standing on a rock cliff over the water and the other boy in black shorts is diving into the water	exists x. exists y. (Boy(x) & Boy(y) & OrangeShorts(x) & BlackShorts(y) & StandingOnRockCliff(x) & DivingIntoWater(y))	One boy in orange shorts is standing on a rock cliff over the water and the other boy in black shorts is jumping of it into the water	exists x. exists y. (Boy(x) & Boy(y) & OrangeShorts(x) & BlackShorts(y) & StandingOnRockCliff(x) & JumpingIntoWater(y, x))	e	False	False
4150	A boy is playing a game with wooden blocks	exists x. exists y. exists z. (Boy(x) & Game(y) & WoodenBlocks(z) & Playing(x, y, z))	A boy is playing a game with blocks made of wood	exists x.exists y.exists z. (Boy(x) & Game(y) & Blocks(z) & MadeOfWood(z) -> PlaysWith(x, y, z))	e	False	False
4151	A boy is playing a game with steel blocks	exists x. exists y. exists z. (Boy(x) & Game(y) & SteelBlocks(z) & Playing(x, y, z))	A boy is playing a game with wooden blocks	exists x. exists y. exists z. (Boy(x) & Game(y) & WoodenBlocks(z) & Playing(x, y, z))	n	False	False
4152	A boy in blue shirt is looking at his hand near a stack of blocks on table	exists x.exists y.exists z. (Boy(x) & BlueShirt(x) & Hand(y) & StackOfBlocks(z) & Table(t) -> LookingAtNear(x, y, z, t))	A boy is playing a game with steel blocks	exists x. exists y. exists z. (Boy(x) & Game(y) & SteelBlocks(z) & Playing(x, y, z))	n	False	False
4153	A boy in blue shirt is looking at his hand near a stack of blocks on table	exists x.exists y.exists z. (Boy(x) & BlueShirt(x) & Hand(y) & StackOfBlocks(z) & Table(t) -> LookingAtNear(x, y, z, t))	A boy is playing a game with wooden blocks	exists x. exists y. exists z. (Boy(x) & Game(y) & WoodenBlocks(z) & Playing(x, y, z))	n	False	False
4154	A woman is standing at the beach with a dog on a leash	exists x. exists y. exists z. (Woman(x) & Beach(y) & Dog(z) & StandingAt(x, y) & OnLeash(z, x))	A woman is standing at the beach with an animal on a leash	exists x. exists y. exists z. (Woman(x) & Beach(y) & Animal(z) & StandingAt(x, y) & OnLeash(z, x))	e	True	False
4155	A woman is running on the beach with a dog on a leash	exists x. exists y. exists z. (Woman(x) & Beach(y) & Dog(z) & RunningOn(x, y) & HasLeash(x, z))	A woman is standing at the beach with a dog on a leash	exists x. exists y. exists z. (Woman(x) & Beach(y) & Dog(z) & StandingAt(x, y) & OnLeash(z, x))	n	False	False
4156	A woman is running on the beach with a dog on a leash	exists x. exists y. exists z. (Woman(x) & Beach(y) & Dog(z) & RunningOn(x, y) & HasLeash(x, z))	A woman in a bikini is pulling a dog on a leash at the beach	exists x.exists y.exists z. (Woman(x) & Bikini(x) & Dog(y) & Beach(z) -> PullsOnLeash(x, y, z))	n	False	False
4157	A woman is standing at the beach with a dog on a leash	exists x. exists y. exists z. (Woman(x) & Beach(y) & Dog(z) & StandingAt(x, y) & OnLeash(z, x))	A woman in a bikini is pulling a dog on a leash at the seashore	exists x.exists y.exists z. (Woman(x) & Bikini(x) & Dog(y) & Seashore(z) -> PullsOnLeash(x, y, z))	n	False	False
4158	A group of five old adults are lounging indoors	exists x. (Group(x) & OldAdults(x) & Lounging(x) & Indoors(x))	A group of five young adults are lounging indoors	exists x. (Group(x) & YoungAdults(x) & Lounging(x) & Indoors(x))	n	False	False
4159	A group of five old adults are lounging indoors	exists x. (Group(x) & OldAdults(x) & Lounging(x) & Indoors(x))	A small group of people are standing and two are sitting on the couch	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & Standing(x) & Standing(y) & SittingOnCouch(z))	n	False	False
4160	A red and brown dog is digging its nose inside the holiday gift bag	exists x. (Dog(x) & Red(x) & Brown(x) -> DiggingNoseInsideGiftBag(x))	The red and brown dog is digging its nose inside a holiday gift bag	exists x. (Dog(x) & Red(x) & Brown(x) & DiggingNose(x) & Inside(x, holidayGiftBag))	e	False	False
4161	The red and brown dog is digging its nose inside a holiday gift bag	exists x. (Dog(x) & Red(x) & Brown(x) & DiggingNose(x) & Inside(x, holidayGiftBag))	The red and brown dog is not digging its nose inside a holiday gift bag	exists x. (Dog(x) & (Red(x) | Brown(x)) -> not DiggingNoseInsideGiftBag(x))	c	False	False
4162	A dog has its head inside a red and green gift bag	exists x. (Dog(x) -> HasHeadInRedAndGreenGiftBag(x))	A red and brown dog is digging its nose inside the holiday gift bag	exists x. (Dog(x) & Red(x) & Brown(x) -> DiggingNoseInsideGiftBag(x))	n	False	False
4163	A dog has its head inside a red and green gift bag	exists x. (Dog(x) -> HasHeadInRedAndGreenGiftBag(x))	The red and brown dog is not digging its nose inside a holiday gift bag	exists x. (Dog(x) & (Red(x) | Brown(x)) -> not DiggingNoseInsideGiftBag(x))	n	False	False
4164	A dog has its head inside a red and green gift bag	exists x. (Dog(x) -> HasHeadInRedAndGreenGiftBag(x))	The red and brown dog is digging its nose inside a holiday gift bag	exists x. (Dog(x) & Red(x) & Brown(x) & DiggingNose(x) & Inside(x, holidayGiftBag))	n	False	False
4165	The man is biking in the snow and wearing a red jacket	exists x. (Man(x) & Biking(x) & InSnow(x) & Wearing(x, redJacket))	The rider is biking in the snow and wearing a red jacket	exists x. (Rider(x) -> (BikingInSnow(x) & WearingRedJacket(x)))	e	False	False
4166	A cyclist is biking in a snowy forest in the dark	exists x. (Cyclist(x) & Biking(x) & InSnowyForest(x) & InDark(x))	The rider is biking in the snow and wearing a red jacket	exists x. (Rider(x) -> (BikingInSnow(x) & WearingRedJacket(x)))	n	False	False
4167	A cyclist is biking in a snowy forest at night	exists x. (Cyclist(x) & Biking(x) & In(x, SnowyForest) & At(x, Night))	The man is biking in the snow and wearing a red jacket	exists x. (Man(x) & Biking(x) & InSnow(x) & Wearing(x, redJacket))	n	False	False
4168	A girl with a bikini is playing in the dunes	exists x. (Girl(x) & WearsBikini(x) -> PlaysInDunes(x))	A girl with a bikini is playing in the sand	exists x. (Girl(x) & WearsBikini(x) -> PlaysInSand(x))	e	False	False
4169	A girl with a bikini is playing in the dunes	exists x. (Girl(x) & WearsBikini(x) -> PlaysInDunes(x))	No girl with a bikini is playing in the dunes	not exists x. (Girl(x) & Bikini(x) & PlayingInDunes(x))	c	False	False
4170	A girl with a bikini is playing in the dunes	exists x. (Girl(x) & WearsBikini(x) -> PlaysInDunes(x))	A young girl in a bikini is sitting on the beach	exists x. (YoungGirl(x) & WearingBikini(x) -> SittingOnBeach(x))	n	False	False
4171	A young girl in a bikini is jumping on the beach	exists x. (YoungGirl(x) & WearingBikini(x) -> JumpingOnBeach(x))	A girl with a bikini is playing in the sand	exists x. (Girl(x) & WearsBikini(x) -> PlaysInSand(x))	n	False	False
4172	A young girl in a bikini is jumping on the beach	exists x. (YoungGirl(x) & WearingBikini(x) -> JumpingOnBeach(x))	No girl with a bikini is playing in the dunes	not exists x. (Girl(x) & Bikini(x) & PlayingInDunes(x))	n	False	False
4173	A boy is wearing a hat and is walking in the wet sand	exists x. (Boy(x) & WearingHat(x) & WalkingInWetSand(x))	A little kid is wearing a hat and is walking in the wet sand	exists x. (LittleKid(x) & WearingHat(x) & WalkingInWetSand(x))	e	False	False
4174	A wet kid is wearing sand and is walking on a little hat	exists x. (Kid(x) & Wet(x) -> (WearingSand(x) & WalkingOnLittleHat(x)))	A little kid is wearing a hat and is walking in the wet sand	exists x. (LittleKid(x) & WearingHat(x) & WalkingInWetSand(x))	n	False	False
4175	A boy is wearing a white hat and is running on the beach	exists x. (Boy(x) & WearingWhiteHat(x) & RunningOnBeach(x))	A boy is wearing a white hat and is walking on the beach	exists x. (Boy(x) & WearingWhiteHat(x) & WalkingOnBeach(x))	n	False	False
4176	A boy is wearing a white hat and is running on the beach	exists x. (Boy(x) & WearingWhiteHat(x) & RunningOnBeach(x))	A wet kid is wearing sand and is walking on a little hat	exists x. (Kid(x) & Wet(x) -> (WearingSand(x) & WalkingOnLittleHat(x)))	n	False	False
4177	A boy is wearing a white hat and is running on the beach	exists x. (Boy(x) & WearingWhiteHat(x) & RunningOnBeach(x))	A little kid is wearing a hat and is walking in the wet sand	exists x. (LittleKid(x) & WearingHat(x) & WalkingInWetSand(x))	n	False	False
4178	A cardboard box is being touched by a man in a black hat	exists x.exists y. (CardboardBox(x) & Man(y) & BlackHat(y) & Touching(y, x))	A man in a black hat is touching a cardboard box	exists x. (Man(x) & WearsBlackHat(x) -> TouchesCardboardBox(x))	e	False	False
4179	A man in a black hat is not reaching for a box	exists x. (Man(x) & WearsBlackHat(x) -> not ReachingForBox(x))	A man in a black hat is reaching for a box	exists x. (Man(x) & WearsBlackHat(x) -> ReachingForBox(x))	c	False	False
4180	A man in a black hat is touching a cardboard box	exists x. (Man(x) & WearsBlackHat(x) -> TouchesCardboardBox(x))	A person in a black hat is reaching for a box	exists x.exists y.exists z. (Person(x) & BlackHat(x) & Box(y) & ReachesFor(x, y) -> ReachesFor(x, z))	n	True	False
4181	A man in a black hat is touching a cardboard box	exists x. (Man(x) & WearsBlackHat(x) -> TouchesCardboardBox(x))	A man in a black hat is not reaching for a box	exists x. (Man(x) & WearsBlackHat(x) -> not ReachingForBox(x))	n	False	False
4182	A man in a black hat is reaching for a box	exists x. (Man(x) & WearsBlackHat(x) -> ReachingForBox(x))	A cardboard box is being touched by a man in a black hat	exists x.exists y. (CardboardBox(x) & Man(y) & BlackHat(y) & Touching(y, x))	n	False	False
4183	A man in a black hat is reaching for a box	exists x. (Man(x) & WearsBlackHat(x) -> ReachingForBox(x))	A man in a black hat is touching a cardboard box	exists x. (Man(x) & WearsBlackHat(x) -> TouchesCardboardBox(x))	n	False	False
4184	A blond kid is going down a slide and throwing up his arms	exists x. (BlondKid(x) -> (GoingDownSlide(x) & ThrowingUpArms(x)))	A blond child is going down a slide and throwing up his arms	exists x. (BlondChild(x) -> (GoingDownSlide(x) & ThrowingUpArms(x)))	e	False	False
4185	A young girl with a heart tank top is raising her hands as she is sliding	exists x.exists y. (YoungGirl(x) & HeartTankTop(x) & RaisingHands(x) & Sliding(x) -> GirlWithHeartTankTop(y))	A young boy with a heart tank top is raising his hands as he is sliding	exists x. (YoungBoy(x) & WearingHeartTankTop(x) -> RaisingHandsWhileSliding(x))	n	False	False
4186	A young boy with a heart tank top is raising his hands as he is sliding	exists x. (YoungBoy(x) & WearingHeartTankTop(x) -> RaisingHandsWhileSliding(x))	A blond child is going down a slide and throwing up his arms	exists x. (BlondChild(x) -> (GoingDownSlide(x) & ThrowingUpArms(x)))	n	False	False
4187	A child with dark hair is going down a slide and throwing up his arms	exists x. (Child(x) & DarkHair(x) -> (GoingDownSlide(x) & ThrowingUpArms(x)))	A young girl with a heart tank top is raising her hands as she is sliding	exists x.exists y. (YoungGirl(x) & HeartTankTop(x) & RaisingHands(x) & Sliding(x) -> GirlWithHeartTankTop(y))	n	False	False
4188	Two dogs are playing on the beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	Two dogs are playing on a beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	e	True	False
4189	Two dogs are playing on a beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	Two dogs are playing in a forest	exists x. exists y. (Dog(x) & Dog(y) & PlayingIn(x, y, Forest))	n	False	False
4190	A brown dog is running after a black dog on a rocky shore	exists x.exists y.exists z. (BrownDog(x) & BlackDog(y) & RockyShore(z) -> RunningAfter(x, y, z))	A brown dog is running after a white dog on a rocky shore	exists x.exists y.exists z. (BrownDog(x) & WhiteDog(y) & RockyShore(z) -> RunsAfter(x, y, z))	n	False	False
4191	Two dogs are playing on a beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	A brown dog is running after a dark dog on a rocky shore	exists x.exists y.exists z. (BrownDog(x) & DarkDog(y) & RockyShore(z) -> RunsAfter(x, y, z))	n	False	False
4192	Two dogs are playing on a beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnBeach(x) & PlayingOnBeach(y))	A brown dog is running after a white dog on a rocky shore	exists x.exists y.exists z. (BrownDog(x) & WhiteDog(y) & RockyShore(z) -> RunsAfter(x, y, z))	n	False	False
4193	Two dogs are playing on a sandy beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnSandyBeach(x) & PlayingOnSandyBeach(y))	Two dogs are playing on a rocky beach	exists x. exists y. (Dog(x) & Dog(y) & PlayingOnRockyBeach(x) & PlayingOnRockyBeach(y))	n	False	False
4194	A black dog is approaching a golden dog on pebbly beach	exists x.exists y.exists z. (BlackDog(x) & GoldenDog(y) & PebblyBeach(z) -> Approaching(x, y, z))	A white dog is approaching a golden dog on pebbly beach	exists x.exists y. (WhiteDog(x) & GoldenDog(y) & PebblyBeach(z) -> Approaching(x, y, z))	n	False	False
4195	A large white dog is jumping up in the snow	exists x. (Dog(x) & Large(x) & White(x) & JumpingUpInSnow(x))	A large white animal is jumping up in the snow	exists x. (LargeWhiteAnimal(x) & JumpingUpInSnow(x))	e	False	False
4196	A small white dog is jumping up in the snow	exists x. (Dog(x) & Small(x) & White(x) & JumpingUpInSnow(x))	A large white dog is jumping up in the snow	exists x. (Dog(x) & Large(x) & White(x) & JumpingUpInSnow(x))	n	False	False
4197	A large white dog is jumping up in the snow	exists x. (Dog(x) & Large(x) & White(x) & JumpingUpInSnow(x))	A large black dog is jumping in the air over a snowy area	exists x. (LargeBlackDog(x) & JumpingInAir(x) & OverSnowyArea(x))	n	False	False
4198	A large white dog is jumping up in the snow	exists x. (Dog(x) & Large(x) & White(x) & JumpingUpInSnow(x))	A large white dog is jumping in the air over a snowy area	exists x. (Dog(x) & Large(x) & White(x) & JumpingInAir(x) & OverSnowyArea(x))	e	False	False
4199	Two young boys are wearing hats and sticking their colored tongues out	exists x. exists y. (YoungBoy(x) & YoungBoy(y) & WearingHat(x) & WearingHat(y) & StickingTongueOut(x) & StickingTongueOut(y))	Two young kids are wearing hats and sticking their colored tongues out	exists x. exists y. (Kid(x) & Kid(y) & Young(x) & Young(y) & WearingHat(x) & WearingHat(y) & StickingColoredTongue(x) & StickingColoredTongue(y))	e	False	False
4200	Two kids are not sticking out blue and green colored tongues	not (exists x.exists y. (Kid(x) & Kid(y) & StickingOutBlueTongue(x) & StickingOutGreenTongue(y)))	Two kids are sticking out blue and green colored tongues	exists x. exists y. (Kid(x) & Kid(y) & StickingOutBlueTongue(x) & StickingOutGreenTongue(y))	c	False	True
4201	Two young kids are wearing hats and sticking their colored tongues out	exists x. exists y. (Kid(x) & Kid(y) & Young(x) & Young(y) & WearingHat(x) & WearingHat(y) & StickingColoredTongue(x) & StickingColoredTongue(y))	Two kids are sticking out blue and green colored tongues	exists x. exists y. (Kid(x) & Kid(y) & StickingOutBlueTongue(x) & StickingOutGreenTongue(y))	n	False	False
4202	Two kids are sticking out blue and green colored tongues	exists x. exists y. (Kid(x) & Kid(y) & StickingOutBlueTongue(x) & StickingOutGreenTongue(y))	Two young boys are wearing hats and sticking their colored tongues out	exists x. exists y. (YoungBoy(x) & YoungBoy(y) & WearingHat(x) & WearingHat(y) & StickingTongueOut(x) & StickingTongueOut(y))	n	False	False
4203	There is no dog standing on the side of a mountain	not exists x. (Dog(x) & StandingOnMountainSide(x))	A dog is standing on the side of a mountain	exists x. exists y. (Dog(x) & Mountain(y) & StandingOn(x, y))	c	False	False
4204	A white dog is standing on a hill covered by grass	exists x.exists y. (WhiteDog(x) & Hill(y) & CoveredByGrass(y) -> StandingOn(x, y))	A white dog is standing on a grassy hillside	exists x.exists y. (WhiteDog(x) & GrassyHillside(y) -> StandingOn(x, y))	e	False	False
4205	A white dog is standing on a grassy hillside	exists x.exists y. (WhiteDog(x) & GrassyHillside(y) -> StandingOn(x, y))	A black dog is standing on a grassy hillside	exists x.exists y. (BlackDog(x) & GrassyHillside(y) -> StandingOn(x, y))	n	False	False
4206	A dog is standing on the side of a mountain	exists x. exists y. (Dog(x) & Mountain(y) & StandingOn(x, y))	A white dog is standing on a hill covered by grass	exists x.exists y. (WhiteDog(x) & Hill(y) & CoveredByGrass(y) -> StandingOn(x, y))	n	True	False
4207	A dog is standing on the side of a mountain	exists x. exists y. (Dog(x) & Mountain(y) & StandingOn(x, y))	A black dog is standing on a grassy hillside	exists x.exists y. (BlackDog(x) & GrassyHillside(y) -> StandingOn(x, y))	n	True	False
4208	A dog is standing on a mountain	exists x. exists y. (Dog(x) & Mountain(y) & StandingOn(x, y))	A white dog is standing on a grassy hillside	exists x.exists y. (WhiteDog(x) & GrassyHillside(y) -> StandingOn(x, y))	n	True	False
4209	There is no dog standing on the side of a mountain	not exists x. (Dog(x) & StandingOnMountainSide(x))	A white dog is standing on a grassy hillside	exists x.exists y. (WhiteDog(x) & GrassyHillside(y) -> StandingOn(x, y))	n	False	False
4210	Two children are rolling in muddy water	exists x. exists y. (Child(x) & Child(y) & RollingInMuddyWater(x) & RollingInMuddyWater(y))	Two boys are laying in the ocean far to the beach	exists x. exists y. (Boy(x) & Boy(y) & LayingInOcean(x) & LayingInOcean(y) & FarToBeach(x) & FarToBeach(y))	n	False	False
4211	A brown and black dog is pointing the nose upwards	exists x. (Dog(x) & Brown(x) & Black(x) -> PointingNoseUpwards(x))	A brown and black dog is pointing the nose downwards	exists x. (Dog(x) & Brown(x) & Black(x) -> PointingNoseDownwards(x))	n	False	False
4212	A black and brown dog is eyeing a fly	exists x. (Dog(x) & Black(x) & Brown(x) & Eyeing(x, Fly))	A brown and black dog is pointing the nose downwards	exists x. (Dog(x) & Brown(x) & Black(x) -> PointingNoseDownwards(x))	n	False	False
4213	A brown and black dog is pointing the nose upwards	exists x. (Dog(x) & Brown(x) & Black(x) -> PointingNoseUpwards(x))	A black and brown dog is eyeing an insect	exists x. (Dog(x) & Black(x) & Brown(x) & Eyeing(x, insect))	n	False	False
4214	A black and brown dog is eyeing a fly	exists x. (Dog(x) & Black(x) & Brown(x) & Eyeing(x, Fly))	A brown and black dog is pointing the nose upwards	exists x. (Dog(x) & Brown(x) & Black(x) -> PointingNoseUpwards(x))	n	False	False
4215	A veteran is showing different things from a war to some people	exists x. exists y. exists z. (Veteran(x) & War(y) & Person(z) -> Shows(x, y, z))	Different things from a war are being shown to some people by a veteran	exists x.exists y.exists z. (War(x) & Thing(y) & Person(z) & Veteran(z) -> Shows(z, y, x))	e	True	False
4216	Different things from a war are being shown to some people by a veteran	exists x.exists y.exists z. (War(x) & Thing(y) & Person(z) & Veteran(z) -> Shows(z, y, x))	A large man is sitting in a military accessories store	exists x. (LargeMan(x) & SittingIn(x, MilitaryAccessoriesStore))	n	False	False
4217	A veteran is showing different things from a war to some people	exists x. exists y. exists z. (Veteran(x) & War(y) & Person(z) -> Shows(x, y, z))	A large man is sitting in a military accessories shop	exists x. (LargeMan(x) & SittingIn(x, MilitaryAccessoriesShop))	n	False	False
4218	A veteran is showing different things from a war to some people	exists x. exists y. exists z. (Veteran(x) & War(y) & Person(z) -> Shows(x, y, z))	A small man is sitting in a military accessories store	exists x. (SmallMan(x) & SittingIn(x, MilitaryAccessoriesStore))	n	False	False
4219	A grey dog is bouncing a soccer ball on its head on a lawn	exists x.exists y.exists z. (GreyDog(x) & SoccerBall(y) & Lawn(z) -> BouncesOnHead(x, y, z))	A dog with a blue collar is playing with the ball outside	exists x. (Dog(x) & HasBlueCollar(x) -> PlayingWithBallOutside(x))	n	False	False
4220	A young white child is not standing on the edge of a body of water near some buckets	exists x. (YoungWhiteChild(x) -> not StandingOnEdgeOfBodyOfWater(x))	A young black child is standing on the edge of a body of water near some buckets	exists x.exists y.exists z. (YoungBlackChild(x) & BodyOfWater(y) & Bucket(z) -> StandingOnEdgeOf(x, y, z))	n	False	False
4221	A boy next to some buckets of rags is holding something	exists x.exists y.exists z. (Boy(x) & Bucket(y) & Rag(z) & NextTo(x, y) -> Holding(x, z))	A boy next to some buckets of rags is holding an object	exists x.exists y.exists z. (Boy(x) & Bucket(y) & Rag(z) & NextTo(x, y) -> Holding(x, z))	e	True	False
4222	A boy next to some buckets of rags is holding something	exists x.exists y.exists z. (Boy(x) & Bucket(y) & Rag(z) & NextTo(x, y) -> Holding(x, z))	A young black child is standing on the edge of a body of water near some buckets	exists x.exists y.exists z. (YoungBlackChild(x) & BodyOfWater(y) & Bucket(z) -> StandingOnEdgeOf(x, y, z))	n	False	False
4223	A boy next to some buckets of rags is holding an object	exists x.exists y.exists z. (Boy(x) & Bucket(y) & Rag(z) & NextTo(x, y) -> Holding(x, z))	A young black child is standing on the edge of a body of water near some buckets	exists x.exists y.exists z. (YoungBlackChild(x) & BodyOfWater(y) & Bucket(z) -> StandingOnEdgeOf(x, y, z))	n	False	False
4224	Two children are playing soccer in the park	exists x. exists y. (Child(x) & Child(y) & PlayingSoccer(x) & PlayingSoccer(y) & Park(z) & In(x, z) & In(y, z))	Two children are playing with a ball in the park	exists x. exists y. exists z. (Child(x) & Child(y) & Ball(z) & PlayingWith(x, y, z) & InPark(z))	e	False	False
4225	Two little boys are playing outside with a soccer ball on the green grass	exists x. exists y. exists z. (LittleBoy(x) & LittleBoy(y) & SoccerBall(z) & PlayingOutside(x, y, z) & GreenGrass(z))	Children are playing outside with a soccer ball on the green grass	exists x.exists y.exists z. (Child(x) & SoccerBall(y) & GreenGrass(z) -> PlayingOutsideWith(x, y, z))	e	False	False
4226	Two children are playing soccer in the park	exists x. exists y. (Child(x) & Child(y) & PlayingSoccer(x) & PlayingSoccer(y) & Park(z) & In(x, z) & In(y, z))	Children are playing outside with a soccer ball on the green grass	exists x.exists y.exists z. (Child(x) & SoccerBall(y) & GreenGrass(z) -> PlayingOutsideWith(x, y, z))	n	False	False
4227	Two little boys are playing outside with a soccer ball on the green grass	exists x. exists y. exists z. (LittleBoy(x) & LittleBoy(y) & SoccerBall(z) & PlayingOutside(x, y, z) & GreenGrass(z))	Two children are playing with a ball in the park	exists x. exists y. exists z. (Child(x) & Child(y) & Ball(z) & PlayingWith(x, y, z) & InPark(z))	e	False	False
4228	Two children are not playing soccer in the park	not exists x. exists y. (Child(x) & Child(y) & PlayingSoccer(x) & PlayingSoccer(y) & Park(z) & In(z, x) & In(z, y))	Two little boys are playing outside with a soccer ball on the green grass	exists x. exists y. exists z. (LittleBoy(x) & LittleBoy(y) & SoccerBall(z) & PlayingOutside(x, y, z) & GreenGrass(z))	n	False	False
4229	Two little boys are playing outside with a soccer ball on the green grass	exists x. exists y. exists z. (LittleBoy(x) & LittleBoy(y) & SoccerBall(z) & PlayingOutside(x, y, z) & GreenGrass(z))	Two children are playing soccer in the park	exists x. exists y. (Child(x) & Child(y) & PlayingSoccer(x) & PlayingSoccer(y) & Park(z) & In(x, z) & In(y, z))	n	False	False
4230	The woman is wearing a colorful shirt and a lot of jewelry	exists x. (Woman(x) & ColorfulShirt(x) & exists y. (Jewelry(y) & Wears(x, y)))	A woman is wearing a colorful shirt and a lot of jewelry	exists x. (Woman(x) & exists y. (ColorfulShirt(y) & Wears(x, y)) & exists z. (Jewelry(z) & Wears(x, z)))	e	False	False
4231	A woman is wearing a colorful shirt and a lot of jewelry	exists x. (Woman(x) & exists y. (ColorfulShirt(y) & Wears(x, y)) & exists z. (Jewelry(z) & Wears(x, z)))	A man is wearing a colorful shirt and a lot of jewelry	exists x. (Man(x) & WearingColorfulShirt(x) & WearingJewelry(x))	n	False	False
4232	A young woman with Indian clothing and henna on her hand is going through paperwork	exists x. (YoungWoman(x) & IndianClothing(x) & HennaOnHand(x) -> GoingThroughPaperwork(x))	A girl with Indian clothing and henna on her hand is going through paperwork	exists x. (Girl(x) & IndianClothing(x) & HennaOnHand(x) -> GoingThroughPaperwork(x))	e	False	False
4233	A man with Indian clothing and henna on his hand is going through paperwork	exists x. (Man(x) & IndianClothing(x) & HennaOnHand(x) -> GoingThroughPaperwork(x))	A girl with Indian clothing and henna on her hand is going through paperwork	exists x. (Girl(x) & IndianClothing(x) & HennaOnHand(x) -> GoingThroughPaperwork(x))	n	False	False
4234	A girl with Indian clothing and henna on her hand is going through paperwork	exists x. (Girl(x) & IndianClothing(x) & HennaOnHand(x) -> GoingThroughPaperwork(x))	A man is wearing a colorful shirt and a lot of jewelry	exists x. (Man(x) & WearingColorfulShirt(x) & WearingJewelry(x))	n	False	False
4235	A man is standing in the middle of a gym and is wearing a jersey	exists x. (Man(x) & StandingInGym(x) & WearingJersey(x))	A man is standing in a gym and is wearing a jersey	exists x. (Man(x) & StandingInGym(x) & WearingJersey(x))	e	True	False
4236	A man is standing in the middle of a gym and is wearing a jersey	exists x. (Man(x) & StandingInGym(x) & WearingJersey(x))	A woman in a black jersey is standing in a gym	exists x. (Woman(x) & WearsBlackJersey(x) -> exists y. (Gym(y) & StandingIn(x, y)))	n	False	False
4237	A man is standing in the middle of a gym and is wearing a jersey	exists x. (Man(x) & StandingInGym(x) & WearingJersey(x))	A man in a black jersey is standing in a gym	exists x. (Man(x) & WearsBlackJersey(x) -> exists y. (Gym(y) & StandingIn(x, y)))	n	False	False
4238	The snowboarder is jumping off a snowy hill	exists x.exists y. (Snowboarder(x) & SnowyHill(y) -> JumpsOff(x, y))	A snowboarder is jumping off the snow	exists x. (Snowboarder(x) -> JumpsOffSnow(x))	e	False	False
4239	A snowboarder is jumping off the snow	exists x. (Snowboarder(x) -> JumpsOffSnow(x))	The snowboarder is not jumping off a snow covered hill	not exists x. (Snowboarder(x) & JumpingOffSnowCoveredHill(x))	c	False	False
4240	The snowboarder is jumping off a snow covered hill	exists x. (Snowboarder(x) -> JumpsOffSnowCoveredHill(x))	The snowboarder is jumping off the snow	exists x. (Snowboarder(x) -> JumpsOffSnow(x))	e	False	False
4241	A boy is wearing a black dress and is carrying a white cross	exists x. (Boy(x) & WearingBlackDress(x) & CarryingWhiteCross(x))	A lady is wearing a black dress and is carrying a white cross	exists x. (Lady(x) & exists y. (BlackDress(y) & Wearing(x, y)) & exists z. (WhiteCross(z) & Carrying(x, z)))	n	False	False
4242	A woman in a black dress is pulling a cart and is standing near two men who are seated on a park bench	exists x.exists y.exists z. (Woman(x) & BlackDress(x) & Cart(y) & ParkBench(z) & Pulling(x, y) & StandingNear(x, z) -> (SeatedOn(z, 2) & Man(z)))	A lady is wearing a black dress and is carrying a white cross	exists x. (Lady(x) & exists y. (BlackDress(y) & Wearing(x, y)) & exists z. (WhiteCross(z) & Carrying(x, z)))	n	False	False
4243	A woman in a black dress is pulling a cart and is standing in front of two men who are seated on a park bench	exists x.exists y.exists z. (Woman(x) & BlackDress(x) & Cart(y) & ParkBench(z) & Pulling(x, y) & StandingInFrontOf(x, z) -> (SeatedOn(z, 2) & Man(z)))	A lady is dressed in black and is carrying a white cross	exists x. (Lady(x) & DressedInBlack(x) & CarryingWhiteCross(x))	n	False	False
4244	There is no boy in a swimsuit sitting on top of a circular fountain	not exists x. (Boy(x) & InSwimsuit(x) & SittingOnCircularFountain(x))	A boy in a swimsuit is sitting on top of a circular fountain	exists x.exists y.exists z. (Boy(x) & Swimsuit(y) & Fountain(z) & Wearing(x, y) & SittingOn(x, z) -> Circular(z))	c	False	False
4245	A boy in a swimsuit is sitting on top of a circular fountain	exists x.exists y.exists z. (Boy(x) & Swimsuit(y) & Fountain(z) & Wearing(x, y) & SittingOn(x, z) -> Circular(z))	A girl is standing next to the opening of a fountain	exists x. exists y. (Girl(x) & Fountain(y) & StandingNextTo(x, y))	n	False	False
4246	A boy in a swimsuit is sitting on a circular fountain	exists x.exists y.exists z. (Boy(x) & Swimsuit(y) & CircularFountain(z) -> SittingOn(x, y, z))	A boy is standing next to the opening of a fountain	exists x. exists y. (Boy(x) & Fountain(y) & StandingNextToOpening(x, y))	n	False	False
4247	There is no boy in a swimsuit sitting on top of a circular fountain	not exists x. (Boy(x) & InSwimsuit(x) & SittingOnCircularFountain(x))	A boy is standing next to the opening of a fountain	exists x. exists y. (Boy(x) & Fountain(y) & StandingNextToOpening(x, y))	n	False	False
4248	A boy is standing next to the opening of a fountain	exists x. exists y. (Boy(x) & Fountain(y) & StandingNextToOpening(x, y))	A boy in a swimsuit is sitting on top of a circular fountain	exists x.exists y.exists z. (Boy(x) & Swimsuit(y) & Fountain(z) & Wearing(x, y) & SittingOn(x, z) -> Circular(z))	n	False	False
4249	A brown and white animal is jumping on the sidewalk	exists x. (Animal(x) & Brown(x) & White(x) & JumpingOnSidewalk(x))	A brown and white dog is jumping on the sidewalk	exists x. (Dog(x) & Brown(x) & White(x) & JumpingOnSidewalk(x))	e	False	False
4250	A small brown and white dog is running on the sidewalk	exists x. (Dog(x) & Small(x) & Brown(x) & White(x) & RunningOnSidewalk(x))	A little brown and white dog is running on the sidewalk	exists x. (Dog(x) & Little(x) & Brown(x) & White(x) & RunningOnSidewalk(x))	e	False	False
4251	A brown and white dog is jumping on the sidewalk	exists x. (Dog(x) & Brown(x) & White(x) & JumpingOnSidewalk(x))	A small brown and white dog is running on the sidewalk	exists x. (Dog(x) & Small(x) & Brown(x) & White(x) & RunningOnSidewalk(x))	n	False	False
4252	A little brown and white dog is running on the sidewalk	exists x. (Dog(x) & Little(x) & Brown(x) & White(x) & RunningOnSidewalk(x))	A brown and white cat is jumping on the sidewalk	exists x. (Cat(x) & Brown(x) & White(x) & JumpingOnSidewalk(x))	n	False	False
4253	A brown and white dog is jumping on the sidewalk	exists x. (Dog(x) & Brown(x) & White(x) & JumpingOnSidewalk(x))	A little brown and white dog is running on the sidewalk	exists x. (Dog(x) & Little(x) & Brown(x) & White(x) & RunningOnSidewalk(x))	n	False	False
4254	The person is hiking	exists x. (Person(x) & Hiking(x))	The person is walking	exists x. (Person(x) & Walking(x))	e	False	False
4255	No person is hiking	not exists x. (Person(x) & Hiking(x))	The person is hiking	exists x. (Person(x) & Hiking(x))	c	False	True
4256	There is no person with a blue backpack hiking in rocky area	not exists x. (Person(x) & BlueBackpack(x) & Hiking(x) & RockyArea(x))	A distant person with a blue backpack is hiking in rocky area	exists x. (DistantPerson(x) & BlueBackpack(x) -> HikingInRockyArea(x))	c	False	False
4257	A distant person with a blue backpack is hiking area full of rocks	exists x. (DistantPerson(x) & BlueBackpack(x) -> HikingArea(x, Rocks))	The person is hiking	exists x. (Person(x) & Hiking(x))	e	False	False
4258	There is no person with a blue backpack hiking in rocky area	not exists x. (Person(x) & BlueBackpack(x) & Hiking(x) & RockyArea(x))	The person is hiking	exists x. (Person(x) & Hiking(x))	n	False	False
4259	No person is hiking	not exists x. (Person(x) & Hiking(x))	A distant person with a blue backpack is hiking in rocky area	exists x. (DistantPerson(x) & BlueBackpack(x) -> HikingInRockyArea(x))	c	False	False
4260	A dog is turning on the grass and pursuing a flying ball	exists x. (Dog(x) & TurningOnGrass(x) & PursuingFlyingBall(x))	A ball is being chased by a yellow dog	exists x.exists y. (Ball(x) & YellowDog(y) & Chasing(y, x))	n	False	False
4261	A yellow cat is chasing a ball	exists x.exists y. (YellowCat(x) & Ball(y) -> Chasing(x, y))	A dog is turning on the grass and pursuing a flying ball	exists x. (Dog(x) & TurningOnGrass(x) & PursuingFlyingBall(x))	n	False	False
4262	A lady is standing on the street and is surrounded by kids	exists x.exists y. (Lady(x) & Street(y) -> (StandingOn(x, y) & SurroundedBy(x, kids)))	A woman in blue jeans is standing in front of a group of children beside a stone built house	exists x.exists y.exists z. (Woman(x) & BlueJeans(x) & GroupOfChildren(y) & StoneBuiltHouse(z) -> StandingInFrontOf(x, y) & Beside(x, z))	n	False	False
4263	A lady is standing on the street and is surrounded by school children	exists x.exists y. (Lady(x) & Street(y) -> exists z. (SchoolChild(z) & SurroundedBy(x, z, y)))	A woman in blue jeans is standing in front of a group of children beside a house made of stone	exists x.exists y.exists z. (Woman(x) & BlueJeans(x) & GroupOfChildren(y) & House(z) & MadeOfStone(z) -> StandingInFrontOf(x, y) & Beside(x, z))	n	False	False
4264	A woman in blue jeans is standing in front of a group of children beside a stone built house	exists x.exists y.exists z. (Woman(x) & BlueJeans(x) & GroupOfChildren(y) & StoneBuiltHouse(z) -> StandingInFrontOf(x, y) & Beside(x, z))	A lady is standing on the street and is surrounded by school children	exists x.exists y. (Lady(x) & Street(y) -> exists z. (SchoolChild(z) & SurroundedBy(x, z, y)))	n	False	False
4265	A girl in a strange outfit is riding the bike	exists x.exists y. (Girl(x) & StrangeOutfit(x) & Bike(y) -> Riding(x, y))	The bike is being ridden by a girl in a strange outfit	exists x.exists y. (Bike(x) & Girl(y) & Riding(y, x) & StrangeOutfit(y))	e	False	False
4266	A girl in a strange outfit is riding the bike	exists x.exists y. (Girl(x) & StrangeOutfit(x) & Bike(y) -> Riding(x, y))	A boy in a strange outfit is riding the bike	exists x.exists y. (Boy(x) & StrangeOutfit(x) & Bike(y) -> Riding(x, y))	n	False	False
4267	A woman is wearing paint and costume pieces and is riding a bike on a busy street	exists x. (Woman(x) & WearingPaint(x) & WearingCostumePieces(x) & RidingBikeOnBusyStreet(x))	A bike is being ridden by a woman wearing paint and costume pieces on a busy street	exists x. exists y. exists z. (Bike(x) & Woman(y) & Paint(z) & CostumePieces(z) & Wearing(y, z) & BusyStreet(x) -> Riding(y, x))	e	False	False
4268	A woman is wearing paint and costume pieces and is riding a bike on a empty street	exists x. (Woman(x) & WearingPaint(x) & WearingCostumePieces(x) & RidingBike(x) & OnEmptyStreet(x))	A woman is wearing paint and costume pieces and is riding a bike on a busy street	exists x. (Woman(x) & WearingPaint(x) & WearingCostumePieces(x) & RidingBikeOnBusyStreet(x))	n	False	False
4269	A woman is wearing paint and costume pieces and is riding a bike on a empty street	exists x. (Woman(x) & WearingPaint(x) & WearingCostumePieces(x) & RidingBike(x) & OnEmptyStreet(x))	A girl in a strange outfit is riding the bike	exists x.exists y. (Girl(x) & StrangeOutfit(x) & Bike(y) -> Riding(x, y))	e	False	False
4270	A boy in a strange outfit is riding the bike	exists x.exists y. (Boy(x) & StrangeOutfit(x) & Bike(y) -> Riding(x, y))	A woman is wearing paint and costume pieces and is riding a bike on a busy street	exists x. (Woman(x) & WearingPaint(x) & WearingCostumePieces(x) & RidingBikeOnBusyStreet(x))	n	False	False
4271	A woman is wearing paint and costume pieces and is riding a bike on a busy street	exists x. (Woman(x) & WearingPaint(x) & WearingCostumePieces(x) & RidingBikeOnBusyStreet(x))	A girl in a strange outfit is riding the bike	exists x.exists y. (Girl(x) & StrangeOutfit(x) & Bike(y) -> Riding(x, y))	n	False	False
4272	A shirtless man is jumping over a log	exists x.exists y. (ShirtlessMan(x) & Log(y) -> JumpsOver(x, y))	A shirtless woman is jumping over a log	exists x.exists y. (ShirtlessWoman(x) & Log(y) -> JumpsOver(x, y))	n	False	False
4273	A shirtless woman is jumping over a log	exists x.exists y. (ShirtlessWoman(x) & Log(y) -> JumpsOver(x, y))	A guy is leaping into the air in a wooded area	exists x. (Guy(x) & Leaping(x) & IntoAir(x) & WoodedArea(x))	n	False	False
4274	A guy is leaping into the air in wood	exists x. (Guy(x) & LeapingIntoAir(x) & InWood(x))	A shirtless man is jumping over a log	exists x.exists y. (ShirtlessMan(x) & Log(y) -> JumpsOver(x, y))	n	False	False
4275	There is no guy leaping into the air in a wooded area	not exists x. (Guy(x) & Leaping(x) & InAir(x) & WoodedArea(x))	A shirtless man is jumping over a log	exists x.exists y. (ShirtlessMan(x) & Log(y) -> JumpsOver(x, y))	n	False	False
4276	A shirtless man is jumping over a log	exists x.exists y. (ShirtlessMan(x) & Log(y) -> JumpsOver(x, y))	A guy is leaping into the air in a wooded area	exists x. (Guy(x) & Leaping(x) & IntoAir(x) & WoodedArea(x))	n	False	False
4277	The black dog is carrying a blue and white ball in its mouth	exists x.exists y. (BlackDog(x) & BlueAndWhiteBall(y) -> CarryingInMouth(x, y))	The black dog is carrying a blue and white toy in its mouth	exists x.exists y. (BlackDog(x) & BlueAndWhiteToy(y) -> CarryingInMouth(x, y))	e	False	False
4278	The white dog is carrying a blue and white ball in its mouth	exists x. (WhiteDog(x) & exists y. (BlueAndWhiteBall(y) & CarryingInMouth(x, y)))	The black dog is carrying a blue and white ball in its mouth	exists x.exists y. (BlackDog(x) & BlueAndWhiteBall(y) -> CarryingInMouth(x, y))	n	True	False
4279	There is no dog running with a volleyball	not exists x. (Dog(x) & Running(x) & With(x, Volleyball))	The black dog is carrying a blue and white ball in its mouth	exists x.exists y. (BlackDog(x) & BlueAndWhiteBall(y) -> CarryingInMouth(x, y))	n	False	False
4280	A dog is running with a volleyball	exists x.exists y. (Dog(x) & Volleyball(y) & Running(x, y))	The black dog is carrying a blue and white toy in its mouth	exists x.exists y. (BlackDog(x) & BlueAndWhiteToy(y) -> CarryingInMouth(x, y))	n	False	False
4281	The white dog is carrying a blue and white ball in its mouth	exists x. (WhiteDog(x) & exists y. (BlueAndWhiteBall(y) & CarryingInMouth(x, y)))	A dog is running with a volleyball	exists x.exists y. (Dog(x) & Volleyball(y) & Running(x, y))	n	False	False
4282	The black dog is carrying a blue and white ball in its mouth	exists x.exists y. (BlackDog(x) & BlueAndWhiteBall(y) -> CarryingInMouth(x, y))	A dog is running with a volleyball	exists x.exists y. (Dog(x) & Volleyball(y) & Running(x, y))	n	False	False
4283	A girl in a band is playing the flute	exists x. (GirlInBand(x) -> PlaysFlute(x))	A girl in a band is playing an instrument	exists x.exists y. (Girl(x) & Band(y) -> PlayingInstrument(x, y))	e	False	False
4284	A girl in a uniform is playing the flute with a marching band	exists x.exists y.exists z. (Girl(x) & Uniform(y) & Flute(z) & MarchingBand(x, y, z) -> PlayingWith(x, z, y))	A girl in a uniform is playing the flute with a band	exists x.exists y.exists z. (Girl(x) & Uniform(y) & Flute(z) & Wears(x, y) & PlaysWithBand(x, z) -> BandMember(x, z))	e	False	False
4285	A girl in a uniform is playing the flute with a marching band	exists x.exists y.exists z. (Girl(x) & Uniform(y) & Flute(z) & MarchingBand(x, y, z) -> PlayingWith(x, z, y))	A girl in a uniform is not playing the flute with a marching band	exists x. (Girl(x) & InUniform(x) -> not PlayingFluteWithMarchingBand(x))	c	False	False
4286	A girl in a uniform is not playing the flute with a marching band	exists x. (Girl(x) & InUniform(x) -> not PlayingFluteWithMarchingBand(x))	A girl in a band is playing the flute	exists x. (GirlInBand(x) -> PlaysFlute(x))	n	False	False
4287	A girl in a uniform is playing the flute with a marching band	exists x.exists y.exists z. (Girl(x) & Uniform(y) & Flute(z) & MarchingBand(x, y, z) -> PlayingWith(x, z, y))	A girl in a band is playing the flute	exists x. (GirlInBand(x) -> PlaysFlute(x))	e	False	False
4288	A man is standing at the wheel of a classic American car that has its door and trunk open	exists x. exists y. exists z. (Man(x) & ClassicAmericanCar(y) & Wheel(z) & StandingAt(x, z) & DoorOpen(y) & TrunkOpen(y))	The woman in blue is posing for a picture next to a car	exists x.exists y. (Woman(x) & Blue(x) & Car(y) -> PosingNextTo(x, y))	n	False	False
4289	A person is standing at the wheel of a classic American car that has its door and trunk open	exists x. exists y. (Person(x) & ClassicAmericanCar(y) & StandingAtWheel(x, y) & DoorOpen(y) & TrunkOpen(y))	The man in blue is posing for a picture next to a car	exists x. exists y. exists z. (Man(x) & Blue(x) & Picture(y) & Car(z) & PosingFor(x, y) & NextTo(x, z))	n	False	False
4290	A woman is standing at the wheel of a classic American car that has its door and trunk open	exists x. exists y. (Woman(x) & ClassicAmericanCar(y) & StandingAtWheel(x, y) & DoorOpen(y) & TrunkOpen(y))	The man in blue is posing for a picture next to a car	exists x. exists y. exists z. (Man(x) & Blue(x) & Picture(y) & Car(z) & PosingFor(x, y) & NextTo(x, z))	n	False	False
4291	A man is standing at the wheel of a classic American car that has its door and trunk open	exists x. exists y. exists z. (Man(x) & ClassicAmericanCar(y) & Wheel(z) & StandingAt(x, z) & DoorOpen(y) & TrunkOpen(y))	The man in blue is posing for a picture next to a car	exists x. exists y. exists z. (Man(x) & Blue(x) & Picture(y) & Car(z) & PosingFor(x, y) & NextTo(x, z))	n	False	False
4292	Two people are standing on a bench	exists x. exists y. (Person(x) & Person(y) & Bench(b) & StandingOn(x, b) & StandingOn(y, b))	Two people are sitting on a bench	exists x. exists y. (Person(x) & Person(y) & SittingOnBench(x, y))	n	False	False
4293	The woman is sitting near a flower bed and is overlooking a tunnel	exists x. (Woman(x) & SittingNearFlowerBed(x) & OverlookingTunnel(x))	Two people are sitting on a bench	exists x. exists y. (Person(x) & Person(y) & SittingOnBench(x, y))	n	False	False
4294	A man is sitting near a flower bed and is overlooking a tunnel	exists x. exists y. exists z. (Man(x) & FlowerBed(y) & Tunnel(z) & SittingNear(x, y) & Overlooking(x, z))	Two people are sitting on a bench	exists x. exists y. (Person(x) & Person(y) & SittingOnBench(x, y))	n	False	False
4295	Two people are sitting on a white bench	exists x. exists y. (Person(x) & Person(y) & WhiteBench(x) & WhiteBench(y) & SittingOn(x, y))	A woman is sitting near a flower bed and is overlooking a tunnel	exists x. (Woman(x) & SittingNearFlowerBed(x) & OverlookingTunnel(x))	n	False	False
4296	A man is not wearing a clear plastic cap and a face mask	exists x. (Man(x) -> not (WearingClearPlasticCap(x) & WearingFaceMask(x)))	A man is wearing a clear plastic cap and a face mask	exists x. (Man(x) & Wearing(x, ClearPlasticCap) & Wearing(x, FaceMask))	c	False	False
4297	A man by a brick wall is wearing a mask around his mouth and a hair net	exists x. (Man(x) & ByBrickWall(x) -> (WearingMask(x) & WearingHairNet(x)))	A man by a wall made of bricks is wearing a mask around his mouth and a hair net	exists x. exists y. (Man(x) & Wall(y) & MadeOfBricks(y) -> (WearingMaskAroundMouth(x) & WearingHairNet(x)))	e	False	False
4298	A man by a wall made of bricks is wearing a mask around his mouth and a hair net	exists x. exists y. (Man(x) & Wall(y) & MadeOfBricks(y) -> (WearingMaskAroundMouth(x) & WearingHairNet(x)))	A man is wearing a clear plastic cap and a face mask	exists x. (Man(x) & Wearing(x, ClearPlasticCap) & Wearing(x, FaceMask))	n	False	False
4299	A man is wearing a clear plastic cap and a face mask	exists x. (Man(x) & Wearing(x, ClearPlasticCap) & Wearing(x, FaceMask))	A woman by a brick wall is wearing a mask around her mouth and a hair net	exists x. (Woman(x) & ByBrickWall(x) -> (WearsMaskAroundMouth(x) & WearsHairNet(x)))	n	False	False
4300	A man by a brick wall is wearing a mask around his mouth and a hair net	exists x. (Man(x) & ByBrickWall(x) -> (WearingMask(x) & WearingHairNet(x)))	A man is not wearing a clear plastic cap and a face mask	exists x. (Man(x) -> not (WearingClearPlasticCap(x) & WearingFaceMask(x)))	n	False	False
4301	Two dogs are in a kennel on their hind legs and are facing one another	exists x. exists y. (Dog(x) & Dog(y) & Kennel(k) & InKennel(x, y, k) & HindLegs(x) & HindLegs(y) & Facing(x, y))	Two cats are in a kennel on their hind legs and are facing one another	exists x. exists y. (Cat(x) & Cat(y) & Kennel(k) & InKennel(x, y, k) & HindLegs(x) & HindLegs(y) & Facing(x, y))	e	False	False
4302	A black dog and a yellow dog are playing with each other	exists x.exists y. (BlackDog(x) & YellowDog(y) -> PlayingWith(x, y))	Two dogs are playing with each other	exists x.exists y. (Dog(x) & Dog(y) & PlayingWith(x, y))	e	False	False
4303	A black dog and a yellow dog are not playing with each other	exists x.exists y. (BlackDog(x) & YellowDog(y) -> not PlayingWith(x, y))	A black dog and a yellow dog are playing with each other	exists x.exists y. (BlackDog(x) & YellowDog(y) -> PlayingWith(x, y))	c	False	False
4304	Two dogs are in a kennel on their hind legs and are facing one another	exists x. exists y. (Dog(x) & Dog(y) & Kennel(k) & InKennel(x, y, k) & HindLegs(x) & HindLegs(y) & Facing(x, y))	A black dog and a yellow dog are not playing with each other	exists x.exists y. (BlackDog(x) & YellowDog(y) -> not PlayingWith(x, y))	n	False	False
4305	A black dog and a yellow dog are playing with each other	exists x.exists y. (BlackDog(x) & YellowDog(y) -> PlayingWith(x, y))	Two animals are in a kennel on their hind legs and are facing one another	exists x. exists y. (Animal(x) & Animal(y) & InKennel(x) & InKennel(y) & HindLegs(x) & HindLegs(y) & Facing(x, y))	n	False	False
4306	Two women with dogs are walking on a forest path	exists x. exists y. exists z. (Woman(x) & Woman(y) & Dog(z) & WalkingOnForestPath(x, y, z))	Two girl with dogs are walking on a forest path	exists x.exists y.exists z. (Girl(x) & Girl(y) & Dog(z) & WalkingOnForestPath(x, y, z))	e	False	False
4307	Two women with dogs are walking on a forest path	exists x. exists y. exists z. (Woman(x) & Woman(y) & Dog(z) & WalkingOnForestPath(x, y, z))	Two men with dogs are walking on a forest path	exists x. exists y. exists z. (Man(x) & Man(y) & Dog(z) & WalkingOnForestPath(x, y, z))	n	False	False
4308	Two girl with dogs are walking on a forest path	exists x.exists y.exists z. (Girl(x) & Girl(y) & Dog(z) & WalkingOnForestPath(x, y, z))	Two dogs and two people are walking in the woods	exists x. exists y. exists z. exists w. (Dog(x) & Dog(y) & Person(z) & Person(w) & WalkingInWoods(x, y, z, w))	e	False	False
4309	Two dogs and two people are walking in the woods	exists x. exists y. exists z. exists w. (Dog(x) & Dog(y) & Person(z) & Person(w) & WalkingInWoods(x, y, z, w))	Two men with dogs are walking on a forest path	exists x. exists y. exists z. (Man(x) & Man(y) & Dog(z) & WalkingOnForestPath(x, y, z))	n	False	False
4310	Two women with dogs are walking on a forest path	exists x. exists y. exists z. (Woman(x) & Woman(y) & Dog(z) & WalkingOnForestPath(x, y, z))	Two dogs and two people are walking in the woods	exists x. exists y. exists z. exists w. (Dog(x) & Dog(y) & Person(z) & Person(w) & WalkingInWoods(x, y, z, w))	n	False	False
4311	A man is snowboarding down a railing in the snow	exists x. (Man(x) & Snowboarding(x) & DownRailing(x) & InSnow(x))	A person is snowboarding down a railing in the snow	exists x. (Person(x) & Snowboarding(x) & DownRailing(x) & InSnow(x))	e	True	False
4312	A woman is skiing down a hill and over a red obstacle	exists x. (Woman(x) & Skiing(x) & DownHill(x) & OverRedObstacle(x))	A man is skiing down a hill and over a red obstacle	exists x. exists y. exists z. (Man(x) & Hill(y) & RedObstacle(z) & SkiingDown(x, y) & Over(x, z))	n	False	False
4313	A person is snowboarding down a railing in the snow	exists x. (Person(x) & Snowboarding(x) & DownRailing(x) & InSnow(x))	A man is skiing down a hill and over a red obstacle	exists x. exists y. exists z. (Man(x) & Hill(y) & RedObstacle(z) & SkiingDown(x, y) & Over(x, z))	n	False	False
4314	A woman is snowboarding down a railing in the snow	exists x. (Woman(x) & Snowboarding(x) & DownRailing(x) & InSnow(x))	A man is skiing down a hill and over a red obstacle	exists x. exists y. exists z. (Man(x) & Hill(y) & RedObstacle(z) & SkiingDown(x, y) & Over(x, z))	n	False	False
4315	A man is skiing down a hill and over a red obstacle	exists x. exists y. exists z. (Man(x) & Hill(y) & RedObstacle(z) & SkiingDown(x, y) & Over(x, z))	A man is snowboarding down a railing in the snow	exists x. (Man(x) & Snowboarding(x) & DownRailing(x) & InSnow(x))	n	False	False
4316	Two construction workers are sitting up on the side of a palace	exists x. exists y. (ConstructionWorker(x) & ConstructionWorker(y) & SittingOnSideOf(x, y, Palace))	Two construction workers are sitting up on the side of a building	exists x. exists y. (ConstructionWorker(x) & ConstructionWorker(y) & SittingOnBuildingSide(x, y))	e	False	False
4317	Two construction workers are sitting up on the side of a palace	exists x. exists y. (ConstructionWorker(x) & ConstructionWorker(y) & SittingOnSideOf(x, y, Palace))	Two men are taking a break from construction	exists x. exists y. (Man(x) & Man(y) & TakingBreakFromConstruction(x) & TakingBreakFromConstruction(y))	n	False	False
4318	Two men are taking a break from work	exists x. exists y. (Man(x) & Man(y) & TakingBreakFromWork(x) & TakingBreakFromWork(y))	Two construction workers are sitting up on the side of a building	exists x. exists y. (ConstructionWorker(x) & ConstructionWorker(y) & SittingOnBuildingSide(x, y))	n	False	False
4319	A man in a red shirt is doing a trick with the skateboard	exists x. (Man(x) & WearsRedShirt(x) -> exists y. (Skateboard(y) & Trick(x, y)))	A man in a red shirt is doing a trick with a skateboard	exists x. (Man(x) & WearsRedShirt(x) -> exists y. (Skateboard(y) & Trick(x, y)))	e	True	False
4320	A man in a red shirt is doing a trick with the rollerblades	exists x. (Man(x) & WearsRedShirt(x) -> exists y. (Rollerblades(y) & DoingTrickWith(x, y)))	A man in a red shirt is doing a trick with the skateboard	exists x. (Man(x) & WearsRedShirt(x) -> exists y. (Skateboard(y) & Trick(x, y)))	n	False	False
4321	A skateboarder is jumping in the air	exists x. (Skateboarder(x) -> JumpingInAir(x))	No skateboarder is jumping in the air	not exists x. (Skateboarder(x) & JumpingInAir(x))	c	False	False
4322	No skateboarder is jumping in the air	not exists x. (Skateboarder(x) & JumpingInAir(x))	A man in a red shirt is doing a trick with the skateboard	exists x. (Man(x) & WearsRedShirt(x) -> exists y. (Skateboard(y) & Trick(x, y)))	n	False	False
4323	A snowboarder is grinding down a long concrete rail	exists x.exists y. (Snowboarder(x) & LongConcreteRail(y) -> Grinding(x, y))	A snowboarder is grinding down a long rail	exists x.exists y. (Snowboarder(x) & LongRail(y) -> GrindingDown(x, y))	e	False	False
4324	A person is doing acrobatics on a snowboard	exists x. (Person(x) & Acrobatics(x) & On(x, snowboard))	A person is doing a trick on a snowboard	exists x. exists y. (Person(x) & Snowboard(y) -> DoingTrickOn(x, y))	e	False	False
4325	A person is doing a trick on a snowboard	exists x. exists y. (Person(x) & Snowboard(y) -> DoingTrickOn(x, y))	A snowboarder is grinding down a long rail	exists x.exists y. (Snowboarder(x) & LongRail(y) -> GrindingDown(x, y))	n	False	False
4326	There is no snowboarder grinding down a long concrete rail	not exists x. (Snowboarder(x) & Grinding(x) & LongConcreteRail(x))	A person is doing a trick on a snowboard	exists x. exists y. (Person(x) & Snowboard(y) -> DoingTrickOn(x, y))	n	False	False
4327	A person is doing a trick on a snowboard	exists x. exists y. (Person(x) & Snowboard(y) -> DoingTrickOn(x, y))	A snowboarder is grinding down a long concrete rail	exists x.exists y. (Snowboarder(x) & LongConcreteRail(y) -> Grinding(x, y))	n	False	False
4328	Three friends are making faces for the camera	exists x.exists y.exists z. (Friend(x) & Friend(y) & Friend(z) & MakingFaces(x, y, z) & Camera(x, y, z))	Three enemies are making faces for the camera	exists x. exists y. exists z. (Enemy(x) & Enemy(y) & Enemy(z) & MakingFace(x) & MakingFace(y) & MakingFace(z))	c	False	False
4329	Two men and a girl in front of a wood panel wall are posing with funny faces	exists x.exists y.exists z. (Man(x) & Man(y) & Girl(z) & WoodPanelWall(w) & InFrontOf(x, y, z, w) & Posing(x, y, z, w) & FunnyFaces(x, y, z, w))	Two men and a girl in front of a wood panel wall are making funny faces	exists x.exists y.exists z. (Man(x) & Man(y) & Girl(z) & WoodPanelWall(w) & InFrontOf(x, y, z, w) & MakingFunnyFaces(x, y, z))	e	False	False
4330	Two men and a girl in front of a wood panel wall are making funny faces	exists x.exists y.exists z. (Man(x) & Man(y) & Girl(z) & WoodPanelWall(w) & InFrontOf(x, y, z, w) & MakingFunnyFaces(x, y, z))	Three friends are making faces for the camera	exists x.exists y.exists z. (Friend(x) & Friend(y) & Friend(z) & MakingFaces(x, y, z) & Camera(x, y, z))	n	False	False
4331	Three friends are making faces for the camera	exists x.exists y.exists z. (Friend(x) & Friend(y) & Friend(z) & MakingFaces(x, y, z) & Camera(x, y, z))	Two men and a girl in behind of a wood panel wall are posing with funny faces	exists x. exists y. exists z. (Man(x) & Man(y) & Girl(z) & WoodPanelWall(w) & Behind(x, y, z, w) & Posing(x, y, z, w) & FunnyFaces(x, y, z, w))	n	False	False
4332	A group of people is walking down the street and a person in a green hat is on the phone	exists x. exists y. (Group(x) & Person(y) & WalkingDownStreet(x) & GreenHat(y) & OnPhone(y))	A group of people is walking down the street and a person in a hat is on the phone	exists x. (Group(x) & WalkingDownStreet(x)) & exists y. (Person(y) & InHat(y) & OnPhone(y))	e	False	False
4333	A group of people is walking down the street and a person in a green hat is on the phone	exists x. exists y. (Group(x) & Person(y) & WalkingDownStreet(x) & GreenHat(y) & OnPhone(y))	A group of people is not walking down the street and a person in a green hat is on the phone	exists x. (Group(x) & not Walking(x)) & exists y. (Person(y) & GreenHat(y) & OnPhone(y))	c	False	False
4334	Four people are walking along a city sidewalk and the one in the green hat is talking on a cell phone	exists x. exists y. exists z. exists w. (Person(x) & Person(y) & Person(z) & Person(w) & WalkingAlongSidewalk(x, y, z, w) & GreenHat(x) & TalkingOnCellPhone(x))	A group of people is walking down the street and a person in a hat is on the phone	exists x. (Group(x) & WalkingDownStreet(x)) & exists y. (Person(y) & InHat(y) & OnPhone(y))	e	False	False
4335	A man is standing in the snow at the edge of a mountain	exists x. (Man(x) & StandingInSnow(x) & AtEdgeOfMountain(x))	A person is standing in the snow at the edge of a mountain	exists x. (Person(x) & StandingInSnow(x) & AtEdgeOfMountain(x))	e	True	False
4336	A person is walking in the snow at the edge of a mountain	exists x. (Person(x) & WalkingInSnow(x) & AtEdgeOfMountain(x))	A person is standing in the snow at the edge of a mountain	exists x. (Person(x) & StandingInSnow(x) & AtEdgeOfMountain(x))	n	False	False
4337	A man is standing at dusk on an almost pristine, snowy road, that is lit only by headlights	exists x. exists y. exists z. (Man(x) & Dusk(y) & Road(z) & StandingOn(x, y) & AlmostPristine(z) & Snowy(z) & LitByHeadlights(z))	A man is standing at dusk on an almost pristine road covered by snow, that is lit only by headlights	exists x. (Man(x) & StandingAtDusk(x) & OnAlmostPristineRoad(x) & CoveredBySnow(x) & LitOnlyByHeadlights(x))	e	False	False
4338	A man is standing at dusk on an almost pristine, snowy road, that is lit only by headlights	exists x. exists y. exists z. (Man(x) & Dusk(y) & Road(z) & StandingOn(x, y) & AlmostPristine(z) & Snowy(z) & LitByHeadlights(z))	A man is standing in the snow at the edge of a mountain	exists x. (Man(x) & StandingInSnow(x) & AtEdgeOfMountain(x))	n	False	False
4339	A person is walking in the snow at the edge of a mountain	exists x. (Person(x) & WalkingInSnow(x) & AtEdgeOfMountain(x))	A man is standing at dusk on an almost pristine, snowy road, that is lit only by headlights	exists x. exists y. exists z. (Man(x) & Dusk(y) & Road(z) & StandingOn(x, y) & AlmostPristine(z) & Snowy(z) & LitByHeadlights(z))	n	False	False
4340	A man is standing at dusk on an almost pristine, snowy road, that is lit only by headlights	exists x. exists y. exists z. (Man(x) & Dusk(y) & Road(z) & StandingOn(x, y) & AlmostPristine(z) & Snowy(z) & LitByHeadlights(z))	A person is standing in the snow at the edge of a mountain	exists x. (Person(x) & StandingInSnow(x) & AtEdgeOfMountain(x))	n	False	False
4341	Three women are sitting together near woven walls	exists x.exists y.exists z. (Woman(x) & Woman(y) & Woman(z) & SittingTogether(x, y, z) & NearWovenWalls(x, y, z))	Some women are sitting together near woven walls	exists x.exists y.exists z. (Woman(x) & Woman(y) & WovenWall(z) & SittingNear(x, y, z))	e	False	False
4342	Three women are sitting together near woven walls	exists x.exists y.exists z. (Woman(x) & Woman(y) & Woman(z) & SittingTogether(x, y, z) & NearWovenWalls(x, y, z))	Three women are resting in a village	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & RestingInVillage(x) & RestingInVillage(y) & RestingInVillage(z))	n	False	False
4343	Three women are running in a village	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & Village(v) & RunningIn(x, v) & RunningIn(y, v) & RunningIn(z, v))	Three women are sitting together near woven walls	exists x.exists y.exists z. (Woman(x) & Woman(y) & Woman(z) & SittingTogether(x, y, z) & NearWovenWalls(x, y, z))	n	False	False
4344	Three men are sitting together near woven walls	exists x.exists y.exists z. (Man(x) & Man(y) & Man(z) & SittingTogether(x, y, z) & NearWovenWalls(x, y, z))	Three women are sitting in a village	exists x. exists y. exists z. (Woman(x) & Woman(y) & Woman(z) & SittingInVillage(x) & SittingInVillage(y) & SittingInVillage(z))	n	False	False
4345	A man in a black wetsuit is riding a foamy wave	exists x. (Man(x) & Wetsuit(x, black) -> RidingFoamyWave(x))	A surfer in a black wetsuit is riding a foamy wave	exists x. (Surfer(x) & WearsBlackWetsuit(x) -> RidesFoamyWave(x))	n	False	False
4346	A surfer in a black wetsuit is riding a foamy wave	exists x. (Surfer(x) & WearsBlackWetsuit(x) -> RidesFoamyWave(x))	A surfer in a white wetsuit is riding a foamy wave	exists x. (Surfer(x) & WearsWhiteWetsuit(x) -> RidesFoamyWave(x))	n	False	False
4347	A surfer is surfing a small wave	exists x.exists y. (Surfer(x) & SmallWave(y) -> Surfing(x, y))	A surfer is surfing a huge wave	exists x.exists y. (Surfer(x) & Wave(y) & Huge(y) -> Surfing(x, y))	n	False	False
4348	A man in a black wetsuit is riding a foamy wave	exists x. (Man(x) & Wetsuit(x, black) -> RidingFoamyWave(x))	A surfer is surfing a huge wave	exists x.exists y. (Surfer(x) & Wave(y) & Huge(y) -> Surfing(x, y))	n	False	False
4349	A surfer is surfing a huge wave	exists x.exists y. (Surfer(x) & Wave(y) & Huge(y) -> Surfing(x, y))	A surfer in a white wetsuit is riding a foamy wave	exists x. (Surfer(x) & WearsWhiteWetsuit(x) -> RidesFoamyWave(x))	n	False	False
4350	A surfer in a black wetsuit is riding a foamy wave	exists x. (Surfer(x) & WearsBlackWetsuit(x) -> RidesFoamyWave(x))	A surfer is surfing a huge wave	exists x.exists y. (Surfer(x) & Wave(y) & Huge(y) -> Surfing(x, y))	n	False	False
4351	A person with a red hooded jacket and a black backpack is walking near a rocky wall	exists x. (Person(x) & RedHoodedJacket(x) & BlackBackpack(x) -> WalkingNearRockyWall(x))	A person with a red hooded jacket and a black backpack is moving near a rocky wall	exists x. (Person(x) & RedHoodedJacket(x) & BlackBackpack(x) -> MovingNearRockyWall(x))	e	False	False
4352	A man in a red jacket and khaki pants is walking through an American state	exists x. (Man(x) & WearingRedJacket(x) & WearingKhakiPants(x) -> WalkingThroughAmericanState(x))	A person with a red hooded jacket and a black backpack is moving near a rocky wall	exists x. (Person(x) & RedHoodedJacket(x) & BlackBackpack(x) -> MovingNearRockyWall(x))	n	False	False
4353	The players is maneuvering for the soccer ball	exists x.exists y. (Player(x) & SoccerBall(y) -> ManeuversFor(x, y))	The players is maneuvering for the basket ball	exists x. (Player(x) -> ManeuveringForBasketball(x))	n	False	False
4354	A man in green is kicking a soccer ball and a man in purple and white is rising up	exists x.exists y.exists z. (Man(x) & Green(x) & SoccerBall(y) & Kicking(x, y) & Man(z) & PurpleAndWhite(z) -> RisingUp(z))	A man in green is kicking a soccer ball and a man in purple and white is falling down	exists x. exists y. exists z. (Man(x) & Green(x) & SoccerBall(y) & Kicks(x, y) & Man(z) & PurpleAndWhite(z) -> FallsDown(z))	c	False	False
4355	The players is maneuvering for the soccer ball	exists x.exists y. (Player(x) & SoccerBall(y) -> ManeuversFor(x, y))	A man in green is hitting a soccer ball and a man in purple and white is falling down	exists x. exists y. exists z. (Man(x) & Green(x) & SoccerBall(y) & Hitting(x, y) & Man(z) & PurpleAndWhite(z) -> FallsDown(z))	n	False	False
4356	The players is maneuvering for the ball	exists x.exists y. (Player(x) & Ball(y) -> ManeuversFor(x, y))	A man in green is kicking a soccer ball and a man in purple and white is falling down	exists x. exists y. exists z. (Man(x) & Green(x) & SoccerBall(y) & Kicks(x, y) & Man(z) & PurpleAndWhite(z) -> FallsDown(z))	n	False	False
4357	The players is maneuvering for the basket ball	exists x. (Player(x) -> ManeuveringForBasketball(x))	A man in green is kicking a soccer ball and a man in purple and white is falling down	exists x. exists y. exists z. (Man(x) & Green(x) & SoccerBall(y) & Kicks(x, y) & Man(z) & PurpleAndWhite(z) -> FallsDown(z))	n	False	False
4358	The players is maneuvering for the soccer ball	exists x.exists y. (Player(x) & SoccerBall(y) -> ManeuversFor(x, y))	A man in green is kicking a soccer ball and a man in purple and white is falling down	exists x. exists y. exists z. (Man(x) & Green(x) & SoccerBall(y) & Kicks(x, y) & Man(z) & PurpleAndWhite(z) -> FallsDown(z))	n	False	False
4359	A kid is splashing in the ocean	exists x. (Kid(x) & SplashingInOcean(x))	A kid is splashing in the water	exists x. (Kid(x) & SplashingInWater(x))	e	False	False
4360	Two children are playing in the surf	exists x. exists y. (Child(x) & Child(y) & PlayingInSurf(x) & PlayingInSurf(y))	A kid is splashing in the water	exists x. (Kid(x) & SplashingInWater(x))	n	False	False
4361	A kid is splashing in the ocean	exists x. (Kid(x) & SplashingInOcean(x))	Two children are playing in the surf	exists x. exists y. (Child(x) & Child(y) & PlayingInSurf(x) & PlayingInSurf(y))	n	False	False
4362	The woman dressed in leather chaps and a purple shirt is standing in front of onlookers	exists x. (Woman(x) & DressedInLeatherChaps(x) & WearsPurpleShirt(x) -> StandingInFrontOfOnlookers(x))	The man dressed in leather chaps and a purple shirt is standing in front of someone lookers	exists x.exists y. (Man(x) & DressedInLeatherChaps(x) & PurpleShirt(x) & StandingInFrontOf(x, y) -> Looker(y))	n	False	False
4363	The man dressed in chaps made of leather and a purple shirt is standing in front of some onlookers	exists x. (Man(x) & DressedInChaps(x) & MadeOfLeather(x) & PurpleShirt(x) & StandingInFrontOfOnlookers(x))	A man is wearing a purple shirt and black leather chaps and is posing for the camera	exists x. (Man(x) & WearingPurpleShirt(x) & WearingBlackLeatherChaps(x) & PosingForCamera(x))	n	False	False
4364	A man is wearing a purple shirt and black leather chaps and is posing for the camera	exists x. (Man(x) & WearingPurpleShirt(x) & WearingBlackLeatherChaps(x) & PosingForCamera(x))	The woman dressed in leather chaps and a purple shirt is standing in front of onlookers	exists x. (Woman(x) & DressedInLeatherChaps(x) & WearsPurpleShirt(x) -> StandingInFrontOfOnlookers(x))	n	False	False
4365	A model is wearing a purple shirt and black leather chaps and is posing for the camera	exists x. (Model(x) & WearingPurpleShirt(x) & WearingBlackLeatherChaps(x) -> PosingForCamera(x))	The man dressed in leather chaps and a purple shirt is standing in front of someone lookers	exists x.exists y. (Man(x) & DressedInLeatherChaps(x) & PurpleShirt(x) & StandingInFrontOf(x, y) -> Looker(y))	n	False	False
4366	Two dogs are running and catching a tennis ball	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & CatchingTennisBall(x) & CatchingTennisBall(y))	Two dogs are running and trying to catch a soccer ball	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & TryingToCatch(x, soccerBall) & TryingToCatch(y, soccerBall))	n	False	False
4367	Two dogs are running and trying to catch a soccer ball	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & TryingToCatch(x, soccerBall) & TryingToCatch(y, soccerBall))	Two dogs on the grass are playing with a plastic toy	exists x. exists y. exists z. (Dog(x) & Dog(y) & PlasticToy(z) & OnGrass(x) & OnGrass(y) & PlayingWith(x, z) & PlayingWith(y, z))	n	False	False
4368	Two dogs on a lawn are playing with a plastic toy	exists x.exists y.exists z. (Dog(x) & Dog(y) & Lawn(z) & On(x, z) & On(y, z) -> PlayingWith(x, y, z))	Two dogs are running and catching a tennis ball	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & CatchingTennisBall(x) & CatchingTennisBall(y))	n	False	False
4369	Two dogs are running and trying to catch a soccer ball	exists x. exists y. (Dog(x) & Dog(y) & Running(x) & Running(y) & TryingToCatch(x, soccerBall) & TryingToCatch(y, soccerBall))	Two dogs on a lawn are playing with a plastic toy	exists x.exists y.exists z. (Dog(x) & Dog(y) & Lawn(z) & On(x, z) & On(y, z) -> PlayingWith(x, y, z))	n	False	False
4370	Two people dressed in green and red costumes are outside on the sidewalk	exists x. exists y. (Person(x) & Person(y) & GreenCostume(x) & RedCostume(x) & GreenCostume(y) & Outside(x) & Outside(y) & OnSidewalk(x) & OnSidewalk(y))	Two people dressed in green and red costumes are outside near the street	exists x. exists y. (Person(x) & Person(y) & GreenCostume(x) & RedCostume(x) & GreenCostume(y) & Outside(x) & Outside(y) & NearStreet(x) & NearStreet(y))	e	False	False
4371	Men in costumes are walking around in the street	exists x. (Man(x) & InCostume(x) -> WalkingAroundInStreet(x))	Two people dressed in green and red costumes are outside on the sidewalk	exists x. exists y. (Person(x) & Person(y) & GreenCostume(x) & RedCostume(x) & GreenCostume(y) & Outside(x) & Outside(y) & OnSidewalk(x) & OnSidewalk(y))	n	False	False
4372	People in costumes are sitting in the street	exists x.exists y. (Person(x) & Costume(x) & Street(y) -> SittingIn(x, y))	Two people dressed in green and red costumes are outside on the sidewalk	exists x. exists y. (Person(x) & Person(y) & GreenCostume(x) & RedCostume(x) & GreenCostume(y) & Outside(x) & Outside(y) & OnSidewalk(x) & OnSidewalk(y))	n	False	False
4373	People in costumes are walking around in the street	exists x. (Person(x) & InCostume(x) -> WalkingAroundInStreet(x))	Two people dressed in green and red costumes are outside near the street	exists x. exists y. (Person(x) & Person(y) & GreenCostume(x) & RedCostume(x) & GreenCostume(y) & Outside(x) & Outside(y) & NearStreet(x) & NearStreet(y))	n	False	False
4374	People in costumes are walking around in the street	exists x. (Person(x) & InCostume(x) -> WalkingAroundInStreet(x))	Two people dressed in green and red costumes are outside on the seashore	exists x. exists y. (Person(x) & Person(y) & GreenCostume(x) & RedCostume(x) & GreenCostume(y) & Outside(x) & Outside(y) & Seashore(x) & Seashore(y))	n	False	False
4375	People in costumes are walking around in the street	exists x. (Person(x) & InCostume(x) -> WalkingAroundInStreet(x))	Two people dressed in green and red costumes are outside on the sidewalk	exists x. exists y. (Person(x) & Person(y) & GreenCostume(x) & RedCostume(x) & GreenCostume(y) & Outside(x) & Outside(y) & OnSidewalk(x) & OnSidewalk(y))	n	False	False
4376	A dog is in an area full of sand, with the sand that is being stirred up into the air and several plants are in the background	exists x. exists y. exists z. (Dog(x) & Area(y) & Sand(z) & InArea(x, y) & FullOf(y, z) & StirredUpIntoAir(z) & SeveralPlantsInBackground(y) -> DogInAreaWithSand(x, y, z))	A dog is in a sandy area with the sand that is being stirred up into the air and several plants are in the background	exists x. exists y. exists z. (Dog(x) & SandyArea(y) & Sand(z) & InArea(x, y) & StirredUpIntoAir(z) -> HasPlantsInBackground(x))	e	False	False
4377	A dog is in a sandy area with the sand that is being stirred up into the air and several plants are in the background	exists x. exists y. exists z. (Dog(x) & SandyArea(y) & Sand(z) & InArea(x, y) & StirredUpIntoAir(z) -> HasPlantsInBackground(x))	A cat is in a sandy area with the sand that is being stirred up into the air and several plants are in the background	exists x.exists y.exists z. (Cat(x) & SandyArea(y) & Sand(z) & InArea(x, y) & StirredUpIntoAir(z) -> HasPlantsInBackground(x))	n	False	False
4378	A dog is in the sand that is blowing in the air	exists x. exists y. exists z. (Dog(x) & Sand(y) & Air(z) & In(x, y) & BlowingIn(y, z))	A dog is in the sand that is blowing in the wind	exists x. exists y. exists z. (Dog(x) & Sand(y) & Wind(z) & In(x, y) & BlowingIn(y, z))	e	False	False
4379	A dog is in the sand that is blowing in the wind	exists x. exists y. exists z. (Dog(x) & Sand(y) & Wind(z) & In(x, y) & BlowingIn(y, z))	A dog is in a sandy area with the sand that is being stirred up into the air and several plants are in the background	exists x. exists y. exists z. (Dog(x) & SandyArea(y) & Sand(z) & InArea(x, y) & StirredUpIntoAir(z) -> HasPlantsInBackground(x))	e	False	False
4380	The black and white dog is running in a field	exists x. (Dog(x) & Black(x) & White(x) -> exists y. (Field(y) & RunningIn(x, y)))	The black and white dog is running in a green yard	exists x.exists y.exists z. (BlackDog(x) & WhiteDog(y) & GreenYard(z) -> RunsIn(x, y, z))	n	False	False
4381	The black and white dog is running indoors	exists x. (Dog(x) & Black(x) & White(x) -> RunsIndoors(x))	The black and white dog is running outdoors	exists x. (Dog(x) & Black(x) & White(x) -> RunsOutdoors(x))	c	False	False
4382	A woman wearing a blue shirt and high heels is standing on the sidewalk next to a man	exists x.exists y. (Woman(x) & BlueShirt(x) & HighHeels(x) & Man(y) -> StandingNextTo(x, y))	A woman wearing a blue shirt and high heels is standing on the sidewalk next to the man	exists x.exists y. (Woman(x) & BlueShirt(x) & HighHeels(x) & Man(y) -> StandingNextTo(x, y))	e	True	False
4383	A woman wearing a blue shirt and high heels is standing on the sidewalk next to a dog	exists x.exists y.exists z. (Woman(x) & BlueShirt(x) & HighHeels(x) & Dog(y) & Sidewalk(z) -> StandingNextTo(x, y, z))	A man and a woman are standing on the curb	exists x. exists y. (Man(x) & Woman(y) & StandingOnCurb(x) & StandingOnCurb(y))	n	False	False
4384	A woman wearing a blue shirt and high heels is standing on the sidewalk next to a man	exists x.exists y. (Woman(x) & BlueShirt(x) & HighHeels(x) & Man(y) -> StandingNextTo(x, y))	A man and a woman are standing on the curb	exists x. exists y. (Man(x) & Woman(y) & StandingOnCurb(x) & StandingOnCurb(y))	e	False	False
4385	A dog is jumping high into the air in the country	exists x. (Dog(x) & JumpingHigh(x) & InCountry(x))	A dog is jumping into the air in the country	exists x. exists y. (Dog(x) & Country(y) & JumpsIntoAir(x, y))	e	False	False
4386	A dog is jumping high into the air in the country	exists x. (Dog(x) & JumpingHigh(x) & InCountry(x))	The dog is jumping in the shade of some trees	exists x.exists y. (Dog(x) & Tree(y) & JumpsInShade(x, y))	n	False	False
4387	A man on a green bike is performing tricks on a dirt ramp	exists x.exists y.exists z. (Man(x) & GreenBike(y) & DirtRamp(z) -> PerformsTricksOn(x, y, z))	The man on a green bike is performing tricks on the dirt ramp	exists x.exists y.exists z. (Man(x) & GreenBike(y) & DirtRamp(z) -> PerformsTricksOn(x, y, z))	e	True	False
4388	A man on a green bike is performing tricks on a dirt ramp	exists x.exists y.exists z. (Man(x) & GreenBike(y) & DirtRamp(z) -> PerformsTricksOn(x, y, z))	A man on a green car is performing tricks on a dirt ramp	exists x.exists y.exists z. (Man(x) & GreenCar(y) & DirtRamp(z) -> PerformsTricksOn(x, y, z))	n	False	False
4389	A stuntman on a bike is in the air near a body of water	exists x.exists y.exists z. (Stuntman(x) & Bike(y) & BodyOfWater(z) -> InAirNear(x, y, z))	A person on a bike is in the air near a body of water	exists x.exists y.exists z. (Person(x) & Bike(y) & BodyOfWater(z) -> InAirNear(x, y, z))	e	False	False
4390	A man on a green bike is performing tricks on a dirt ramp	exists x.exists y.exists z. (Man(x) & GreenBike(y) & DirtRamp(z) -> PerformsTricksOn(x, y, z))	A person on a bike is not in the air near a body of water	exists x. (Person(x) & OnBike(x) -> not InAirNearBodyOfWater(x))	n	False	False
4391	A person on a bike is in the air near a body of water	exists x.exists y.exists z. (Person(x) & Bike(y) & BodyOfWater(z) -> InAirNear(x, y, z))	The man on a green bike is performing tricks on the dirt ramp	exists x.exists y.exists z. (Man(x) & GreenBike(y) & DirtRamp(z) -> PerformsTricksOn(x, y, z))	n	False	False
4392	A man on a green bike is performing tricks on a dirt ramp	exists x.exists y.exists z. (Man(x) & GreenBike(y) & DirtRamp(z) -> PerformsTricksOn(x, y, z))	A person on a bike is in the air near a body of water	exists x.exists y.exists z. (Person(x) & Bike(y) & BodyOfWater(z) -> InAirNear(x, y, z))	n	False	False
4393	A young swimmer is sitting in a bathing suit and waiting for the next race	exists x. (YoungSwimmer(x) -> (SittingInBathingSuit(x) & WaitingForNextRace(x)))	A young swimmer is standing in a bathing suit and waiting for the next race	exists x. (YoungSwimmer(x) -> (StandingInBathingSuit(x) & WaitingForNextRace(x)))	n	False	False
4394	A woman is sitting wearing swim gear	exists x. (Woman(x) & Sitting(x) & WearingSwimGear(x))	A kid is sitting wearing swim gear	exists x. (Kid(x) & Sitting(x) & WearingSwimGear(x))	n	False	False
4395	A woman is sitting wearing swim gear	exists x. (Woman(x) & Sitting(x) & WearingSwimGear(x))	A young swimmer is sitting in a bathing suit and waiting for the next race	exists x. (YoungSwimmer(x) -> (SittingInBathingSuit(x) & WaitingForNextRace(x)))	n	False	False
4396	A kid is sitting wearing swim gear	exists x. (Kid(x) & Sitting(x) & WearingSwimGear(x))	A young swimmer is standing in a bathing suit and waiting for the next race	exists x. (YoungSwimmer(x) -> (StandingInBathingSuit(x) & WaitingForNextRace(x)))	n	False	False
4397	A black dog and a white dog are wrestling on the floor	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & Wrestling(x, y))	A black dog and a white dog are wrestling on the ground	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & Wrestling(x, y))	e	True	False
4398	A black dog and a white dog are wrestling on the bed	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & WrestlingOnBed(x, y))	A black dog and a white dog are wrestling on the ground	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & Wrestling(x, y))	n	False	False
4399	A black dog and a tan dog are fighting	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & Tan(y) & Fighting(x, y))	Two dogs are fighting	exists x. exists y. (Dog(x) & Dog(y) & Fighting(x, y))	e	True	False
4400	A black dog and a tan dog are sleeping	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & Tan(y) & Sleeping(x) & Sleeping(y))	A black dog and a tan dog are fighting	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & Tan(y) & Fighting(x, y))	n	False	False
4401	A black dog and a white dog are wrestling on the ground	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & Wrestling(x, y))	Two dogs are fighting	exists x. exists y. (Dog(x) & Dog(y) & Fighting(x, y))	e	False	False
4402	A black dog and a white dog are wrestling on the ground	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & Wrestling(x, y))	A black dog and a tan dog are sleeping	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & Tan(y) & Sleeping(x) & Sleeping(y))	n	False	False
4403	A black dog and a white dog are wrestling on the bed	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & WrestlingOnBed(x, y))	A black dog and a tan dog are fighting	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & Tan(y) & Fighting(x, y))	n	False	False
4404	A black dog and a tan dog are fighting	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & Tan(y) & Fighting(x, y))	A black dog and a white dog are wrestling on the ground	exists x. exists y. (Dog(x) & Dog(y) & Black(x) & White(y) & Wrestling(x, y))	n	False	False
4405	A cluster of four brown dogs are playing in a field of brown grass	exists x. exists y. exists z. (Cluster(x) & Dog(y) & Dog(z) & Brown(y) & Brown(z) & PlayingIn(y, x) & PlayingIn(z, x))	There is no dog playing in a field of brown grass	not exists x. (Dog(x) & PlayingIn(x, Field) & BrownGrass(Field))	c	False	False
4406	Four dogs are playing in a area covered by grass	exists x. exists y. exists z. exists w. (Dog(x) & Dog(y) & Dog(z) & Dog(w) & PlayingInArea(x, y, z, w) & GrassCovered(x, y, z, w))	Four dogs are playing in a grassy area	exists x. exists y. exists z. exists w. (Dog(x) & Dog(y) & Dog(z) & Dog(w) & PlayingInGrassyArea(x) & PlayingInGrassyArea(y) & PlayingInGrassyArea(z) & PlayingInGrassyArea(w))	e	False	False
4407	A group of four brown dogs are playing in a field of brown grass	exists x.exists y.exists z. (Group(x) & Dog(y) & Brown(y) & Field(z) & BrownGrass(z) -> PlayingIn(x, y, z))	Four dogs are playing in a grassy area	exists x. exists y. exists z. exists w. (Dog(x) & Dog(y) & Dog(z) & Dog(w) & PlayingInGrassyArea(x) & PlayingInGrassyArea(y) & PlayingInGrassyArea(z) & PlayingInGrassyArea(w))	e	False	False
4408	The dog is having a nap in the park	exists x. (Dog(x) & exists y. (Park(y) & Napping(x, y)))	The dog is having a rest in the park	exists x. exists y. (Dog(x) & Park(y) & RestingIn(x, y))	e	False	False
4409	A big brown and white spotted dog is lying on a cloth on the street	exists x. (Dog(x) & Big(x) & Brown(x) & WhiteSpotted(x) & LyingOn(x, cloth) & OnStreet(x))	The dog is having a rest in the park	exists x. exists y. (Dog(x) & Park(y) & RestingIn(x, y))	n	False	False
4410	A big brown and white spotted dog is lying on a jacket on the street	exists x. (Dog(x) & Big(x) & Brown(x) & WhiteSpotted(x) & LyingOn(x, jacket) & OnStreet(x))	The dog is having a rest in the living room	exists x. (Dog(x) & Resting(x) & In(x, LivingRoom))	n	False	False
4411	A brown puppy is gnawing a metallic post that is stuck in the ground	exists x.exists y. (BrownPuppy(x) & MetallicPost(y) & Gnawing(x, y) -> StuckInGround(y))	A brown dog is gnawing a metallic post that is stuck in the ground	exists x.exists y. (BrownDog(x) & MetallicPost(y) & StuckInGround(y) -> Gnawing(x, y))	e	False	False
4412	A brown puppy is biting a pole	exists x. exists y. (Puppy(x) & Pole(y) & Brown(x) & Biting(x, y))	A brown puppy is biting a stick	exists x. exists y. (Puppy(x) & Stick(y) & Bites(x, y))	n	False	False
4413	A brown puppy is biting a stick	exists x. exists y. (Puppy(x) & Stick(y) & Bites(x, y))	A brown puppy is gnawing a metallic post that is stuck in the ground	exists x.exists y. (BrownPuppy(x) & MetallicPost(y) & Gnawing(x, y) -> StuckInGround(y))	n	False	False
4414	A white puppy is biting a pole	exists x.exists y. (WhitePuppy(x) & Pole(y) -> Biting(x, y))	A brown puppy is gnawing a metallic post that is stuck in the ground	exists x.exists y. (BrownPuppy(x) & MetallicPost(y) & Gnawing(x, y) -> StuckInGround(y))	n	False	False
4415	A brown dog is gnawing a metallic post that is stuck in the ground	exists x.exists y. (BrownDog(x) & MetallicPost(y) & StuckInGround(y) -> Gnawing(x, y))	A brown puppy is biting a pole	exists x. exists y. (Puppy(x) & Pole(y) & Brown(x) & Biting(x, y))	n	False	False
4416	A brown puppy is gnawing a metallic post that is stuck in the ground	exists x.exists y. (BrownPuppy(x) & MetallicPost(y) & Gnawing(x, y) -> StuckInGround(y))	A brown puppy is biting a pole	exists x. exists y. (Puppy(x) & Pole(y) & Brown(x) & Biting(x, y))	e	False	False
4417	A woman is petting a dog near a stone path	exists x. exists y. exists z. (Woman(x) & Dog(y) & StonePath(z) & Petting(x, y) & Near(x, z))	A man is petting a dog near a stone path	exists x. exists y. exists z. (Man(x) & Dog(y) & StonePath(z) & Petting(x, y) & Near(x, z))	n	False	False
4418	A woman is playing with a brown dog in a garden	exists x. exists y. exists z. (Woman(x) & BrownDog(y) & Garden(z) & PlayingWith(x, y, z))	A woman is playing with a brown dog on a garden path	exists x. exists y. exists z. (Woman(x) & BrownDog(y) & GardenPath(z) & PlayingWith(x, y, z))	n	False	False
4419	A woman is petting a dog near a stone trail	exists x. exists y. exists z. (Woman(x) & Dog(y) & StoneTrail(z) & Petting(x, y) & Near(x, z))	A woman is playing with a brown dog on a garden path	exists x. exists y. exists z. (Woman(x) & BrownDog(y) & GardenPath(z) & PlayingWith(x, y, z))	n	False	False
4420	A man is petting a dog near a stone path	exists x. exists y. exists z. (Man(x) & Dog(y) & StonePath(z) & Petting(x, y) & Near(x, z))	A woman is playing with a brown dog on a garden path	exists x. exists y. exists z. (Woman(x) & BrownDog(y) & GardenPath(z) & PlayingWith(x, y, z))	n	False	False
4421	A woman is petting a dog near a stone path	exists x. exists y. exists z. (Woman(x) & Dog(y) & StonePath(z) & Petting(x, y) & Near(x, z))	A woman is playing with a brown dog on a garden path	exists x. exists y. exists z. (Woman(x) & BrownDog(y) & GardenPath(z) & PlayingWith(x, y, z))	n	False	False
4422	Two men are walking through a river	exists x. exists y. (Man(x) & Man(y) & WalkingThroughRiver(x, y))	Two men are walking through the water	exists x. exists y. (Man(x) & Man(y) & WalkingThroughWater(x, y))	e	False	False
4423	Two men are walking through the grass	exists x. exists y. (Man(x) & Man(y) & WalkingThroughGrass(x, y))	Two men are walking through the water	exists x. exists y. (Man(x) & Man(y) & WalkingThroughWater(x, y))	n	False	False
4424	Two men are standing in the ocean	exists x. exists y. (Man(x) & Man(y) & StandingInOcean(x) & StandingInOcean(y))	Two men are standing in deep water	exists x. exists y. (Man(x) & Man(y) & StandingInDeepWater(x) & StandingInDeepWater(y))	n	False	False
4425	Two men are standing in deep water	exists x. exists y. (Man(x) & Man(y) & StandingInDeepWater(x) & StandingInDeepWater(y))	Two men are walking through a river	exists x. exists y. (Man(x) & Man(y) & WalkingThroughRiver(x, y))	n	False	False
4426	Two men are walking through the grass	exists x. exists y. (Man(x) & Man(y) & WalkingThroughGrass(x, y))	Two men are standing in deep water	exists x. exists y. (Man(x) & Man(y) & StandingInDeepWater(x) & StandingInDeepWater(y))	n	False	False
4427	Two race cars are on a road in front of a grassy parking area	exists x. exists y. exists z. (RaceCar(x) & RaceCar(y) & Road(z) & On(x, z) & On(y, z))	No race car is on a road in front of a grassy parking area	not exists x. (RaceCar(x) & OnRoad(x) & GrassyParkingArea(x))	c	False	False
4428	Two race cars are on a road in front of a grassy parking area	exists x. exists y. exists z. (RaceCar(x) & RaceCar(y) & Road(z) & On(x, z) & On(y, z))	Two cars are racing down the track	exists x. exists y. (Car(x) & Car(y) & Racing(x, y) & Racing(y, x))	n	False	False
4429	The rider dressed in orange is driving a motorcycle on one wheel	exists x.exists y. (Rider(x) & Motorcycle(y) & DressedInOrange(x) -> DrivingOnOneWheel(x, y))	The orange rider is driving a motorcycle on one wheel	exists x.exists y. (OrangeRider(x) & Motorcycle(y) -> DrivingOnOneWheel(x, y))	e	False	False
4430	A biker on a yellow sport bike is doing a wheelie and a friend on a black bike is catching up	exists x.exists y. (Biker(x) & YellowSportBike(x) & Wheelie(x) & Friend(y) & BlackBike(y) -> CatchingUp(y))	The orange rider is driving a motorcycle on one wheel	exists x.exists y. (OrangeRider(x) & Motorcycle(y) -> DrivingOnOneWheel(x, y))	n	False	False
4431	A man on a yellow sport bike is doing a wheelie and a friend on a black bike is catching up	exists x.exists y. (Man(x) & YellowSportBike(x) & Wheelie(x) & Friend(y) & BlackBike(y) -> CatchingUp(y))	The orange rider is not driving a motorcycle on one wheel	not exists x. (OrangeRider(x) & DrivingMotorcycleOnOneWheel(x))	n	False	False
4432	A man on a yellow sport bike is doing a wheelie and a friend on a black bike is catching up	exists x.exists y. (Man(x) & YellowSportBike(x) & Wheelie(x) & Friend(y) & BlackBike(y) -> CatchingUp(y))	The orange rider is driving a motorcycle on one wheel	exists x.exists y. (OrangeRider(x) & Motorcycle(y) -> DrivingOnOneWheel(x, y))	n	False	False
4433	Tambourines are being played by a group of children	exists x.exists y. (Tambourine(x) & GroupOfChildren(y) -> Playing(x, y))	A group of children is playing tambourines	exists x. (Group(x) & Children(x) & PlayingTambourines(x))	e	False	False
4434	A group of children in a church basement is playing maracas and tambourines	exists x.exists y.exists z. (GroupOfChildren(x) & ChurchBasement(y) & (Maracas(z) | Tambourines(z)) -> PlayingIn(x, y, z))	A group of children in a building's basement is playing maracas and tambourines	exists x. exists y. exists z. (GroupOfChildren(x) & Building(y) & Basement(z) & In(x, z) -> (PlaysMaracas(x) & PlaysTambourines(x)))	e	False	False
4435	A group of children in a building's basement is playing maracas and tambourines	exists x. exists y. exists z. (GroupOfChildren(x) & Building(y) & Basement(z) & In(x, z) -> (PlaysMaracas(x) & PlaysTambourines(x)))	A group of children is playing tambourines	exists x. (Group(x) & Children(x) & PlayingTambourines(x))	e	False	False
4436	A group of children in a church basement is playing guitars and tambourines	exists x.exists y. (GroupOfChildren(x) & ChurchBasement(y) -> (PlaysGuitars(x, y) & PlaysTambourines(x, y)))	A group of children is playing tambourines	exists x. (Group(x) & Children(x) & PlayingTambourines(x))	e	False	False
4437	A brown dog is running in the snow	exists x. (Dog(x) & Brown(x) & RunningIn(x, snow))	The brown dog is running in the snow	exists x. (BrownDog(x) -> exists y. (Snow(y) & RunningIn(x, y)))	e	False	False
4438	A brown dog is running in the snow	exists x. (Dog(x) & Brown(x) & RunningIn(x, snow))	A black dog is running in the snow	exists x. (Dog(x) & Black(x) & RunningIn(x, snow))	n	False	False
4439	A brown dog is running in the snow	exists x. (Dog(x) & Brown(x) & RunningIn(x, snow))	No dog is running through the snow	not exists x. (Dog(x) & Running(x) & Snow(x))	c	False	False
4440	An elderly man is sitting on a bench	exists x. exists y. (ElderlyMan(x) & Bench(y) & SittingOn(x, y))	An old person is sitting on a bench	exists x. (OldPerson(x) & SittingOnBench(x))	e	False	False
4441	An elderly woman is sitting on a bench and is wearing a gray jacket and black pants	exists x. (ElderlyWoman(x) & SittingOnBench(x) & WearingGrayJacket(x) & WearingBlackPants(x))	The woman is sitting on a bench and is wearing a gray jacket and black pants	exists x. (Woman(x) & SittingOnBench(x) & WearingGrayJacket(x) & WearingBlackPants(x))	e	False	False
4442	A young man is sitting on a bench	exists x. (YoungMan(x) & SittingOnBench(x))	An elderly woman is sitting on a bench and is wearing a gray jacket and black pants	exists x. (ElderlyWoman(x) & SittingOnBench(x) & WearingGrayJacket(x) & WearingBlackPants(x))	n	False	False
4443	A dog is fetching a piece of wood out of very clear water	exists x. exists y. exists z. (Dog(x) & Wood(y) & Water(z) & Fetching(x, y, z) & Clear(z))	A dog is fetching a stick out of very clear water	exists x. exists y. exists z. (Dog(x) & Stick(y) & Water(z) & Fetching(x, y, z) & Clear(z))	e	False	False
4444	A small black and white dog is carrying a stick and is swimming	exists x. (Dog(x) & Small(x) & BlackAndWhite(x) & CarryingStick(x) & Swimming(x))	A dog is fetching a stick out of very dirty water	exists x. exists y. exists z. (Dog(x) & Stick(y) & Water(z) & Fetching(x, y, z) & VeryDirty(z))	n	False	False
4445	The lady is holding the paintbrush next to the artist's easel 	exists x.exists y.exists z. (Lady(x) & Paintbrush(y) & Artist(z) & HoldsNextTo(x, y, z) -> Easel(z))	There is no lady holding the paintbrush next to the artist's easel 	not exists x. (Lady(x) & HoldingPaintbrush(x) & NextToEasel(x))	c	False	False
4446	The girl in a blue coverall is painting	exists x. (Girl(x) & WearsBlueCoverall(x) -> Painting(x))	The girl in the blue coverall is painting	exists x. (Girl(x) & BlueCoverall(x) & Painting(x))	e	False	False
4447	The girl in the blue coverall is painting	exists x. (Girl(x) & BlueCoverall(x) & Painting(x))	The boy in the blue coverall is painting	exists x. (Boy(x) & WearsBlueCoverall(x) -> Painting(x))	n	True	False
4448	The lady is holding the paintbrush next to the artist's easel 	exists x.exists y.exists z. (Lady(x) & Paintbrush(y) & Artist(z) & HoldsNextTo(x, y, z) -> Easel(z))	The girl in a blue coverall is painting	exists x. (Girl(x) & WearsBlueCoverall(x) -> Painting(x))	n	False	False
4449	The boy in the blue coverall is painting	exists x. (Boy(x) & WearsBlueCoverall(x) -> Painting(x))	The lady is holding the paintbrush next to the artist's easel 	exists x.exists y.exists z. (Lady(x) & Paintbrush(y) & Artist(z) & HoldsNextTo(x, y, z) -> Easel(z))	n	False	False
4450	A golden retriever is running	exists x. (GoldenRetriever(x) & Running(x))	A dog is running	exists x. (Dog(x) & Running(x))	e	False	False
4451	A golden retriever is running	exists x. (GoldenRetriever(x) & Running(x))	A golden retriever is not running	exists x. (GoldenRetriever(x) -> not Running(x))	c	False	False
4452	A yellow dog is running down a sandy path	exists x. exists y. (YellowDog(x) & SandyPath(y) -> RunningOn(x, y))	A yellow dog is running down a path covered by sand	exists x. exists y. (YellowDog(x) & Path(y) & CoveredBySand(y) -> RunsDown(x, y))	e	False	False
4453	A yellow dog is running up a sandy path	exists x. exists y. (Dog(x) & Yellow(x) & SandyPath(y) -> RunningUp(x, y))	A yellow dog is running down a sandy path	exists x. exists y. (YellowDog(x) & SandyPath(y) -> RunningOn(x, y))	n	False	False
4454	A yellow dog is running down a sandy path	exists x. exists y. (YellowDog(x) & SandyPath(y) -> RunningOn(x, y))	A dog is running	exists x. (Dog(x) & Running(x))	e	False	False
4455	A yellow dog is running down a sandy path	exists x. exists y. (YellowDog(x) & SandyPath(y) -> RunningOn(x, y))	A golden retriever is running	exists x. (GoldenRetriever(x) & Running(x))	n	False	False
4456	A dog is standing on one leg and is waiting for a soccer ball	exists x. (Dog(x) & StandingOnOneLeg(x) & WaitingForSoccerBall(x))	A dog is standing on one leg and is waiting for a ball	exists x. (Dog(x) & StandingOnOneLeg(x) & WaitingForBall(x))	e	False	False
4457	A dog is standing on one leg and is waiting for a ball	exists x. (Dog(x) & StandingOnOneLeg(x) & WaitingForBall(x))	A black and white dog is jumping for a ball	exists x. (Dog(x) & Black(x) & White(x) -> JumpsForBall(x))	n	False	False
4458	A dog is standing on one leg and is waiting for a soccer ball	exists x. (Dog(x) & StandingOnOneLeg(x) & WaitingForSoccerBall(x))	There is no black and white dog jumping for a ball	not exists x. (Dog(x) & Black(x) & White(x) & JumpsForBall(x))	n	False	False
4459	A black and white dog is jumping for a ball	exists x. (Dog(x) & Black(x) & White(x) -> JumpsForBall(x))	A dog is standing on one leg and is waiting for a soccer ball	exists x. (Dog(x) & StandingOnOneLeg(x) & WaitingForSoccerBall(x))	n	False	False
4460	Two men are seated on a camel and another camel is in the foreground	exists x. exists y. exists z. (Man(x) & Man(y) & Camel(z) & SeatedOn(x, z) & SeatedOn(y, z) & InForeground(z))	Two people are seated on a camel and another camel is in the foreground	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Camel(x) & Camel(y) & Camel(z) & SeatedOn(x, y) & SeatedOn(y, z))	e	False	False
4461	Two people are seated near a camel and another camel is in the foreground	exists x. exists y. exists z. (Person(x) & Person(y) & Camel(z) & SeatedNear(x, z) & SeatedNear(y, z) & InForeground(z))	Two people are seated on a camel and another camel is in the foreground	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Camel(x) & Camel(y) & Camel(z) & SeatedOn(x, y) & SeatedOn(y, z))	n	False	False
4462	No people are riding camels at the beach	not exists x. (Person(x) & RidingCamel(x) & AtBeach(x))	Two people are seated on a camel and another camel is in the foreground	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Camel(x) & Camel(y) & Camel(z) & SeatedOn(x, y) & SeatedOn(y, z))	n	False	False
4463	People are riding two camels at the beach	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Camel(x) & Camel(y) & Camel(z) & Riding(x, y) & Riding(x, z) & Riding(y, z))	Two men are seated on a camel and another camel is in the foreground	exists x. exists y. exists z. (Man(x) & Man(y) & Camel(z) & SeatedOn(x, z) & SeatedOn(y, z) & InForeground(z))	n	False	False
4464	People are riding two camels at the beach	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Camel(x) & Camel(y) & Camel(z) & Riding(x, y) & Riding(x, z) & Riding(y, z))	Two people are seated near a camel and another camel is in the foreground	exists x. exists y. exists z. (Person(x) & Person(y) & Camel(z) & SeatedNear(x, z) & SeatedNear(y, z) & InForeground(z))	n	False	False
4465	Two people are seated on a camel and another camel is in the foreground	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Camel(x) & Camel(y) & Camel(z) & SeatedOn(x, y) & SeatedOn(y, z))	People are riding two camels at the beach	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Camel(x) & Camel(y) & Camel(z) & Riding(x, y) & Riding(x, z) & Riding(y, z))	n	False	False
4466	A man is wearing a blue shirt and walking barefoot on a tennis court	exists x. (Man(x) & WearingBlueShirt(x) & WalkingBarefootOnTennisCourt(x))	A person is wearing a blue shirt and walking barefoot on a tennis court	exists x. (Person(x) & WearingBlueShirt(x) & WalkingBarefootOnTennisCourt(x))	e	True	False
4467	A barefoot man in pajamas is looking toward the sky and is walking on the tennis court	exists x.exists y.exists z. (Man(x) & Barefoot(x) & Pajamas(y) & Sky(z) & Wearing(x, y) & LookingToward(x, z) -> WalkingOnTennisCourt(x))	A barefoot man in pajamas is looking toward the sky and is standing on the tennis court	exists x.exists y. (BarefootMan(x) & Pajamas(x) & Sky(y) & LookingToward(x, y) -> StandingOnTennisCourt(x))	n	False	False
4468	A man is wearing a blue shirt and walking barefoot on a tennis court	exists x. (Man(x) & WearingBlueShirt(x) & WalkingBarefootOnTennisCourt(x))	A barefoot man in pajamas is looking toward the stars and is walking on the tennis court	exists x.exists y.exists z. (Man(x) & Barefoot(x) & Pajamas(y) & Stars(z) & TennisCourt(w) -> (LookingToward(x, z) & WalkingOn(x, w)))	n	False	False
4469	A person is wearing a blue shirt and walking barefoot on a tennis court	exists x. (Person(x) & WearingBlueShirt(x) & WalkingBarefootOnTennisCourt(x))	A barefoot man in pajamas is looking toward the sky and is walking on the tennis court	exists x.exists y.exists z. (Man(x) & Barefoot(x) & Pajamas(y) & Sky(z) & Wearing(x, y) & LookingToward(x, z) -> WalkingOnTennisCourt(x))	n	False	False
4470	A woman is wearing a blue shirt and walking barefoot on a tennis court	exists x. (Woman(x) & exists y. (BlueShirt(y) & Wearing(x, y)) & exists z. (TennisCourt(z) & WalkingBarefoot(x, z)))	A barefoot man in pajamas is looking toward the sky and is walking on the tennis court	exists x.exists y.exists z. (Man(x) & Barefoot(x) & Pajamas(y) & Sky(z) & Wearing(x, y) & LookingToward(x, z) -> WalkingOnTennisCourt(x))	n	False	False
4471	A man is wearing a blue shirt and walking barefoot on a tennis court	exists x. (Man(x) & WearingBlueShirt(x) & WalkingBarefootOnTennisCourt(x))	A barefoot man in pajamas is looking toward the sky and is walking on the tennis court	exists x.exists y.exists z. (Man(x) & Barefoot(x) & Pajamas(y) & Sky(z) & Wearing(x, y) & LookingToward(x, z) -> WalkingOnTennisCourt(x))	n	False	False
4472	The man is standing in a body of water near a waterfall	exists x. exists y. exists z. (Man(x) & BodyOfWater(y) & Waterfall(z) & StandingIn(x, y) & Near(x, z))	The body of a man is in the water near a waterfall	exists x.exists y.exists z. (Man(x) & Water(y) & Waterfall(z) -> BodyInWaterNear(x, y, z))	n	False	False
4473	The man is standing in the water at the base of a waterfall	exists x. exists y. exists z. (Man(x) & Water(y) & Waterfall(z) & StandingIn(x, y) & BaseOf(x, z))	A man is standing in the water at the base of a waterfall	exists x. (Man(x) & StandingInWater(x) & AtBaseOfWaterfall(x))	e	False	False
4474	The man is standing in a body of water near a waterfall	exists x. exists y. exists z. (Man(x) & BodyOfWater(y) & Waterfall(z) & StandingIn(x, y) & Near(x, z))	A woman is standing in the water at the base of a waterfall	exists x. (Woman(x) & StandingInWater(x) & AtBaseOfWaterfall(x))	n	False	False
4475	A man is standing in the water at the base of a waterfall	exists x. (Man(x) & StandingInWater(x) & AtBaseOfWaterfall(x))	The body of a man is in the water near a waterfall	exists x.exists y.exists z. (Man(x) & Water(y) & Waterfall(z) -> BodyInWaterNear(x, y, z))	n	False	False
4476	A brown and white dog is running through the river	exists x. (Dog(x) & Brown(x) & White(x) & RunningThroughRiver(x))	A brown and white dog is running through the water	exists x. (Dog(x) & Brown(x) & White(x) & RunningThroughWater(x))	e	False	False
4477	No dog is emerging from a lake	not exists x. (Dog(x) & EmergingFromLake(x))	A brown and white dog is running through the river	exists x. (Dog(x) & Brown(x) & White(x) & RunningThroughRiver(x))	n	False	False
4478	A brown and white dog is running through the water	exists x. (Dog(x) & Brown(x) & White(x) & RunningThroughWater(x))	A dog is emerging from a lake	exists x. (Dog(x) & EmergingFromLake(x))	n	False	False
4479	A brown and white dog is not running through the river	exists x. (Dog(x) & Brown(x) & White(x) -> not RunningThroughRiver(x))	A dog is emerging from a lake	exists x. (Dog(x) & EmergingFromLake(x))	n	False	False
4480	A dog is running on the sand and chasing a ball	exists x. (Dog(x) & RunningOnSand(x) & ChasingBall(x))	A dog is running on the grass and chasing a ball	exists x. (Dog(x) & RunningOnGrass(x) & ChasingBall(x))	n	False	False
4481	A brown and white dog is catching a dirty tennis ball in a dirt field	exists x. (Dog(x) & Brown(x) & White(x) & Catching(x, dirtyTennisBall) & In(x, dirtField))	A dog is running on the beach and chasing a ball	exists x. (Dog(x) & RunningOnBeach(x) & ChasingBall(x))	n	False	False
4482	A brown and white dog is catching a dirty golf ball in a dirt field	exists x. (Dog(x) & Brown(x) & White(x) & Catching(x, dirtyGolfBall) & In(x, dirtField))	A dog is running on the sand and chasing a ball	exists x. (Dog(x) & RunningOnSand(x) & ChasingBall(x))	n	False	False
4483	A shirtless man is leading a horse that is pulling a carriage	exists x.exists y.exists z. (ShirtlessMan(x) & Horse(y) & Carriage(z) -> Leading(x, y, z))	A shirtless man is leading a carriage that is being pulled by a horse	exists x.exists y.exists z. (ShirtlessMan(x) & Carriage(y) & Horse(z) -> Leads(x, y, z))	e	False	False
4484	A shirtless woman is leading a horse that is pulling a carriage	exists x.exists y.exists z. (ShirtlessWoman(x) & Horse(y) & Carriage(z) -> (Leads(x, y) & Pulls(y, z)))	A shirtless man is leading a horse that is pulling a carriage	exists x.exists y.exists z. (ShirtlessMan(x) & Horse(y) & Carriage(z) -> Leading(x, y, z))	c	False	False
4485	A shirtless man is escorting a horse that is pulling a carriage along a road	exists x.exists y.exists z. (ShirtlessMan(x) & Horse(y) & Carriage(z) -> EscortsAndPulls(x, y, z))	A shirtless man is leading a horse that is pulling a carriage	exists x.exists y.exists z. (ShirtlessMan(x) & Horse(y) & Carriage(z) -> Leading(x, y, z))	e	False	False
4486	A young girl is playing on the edge of a fountain and an older woman is watching her	exists x.exists y. (YoungGirl(x) & Fountain(f) & OlderWoman(y) -> (PlaysOnEdgeOf(x, f) & Watches(y, x)))	A young girl is playing on the edge of a fountain and an older woman is not watching her	exists x.exists y. (YoungGirl(x) & Fountain(y) -> exists z. (OlderWoman(z) & PlayingOnEdge(x, y) & not Watching(z, x)))	c	False	False
4487	A little girl and a woman wearing a yellow shirt are getting splashed by a city fountain	exists x. exists y. exists z. (LittleGirl(x) & Woman(y) & YellowShirt(z) & CityFountain(f) & SplashedBy(x, y, z, f))	A little girl and a woman wearing a yellow shirt are getting splashed near a fountain	exists x. exists y. exists z. (LittleGirl(x) & Woman(y) & YellowShirt(z) & SplashedByFountain(x, y, z))	e	False	False
4488	A little boy and a woman wearing a yellow shirt are getting splashed by a city fountain	exists x. exists y. exists z. (LittleBoy(x) & Woman(y) & YellowShirt(z) & CityFountain(f) & SplashedBy(x, y, z, f))	A little girl and a woman wearing a yellow shirt are getting splashed by a city fountain	exists x. exists y. exists z. (LittleGirl(x) & Woman(y) & YellowShirt(z) & CityFountain(f) & SplashedBy(x, y, z, f))	n	False	False
4489	A little girl and a woman wearing a yellow shirt are getting splashed near a fountain	exists x. exists y. exists z. (LittleGirl(x) & Woman(y) & YellowShirt(z) & SplashedByFountain(x, y, z))	A young girl is playing on the edge of a fountain and an older woman is watching her	exists x.exists y. (YoungGirl(x) & Fountain(f) & OlderWoman(y) -> (PlaysOnEdgeOf(x, f) & Watches(y, x)))	n	False	False
4490	A little boy and a woman wearing a yellow shirt are getting splashed by a city fountain	exists x. exists y. exists z. (LittleBoy(x) & Woman(y) & YellowShirt(z) & CityFountain(f) & SplashedBy(x, y, z, f))	A young girl is playing on the edge of a fountain and an older woman is watching her	exists x.exists y. (YoungGirl(x) & Fountain(f) & OlderWoman(y) -> (PlaysOnEdgeOf(x, f) & Watches(y, x)))	n	False	False
4491	A girl in an orange shirt and clown makeup is walking in a park and others are looking on	exists x.exists y.exists z. (Girl(x) & OrangeShirt(x) & ClownMakeup(x) & Park(y) & WalkingIn(x, y) & Others(z) & LookingOn(z, x) -> WalkingInPark(x, y))	A girl in an orange shirt and clown makeup is standing in a park and others are looking on	exists x.exists y.exists z. (Girl(x) & OrangeShirt(x) & ClownMakeup(x) & Park(y) & StandingIn(x, y) & Others(z) & LookingOn(z, x) -> GirlInOrangeShirtAndClownMakeup(x))	n	False	False
4492	A girl is wearing an orange shirt and a striped tie	exists x. (Girl(x) & WearingOrangeShirt(x) & WearingStripedTie(x))	A boy is wearing an orange shirt and a striped tie	exists x. (Boy(x) & exists y. (OrangeShirt(y) & Wearing(x, y)) & exists z. (StripedTie(z) & Wearing(x, z)))	n	False	False
4493	The girl is wearing an orange shirt and a striped tie	exists x. (Girl(x) & OrangeShirt(x) & StripedTie(x))	A girl in an orange shirt and clown makeup is standing in a park and others are looking on	exists x.exists y.exists z. (Girl(x) & OrangeShirt(x) & ClownMakeup(x) & Park(y) & StandingIn(x, y) & Others(z) & LookingOn(z, x) -> GirlInOrangeShirtAndClownMakeup(x))	n	False	False
4494	A boy is wearing an orange shirt and a striped tie	exists x. (Boy(x) & exists y. (OrangeShirt(y) & Wearing(x, y)) & exists z. (StripedTie(z) & Wearing(x, z)))	A girl in an orange shirt and clown makeup is standing in a park and others are looking on	exists x.exists y.exists z. (Girl(x) & OrangeShirt(x) & ClownMakeup(x) & Park(y) & StandingIn(x, y) & Others(z) & LookingOn(z, x) -> GirlInOrangeShirtAndClownMakeup(x))	n	False	False
4495	A girl in an orange shirt and clown makeup is walking in a park and others are looking on	exists x.exists y.exists z. (Girl(x) & OrangeShirt(x) & ClownMakeup(x) & Park(y) & WalkingIn(x, y) & Others(z) & LookingOn(z, x) -> WalkingInPark(x, y))	A girl is wearing an orange shirt and a striped tie	exists x. (Girl(x) & WearingOrangeShirt(x) & WearingStripedTie(x))	n	False	False
4496	A girl is wearing an orange shirt and a striped tie	exists x. (Girl(x) & WearingOrangeShirt(x) & WearingStripedTie(x))	A girl in an orange shirt and clown makeup is standing in a park and others are looking on	exists x.exists y.exists z. (Girl(x) & OrangeShirt(x) & ClownMakeup(x) & Park(y) & StandingIn(x, y) & Others(z) & LookingOn(z, x) -> GirlInOrangeShirtAndClownMakeup(x))	n	False	False
4497	A bicyclist is performing a trick over a clean wall	exists x.exists y.exists z. (Bicyclist(x) & Trick(y) & Wall(z) & PerformsOver(x, y, z) -> Clean(z))	A bicyclist is performing a trick over a heavily graphitized wall	exists x.exists y.exists z. (Bicyclist(x) & Trick(y) & Wall(z) & HeavilyGraphitized(z) -> PerformsOver(x, y, z))	n	False	False
4498	A man is performing a jump on a bicycle	exists x. exists y. exists z. (Man(x) & Bicycle(y) & Jump(z) & PerformsOn(x, y, z))	A bicyclist is performing a trick over a heavily graphitized wall	exists x.exists y.exists z. (Bicyclist(x) & Trick(y) & Wall(z) & HeavilyGraphitized(z) -> PerformsOver(x, y, z))	n	False	False
4499	A woman is showing a puppy to an infant	exists x. exists y. exists z. (Woman(x) & Puppy(y) & Infant(z) & Shows(x, y) & To(x, z))	A woman is showing a small dog to an infant	exists x. exists y. exists z. (Woman(x) & SmallDog(y) & Infant(z) & Shows(x, y) & To(x, z))	e	False	False
4500	A black and white dog with a large branch is running in the field	exists x.exists y.exists z. (Dog(x) & BlackAndWhite(x) & LargeBranch(y) & Has(x, y) & Field(z) -> RunsIn(x, z))	A black and white dog with a large branch is running in the grass	exists x. (Dog(x) & Black(x) & White(x) & LargeBranch(x) -> RunningInGrass(x))	e	False	False
4501	A black and white dog is carrying a big stick on the green grass	exists x.exists y.exists z. (Dog(x) & BlackAndWhite(x) & Stick(y) & Big(y) & GreenGrass(z) -> CarryingOn(x, y, z))	A black and white dog is carrying a huge stick on the green grass	exists x.exists y.exists z. (Dog(x) & BlackAndWhite(x) & HugeStick(y) & GreenGrass(z) -> CarryingOn(x, y, z))	e	False	False
4502	A black and white dog with a large branch is running in the grass	exists x. (Dog(x) & Black(x) & White(x) & LargeBranch(x) -> RunningInGrass(x))	A black and white dog is carrying a huge stick on the green grass	exists x.exists y.exists z. (Dog(x) & BlackAndWhite(x) & HugeStick(y) & GreenGrass(z) -> CarryingOn(x, y, z))	e	False	False
4503	A black and white dog with a large branch is standing in the field	exists x. (Dog(x) & Black(x) & White(x) & LargeBranch(x) -> StandingInField(x))	A black and white dog is carrying a huge stick on the green grass	exists x.exists y.exists z. (Dog(x) & BlackAndWhite(x) & HugeStick(y) & GreenGrass(z) -> CarryingOn(x, y, z))	n	False	False
4504	A boy wearing a striped shirt is running barefoot on the sandy hill	exists x.exists y.exists z. (Boy(x) & Shirt(y) & Striped(y) & Hill(z) & Wearing(x, y) & On(x, z) -> RunBarefoot(x, z))	A kid wearing a striped shirt is running barefoot on the sandy hill	exists x. (Kid(x) & WearingStripedShirt(x) -> (Running(x) & Barefoot(x) & OnSandyHill(x)))	e	False	False
4505	A boy is running on the beach	exists x. (Boy(x) & RunningOnBeach(x))	A boy is running through the sand	exists x. (Boy(x) & Running(x) & Through(x, sand))	e	False	False
4506	A woman is leaning on a racing motorcycle	exists x. exists y. (Woman(x) & RacingMotorcycle(y) & LeaningOn(x, y))	A man is leaning on a racing motorcycle	exists x. exists y. (Man(x) & RacingMotorcycle(y) & LeaningOn(x, y))	n	False	False
4507	A motorcycle racer is riding a red and black bike	exists x.exists y. (MotorcycleRacer(x) & RedBike(y) & BlackBike(y) -> Riding(x, y))	The motorcycle racer is riding a red and black bike	exists x. (MotorcycleRacer(x) -> RidingRedAndBlackBike(x))	e	False	False
4508	A motorcycle racer is riding a red and black bike	exists x.exists y. (MotorcycleRacer(x) & RedBike(y) & BlackBike(y) -> Riding(x, y))	A man is leaning on a racing motorcycle	exists x. exists y. (Man(x) & RacingMotorcycle(y) & LeaningOn(x, y))	n	False	False
4509	No motorcycle racer is riding a red and black bike	not exists x. (MotorcycleRacer(x) & Riding(x, RedBike) & Riding(x, BlackBike))	A man is leaning on a racing motorcycle	exists x. exists y. (Man(x) & RacingMotorcycle(y) & LeaningOn(x, y))	n	False	False
4510	A racer is leaning on a racing motorcycle	exists x.exists y. (Racer(x) & RacingMotorcycle(y) -> LeansOn(x, y))	The motorcycle racer is riding a red and black bike	exists x. (MotorcycleRacer(x) -> RidingRedAndBlackBike(x))	n	False	False
4511	A woman is firing at target practice	exists x. (Woman(x) & FiringAtTargetPractice(x))	A woman is shooting at target practice	exists x. (Woman(x) & ShootingAtTargetPractice(x))	e	False	False
4512	A woman is wearing ear protection and is firing a gun at an indoor shooting range	exists x. (Woman(x) & WearingEarProtection(x) & FiringGunAtIndoorShootingRange(x))	The woman is wearing ear protection and is firing a gun at an indoor shooting range	exists x. (Woman(x) & WearingEarProtection(x) & FiringGun(x) & AtIndoorShootingRange(x))	e	False	False
4513	A woman is wearing ear protection and is firing a gun at an outdoor shooting range	exists x. (Woman(x) & WearingEarProtection(x) & FiringGun(x) & AtOutdoorShootingRange(x))	A woman is wearing ear protection and is firing a gun at an indoor shooting range	exists x. (Woman(x) & WearingEarProtection(x) & FiringGunAtIndoorShootingRange(x))	n	False	False
4514	A woman is wearing ear protection and is firing a gun at an outdoor shooting range	exists x. (Woman(x) & WearingEarProtection(x) & FiringGun(x) & AtOutdoorShootingRange(x))	A woman is shooting at target practice	exists x. (Woman(x) & ShootingAtTargetPractice(x))	e	False	False
4515	A man is shooting at target practice	exists x. (Man(x) & Shooting(x))	A woman is wearing ear protection and is firing a gun at an indoor shooting range	exists x. (Woman(x) & WearingEarProtection(x) & FiringGunAtIndoorShootingRange(x))	n	False	False
4516	A woman is wearing ear protection and is firing a gun at an indoor shooting range	exists x. (Woman(x) & WearingEarProtection(x) & FiringGunAtIndoorShootingRange(x))	A woman is shooting at target practice	exists x. (Woman(x) & ShootingAtTargetPractice(x))	e	False	False
4517	The little boy is sticking his tongue out for the camera and another boy is looking on	exists x.exists y. (LittleBoy(x) & LittleBoy(y) & StickingTongueOut(x) & Camera(z) -> LookingOn(y, z))	A little boy is sticking his tongue out for the camera and another boy is looking on	exists x. exists y. (LittleBoy(x) & LittleBoy(y) & StickingTongueOut(x) & LookingOn(y, x))	e	False	False
4518	The large dog is walking outside and is carrying a colorful toy in its mouth	exists x. (LargeDog(x) -> (WalkingOutside(x) & CarryingColorfulToy(x)))	The large dog is walking outside and is holding a colorful toy in its mouth	exists x. (Dog(x) & Large(x) & WalkingOutside(x) & exists y. (Toy(y) & Colorful(y) & HoldsInMouth(x, y)))	e	False	False
4519	The small dog is walking outside and is carrying a colorful toy in its mouth	exists x. (SmallDog(x) -> (WalksOutside(x) & CarriesColorfulToy(x)))	The large dog is walking outside and is carrying a colorful toy in its mouth	exists x. (LargeDog(x) -> (WalkingOutside(x) & CarryingColorfulToy(x)))	n	False	False
4520	A dog is running on concrete and is holding a ball	exists x. (Dog(x) & RunningOnConcrete(x) & HoldingBall(x))	The large dog is walking outside and is carrying a colorful toy in its mouth	exists x. (LargeDog(x) -> (WalkingOutside(x) & CarryingColorfulToy(x)))	n	False	False
4521	A dog is standing on concrete and is holding a blue ball	exists x. (Dog(x) & StandingOnConcrete(x) & HoldingBlueBall(x))	The large dog is walking outside and is carrying a colorful toy in its mouth	exists x. (LargeDog(x) -> (WalkingOutside(x) & CarryingColorfulToy(x)))	n	False	False
4522	A dog is running on concrete and is holding a blue ball	exists x. (Dog(x) & RunningOnConcrete(x) & exists y. (BlueBall(y) & Holding(x, y)))	The large dog is walking outside and is holding a colorful toy in its mouth	exists x. (Dog(x) & Large(x) & WalkingOutside(x) & exists y. (Toy(y) & Colorful(y) & HoldsInMouth(x, y)))	n	False	False
4523	The boy is playing in the mud	exists x. (Boy(x) & PlayingInMud(x))	A little boy is topless and is serious	exists x. (LittleBoy(x) -> (Topless(x) & Serious(x)))	n	False	False
4524	There is no person slicing a potato	not exists x. (Person(x) & Slicing(x, potato))	A person is performing tricks on a motorcycle	exists x.exists y. (Person(x) & Motorcycle(y) -> PerformsTricksOn(x, y))	n	False	False
4525	A woman is bowling two eggs to a break dancer 	exists x. exists y. exists z. (Woman(x) & Egg(y) & BreakDancer(z) -> BowlsTwoEggsTo(x, y, z))	A baby is playing with a doll	exists x.exists y. (Baby(x) & Doll(y) -> PlayingWith(x, y))	n	False	False
4526	An instrument is being played by a woman in a red dress	exists x.exists y.exists z. (Instrument(x) & Woman(y) & RedDress(z) & Playing(y, x) & Wearing(y, z))	A man is climbing up a rope	exists x. (Man(x) & ClimbingUpRope(x))	n	False	False
4527	Two dogs are playing outside	exists x. exists y. (Dog(x) & Dog(y) & PlayingOutside(x) & PlayingOutside(y))	A dog is running through a field and is chasing a ball	exists x. exists y. exists z. (Dog(x) & Field(y) & Ball(z) & RunningThrough(x, y) & Chasing(x, z))	n	False	False
4528	The sun is shining on the face of the girl who is in a yellow dress	exists x.exists y. (Sun(x) & Girl(y) & WearsYellowDress(y) -> ShiningOnFace(x, y))	A young black child is standing on the edge of a body of water near some buckets	exists x.exists y.exists z. (YoungBlackChild(x) & BodyOfWater(y) & Bucket(z) -> StandingOnEdgeOf(x, y, z))	n	False	False
4529	A woman is cutting a fish	exists x. exists y. (Woman(x) & Fish(y) & Cutting(x, y))	The man is slicing potatoes	exists x. (Man(x) & SlicingPotatoes(x))	n	False	False
4530	One fish is swimming 	exists x. (Fish(x) & Swimming(x))	The man is slicing bread	exists x. (Man(x) & SlicingBread(x))	n	False	False
4531	The play is about a happy boy playing the piano	exists x. (Play(x) -> (HappyBoy(x) & PlaysPiano(x)))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
4532	A boy is playing a game with wooden blocks	exists x. exists y. exists z. (Boy(x) & Game(y) & WoodenBlocks(z) & Playing(x, y, z))	Some cheerleaders are dancing	exists x. (Cheerleader(x) & Dancing(x))	n	False	False
4533	A young man in a white shirt and gold and black hat is sitting with crossed legs	exists x. (YoungMan(x) & WearsWhiteShirt(x) & WearsGoldAndBlackHat(x) -> SitsWithCrossedLegs(x))	There is no girl playing the violin on a beach	not exists x. (Girl(x) & ViolinPlayer(x) & Beach(x))	n	False	False
4534	A man is sitting on the grass and drinking from a water bottle	exists x. (Man(x) & SittingOnGrass(x) & DrinkingWaterBottle(x))	The child is delightedly playing with toys outdoors	exists x. (Child(x) & PlayingWithToys(x) & Outdoors(x) -> Delighted(x))	n	False	False
4535	Little kids are playing in a water fountain in front of few people	exists x.exists y.exists z. (LittleKid(x) & WaterFountain(y) & FewPeople(z) -> PlayingIn(x, y, z))	A monkey is brushing the dog	exists x. exists y. (Monkey(x) & Dog(y) & Brushing(x, y))	n	False	False
4536	A white dog on a leash is walking in the water	exists x.exists y. (WhiteDog(x) & Leash(y) & OnLeash(x, y) -> WalkingInWater(x))	A shirtless man is playing football on a lawn	exists x.exists y.exists z. (ShirtlessMan(x) & Football(y) & Lawn(z) -> PlaysOn(x, y, z))	n	False	False
4537	A large brown dog is jumping over a red hurdle	exists x. exists y. (LargeBrownDog(x) & RedHurdle(y) & JumpsOver(x, y))	A young man is running away from the fishing line	exists x. (YoungMan(x) -> exists y. (FishingLine(y) & RunningAwayFrom(x, y)))	n	False	False
4538	A dog, which is small, is playing on the green grass	exists x. (Dog(x) & Small(x) -> PlayingOnGreenGrass(x))	A woman wearing a blue shirt and high heels is standing on the sidewalk next to the man	exists x.exists y. (Woman(x) & BlueShirt(x) & HighHeels(x) & Man(y) -> StandingNextTo(x, y))	n	False	False
4539	A person is reading the email	exists x. (Person(x) & Reading(x, email))	A person with a green shirt is jumping high over the grass	exists x. (Person(x) & WearsGreenShirt(x) -> JumpsHighOverGrass(x))	n	False	False
4540	A monkey is brushing the dog	exists x. exists y. (Monkey(x) & Dog(y) & Brushing(x, y))	One man is jumping off a rock wall and another man is dropping a rope	exists x. exists y. (Man(x) & Man(y) & JumpingOffRockWall(x) & DroppingRope(y))	n	False	False
4541	A woman is dancing	exists x. (Dancer(x) & Woman(x))	The singer is hiring a person to fire the guitar player	exists x. exists y. (Singer(x) & Person(y) & Hires(x, y) & FiresGuitarPlayer(y))	n	False	False
4542	A woman is cutting a vegetable	exists x. exists y. (Woman(x) & Vegetable(y) & Cutting(x, y))	A man is inside the house and is throwing blades at a close target	exists x. (Man(x) & InsideHouse(x) & ThrowingBlades(x) & CloseTarget(x))	n	False	False
4543	The man is standing in a lake near a waterfall	exists x. exists y. exists z. (Man(x) & Lake(y) & Waterfall(z) & StandingIn(x, y) & Near(x, z))	A man is performing a trick on a surfboard in the water	exists x.exists y.exists z. (Man(x) & Surfboard(y) & Water(z) -> PerformsTrickOn(x, y, z))	n	False	False
4544	A woman is eating a cupcake	exists x. exists y. (Woman(x) & Cupcake(y) & Eating(x, y))	A man is slicing a potato	exists x. exists y. (Man(x) & Potato(y) & Slicing(x, y))	n	False	False
4545	A man is sitting comfortably at a table	exists x. exists y. (Man(x) & Table(y) & SittingComfortablyAt(x, y))	A brown dog is running in the snow	exists x. (Dog(x) & Brown(x) & RunningIn(x, snow))	n	False	False
4546	The Jockeys are riding horses on the field, which is completely green	exists x.exists y.exists z. (Jockey(x) & Horse(y) & Field(z) -> RidingOn(x, y, z))	The black bird is sitting in a leafless tree	exists x. exists y. (BlackBird(x) & LeaflessTree(y) & SittingIn(x, y))	n	False	False
4547	A man, a woman and two girls are walking on the beach	exists x. exists y. exists z. (Man(x) & Woman(y) & Girl(z) & WalkingOnBeach(x, y, z))	A woman is adding spices to some meat	exists x. exists y. (Woman(x) & Meat(y) & AddsSpices(x, y))	n	False	False
4548	The snowboarder is jumping off a snow covered hill	exists x. (Snowboarder(x) -> JumpsOffSnowCoveredHill(x))	The person is not standing on white ice	not exists x. (Person(x) & StandingOnWhiteIce(x))	n	False	False
4549	A young child is watering a plant with splashes	exists x. exists y. (YoungChild(x) & Plant(y) -> WateringWithSplashes(x, y))	A man is playing a flute	exists x. (Man(x) & PlayingFlute(x))	n	False	False
4550	A small man is sitting in a military accessories store	exists x. (SmallMan(x) & SittingIn(x, MilitaryAccessoriesStore))	The person is slicing onions	exists x. (Person(x) & SlicingOnions(x))	n	False	False
4551	A girl is wearing a t-shirt and has her mouth open.	exists x. (Girl(x) & WearingTShirt(x) & HasMouthOpen(x))	A brown and white dog is holding a baseball in its mouth	exists x. (Dog(x) & Brown(x) & White(x) -> exists y. (Baseball(y) & HoldsInMouth(x, y)))	n	False	False
4552	A boy is standing in a room by a lamp light	exists x. exists y. exists z. (Boy(x) & Room(y) & Lamp(z) & StandingIn(x, y) & LightedBy(z, y))	A small group of people are standing and two are sitting on the couch	exists x.exists y.exists z. (Person(x) & Person(y) & Person(z) & Standing(x) & Standing(y) & SittingOnCouch(z))	n	False	False
4553	A couple is running towards the ocean	exists x.exists y. (Couple(x) & Ocean(y) -> RunningTowards(x, y))	A snowboarding man is jumping through the air	exists x. (SnowboardingMan(x) -> JumpsThroughAir(x))	n	False	False
4554	Mimes are performing on a stage	exists x.exists y. (Mime(x) & Stage(y) -> PerformsOn(x, y))	No little dog is running on the sand	not exists x. (LittleDog(x) & RunningOnSand(x))	n	False	False
4555	One person who is practicing snowboarding jumps into the air	exists x. (Person(x) & PracticingSnowboarding(x) -> JumpsIntoAir(x))	A person is frying meat in a pan	exists x. (Person(x) & FryingMeat(x))	n	False	False
4556	A man is sitting on the lawn and drinking from a water bottle	exists x. (Man(x) & SittingOnLawn(x) & DrinkingWaterBottle(x))	The women are dancing outside	exists x. (Woman(x) -> DancingOutside(x))	n	False	False
4557	A woman, who is shoeless, is sitting on a blanket under a lavender umbrella	exists x. (Woman(x) & Shoeless(x) -> SittingOnBlanketUnderLavenderUmbrella(x))	A small dog is lying on the bed	exists x. (Dog(x) & Small(x) & LyingOn(x, bed))	n	False	False
4558	There is no young boy playing a wind instrument	not exists x. (YoungBoy(x) & PlaysWindInstrument(x))	The man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
4559	There is no person playing a piano	not exists x. (Person(x) & PlaysPiano(x))	A monkey is teasing a dog at the zoo	exists x. exists y. (Monkey(x) & Dog(y) & Teasing(x, y) & AtZoo(x, y))	n	False	False
4560	A toddler is playing with a plastic scooter toy	exists x.exists y. (Toddler(x) & PlasticScooterToy(y) -> PlayingWith(x, y))	A woman in blue has a yellow ball in the mitt	exists x. (Woman(x) & Blue(x) -> exists y. (Ball(y) & Yellow(y) & InMitt(x, y)))	n	False	False
4561	A girl is playing a guitar	exists x. (Girl(x) & PlayingGuitar(x))	A woman is dancing near a fire	exists x. exists y. (Woman(x) & Fire(y) & DancingNear(x, y))	n	False	False
4562	A man is shooting a shotgun	exists x. exists y. (Man(x) & Shotgun(y) & Shooting(x, y))	Someone is playing the guitar	exists x. (GuitarPlayer(x))	n	False	False
4563	Two kids are doing martial arts on a blue mat	exists x. exists y. (Kid(x) & Kid(y) & MartialArts(x) & MartialArts(y) & BlueMat(x) & BlueMat(y))	A tan dog is running through the brush	exists x. (TanDog(x) -> exists y. (Brush(y) & RunningThrough(x, y)))	n	False	False
4564	A person is chopping a red onion	exists x. (Person(x) & Chopping(x, redOnion))	A big green ball is knocking a potato	exists x. exists y. (BigGreenBall(x) & Potato(y) & Knocks(x, y))	n	False	False
4565	An old person is sitting on a bench	exists x. (OldPerson(x) & SittingOnBench(x))	A large dog is running on the grass with a tennis ball in its mouth	exists x. (LargeDog(x) -> (exists y. (Grass(y) & RunningOn(x, y)) & exists z. (TennisBall(z) & HasInMouth(x, z))))	n	False	False
4566	Two men are fighting	exists x. exists y. (Man(x) & Man(y) & Fighting(x, y))	A woman is dipping a prawn in batter	exists x. exists y. exists z. (Woman(x) & Prawn(y) & Batter(z) & Dipping(x, y, z))	n	False	False
4567	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	The log is lying on the panda bear	LyingOn(log, pandaBear)	n	False	False
4568	A man is skateboarding on a half pipe	exists x. exists y. (Man(x) & HalfPipe(y) & SkateboardingOn(x, y))	The kids are playing outdoors near a man with a smile	exists x.exists y.exists z. (Kid(x) & Outdoors(y) & Man(z) & Smile(z) -> PlayingNear(x, y, z))	n	False	False
4569	A football is being held by a man with no shirt	exists x. exists y. (Football(x) & Man(y) & Holds(y, x) & not Shirt(y))	The man is stirring the sauce for the chicken	exists x.exists y. (Man(x) & Sauce(y) & Chicken(z) -> Stirring(x, y, z))	n	False	False
4570	A fearful little boy is on a climbing wall	exists x. (LittleBoy(x) & Fearful(x) & OnClimbingWall(x))	The man is sitting next to a birdcage	exists x. exists y. (Man(x) & Birdcage(y) & SittingNextTo(x, y))	n	False	False
4571	There is no woman slicing a carrot	not exists x. (Woman(x) & SlicingCarrot(x))	A boy is running through the sand	exists x. (Boy(x) & Running(x) & Through(x, sand))	n	False	False
4572	A man is confidently slicing a carrot with a knife	exists x. exists y. exists z. (Man(x) & Carrot(y) & Knife(z) & Slicing(x, y, z))	A child is playing with a water spout outdoors and the rest of his family is watching	exists x.exists y.exists z. (Child(x) & WaterSpout(y) & Outdoors(z) & PlaysWith(x, y) -> Watches(x, z))	n	False	False
4573	There is no man playing two keyboards	not exists x. (Man(x) & PlaysTwoKeyboards(x))	A man is cutting a boot with a sword	exists x. exists y. exists z. (Man(x) & Boot(y) & Sword(z) & Cutting(x, y, z))	n	False	False
4574	A woman, who is shoeless, is sitting on a blanket under a lavender umbrella	exists x. (Woman(x) & Shoeless(x) -> SittingOnBlanketUnderLavenderUmbrella(x))	A girl in a black hat is wearing a bikini at the beach	exists x. (Girl(x) & WearsBlackHat(x) -> WearsBikiniAtBeach(x))	n	False	False
4575	The woman is picking up a baby kangaroo	exists x. exists y. (Woman(x) & BabyKangaroo(y) & PickingUp(x, y))	A man with equipment used for climbing is under a vertical, white rock	exists x. (Man(x) & UsesClimbingEquipment(x) -> UnderVerticalWhiteRock(x))	n	False	False
4576	One boy in orange shorts is standing on a rock cliff over the water and the other boy in black shorts is jumping of it into the water	exists x. exists y. (Boy(x) & Boy(y) & OrangeShorts(x) & BlackShorts(y) & StandingOnRockCliff(x) & JumpingIntoWater(y, x))	A baby is sneezing and frightening another baby	exists x. exists y. (Baby(x) & Baby(y) & Sneezing(x) & Frightening(x, y))	n	False	False
4577	Two children are playing soccer in the park	exists x. exists y. (Child(x) & Child(y) & PlayingSoccer(x) & PlayingSoccer(y) & Park(z) & In(x, z) & In(y, z))	There is no white dog wearing a Christmas reindeer headband and playing with a brown dog in the grass	not exists x. (Dog(x) & White(x) & WearsReindeerHeadband(x) & PlaysWithBrownDog(x) & InGrass(x))	n	False	False
4578	A rock is being climbed by a person with a rope, which is pink	exists x.exists y.exists z. (Rock(x) & Person(y) & Rope(z) & Climbs(y, x) & Uses(y, z) -> Pink(z))	Two people in a race are flipping the tires of a tractor	exists x. exists y. exists z. (Person(x) & Person(y) & Tractor(z) & Race(x, y, z) & FlippingTires(x, z))	n	False	False
4579	A dog is chasing the tail of an animal in the grass	exists x.exists y. (Dog(x) & Animal(y) & InGrass(y) -> ChasingTail(x, y))	The blonde girl with the pink top is not smiling and not wearing funny glasses with a large nose attached	exists x. (BlondeGirl(x) & PinkTop(x) -> (not Smiling(x) & not WearingFunnyGlasses(x) & LargeNoseAttached(x)))	n	False	False
4580	The brown dog is playing outdoors	exists x. (Dog(x) & Brown(x) & PlayingOutdoors(x))	Two people are arguing near a crowd	exists x. exists y. exists z. (Person(x) & Person(y) & Person(z) & Argument(x, y) & Argument(y, z) & Crowd(x, y, z))	n	False	False
4581	A father is launching the daughter in a swimming pool	exists x.exists y. (Father(x) & Daughter(y) -> LaunchingInSwimmingPool(x, y))	There is no biker jumping in the air	not exists x. (Biker(x) & JumpingInAir(x))	n	False	False
4582	There is no girl playing a flute	not exists x. (Girl(x) & PlaysFlute(x))	Two baby pandas are playing	exists x. exists y. (BabyPanda(x) & BabyPanda(y) & Playing(x, y))	n	False	False
4583	A person is dancing on a roof	exists x. (Person(x) & Dancing(x) & On(x, roof))	A white dog is standing on fallen leaves	exists x. (WhiteDog(x) -> exists y. (FallenLeaves(y) & StandingOn(x, y)))	n	False	False
4584	The girl is cheering the man in the blue and white uniform	Cheer(girl, man, blueAndWhiteUniform)	A soccer player is being tackled by his opponent	exists x.exists y. (SoccerPlayer(x) & Opponent(y) -> BeingTackled(x, y))	n	False	False
4585	A woman is cracking some eggs outside a bowl	exists x. (Woman(x) & CrackingEggs(x))	A man is participating in a bmx race	exists x. (Man(x) & ParticipatingInBmxRace(x))	n	False	False
4586	The children of a family are playing and waiting	exists x.exists y. (Family(x) & Child(y, x) -> (Plays(y) & Waits(y)))	A person is chopping down a tree with an axe	exists x. exists y. exists z. (Person(x) & Tree(y) & Axe(z) & Chopping(x, y, z))	n	False	False
4587	Two crocodiles are floating in a green colored swimming pool near some playing kids	exists x. exists y. exists z. (Crocodile(x) & Crocodile(y) & GreenSwimmingPool(z) & FloatingIn(x, z) & FloatingIn(y, z) & PlayingKids(w) & Near(x, w) & Near(y, w))	Two poodles are in the snow and one is jumping high	exists x.exists y.exists z. (Poodle(x) & Poodle(y) & Poodle(z) & InSnow(x) & InSnow(y) & JumpingHigh(z))	n	False	False
4588	A man is spitting	exists x. (Man(x) & Spitting(x))	There is no person standing in a vast field of glacial ice	not exists x. (Person(x) & StandingIn(x, VastFieldOfGlacialIce))	n	False	False
4589	A little girl is smiling and running outside	exists x. (LittleGirl(x) & Smiling(x) & RunningOutside(x))	The surfer is riding a small wave	exists x. exists y. (Surfer(x) & SmallWave(y) & Riding(x, y))	n	False	False
4590	People are sitting against a wall	exists x. exists y. (Person(x) & Wall(y) & SittingAgainst(x, y))	A woman is wearing a blue shirt with a white vest and a white cap and is talking and marching	exists x. (Woman(x) & exists y. (BlueShirt(y) & Wearing(x, y)) & exists z. (WhiteVest(z) & Wearing(x, z)) & exists w. (WhiteCap(w) & Wearing(x, w)) & Talking(x) & Marching(x))	n	False	False
4591	A person is scrubbing a zucchini	exists x. exists y. (Person(x) & Zucchini(y) & Scrubbing(x, y))	The woman is cutting cooked octopus	exists x. (Woman(x) & Cutting(x, CookedOctopus))	n	False	False
4592	Someone is playing the guitar	exists x. (GuitarPlayer(x))	A shirtless woman is jumping over a log	exists x.exists y. (ShirtlessWoman(x) & Log(y) -> JumpsOver(x, y))	n	False	False
4593	There is no parrot speaking	not exists x. (Parrot(x) & Speaking(x))	A yellow dog is running on white snow on a sunny day	exists x.exists y.exists z. (YellowDog(x) & WhiteSnow(y) & SunnyDay(z) -> RunningOn(x, y, z))	n	False	False
4594	There is no man cutting a box	not exists x. (Man(x) & Cutting(x, box))	A homeless man is holding up a sign and is begging for money	exists x. (HomelessMan(x) -> (HoldingUpSign(x) & BeggingForMoney(x)))	n	False	False
4595	The dog is catching a ball	exists x. exists y. (Dog(x) & Ball(y) & Catching(x, y))	A small girl is riding in a toy car	exists x. exists y. (SmallGirl(x) & ToyCar(y) & RidingIn(x, y))	n	False	False
4596	A woman is taking two eggs out of a pot of water	exists x. exists y. exists z. (Woman(x) & Egg(y) & PotOfWater(z) & TakingOutOf(x, y, z))	A person is buttering a tray	exists x. (Person(x) & Buttering(x, tray))	n	False	False
4597	There is no man playing a game on the grass	not exists x. (Man(x) & PlayingGame(x) & OnGrass(x))	A man is playing the guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
4598	A man is riding a mechanical bull	exists x. exists y. (Man(x) & MechanicalBull(y) & Riding(x, y))	A middle eastern man is standing against a lamp post near to other people	exists x.exists y.exists z. (MiddleEasternMan(x) & LampPost(y) & Person(z) & StandingAgainst(x, y) & Near(x, z))	n	False	False
4599	A big brown dog and a small grey dog are standing on a rocky surface	exists x. exists y. (BigBrownDog(x) & SmallGreyDog(y) & StandingOnRockySurface(x, y))	A woman is cutting onions	exists x. (Woman(x) & CuttingOnions(x))	n	False	False
4600	Someone is banging a camera lens against a nail	exists x. (Person(x) & Banging(x, CameraLens, Nail))	Some oil is being poured on the tomatoes by the man	exists x.exists y.exists z. (Oil(x) & Tomato(y) & Man(z) & PoursOn(z, y, x))	n	False	False
4601	The girl, who is little, is combing her hair into a pony tail.	exists x. (Girl(x) & Little(x) -> CombingPonyTail(x))	A man in a red shirt is doing a trick with the rollerblades	exists x. (Man(x) & WearsRedShirt(x) -> exists y. (Rollerblades(y) & DoingTrickWith(x, y)))	n	False	False
4602	There is no man playing a flute	not exists x. (Man(x) & PlaysFlute(x))	Two kids are pushing an inflatable crocodile in a pool	exists x. exists y. exists z. (Kid(x) & Kid(y) & InflatableCrocodile(z) & Pushing(x, z) & Pushing(y, z))	n	False	False
4603	A man is exercising	exists x. (Man(x) & Exercising(x))	Two cats are playing with a red ball	exists x.exists y.exists z. (Cat(x) & Cat(y) & RedBall(z) & PlayingWith(x, y, z))	n	False	False
4604	A girl is standing in a group and is wearing a black shirt and pink beads	exists x. (Girl(x) & StandingInGroup(x) & WearingBlackShirt(x) & WearingPinkBeads(x))	A small white dog is jumping up in the snow	exists x. (Dog(x) & Small(x) & White(x) & JumpingUpInSnow(x))	n	False	False
4605	There is no blonde lady looking at a tower	not exists x. (Lady(x) & Blonde(x) & exists y. (Tower(y) & LookingAt(x, y)))	A woman dressed in elegant clothing is inside a crowd of people and is looking down	exists x. (Woman(x) & DressedInElegantClothing(x) -> (InsideCrowd(x) & LookingDown(x)))	n	False	False
4606	A woman is cracking some eggs into a bowl	exists x. exists y. exists z. (Woman(x) & Egg(y) & Bowl(z) & CracksInto(x, y, z))	A kid is speeding down a steep slide	exists x. (Kid(x) & Speeding(x) & On(x, SteepSlide))	n	False	False
4607	The person is slicing a vegetable	exists x. exists y. exists z. (Person(x) & Vegetable(y) & Slice(z) & Slices(x, y, z))	A man is playing a violin	exists x. (Man(x) & PlayingViolin(x))	n	False	False
4608	The cat isn't licking milk from a saucer	not exists x. (Cat(x) & LickingMilkFromSaucer(x))	A dog is swimming in a lake and the sun is shining on him	exists x. exists y. (Dog(x) & Lake(y) & SwimmingIn(x, y) & SunShiningOn(x))	n	False	False
4609	A dog is fetching a stick out of very dirty water	exists x. exists y. exists z. (Dog(x) & Stick(y) & Water(z) & Fetching(x, y, z) & VeryDirty(z))	The woman is adding sugar to the meat	exists x.exists y. (Woman(x) & Meat(y) -> AddsSugarTo(x, y))	n	False	False
4610	A young boy with a heart tank top is raising his hands as he is sliding	exists x. (YoungBoy(x) & WearingHeartTankTop(x) -> RaisingHandsWhileSliding(x))	The man is playing the flute	exists x. (Man(x) & Playing(x, flute))	n	False	False
4611	The person is not standing on white ice	not exists x. (Person(x) & StandingOnWhiteIce(x))	A woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	n	False	False
4612	A woman in jeans is standing near a horse with a saddle	exists x.exists y.exists z. (Woman(x) & Jeans(x) & Horse(y) & Saddle(z) -> StandingNear(x, y, z))	The kitten is eagerly drinking some milk from the bowl	exists x.exists y. (Kitten(x) & Milk(y) & Bowl(z) -> DrinksFrom(x, y, z))	n	False	False
4613	The man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	There is no hockey player in a yellow jersey guarding the goal	not exists x. (HockeyPlayer(x) & YellowJersey(x) & GoalGuard(x))	n	False	False
4614	Some runners are competing in a race	exists x.exists y. (Runner(x) & Race(y) & CompetingIn(x, y))	A woman is dancing	exists x. (Dancer(x) & Woman(x))	n	False	False
4615	The tan dog is watching a brown dog that is swimming in a pond	exists x.exists y. (TanDog(x) & BrownDog(y) & SwimmingInPond(y) -> Watching(x, y))	A few kittens are eating	exists x.exists y.exists z. (Kitten(x) & Eating(x) & Eating(y) & Eating(z) & not (Eating(x) & Eating(y) & Eating(z)))	n	False	True
4616	A brown and white coat is floating across shallow water near a trotting dog	exists x.exists y.exists z. (Coat(x) & BrownAndWhite(x) & ShallowWater(y) & TrottingDog(z) -> FloatsAcross(x, y, z))	A woman is brushing her feet	exists x. (Woman(x) & BrushingFeet(x))	n	False	False
4617	A horse is standing	exists x. (Horse(x) & Standing(x))	Someone is holding a hedgehog	exists x. (Hedgehog(x) & HeldBy(x))	n	False	False
4618	A man in full gear is wearing a helmet with sponsor logos and is riding a red sport motorcycle	exists x. (Man(x) & FullGear(x) -> (WearsHelmet(x) & HasSponsorLogos(x) & RidesRedSportMotorcycle(x)))	A woman is tapping her fingers	exists x. (Woman(x) & TappingFingers(x))	n	False	False
4619	A man is singing to a woman	exists x. exists y. (Man(x) & Woman(y) & Singing(x, y))	A funny crowd of people is doing a skit of two boxing men	exists x.exists y.exists z. (FunnyCrowd(x) & Skit(y) & BoxingMen(z) -> Doing(x, y, z))	n	False	False
4620	A person is making a bed	exists x. (Person(x) & MakingBed(x))	Somebody is cutting a tomato	exists x. (Cutting(x, Tomato))	n	False	False
4621	The doctor is not helping the patient	not Helping(doctor, patient)	A lady is wearing a black dress and is carrying a white cross	exists x. (Lady(x) & exists y. (BlackDress(y) & Wearing(x, y)) & exists z. (WhiteCross(z) & Carrying(x, z)))	n	False	False
4622	A brown puppy is biting a pole	exists x. exists y. (Puppy(x) & Pole(y) & Brown(x) & Biting(x, y))	The man and woman are not walking	not (Man(m) & Woman(w) & Walking(m) & Walking(w))	n	False	False
4623	The rhino is being fed on the grass	exists x. exists y. (Rhino(x) & Grass(y) & BeingFedOn(x, y))	The young boys are playing outdoors and the man is smiling nearby	exists x.exists y. (YoungBoy(x) & Outdoors(y) -> Plays(x, y)) & (Man(z) & Smiling(z))	n	False	False
4624	A dog is near a ball colored in red, which is in the air	exists x.exists y. (Dog(x) & Ball(y) & Near(x, y) & RedColored(y) & InAir(y))	A man is playing a guitar	exists x. (Man(x) & PlayingGuitar(x))	n	False	False
4625	A squirrel is running around in circles	exists x. (Squirrel(x) -> RunsInCircles(x))	The man is removing knives from a tree	exists x.exists y. (Man(x) & Tree(y) -> RemovingKnivesFrom(x, y))	n	False	False
4626	One woman is peeling a potato	exists x. (Woman(x) & PeelingPotato(x))	A yellow flower is being clung to by a bee	exists x.exists y. (YellowFlower(x) & Bee(y) -> ClingsTo(x, y))	n	False	False
4627	A dog with golden fur is in the water	exists x. (Dog(x) & GoldenFur(x) -> InWater(x))	A woman is talking on a telephonic device	exists x. (Woman(x) & TalkingOnTelephonicDevice(x))	n	False	False
4628	There is no bicyclist jumping on a pyramid-shaped ramp	not exists x. (Bicyclist(x) & JumpsOnPyramidRamp(x))	The tan dog is watching a brown dog that is swimming in a pond	exists x.exists y. (TanDog(x) & BrownDog(y) & SwimmingInPond(y) -> Watching(x, y))	n	False	False
4629	The guitar is being played by the man, who has the guitar case open for donations	exists x.exists y. (Guitar(x) & Man(y) & Playing(y, x) -> (exists z. (GuitarCase(z) & Open(z) & ForDonations(z))))	A woman is dancing	exists x. (Dancer(x) & Woman(x))	n	False	False
4630	A man is playing a harp	exists x. (Man(x) & PlayingHarp(x))	A man is being pushed toward the buttons of a microwave	exists x. exists y. exists z. (Man(x) & Microwave(y) & Buttons(z) & PushedToward(x, y, z))	n	False	False
4631	A woman is scrubbing a zucchini with a brush for vegetables	exists x.exists y.exists z. (Woman(x) & Zucchini(y) & Brush(z) -> ScrubbingForVegetables(x, y, z))	A man is doing a trick on a skateboard	exists x. exists y. (Man(x) & Skateboard(y) & DoingTrickOn(x, y))	n	False	False
4632	A person is kicking a soccer ball between their feet	exists x. (Person(x) & KickingSoccerBall(x) -> BetweenFeet(x))	One brown and black dog is running through the leaves	exists x. (Dog(x) & Brown(x) & Black(x) & RunningThroughLeaves(x))	n	False	False
4633	There is no woman using a sewing machine	not exists x. (Woman(x) & UsesSewingMachine(x))	A girl is brushing her hair	exists x. (Girl(x) & BrushingHair(x))	n	False	False
4634	Two people are in the snow, wearing clothes that provide camouflage	exists x. exists y. (Person(x) & Person(y) & InSnow(x) & InSnow(y) & WearingCamouflageClothes(x) & WearingCamouflageClothes(y))	A woman is riding a scooter for water	exists x. exists y. (Woman(x) & Scooter(y) & Riding(x, y) & For(x, Water))	n	False	False
4635	A badger, which is shrewd, is digging the earth	exists x. (Badger(x) & Shrewd(x) -> DiggingEarth(x))	A woman is slicing tofu	exists x. (Woman(x) & Slicing(x, tofu))	n	False	False
4636	A person is wearing a straw hat and smoking a cigarette	exists x. (Person(x) & WearingStrawHat(x) & SmokingCigarette(x))	A dog is near the red ball in the air	exists x.exists y. (Dog(x) & RedBall(y) & Near(x, y))	n	False	False
4637	A woman is riding a horse	exists x. exists y. (Woman(x) & Horse(y) & Riding(x, y))	A boy in blue are sliding down a green slide	exists x.exists y.exists z. (Boy(x) & Blue(x) & GreenSlide(y) & Slide(z) -> SlidingDown(x, y, z))	n	False	False
4638	A man is drawing some figures	exists x. (Man(x) & DrawingFigures(x))	A man is strolling in the rain	exists x. (Man(x) & Strolling(x) & InRain(x))	n	False	False
4639	The people are walking on the road beside a beautiful waterfall	exists x.exists y. (Person(x) & Road(y) & WalkingOn(x, y) & BeautifulWaterfall(y) -> WalkingByWaterfall(x, y))	There is no brown dog and black dog playing in the sand	not exists x. (Dog(x) & Brown(x) & exists y. (Dog(y) & Black(y) & PlayingInSand(y)))	n	False	False
4640	A cheetah is chasing its prey across a field	exists x.exists y.exists z. (Cheetah(x) & Prey(y) & Field(z) -> ChasesAcross(x, y, z))	A white and brown dog is walking through the water with difficulty	exists x. (Dog(x) & White(x) & Brown(x) & WalkingThroughWater(x))	n	False	False
4641	The young girl is blowing a bubble that is huge	exists x. exists y. (YoungGirl(x) & Bubble(y) & Blowing(x, y) -> Huge(y))	There is no girl in pink twirling a ribbon	not exists x. (Girl(x) & Pink(x) & TwirlingRibbon(x))	n	False	False
4642	A dog in a colored coat is running across the yard	exists x. (Dog(x) & HasColoredCoat(x) -> RunsAcrossYard(x))	The flute is being played by one man	exists x. exists y. (Flute(x) & Man(y) & Playing(y, x))	n	False	False
4643	A boy is happily playing the piano	exists x. (Boy(x) & PlayingPiano(x) & Happy(x))	A white bird is landing swiftly in the water	exists x. (WhiteBird(x) -> LandingSwiftlyInWater(x))	n	False	False
4644	The girl, who is little, is combing her hair into a pony tail.	exists x. (Girl(x) & Little(x) -> CombingPonyTail(x))	Two people wearing helmets are driving over the yellow and white flowers	exists x.exists y.exists z. (Person(x) & Person(y) & Helmet(x) & Helmet(y) & YellowFlower(z) & WhiteFlower(w) -> DrivingOver(x, y, z, w))	n	False	False
4645	A man is in a parking lot and is playing tennis against a large wall	exists x. exists y. exists z. (Man(x) & ParkingLot(y) & Tennis(z) & In(x, y) & PlayingAgainst(x, z) & LargeWall(z))	The snowboarder is leaping fearlessly over white snow	exists x. (Snowboarder(x) -> LeapingFearlesslyOverWhiteSnow(x))	n	False	False
